($WC = ($WC = function(e) {
    "use strict";

    function t(e, t) {
        var s = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable
            }))), s.push.apply(s, i)
        }
        return s
    }

    function s(e) {
        for (var s = 1; s < arguments.length; s++) {
            var i = null != arguments[s] ? arguments[s] : {};
            s % 2 ? t(Object(i), !0).forEach((function(t) {
                l(e, t, i[t])
            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : t(Object(i)).forEach((function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
            }))
        }
        return e
    }

    function i(e) {
        var t = function(e, t) {
            if ("object" != typeof e || !e) return e;
            var s = e[Symbol.toPrimitive];
            if (void 0 !== s) {
                var i = s.call(e, t || "default");
                if ("object" != typeof i) return i;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return ("string" === t ? String : Number)(e)
        }(e, "string");
        return "symbol" == typeof t ? t : String(t)
    }

    function n(e) {
        return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        })(e)
    }

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }

    function o(e, t) {
        for (var s = 0; s < t.length; s++) {
            var n = t[s];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, i(n.key), n)
        }
    }

    function r(e, t, s) {
        return t && o(e.prototype, t), s && o(e, s), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e
    }

    function l(e, t, s) {
        return (t = i(t)) in e ? Object.defineProperty(e, t, {
            value: s,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = s, e
    }

    function d() {
        return (d = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var s = arguments[t];
                for (var i in s) Object.prototype.hasOwnProperty.call(s, i) && (e[i] = s[i])
            }
            return e
        }).apply(this, arguments)
    }

    function c(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && m(e, t)
    }

    function u(e) {
        return (u = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e)
        })(e)
    }

    function m(e, t) {
        return (m = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e
        })(e, t)
    }

    function h(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e
    }

    function g(e, t) {
        if (t && ("object" == typeof t || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return h(e)
    }

    function p(e) {
        var t = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
            } catch (e) {
                return !1
            }
        }();
        return function() {
            var s, i = u(e);
            if (t) {
                var n = u(this).constructor;
                s = Reflect.construct(i, arguments, n)
            } else s = i.apply(this, arguments);
            return g(this, s)
        }
    }

    function f(e, t) {
        return function(e) {
            if (Array.isArray(e)) return e
        }(e) || function(e, t) {
            var s = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != s) {
                var i, n, a, o, r = [],
                    l = !0,
                    d = !1;
                try {
                    if (a = (s = s.call(e)).next, 0 === t) {
                        if (Object(s) !== s) return;
                        l = !1
                    } else
                        for (; !(l = (i = a.call(s)).done) && (r.push(i.value), r.length !== t); l = !0);
                } catch (e) {
                    d = !0, n = e
                } finally {
                    try {
                        if (!l && null != s.return && (o = s.return(), Object(o) !== o)) return
                    } finally {
                        if (d) throw n
                    }
                }
                return r
            }
        }(e, t) || C(e, t) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }

    function v(e) {
        return function(e) {
            if (Array.isArray(e)) return b(e)
        }(e) || function(e) {
            if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
        }(e) || C(e) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }

    function C(e, t) {
        if (e) {
            if ("string" == typeof e) return b(e, t);
            var s = Object.prototype.toString.call(e).slice(8, -1);
            return "Object" === s && e.constructor && (s = e.constructor.name), "Map" === s || "Set" === s ? Array.from(e) : "Arguments" === s || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s) ? b(e, t) : void 0
        }
    }

    function b(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var s = 0, i = new Array(t); s < t; s++) i[s] = e[s];
        return i
    }
    var y, _, W, S, w, M, I, T = {},
        A = [],
        E = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;

    function U(e, t) {
        for (var s in t) e[s] = t[s];
        return e
    }

    function k(e) {
        var t = e.parentNode;
        t && t.removeChild(e)
    }

    function N(e, t, s) {
        var i, n, a, o = {};
        for (a in t) "key" == a ? i = t[a] : "ref" == a ? n = t[a] : o[a] = t[a];
        if (arguments.length > 2 && (o.children = arguments.length > 3 ? y.call(arguments, 2) : s), "function" == typeof e && null != e.defaultProps)
            for (a in e.defaultProps) void 0 === o[a] && (o[a] = e.defaultProps[a]);
        return x(e, o, i, n, null)
    }

    function x(e, t, s, i, n) {
        var a = {
            type: e,
            props: t,
            key: s,
            ref: i,
            __k: null,
            __: null,
            __b: 0,
            __e: null,
            __d: void 0,
            __c: null,
            __h: null,
            constructor: void 0,
            __v: null == n ? ++W : n
        };
        return null == n && null != _.vnode && _.vnode(a), a
    }

    function O(e) {
        return e.children
    }

    function R(e, t) {
        this.props = e, this.context = t
    }

    function D(e, t) {
        if (null == t) return e.__ ? D(e.__, e.__.__k.indexOf(e) + 1) : null;
        for (var s; t < e.__k.length; t++)
            if (null != (s = e.__k[t]) && null != s.__e) return s.__e;
        return "function" == typeof e.type ? D(e) : null
    }

    function $(e) {
        var t, s;
        if (null != (e = e.__) && null != e.__c) {
            for (e.__e = e.__c.base = null, t = 0; t < e.__k.length; t++)
                if (null != (s = e.__k[t]) && null != s.__e) {
                    e.__e = e.__c.base = s.__e;
                    break
                }
            return $(e)
        }
    }

    function H(e) {
        (!e.__d && (e.__d = !0) && S.push(e) && !L.__r++ || w !== _.debounceRendering) && ((w = _.debounceRendering) || M)(L)
    }

    function L() {
        var e, t, s, i, n, a, o, r;
        for (S.sort(I); e = S.shift();) e.__d && (t = S.length, i = void 0, n = void 0, o = (a = (s = e).__v).__e, (r = s.__P) && (i = [], (n = U({}, a)).__v = a.__v + 1, Y(r, a, n, s.__n, void 0 !== r.ownerSVGElement, null != a.__h ? [o] : null, i, null == o ? D(a) : o, a.__h), Z(i, a), a.__e != o && $(a)), S.length > t && S.sort(I));
        L.__r = 0
    }

    function P(e, t, s, i, n, a, o, r, l, d) {
        var c, u, m, h, g, p, f, v = i && i.__k || A,
            C = v.length;
        for (s.__k = [], c = 0; c < t.length; c++)
            if (null != (h = s.__k[c] = null == (h = t[c]) || "boolean" == typeof h || "function" == typeof h ? null : "string" == typeof h || "number" == typeof h || "bigint" == typeof h ? x(null, h, null, null, h) : Array.isArray(h) ? x(O, {
                    children: h
                }, null, null, null) : h.__b > 0 ? x(h.type, h.props, h.key, h.ref ? h.ref : null, h.__v) : h)) {
                if (h.__ = s, h.__b = s.__b + 1, null === (m = v[c]) || m && h.key == m.key && h.type === m.type) v[c] = void 0;
                else
                    for (u = 0; u < C; u++) {
                        if ((m = v[u]) && h.key == m.key && h.type === m.type) {
                            v[u] = void 0;
                            break
                        }
                        m = null
                    }
                Y(e, h, m = m || T, n, a, o, r, l, d), g = h.__e, (u = h.ref) && m.ref != u && (f || (f = []), m.ref && f.push(m.ref, null, h), f.push(u, h.__c || g, h)), null != g ? (null == p && (p = g), "function" == typeof h.type && h.__k === m.__k ? h.__d = l = F(h, l, e) : l = B(e, h, m, v, g, l), "function" == typeof s.type && (s.__d = l)) : l && m.__e == l && l.parentNode != e && (l = D(m))
            }
        for (s.__e = p, c = C; c--;) null != v[c] && ("function" == typeof s.type && null != v[c].__e && v[c].__e == s.__d && (s.__d = j(i).nextSibling), J(v[c], v[c]));
        if (f)
            for (c = 0; c < f.length; c++) X(f[c], f[++c], f[++c])
    }

    function F(e, t, s) {
        for (var i, n = e.__k, a = 0; n && a < n.length; a++)(i = n[a]) && (i.__ = e, t = "function" == typeof i.type ? F(i, t, s) : B(s, i, i, n, i.__e, t));
        return t
    }

    function B(e, t, s, i, n, a) {
        var o, r, l;
        if (void 0 !== t.__d) o = t.__d, t.__d = void 0;
        else if (null == s || n != a || null == n.parentNode) e: if (null == a || a.parentNode !== e) e.appendChild(n), o = null;
            else {
                for (r = a, l = 0;
                    (r = r.nextSibling) && l < i.length; l += 1)
                    if (r == n) break e;
                e.insertBefore(n, a), o = a
            }
        return void 0 !== o ? o : n.nextSibling
    }

    function j(e) {
        var t, s, i;
        if (null == e.type || "string" == typeof e.type) return e.__e;
        if (e.__k)
            for (t = e.__k.length - 1; t >= 0; t--)
                if ((s = e.__k[t]) && (i = j(s))) return i;
        return null
    }

    function z(e, t, s) {
        "-" === t[0] ? e.setProperty(t, null == s ? "" : s) : e[t] = null == s ? "" : "number" != typeof s || E.test(t) ? s : s + "px"
    }

    function G(e, t, s, i, n) {
        var a;
        e: if ("style" === t)
            if ("string" == typeof s) e.style.cssText = s;
            else {
                if ("string" == typeof i && (e.style.cssText = i = ""), i)
                    for (t in i) s && t in s || z(e.style, t, "");
                if (s)
                    for (t in s) i && s[t] === i[t] || z(e.style, t, s[t])
            }
        else if ("o" === t[0] && "n" === t[1]) a = t !== (t = t.replace(/Capture$/, "")), t = t.toLowerCase() in e ? t.toLowerCase().slice(2) : t.slice(2), e.l || (e.l = {}), e.l[t + a] = s, s ? i || e.addEventListener(t, a ? V : q, a) : e.removeEventListener(t, a ? V : q, a);
        else if ("dangerouslySetInnerHTML" !== t) {
            if (n) t = t.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
            else if ("width" !== t && "height" !== t && "href" !== t && "list" !== t && "form" !== t && "tabIndex" !== t && "download" !== t && t in e) try {
                e[t] = null == s ? "" : s;
                break e
            } catch (e) {}
            "function" == typeof s || (null == s || !1 === s && "-" !== t[4] ? e.removeAttribute(t) : e.setAttribute(t, s))
        }
    }

    function q(e) {
        return this.l[e.type + !1](_.event ? _.event(e) : e)
    }

    function V(e) {
        return this.l[e.type + !0](_.event ? _.event(e) : e)
    }

    function Y(e, t, s, i, n, a, o, r, l) {
        var d, c, u, m, h, g, p, f, v, C, b, y, W, S, w, M = t.type;
        if (void 0 !== t.constructor) return null;
        null != s.__h && (l = s.__h, r = t.__e = s.__e, t.__h = null, a = [r]), (d = _.__b) && d(t);
        try {
            e: if ("function" == typeof M) {
                if (f = t.props, v = (d = M.contextType) && i[d.__c], C = d ? v ? v.props.value : d.__ : i, s.__c ? p = (c = t.__c = s.__c).__ = c.__E : ("prototype" in M && M.prototype.render ? t.__c = c = new M(f, C) : (t.__c = c = new R(f, C), c.constructor = M, c.render = Q), v && v.sub(c), c.props = f, c.state || (c.state = {}), c.context = C, c.__n = i, u = c.__d = !0, c.__h = [], c._sb = []), null == c.__s && (c.__s = c.state), null != M.getDerivedStateFromProps && (c.__s == c.state && (c.__s = U({}, c.__s)), U(c.__s, M.getDerivedStateFromProps(f, c.__s))), m = c.props, h = c.state, c.__v = t, u) null == M.getDerivedStateFromProps && null != c.componentWillMount && c.componentWillMount(), null != c.componentDidMount && c.__h.push(c.componentDidMount);
                else {
                    if (null == M.getDerivedStateFromProps && f !== m && null != c.componentWillReceiveProps && c.componentWillReceiveProps(f, C), !c.__e && null != c.shouldComponentUpdate && !1 === c.shouldComponentUpdate(f, c.__s, C) || t.__v === s.__v) {
                        for (t.__v !== s.__v && (c.props = f, c.state = c.__s, c.__d = !1), c.__e = !1, t.__e = s.__e, t.__k = s.__k, t.__k.forEach((function(e) {
                                e && (e.__ = t)
                            })), b = 0; b < c._sb.length; b++) c.__h.push(c._sb[b]);
                        c._sb = [], c.__h.length && o.push(c);
                        break e
                    }
                    null != c.componentWillUpdate && c.componentWillUpdate(f, c.__s, C), null != c.componentDidUpdate && c.__h.push((function() {
                        c.componentDidUpdate(m, h, g)
                    }))
                }
                if (c.context = C, c.props = f, c.__P = e, y = _.__r, W = 0, "prototype" in M && M.prototype.render) {
                    for (c.state = c.__s, c.__d = !1, y && y(t), d = c.render(c.props, c.state, c.context), S = 0; S < c._sb.length; S++) c.__h.push(c._sb[S]);
                    c._sb = []
                } else
                    do {
                        c.__d = !1, y && y(t), d = c.render(c.props, c.state, c.context), c.state = c.__s
                    } while (c.__d && ++W < 25);
                c.state = c.__s, null != c.getChildContext && (i = U(U({}, i), c.getChildContext())), u || null == c.getSnapshotBeforeUpdate || (g = c.getSnapshotBeforeUpdate(m, h)), w = null != d && d.type === O && null == d.key ? d.props.children : d, P(e, Array.isArray(w) ? w : [w], t, s, i, n, a, o, r, l), c.base = t.__e, t.__h = null, c.__h.length && o.push(c), p && (c.__E = c.__ = null), c.__e = !1
            } else null == a && t.__v === s.__v ? (t.__k = s.__k, t.__e = s.__e) : t.__e = K(s.__e, t, s, i, n, a, o, l);
            (d = _.diffed) && d(t)
        }
        catch (e) {
            t.__v = null, (l || null != a) && (t.__e = r, t.__h = !!l, a[a.indexOf(r)] = null), _.__e(e, t, s)
        }
    }

    function Z(e, t) {
        _.__c && _.__c(t, e), e.some((function(t) {
            try {
                e = t.__h, t.__h = [], e.some((function(e) {
                    e.call(t)
                }))
            } catch (e) {
                _.__e(e, t.__v)
            }
        }))
    }

    function K(e, t, s, i, n, a, o, r) {
        var l, d, c, u = s.props,
            m = t.props,
            h = t.type,
            g = 0;
        if ("svg" === h && (n = !0), null != a)
            for (; g < a.length; g++)
                if ((l = a[g]) && "setAttribute" in l == !!h && (h ? l.localName === h : 3 === l.nodeType)) {
                    e = l, a[g] = null;
                    break
                }
        if (null == e) {
            if (null === h) return document.createTextNode(m);
            e = n ? document.createElementNS("http://www.w3.org/2000/svg", h) : document.createElement(h, m.is && m), a = null, r = !1
        }
        if (null === h) u === m || r && e.data === m || (e.data = m);
        else {
            if (a = a && y.call(e.childNodes), d = (u = s.props || T).dangerouslySetInnerHTML, c = m.dangerouslySetInnerHTML, !r) {
                if (null != a)
                    for (u = {}, g = 0; g < e.attributes.length; g++) u[e.attributes[g].name] = e.attributes[g].value;
                (c || d) && (c && (d && c.__html == d.__html || c.__html === e.innerHTML) || (e.innerHTML = c && c.__html || ""))
            }
            if (function(e, t, s, i, n) {
                    var a;
                    for (a in s) "children" === a || "key" === a || a in t || G(e, a, null, s[a], i);
                    for (a in t) n && "function" != typeof t[a] || "children" === a || "key" === a || "value" === a || "checked" === a || s[a] === t[a] || G(e, a, t[a], s[a], i)
                }(e, m, u, n, r), c) t.__k = [];
            else if (g = t.props.children, P(e, Array.isArray(g) ? g : [g], t, s, i, n && "foreignObject" !== h, a, o, a ? a[0] : s.__k && D(s, 0), r), null != a)
                for (g = a.length; g--;) null != a[g] && k(a[g]);
            r || ("value" in m && void 0 !== (g = m.value) && (g !== e.value || "progress" === h && !g || "option" === h && g !== u.value) && G(e, "value", g, u.value, !1), "checked" in m && void 0 !== (g = m.checked) && g !== e.checked && G(e, "checked", g, u.checked, !1))
        }
        return e
    }

    function X(e, t, s) {
        try {
            "function" == typeof e ? e(t) : e.current = t
        } catch (e) {
            _.__e(e, s)
        }
    }

    function J(e, t, s) {
        var i, n;
        if (_.unmount && _.unmount(e), (i = e.ref) && (i.current && i.current !== e.__e || X(i, null, t)), null != (i = e.__c)) {
            if (i.componentWillUnmount) try {
                i.componentWillUnmount()
            } catch (e) {
                _.__e(e, t)
            }
            i.base = i.__P = null, e.__c = void 0
        }
        if (i = e.__k)
            for (n = 0; n < i.length; n++) i[n] && J(i[n], t, s || "function" != typeof e.type);
        s || null == e.__e || k(e.__e), e.__ = e.__e = e.__d = void 0
    }

    function Q(e, t, s) {
        return this.constructor(e, s)
    }

    function ee(e, t, s) {
        var i, n, a;
        _.__ && _.__(e, t), n = (i = "function" == typeof s) ? null : s && s.__k || t.__k, a = [], Y(t, e = (!i && s || t).__k = N(O, null, [e]), n || T, T, void 0 !== t.ownerSVGElement, !i && s ? [s] : n ? null : t.firstChild ? y.call(t.childNodes) : null, a, !i && s ? s : n ? n.__e : t.firstChild, i), Z(a, e)
    }
    y = A.slice, _ = {
        __e: function(e, t, s, i) {
            for (var n, a, o; t = t.__;)
                if ((n = t.__c) && !n.__) try {
                    if ((a = n.constructor) && null != a.getDerivedStateFromError && (n.setState(a.getDerivedStateFromError(e)), o = n.__d), null != n.componentDidCatch && (n.componentDidCatch(e, i || {}), o = n.__d), o) return n.__E = n
                } catch (t) {
                    e = t
                }
            throw e
        }
    }, W = 0, R.prototype.setState = function(e, t) {
        var s;
        s = null != this.__s && this.__s !== this.state ? this.__s : this.__s = U({}, this.state), "function" == typeof e && (e = e(U({}, s), this.props)), e && U(s, e), null != e && this.__v && (t && this._sb.push(t), H(this))
    }, R.prototype.forceUpdate = function(e) {
        this.__v && (this.__e = !0, e && this.__h.push(e), H(this))
    }, R.prototype.render = O, S = [], M = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, I = function(e, t) {
        return e.__v.__b - t.__v.__b
    }, L.__r = 0;
    var te = {
            focusoff: "mc4b6e3fc0_focusoff",
            focuson: "mc4b6e3fc0_focuson",
            button: "mc4b6e3fc0_button",
            icon: "mc4b6e3fc0_icon",
            negative: "mc4b6e3fc0_negative",
            positive: "mc4b6e3fc0_positive",
            zmNightMode: "zmNightMode"
        },
        se = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                var e;
                return a(this, s), (e = t.call(this)).state = {
                    clicked: !1
                }, e.onButtonPress = e.onButtonPress.bind(h(e)), e.setClickedState = e.setClickedState.bind(h(e)), e.onBlur = e.onBlur.bind(h(e)), e
            }
            return r(s, [{
                key: "setClickedState",
                value: function() {
                    this.focusclass = te.focusoff, this.setState({
                        clicked: !0
                    })
                }
            }, {
                key: "onBlur",
                value: function() {
                    this.focusclass = te.focuson, this.setState({
                        clicked: !1
                    })
                }
            }, {
                key: "onButtonPress",
                value: function(e) {
                    var t, s = this.props.onclick;
                    "object" === n(this.props.onclick) && (t = this.props.onclick.link, s = this.props.onclick.callback), "click" === e.type && s && (t && window.open(t, "_blank", "noopener,noreferrer"), s(e));
                    "keydown" !== e.type || 13 !== e.keyCode && 32 !== e.keyCode || (t && window.open(t, "_blank", "noopener,noreferrer"), s(e))
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = e.classname + " " || "",
                        s = e.tabindex || "0",
                        i = "",
                        n = "",
                        a = (this.state.clicked ? te.focusoff : te.focuson) + " ",
                        o = e.children,
                        r = "";
                    "button" === e.type && (i = te.button + " ", o = e.content), "icon" === e.type && (i = te.icon + " ", n = String.fromCharCode(parseInt(e.content, 16))), e.size >= 1 && (r = te[e.type + "size" + e.size]);
                    var l = "";
                    return e.theme >= 1 && (l = te["theme" + e.theme] + " "), "negative" == e.theme && (l = te.negative), "positive" == e.theme && (l = te.positive), N("div", {
                        "data-content": n,
                        title: e.title,
                        class: i + t + a + l + r,
                        tabindex: s,
                        style: e.style,
                        onblur: this.onBlur,
                        onclick: this.onButtonPress,
                        onmouseover: this.props.onmouseover,
                        onmousedown: this.setClickedState,
                        onmouseout: this.props.onmouseout,
                        onkeydown: this.onButtonPress
                    }, o)
                }
            }]), s
        }(R),
        ie = {
            mountComponent: function(e, t, s, i, n, a, o, r) {
                ee(N(se, {
                    type: t,
                    size: s,
                    content: i,
                    theme: n,
                    title: o,
                    classname: a,
                    onclick: r
                }), e)
            }
        };
    var ne = {
            calendarcontainer: "mc266c4d21_calendarcontainer",
            mountedtop: "mc266c4d21_mountedtop",
            mountedbottom: "mc266c4d21_mountedbottom",
            month: "mc266c4d21_month",
            monthcnt: "mc266c4d21_monthcnt",
            yearpadding: "mc266c4d21_yearpadding",
            arrowright: "mc266c4d21_arrowright",
            arrowleft: "mc266c4d21_arrowleft",
            weekheader: "mc266c4d21_weekheader",
            dayscontainer: "mc266c4d21_dayscontainer",
            weekscontainer: "mc266c4d21_weekscontainer",
            weekheadercnt: "mc266c4d21_weekheadercnt",
            days: "mc266c4d21_days",
            daysprev: "mc266c4d21_daysprev",
            slideanimation: "mc266c4d21_slideanimation",
            slidein: "mc266c4d21_slidein",
            slideout: "mc266c4d21_slideout",
            selecteddate: "mc266c4d21_selecteddate",
            disabledday: "mc266c4d21_disabledday",
            zmNightMode: "zmNightMode",
            dayscrnt: "mc266c4d21_dayscrnt"
        },
        ae = {},
        oe = {
            get: function(e) {
                return ae[e]
            },
            set: function(e) {
                if ("object" === n(e))
                    for (var t in e) ae[t] = e[t]
            }
        };

    function re(e, t) {
        var s;
        if ("string" == typeof e || "boolean" == typeof e || "number" == typeof e ? s = e : e && (s = e.id, t = e.params), oe.get("Resource")) return oe.get("Resource").getRealValue(s, t);
        WmsResource.getRealValue(s, t)
    }

    function le() {
        var e = ["common.days.su", "common.days.mo", "common.days.tu", "common.days.we", "common.days.th", "common.days.fr", "common.days.sa"];
        if (oe.get("weekstart_index")) {
            var t = parseInt(oe.get("weekstart_index")),
                s = e.splice(0, t);
            e = e.concat(s)
        }
        return N("div", null, N("div", {
            class: ne.weekheader
        }, e.map((function(e, t) {
            return N("div", {
                key: t,
                class: ne.weekheadercnt
            }, N(re, {
                id: e
            }))
        }))))
    }

    function de(e) {
        return N(re, {
            id: ["common.month.january", "common.month.february", "common.month.march", "common.month.april", "common.month.may", "common.month.june", "common.month.july", "common.month.august", "common.month.september", "common.month.october", "common.month.november", "common.month.december"][e.month_number]
        })
    }
    var ce = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                a(this, s), (i = t.call(this, e)).calnode = null, i.starting_date = null, i.selected_element = null, i.setfocusafterswitch = !1;
                var n = new Date;
                return e.selecteddate && (n = new Date(e.selecteddate)), n.setHours(0, 0, 0, 0), i.state = {
                    selected_date: n,
                    initial_date: n
                }, i.onDateSelection = i.props.onDateSelection, i.moveBackward = i.moveBackward.bind(h(i)), i.moveForward = i.moveForward.bind(h(i)), i.setCalendarDomNode = i.setCalendarDomNode.bind(h(i)), i.updateSelectedDate = i.updateSelectedDate.bind(h(i)), i.getWeeks = i.getWeeks.bind(h(i)), i.setSelectedDateNode = i.setSelectedDateNode.bind(h(i)), i.setStartingDate(i.state.initial_date), i
            }
            return r(s, [{
                key: "setCalendarDomNode",
                value: function(e) {
                    this.calnode = e
                }
            }, {
                key: "setSelectedDateNode",
                value: function(e) {
                    e && e.classList.contains(ne.selecteddate) && (this.selected_element = e)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    this.calnode.classList.contains(ne.slidein) && this.calnode.classList.remove(ne.slidein), this.calnode.classList.contains(ne.slideout) && this.calnode.classList.remove(ne.slideout)
                }
            }, {
                key: "componentDidUpdate",
                value: function(e, t) {
                    var s = "",
                        i = t.initial_date.getMonth(),
                        n = this.state.initial_date.getMonth(),
                        a = t.initial_date.getFullYear(),
                        o = this.state.initial_date.getFullYear();
                    i < n ? s = a > o ? "slidein" : "slideout" : i > n && (s = a < o ? "slideout" : "slidein"), this.selected_element && (this.setfocusafterswitch ? this.selected_element.focus() : this.selected_element.blur()), this.setTransition(s)
                }
            }, {
                key: "setTransition",
                value: function(e) {
                    "" != e && (this.calnode.classList.remove(ne.slideout), this.calnode.classList.remove(ne.slidein), this.calnode.getBoundingClientRect(), this.calnode.classList.add(ne[e]))
                }
            }, {
                key: "setStartingDate",
                value: function(e) {
                    if (this.starting_date = new Date(e.getTime()), this.starting_date.setDate(1), oe.get("weekstart_index")) {
                        var t = parseInt(oe.get("weekstart_index"));
                        this.starting_date.setDate(this.starting_date.getDate() - (this.starting_date.getDay() - t))
                    } else this.starting_date.setDate(this.starting_date.getDate() - this.starting_date.getDay())
                }
            }, {
                key: "switchMonth",
                value: function(e) {
                    return this.state.initial_date.getTime() < e.getTime() ? this.getNextInitialDate() : this.state.initial_date.getTime() > e.getTime() ? this.getPreviousInitialDate() : void 0
                }
            }, {
                key: "updateSelectedDate",
                value: function(e) {
                    if (this.setfocusafterswitch = !1, "keydown" === e.type && (13 === e.keyCode || 32 === e.keyCode) || "click" == e.type) {
                        var t = new Date(this.starting_date.getTime()),
                            s = this.state.initial_date,
                            i = e.target.getAttribute("data-id");
                        if (t.setDate(this.starting_date.getDate() + parseInt(i)), t.getMonth() != this.state.initial_date.getMonth() && (s = this.switchMonth(t), this.setfocusafterswitch = !0), !this.isAllowedDate(t)) return;
                        this.setState({
                            selected_date: t,
                            initial_date: s
                        }), this.onDateSelection(t)
                    }
                }
            }, {
                key: "getNextInitialDate",
                value: function() {
                    var e = new Date(this.state.initial_date.getTime());
                    return e.setMonth(e.getMonth() + 1), e.setDate(1), this.setStartingDate(e), e
                }
            }, {
                key: "getPreviousInitialDate",
                value: function() {
                    var e = new Date(this.state.initial_date.getTime());
                    return e.setMonth(e.getMonth() - 1), e.setDate(1), this.setStartingDate(e), e
                }
            }, {
                key: "moveForward",
                value: function() {
                    this.setState({
                        initial_date: this.getNextInitialDate()
                    })
                }
            }, {
                key: "moveBackward",
                value: function() {
                    this.setState({
                        initial_date: this.getPreviousInitialDate()
                    })
                }
            }, {
                key: "getWeeks",
                value: function() {
                    var e = new Date(this.starting_date),
                        t = this.state.initial_date.getMonth(),
                        s = [],
                        i = 0,
                        n = this.state.selected_date,
                        a = new Date(e.getTime());
                    a.setHours(0, 0, 0, 0);
                    for (var o = 0; o < 6; o++) {
                        for (var r = [], l = 0; l < 7; l++) {
                            var d = " " + ne.dayscrnt;
                            a.getMonth() != t && (d = " " + ne.daysprev);
                            var c = "";
                            n.getTime() === a.getTime() && (c = " " + ne.selecteddate), this.isAllowedDate(a) || (c = " " + ne.disabledday), r.push(N("div", {
                                key: a.getMonth() + "" + a.getDate(),
                                tabindex: "0",
                                "data-id": i++,
                                class: ne.days + d + c,
                                ref: this.setSelectedDateNode,
                                onclick: this.updateSelectedDate,
                                onkeydown: this.updateSelectedDate
                            }, a.getDate())), a.setDate(a.getDate() + 1)
                        }
                        s.push(N("div", {
                            class: ne.dayscontainer
                        }, " ", r, " "))
                    }
                    return N("div", {
                        class: ne.weekscontainer
                    }, s)
                }
            }, {
                key: "isAllowedDate",
                value: function(e) {
                    if (this.props.filter) {
                        var t = !0,
                            s = !0,
                            i = !0;
                        if (this.props.filter.allowed_days) {
                            t = -1 !== this.props.filter.allowed_days.indexOf(["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"][e.getDay()])
                        }
                        if (this.props.filter.from && "Invalid Date" != new Date(this.props.filter.from)) {
                            var n = new Date(this.props.filter.from);
                            s = (n = n.setDate(n.getDate() - 1)) < e
                        }
                        return this.props.filter.to && "Invalid Date" != new Date(this.props.filter.to) && (i = new Date(this.props.filter.to) >= e), t && s && i
                    }
                    return !0
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = e.mounttop ? ne.mountedtop : ne.mountedbottom,
                        i = e.customclass && e.customclass.calendarcontainer ? e.customclass.calendarcontainer : "";
                    return N("div", {
                        class: ne.calendarcontainer + " " + i + " " + s
                    }, N("div", {
                        class: ne.month
                    }, N("button", {
                        class: ne.arrowleft,
                        onclick: this.moveBackward
                    }), N("div", {
                        class: ne.monthcnt
                    }, N(de, {
                        month_number: this.state.initial_date.getMonth()
                    }), ",", N("span", {
                        class: ne.yearpadding
                    }, this.state.initial_date.getFullYear())), N("button", {
                        class: ne.arrowright,
                        onclick: this.moveForward
                    })), N(le, null), N("div", {
                        ref: this.setCalendarDomNode
                    }, this.getWeeks()))
                }
            }]), s
        }(R),
        ue = {
            mountComponent: function(e, t) {
                ee(N(ce, {
                    onDateSelection: t
                }), e)
            }
        },
        me = {
            notifications: {},
            close: function(e) {
                void 0 !== this.notifications[e] && (this.notifications[e].notifyobj.close(), clearTimeout(this.notifications[e].timer), delete this.notifications[e])
            },
            requestPermission: function() {
                "undefined" != typeof Notification && "default" === Notification.permission && Notification.requestPermission()
            },
            show: function(e) {
                if ("undefined" != typeof Notification && "granted" === Notification.permission) {
                    if (e.checkownership && !1 === e.checkownership.isOwner()) return;
                    e.tag = e.id, this.close(e.id), void 0 === this.notifications[e.id] && (this.notifications[e.id] = {});
                    var t = new Notification(e.title, e);
                    return this.notifications[e.id].notifyobj = t, e.duration && (this.notifications[e.id].timer = setTimeout(function() {
                        this.close(e.id)
                    }.bind(this), e.duration)), t.onclick = function(s) {
                        window.focus(), "function" == typeof e.onclick && e.onclick.call(t, s), this.close(e.id)
                    }.bind(this), t
                }
            }
        };
    var he = "mcd44f5b7f_parentcomponent",
        ge = "mcd44f5b7f_datepickercontainer",
        pe = "mcd44f5b7f_mountedbottom",
        fe = "mcd44f5b7f_mountedtop",
        ve = "mcd44f5b7f_calendarposition",
        Ce = "mcd44f5b7f_datecnt",
        be = "mcd44f5b7f_placeholder",
        ye = "mcd44f5b7f_calendaricon",
        _e = "mcd44f5b7f_calendarviaforms",
        We = "mcd44f5b7f_calendarwidth",
        Se = "mcd44f5b7f_closeicon",
        we = function(e) {
            c(i, e);
            var t = p(i);

            function i(e) {
                var s;
                return a(this, i), (s = t.call(this, e)).setContainerNode = s.setContainerNode.bind(h(s)), s.clickOutsideListener = s.clickOutsideListener.bind(h(s)), s.onClickOutside = s.props.onClickOutside, s
            }
            return r(i, [{
                key: "setContainerNode",
                value: function(e) {
                    this.containernode = e
                }
            }, {
                key: "clickOutsideListener",
                value: function(e) {
                    this.containernode && !this.containernode.contains(e.target) && this.onClickOutside(e)
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    window.addEventListener("click", this.clickOutsideListener)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    window.removeEventListener("click", this.clickOutsideListener)
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = e.className,
                        i = e.onClick,
                        n = e.children,
                        a = s(s({}, t && {
                            class: t
                        }), i && {
                            onClick: i
                        });
                    return N("div", d({
                        ref: this.setContainerNode
                    }, a), n)
                }
            }]), i
        }(R);

    function Me(e) {
        return re(new Array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")[e])
    }

    function Ie(e) {
        return re(["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"][e])
    }

    function Te(e) {
        var t = new Date(Number(e)),
            s = t.getHours(),
            i = t.getMinutes(),
            n = "",
            a = s > 12 ? s - 12 : 0 == s ? "12" : s;
        return n += a < 10 ? "0" + a : a, n += (i < 10 ? ":0" : ":") + i, n += s >= 12 ? " " + re("PM") : " " + re("AM")
    }

    function Ae(e) {
        var t = new Date(Number(e)),
            s = t.getHours(),
            i = t.getMinutes(),
            n = "";
        n += ke(e) + " ";
        var a = s > 12 ? s - 12 : 0 == s ? "12" : s;
        return n += a < 10 ? "0" + a : a, n += (i < 10 ? ":0" : ":") + i, n += s >= 12 ? " " + re("PM") : " " + re("AM")
    }

    function Ee(e, t) {
        var s = new Date(Number(e)),
            i = "";
        if (null == (t = oe.get("dateformat") ? oe.get("dateformat") : t)) return i += s.getDate(), i += " " + Me(s.getMonth()), (new Date).getFullYear() !== s.getFullYear() && (i += " " + s.getFullYear()), i;
        var n = s.getDate(),
            a = s.getMonth() + 1,
            o = s.getFullYear();
        t = (t = (t = t.replace(/dd/, n < 10 ? "0" + n : n)).replace(/MM/, a < 10 ? "0" + a : a)).replace(/yyyy/, o);
        var r = ("" + o).substr(2, 4);
        return i = (t = (t = (t = t.replace(/yy/, r < 10 ? "0" + r : r)).replace(/day/, Ie(s.getDay()))).replace(/mon/, Me(s.getMonth()))) + " "
    }

    function Ue(e, t) {
        return Ee(e) === Ee(t)
    }

    function ke(e) {
        var t = new Date(Number(e)),
            s = new Date;
        return Ue(t, s) ? re("chat.today") : (s.setDate(s.getDate() - 1), Ue(t, s) ? re("chat.yesterday") : (s.setDate(s.getDate() + 2), Ue(t, s) ? re("chat.tomorrow") : Ee(e)))
    }

    function Ne(e, t) {
        var s = new Date;
        return Te(s.getTime() + 6e4 * s.getTimezoneOffset() + parseInt(t)) + " ( " + e + " )"
    }

    function xe(e) {
        var t = new Date(e),
            s = t.getHours(),
            i = t.getMinutes();
        return (s < 10 ? "0" + s : s) + ":" + (i < 10 ? "0" + i : i) + ":00"
    }

    function Oe(e) {
        var t = new Date(e),
            s = e.split("-"),
            i = s[0],
            n = s[1],
            a = s[2].split("T")[0];
        return !(!t || t.getFullYear() != i || n != t.getMonth() + 1 || t.getDate() != a)
    }

    function Re(e, t) {
        var s = {
                seconds: re("common.reltime.seconds"),
                minute: re("common.reltime.minute", "%d"),
                minutes: re("common.reltime.minutes", "%d"),
                hour: re("chat.hour", "%d"),
                hours: re("chat.hours", "%d"),
                day: re("chat.yesterday"),
                days: re("common.reltime.days", "%d"),
                month: re("common.reltime.month", "%d"),
                months: re("common.reltime.months", "%d"),
                year: re("common.reltime.year"),
                years: re("common.reltime.years", "%d"),
                suffixago: re("common.reltime.suffixago")
            },
            i = $WC.Util.cloneObject(s),
            n = +new Date - parseInt(e),
            a = n > 6e4,
            o = Math.abs(n) / 1e3,
            r = o / 60,
            l = r / 60,
            d = l / 24,
            c = d / 365,
            u = function(e, t, s) {
                var n = s ? "" : i.suffixago;
                return e.replace(/%d/i, t) + " " + n
            };
        return o < 60 && u(i.seconds, parseInt(o), !a) || o < 120 && u(i.minute, 1, !a) || r < 60 && u(i.minutes, parseInt(r), !a) || r < 120 && u(i.hour, 1, !a) || l < 24 && u(i.hours, parseInt(l), !a) || l < 48 && u(i.day, 1, t && !t.shorten || !a) || d < 30 && u(i.days, parseInt(d), !a) || d < 60 && u(i.month, 1, !a) || d < 365 && u(i.months, parseInt(d / 30), !a) || c < 2 && u(i.year, 1, !a) || u(i.years, parseInt(c), !a)
    }

    function De(e) {
        var t = e ? new Date(e) : new Date;
        return {
            year: t.getFullYear(),
            month: t.getMonth() + 1,
            date: t.getDate(),
            hour: t.getHours(),
            minute: t.getMinutes(),
            second: t.getSeconds(),
            day: t.getDay() + 1,
            dayText: Ie(t.getDay()),
            monthText: Me(t.getMonth()),
            timestamp: t.getTime()
        }
    }
    var $e = Object.freeze({
        __proto__: null,
        formatDTTime: Ae,
        formatDate: Ee,
        formatDateWithWords: ke,
        formatTime: Te,
        formatTime24hr: xe,
        getCurrentDateObj: De,
        getOtherZoneTime: Ne,
        getRelativeTimeString: Re,
        getTargetTimeZoneTimeInMs: function(e) {
            var t = oe.get("_TZOFFSET"),
                s = (new Date).getTimezoneOffset();
            return parseInt(e) + 60 * s * 1e3 + 60 * t * 1e3
        },
        isSameDay: Ue,
        isValidPresetDate: Oe,
        relativeTimeLeft: function(e) {
            var t, s = [],
                i = parseInt(e) - Date.now();
            return (i /= 1e3) <= 60 ? re("chat.mute.seconds") : (i > 86400 && (t = parseInt(i / 86400), s.push(t), s.push(re(1 === t ? "chat.mute.day" : "chat.mute.days")), i %= 86400), i > 3600 && (t = parseInt(i / 3600), s.push(t), s.push(re(1 === t ? "chat.mute.hour" : "chat.mute.hours")), i %= 3600), i > 60 && (t = parseInt(i / 60), s.push(t), s.push(re(1 === t ? "chat.mute.minute" : "chat.mute.minutes")), i %= 60), s.join(" "))
        }
    });

    function He(e, t, s, i) {
        var n = "";
        i = i || "", s && ((n = new Date).setTime(n.getTime() + s), n = n.toUTCString()), document.cookie = e + "=" + encodeURIComponent(t) + ";expires=" + n + ";domain=" + i + ";path=/;SameSite=Strict;Secure;"
    }

    function Le(e) {
        for (var t = document.cookie.split("; "), s = 0; s < t.length; s++) {
            var i = t[s].split("=");
            if (i[0] === e) return decodeURIComponent(i[1])
        }
        return ""
    }

    function Pe(e, t) {
        t = t || "", document.cookie = e + "=;expires=Thu, 01 Jan 1970 00:00:01 GMT;domain=" + t + ";path=/"
    }
    var Fe = Object.freeze({
            __proto__: null,
            get: Le,
            remove: Pe,
            set: He
        }),
        Be = {
            regexes: {
                gmail: /^[A-Za-z0-9](\.?[A-Za-z0-9]){5,}@gmail\.com$/,
                facebook: /^[A-Za-z0-9\.]+$/,
                yahoo: /^[A-Za-z0-9]((\.|_)?[A-Za-z0-9]){5,}@(yahoo|ymail|rocketmail)\.com$/,
                msn: /^[A-Za-z0-9-_](\.?[A-Za-z0-9-_]){5,}@(outlook|hotmail|live)\.com$/,
                edge_useragent_lowercase: /edge\/(\d+)/,
                chrome_useragent_lowercase: /(?:chrome|crios)\/(\d+)/,
                firefox_useragent_lowercase: /(?:firefox|fxios)\/(\d+)/,
                opera_useragent_lowercase: /(?:^opera.+?version|opr)\/(\d+)/,
                ie_useragent_lowercase: /(?:msie |trident.+?; rv:)(\d+)/,
                safari_useragent_lowercase: /version\/(\d+).+?safari/,
                qq: /^[0-9]+$/,
                icq: /^[0-9]+$/,
                emailid: /^[A-Za-z0-9]([A-Za-z0-9-._%+']*)@[A-Za-z0-9-.]+\.[a-zA-Z]{2,30}$/,
                empty: /^\s*$/,
                hexcolourcode: /^([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,
                customdate: /^(0?[1-9]|1[012])\/(0?[1-9]|[12][0-9]|3[01])\/([0-9]{1,4})$/,
                time: /^(0?[1-9]|1[012])(:[0-5]\d)[APap][mM]$|^([01]?[0-9]|2[0-3]):[0-5]\d$/,
                escaperegexp: /[-[\]{}()*+?.,\\^$|#\s]/g,
                escapeReplacementString: /\$/g,
                removespaces: / /g,
                removehtmltag: /<([a-z0-9]+)(?:.*?)(?:>(?:([\s\S]*?)<\/\1>)?)/g,
                containerid: /[^a-zA-Z0-9-]/g,
                mail: /([a-z0-9]([a-z0-9_\-.+]*)@([a-z0-9_\-.]*)(\.[a-z]{2,30}(\.[a-z]{2}){0,2}))/,
                link: /(?:(href|src)=["']?)?((https?:\/\/(?:www\.)?|www\.)[a-z0-9][^@]*?)(?=[\s"'<]|$)/gi,
                markdown_image: /(^|\s)!\[(.+?)\]\(((?:https?:\/\/(?:www\.)?|www\.)[a-z0-9][^@ ]*?)\)(?=$|\s)/gi,
                markdown_link: /(^.*|\s|<br>)\[((?:(?!\]\(.+?\)).)+?)\]\(((https?:\/\/(?:www\.)?|www\.).*?)\)(?=$|\s|\.|\,|\n|<br>|<span)/gi,
                markdown_quote: /(?:^)!(.+?)(?:\n|$)/gm,
                markdown_heading: /(?:^)(\#{1,6}) (.*?\S *)(?:\n|$)/gm,
                markdown_line: /(^|[\n])(\*{3,}|\-{3,})(?=$|[\n])(.*)/g,
                markdown_codeblock: /(^|\s)`{3}((?:(?:.*?$)\n)?(?:[\s\S]*?))`{3}(?=$|\s)/g,
                markdown_code: /(^|\s)\`(.*?\S *)?\`(?=$|\s|[\.,\?:;\-}\]](?:$|\s))/g,
                markdown_bold: /(|^|\s|[{\[])\*(.*?\S *)?\*(?=$|\s|<br>|[\.,\?:;\-}\]](?:$|\s))/g,
                markdown_italic: /(^|\s|[{\[])\_(.*?\S *)?\_(?=$|\s|[\.,\?:;\-}\]](?:$|\s))/g,
                markdown_strike: /(^|\s|[{\[])\~(.*?\S *)?\~(?=$|\s|[\.,\?:;\-}\]](?:$|\s))/g,
                markdown_underscore: /(^|\s|[{[])__(.*?\S *)?__(?=$|\s|[.,?:;\-}\]](?:$|\s))/g,
                atmention: /{mention:(.+?):([0-9]):(.+?):mention}/g,
                atmention_v2: /{[\+|\-]?[@#](.*?)}/g,
                zcatmention: /{mention:(.*?):mention}/,
                atmention_for_transcript: /<div prop="mention"(.*?)>(.*?)<\/div><span prop="dname">(.*?)<\/span>/g,
                addmember: /{addchatmember:(.+?):([0-9]):(.+?):addchatmember}/g,
                addmember_for_transcript: /<div prop="addchatmember"(.*?)>(.*?)<\/div><span prop="dname">(.*?)<\/span>/g,
                deletemember: /{deletechatmember:(.+?):([0-9]):(.+?):deletechatmember}/g,
                deletemember_for_transcript: /<div prop="deletechatmember"(.*?)>(.*?)<\/div><span prop="dname">(.*?)<\/span>/g,
                text_doublequoted: /(^|\s|[{\[])\"(.*?\S *)?\"(?=$|\s|[\.,\?:;\-}\]](?:$|\s))/g,
                text_singlequoted: /(^|\s|[{\[])\'(.*?\S *)?\'(?=$|\s|[\.,\?:;\-}\]](?:$|\s))/g,
                addchatmember: /{addchatmember:(.*?):addchatmember}/g,
                deletechatmember: /{deletechatmember:(.*?):deletechatmember}/g,
                atmentiontemplate: /<div.*?prop="(mention|addchatmember|deletechatmember)"(.*?)>(.*?)<\/div><span prop="dname">(.*?)<\/span>/,
                imagemimetype: /^image\/.+$/,
                audiomimetype: /^audio\/.+$/,
                videomimetype: /^video\/.+$/,
                ipaddress: /^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$/,
                invalidfilenamechars: /[`~!\$%\^&\|\\\"<>\?\/]/g,
                chrome_useragent: /Chrome[\/\s]/g,
                domainurl: /((?:https?:\/\/)(?:www\.)?((?:[^\/]+)))(?:.*)/g,
                urllinks: /^(?:(ht|f)tp(s?)|(tel)|(sms)|(sips?)|(mailto))\:(\/\/)?[-.\w]*(\/?)([a-zA-Z0-9\-\.\?\,\:\;\'\*\/\\\(\)\+=&amp;%\$~#_@!]*)?$/g,
                textpattern: /^[0-9a-zA-Z_\-#\&\,\.';\$@\?\,\:\+\%\^\*\(\)\`\|\\\=\/\!\[\]~\{\}\u0080-\u9fff\s]+$/,
                linkRegExp: /(((http(s){0,1}:\/\/))([^ <\n\"]*))/,
                invalidlink: /((href|src)=["']((http(s){0,1}:\/\/)|(www\.))([^ <\n]*))/,
                WWWlinkRegExp: /([^(href|src|\/\/)"'=])?((www\.)([^ <\n\"]*))/,
                zcWWWlinkRegExp: /((www\.)[a-z0-9][^@]*?)(?=&quot;|&#x27;|&lt;|[\s"')<]|$)/,
                threeletterendinglink: /(^|\ )(([\w\d-]+\.)+(com|org|net|int|edu|gov|mil|biz|info))(?=( |$))/,
                twoletterendinglink: /(^|\ )(([\w\d\-]+\.)+((?!js|cp|do)[a-z]){2})(?=( |$))/,
                escaperegexpinid: /([:\.\[\],\!\"\#\$@%\&\'\(\)\*\+\/\;\?\^\`\{\}\|\~])/g,
                commandpattern: /^([a-zA-Z])*$/,
                functionname: /^([a-zA-Z])*$/,
                removespecialchars: /(\s+)?[-~!@%&[\]{}<>()*+?.,_\/\\^$|:;'`"#\s](\s+)?/g,
                imagesize: /^(stamp|thumb|medium|original)$/,
                horizontal_rule_tag: /<hr>/,
                markdown_blockquote_html: /<blockquote>(.*?)<\/blockquote>/,
                markdown_codeblock_html: /<pre>(.*?)<\/pre>/,
                channelpermalink: /^\/channel\/((ext:)?[a-zA-Z])*$/,
                formpermalink: /\/(extensions\/([0-9]+)\/)?forms\/([a-zA-Z0-9]+)\/view/,
                usersilentmention: /\[((?:(?!\]\(.+?\)).)+?)\](?:\(zohoid:([0-9]+?)\)|\(mail:([a-z0-9][a-z0-9_\-.+]*@[a-z0-9_\-.]*\.[a-z]{2,30}(?:\.[a-z]{2}){0,2})\))/g,
                phonenumber: /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\s\./0-9]*$/,
                pincode: /^([A-Z0-9\-\. ])+$/,
                zcatmention_v2: /{[\+|\-]?[@#](.*?)}/g,
                markdown_instantbutton: /\[(\+|\-)?((?:(?!\]\(.+?\)).)+?)\]\(\$(\d+)\)/g,
                messagelinkregex: /\/chats\/([a-zA-Z0-9\-_]+)\/messages\/([a-zA-Z0-9_%\-]+)/,
                channelspermalink: /\/channels\/([a-zA-Z0-9_%\-]+)/,
                chatspermalink: /\/chats\/([a-zA-Z0-9\-_]+)/,
                botspermalink: /\/bots\/([a-zA-Z0-9\-_]+)/,
                invalid_textpattern_chars: /[\"<>]/,
                customemoji: /:[a-zA-Z_\-0-9]*\$:|:[a-zA-Z_\-0-9]*!\$:/g,
                channelsuniquename: /\/channels\/([a-zA-Z0-9_%\-:]+)/,
                chatguestlink: /\/chats\/([a-zA-Z0-9\-_]+)\/guests\/([a-zA-Z0-9\-_]+)/
            },
            regexReplaceStr: {
                escapeReplacementString: "$$$",
                escaperegexp: "\\$&",
                escaperegexpinid: "\\$1",
                removespaces: "",
                trimBRtag: "",
                containerid: "",
                mail: "<a href='mailto:$1'>$1</a>"
            },
            check: function(e, t, s) {
                return s && t && (t = t.trim()), this.regexes[e].lastIndex = 0, this.regexes[e].test(t)
            },
            checkWithFlag: function(e, t, s, i) {
                return i && t && (t = t.trim()), this.regexes[e].lastIndex = 0, new RegExp(this.regexes[e].source, s).test(t)
            },
            match: function(e, t, s) {
                s = void 0 !== s ? s : "g";
                var i = new RegExp(this.regexes[e].source, s);
                return t.match(i)
            },
            replacer: function(e, t, s, i) {
                return void 0 === i && (i = this.regexReplaceStr[t]), s.replace(e, i)
            },
            replace: function(e, t, s) {
                return this.replacer(this.regexes[e], e, t, s)
            },
            replaceWithFlag: function(e, t, s, i) {
                var n = new RegExp(this.regexes[e].source, s);
                return this.replacer(n, e, t, i)
            },
            getRegexToGetAttrValueInHtmlTag: function(e, t) {
                var s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
                return new RegExp("(<(" + e + ")[^>]*?\\s" + t + "=(\"|'|\\\\\"|\\\\'))(\\S+)((\\3)([^>]*?(?:>(?:[^<]*?<\\/\\2>)?)))", s)
            },
            getRegexToAddAttrToHtmlTag: function(e) {
                return new RegExp("(<(" + e + "))([^>]*?(\\s\\S+=\\S+)?>(?:(?:[^<]*?)<\\/\\2>)?)")
            }
        },
        je = function() {
            function e() {
                a(this, e), this.tableToRowList = {}, this.tableArray = []
            }
            return r(e, [{
                key: "containsTable",
                value: function(e) {
                    for (var t = this.tableArray.length, s = 0; s < t; s++)
                        if (this.tableArray[s] == e) return !0;
                    return !1
                }
            }, {
                key: "getRowsForTable",
                value: function(e) {
                    return this.tableToRowList[e]
                }
            }, {
                key: "addNewTable",
                value: function(e) {
                    this.tableArray.push(e), this.tableToRowList[e] = []
                }
            }, {
                key: "addRowsForTable",
                value: function(e, t) {
                    this.containsTable(e) || this.addNewTable(e);
                    var s = this.tableToRowList[e];
                    return s[s.length] = this.createRow(t), !0
                }
            }, {
                key: "createRow",
                value: function(e) {
                    for (var t = {}, s = 0; s < e.length; s++) t[e[s][0]] = e[s][1];
                    return t
                }
            }]), e
        }(),
        ze = [];

    function Ge(e) {
        var t, s = e.type ? e.type : "GET",
            i = "boolean" != typeof e.async || e.async,
            n = e.callback,
            a = e.url;
        if (window.XMLHttpRequest ? t = new XMLHttpRequest : window.ActiveXObject && (t = new ActiveXObject("Microsoft.XMLHTTP")), t.opts = e.opts, t.onreadystatechange = n, t.open(s, a, i), t.setRequestHeader("Accept", "*/*"), e.usedefaultcontenttype || (e.reqheaders && e.reqheaders["Content-Type"] ? t.setRequestHeader("Content-Type", "application/json") : t.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8")), "function" == typeof getZAID && getZAID() && t.setRequestHeader("X-Client-ZAID", getZAID()), e.uploadlisteners)
            for (var o in e.uploadlisteners) t.upload.addEventListener(o, e.uploadlisteners[o]);
        if (e.withCredentials && (t.withCredentials = !0), e.reqheaders)
            for (var r in e.reqheaders) t.setRequestHeader(r, e.reqheaders[r]);
        t._debug = {
                timestamp: (new Date).getTime()
            },
            function(e) {
                ze.length >= 1e3 && ze.shift();
                ze.push(e)
            }(t),
            function(e, t) {
                lt(t) && (e._debug.isStallTrackingHandled = !1, e.upload.addEventListener("progress", (function(s) {
                    dt(e, t)
                })), ot.push(e))
            }(t, e.url), t.send(e.params)
    }

    function qe(e, t, s, i, n, a, o, r, l, d) {
        e && (t = "/" + e + "/" + t), Ge(l = {
            callback: nt,
            opts: {
                onsuccess: i,
                onfailure: n,
                callbackargs: a
            },
            url: t += s ? "?" + s + en(!0) : "?nocache=" + (new Date).getTime(),
            async: o,
            reqheaders: r,
            usedefaultcontenttype: l && l.usedefaultcontenttype || "",
            withCredentials: l && l.withCredentials,
            uploadlisteners: d
        })
    }

    function Ve(e, t, s, i, n, a, o, r, l, d) {
        e && (t = "/" + e + "/" + t), (r = r || {})["X-ZCSRF-TOKEN"] = Yi(), r && "application/json" === r["Content-Type"] ? s = JSON.stringify(s) : !s instanceof FormData && (s = s ? s + en(!0) : ""), Ge(l = {
            type: "POST",
            callback: nt,
            url: t,
            params: s,
            opts: {
                onsuccess: i,
                onfailure: n,
                callbackargs: a
            },
            async: o,
            reqheaders: r,
            usedefaultcontenttype: l && l.usedefaultcontenttype || "",
            uploadlisteners: d
        })
    }

    function Ye(e, t, s, i, n, a, o, r, l, d) {
        if (e && (t = "/" + e + "/" + t), r && "application/json" === r["Content-Type"]) s = JSON.stringify(s);
        else {
            var c = Yi();
            s = s ? s + "&" + c : c, s += en(!0)
        }
        Ge(l = {
            type: "PUT",
            callback: nt,
            url: t,
            params: s,
            opts: {
                onsuccess: i,
                onfailure: n,
                callbackargs: a
            },
            async: o,
            reqheaders: r,
            usedefaultcontenttype: l && l.usedefaultcontenttype || "",
            uploadlisteners: d
        })
    }

    function Ze(e, t, s, i, n, a, o, r, l, d) {
        if (e && (t = "/" + e + "/" + t), r && "application/json" === r["Content-Type"]) s = JSON.stringify(s);
        else {
            var c = Yi();
            s = s ? s + "&" + c : c, s += en(!0)
        }
        Ge(l = {
            type: "DELETE",
            callback: nt,
            url: t,
            params: s,
            opts: {
                onsuccess: i,
                onfailure: n,
                callbackargs: a
            },
            async: o,
            reqheaders: r,
            usedefaultcontenttype: l && l.usedefaultcontenttype || "",
            uploadlisteners: d
        })
    }

    function Ke(e, t, s, i, n, a, o) {
        Ve(oe.get("WMSCONT"), e, t, s, i, n, a, o)
    }

    function Xe(e, t, s, i, n, a, o) {
        if (void 0 !== WebMessanger && "function" == typeof WebMessanger.isRTCChat && WebMessanger.isRTCChat()) tt(e, t, s, i, n, a, o);
        else {
            if (void 0 !== WebMessanger && "function" == typeof WebMessanger.isNetworkUser && WebMessanger.isNetworkUser()) e = ("string" == typeof WebMessanger.network_info.url && "/" === WebMessanger.network_info.url[0] ? WebMessanger.network_info.url.slice(1) : WebMessanger.network_info.url) + "/" + e;
            qe(oe.get("CHATCONT"), e, t, s, i, n, a, o)
        }
    }

    function Je(e, t, s, i, n, a, o, r, l) {
        if (void 0 !== WebMessanger && "function" == typeof WebMessanger.isRTCChat && WebMessanger.isRTCChat()) it(e, t, s, i, n, a, o, r, l);
        else {
            if (void 0 !== WebMessanger && "function" == typeof WebMessanger.isNetworkUser && WebMessanger.isNetworkUser()) e = ("string" == typeof WebMessanger.network_info.url && "/" === WebMessanger.network_info.url[0] ? WebMessanger.network_info.url.slice(1) : WebMessanger.network_info.url) + "/" + e;
            Ve(oe.get("CHATCONT"), e, t, s, i, n, a, o, r, l)
        }
    }

    function Qe(e, t, s, i, n, a, o) {
        void 0 !== WebMessanger && "function" == typeof WebMessanger.isNetworkUser && WebMessanger.isNetworkUser() && (e = ("string" == typeof WebMessanger.network_info.url && "/" === WebMessanger.network_info.url[0] ? WebMessanger.network_info.url.slice(1) : WebMessanger.network_info.url) + "/" + e);
        Ye(oe.get("CHATCONT"), e, t, s, i, n, a, o)
    }

    function et(e, t, s, i, n, a, o) {
        if (void 0 !== WebMessanger && "function" == typeof WebMessanger.isRTCChat && WebMessanger.isRTCChat()) st(e, t, s, i, n, a, o);
        else {
            if (void 0 !== WebMessanger && "function" == typeof WebMessanger.isNetworkUser && WebMessanger.isNetworkUser()) e = ("string" == typeof WebMessanger.network_info.url && "/" === WebMessanger.network_info.url[0] ? WebMessanger.network_info.url.slice(1) : WebMessanger.network_info.url) + "/" + e;
            Ze(oe.get("CHATCONT"), e, t, s, i, n, a, o)
        }
    }

    function tt(e, t, s, i, n, a, o) {
        qe(oe.get("RTCCONT"), e, t, s, i, n, a, o)
    }

    function st(e, t, s, i, n, a, o) {
        Ze(oe.get("RTCCONT"), e, t, s, i, n, a, o)
    }

    function it(e, t, s, i, n, a, o, r, l) {
        Ve(oe.get("RTCCONT"), e, t, s, i, n, a, o, r, l)
    }

    function nt() {
        if (4 === this.readyState) {
            if (this._debug && this._debug.timestamp && (this._debug.timetaken = (new Date).getTime() - this._debug.timestamp), 200 === this.status || 204 === this.status) {
                var e = this.responseText;
                if ("" !== e) {
                    var t;
                    try {
                        t = JSON.parse(e)
                    } catch (s) {
                        try {
                            e = "[[" + (e = e.slice(0, -1)) + "]]", t = JSON.parse(e)
                        } catch (e) {
                            "function" == typeof this.opts.onsuccess && this.opts.onsuccess.call(this)
                        }
                    }
                    if (null == t) return;
                    var s = t.length,
                        i = 0;
                    if (s)
                        for (i = 0; i < s; i++) {
                            var n = t[i],
                                a = n.objString;
                            if (n.objType && "do" === n.objType && (a = at(n.objType, n.objString)), "function" == typeof this.opts.onsuccess) this.opts.onsuccess.call(this, a);
                            else if (oe.get("AjaxDispatcher")) {
                                oe.get("AjaxDispatcher")(n.module, n.objType, a)
                            }
                        } else "function" == typeof this.opts.onsuccess && this.opts.onsuccess.call(this, e)
                } else "function" == typeof this.opts.onsuccess && this.opts.onsuccess.call(this)
            } else {
                var o = "";
                if ("string" == typeof this.response && !$WC.Util.isEmpty(this.response)) try {
                    o = JSON.parse(this.response)
                } catch (e) {}
                o && $WC.SecurityManager.isSecurityError(o) && $WC.SecurityManager.handleError(o), "" != o ? "function" == typeof this.opts.onfailure && this.opts.onfailure.call(this, o) : "function" == typeof this.opts.onfailure && this.opts.onfailure.call(this)
            }
            if (lt(this.responseURL)) {
                var r = new URL(this.responseURL);
                dt(this, r = r.pathname)
            }
            ot = ot.filter(function(e) {
                return e.responseURL !== this.responseURL
            }.bind(this))
        }
    }

    function at(e, t) {
        if ("do" === e) {
            for (var s = new je, i = 0; i < t.length; i++)
                for (var n = t[i], a = n.tname, o = n.cols, r = n.rows, l = 0; l < r.length; l++) {
                    for (var d = r[l], c = [], u = 0; u < d.length; u++) c[u] = [o[u], d[u]];
                    s.addRowsForTable(a, c)
                }
            return s
        }
        return t
    }
    var ot = [],
        rt = ["attachsession.do", "sendofficechatmessage.do", "gettranscriptfromrsasjson.do", "webupload"];

    function lt(e) {
        if (WebMessanger.isGuestUser && WebMessanger.isGuestUser() || oe.get("disableStallTracking")) return !1;
        for (var t = e.split("?")[0], s = 0; s < rt.length; s++)
            if (-1 !== t.indexOf(rt[s])) return !0;
        return !1
    }

    function dt(e, t, s) {
        var i = e._debug.timetaken || (new Date).getTime() - e._debug.timestamp;
        !e._debug.isStallTrackingHandled && i > 3e3 && (e._debug.isStallTrackingHandled = !0, function(e) {
            var t = "v1/log?",
                s = "purpose=CLIENT_EVENTS_LOG&action=STALLING&data=" + encodeURIComponent(JSON.stringify(e));
            Je(t += s)
        }({
            request: t,
            timeConsumed: i,
            size: ot.length
        }))
    }
    var ct = Object.freeze({
            __proto__: null,
            _deleteRequest: Ze,
            _getRequest: qe,
            _makeRequest: Ge,
            _postRequest: Ve,
            _putRequest: Ye,
            callbackDispatcher: nt,
            deleteRequest: function(e, t, s, i, n, a, o) {
                Ze(oe.get("WMSCONT"), e, t, s, i, n, a, o)
            },
            deleteRequestToChat: et,
            deleteRequestToRTC: st,
            getAjaxDebugStore: function() {
                return ze
            },
            getObject: at,
            isStallTrackingNeeded: lt,
            logResponseTimeIfGreaterThan3Seconds: dt,
            postRequest: Ke,
            postRequestToChat: Je,
            postRequestToChatWithLocation: function(e, t, s, i, n, a, o) {
                if (void 0 !== WebMessanger && "function" == typeof WebMessanger.isNetworkUser && WebMessanger.isNetworkUser()) {
                    var r = "string" == typeof WebMessanger.network_info.url && "/" === WebMessanger.network_info.url[0] ? WebMessanger.network_info.url.slice(1) : WebMessanger.network_info.url;
                    e = r + "/" + e
                }
                var l = oe.get("LOCATION_INFO").PERMISSIONSTATE;
                if ("granted" === l) {
                    var d = function() {
                        var r = on(oe.get("LOCATION_INFO").CACHED.coords);
                        r.status = "granted", (o = o || {})["X-Geo-Location"] = JSON.stringify(r), Je(e, t, s, i, n, a, o)
                    };
                    if (void 0 !== oe.get("LOCATION_INFO").CACHED) d();
                    else {
                        void 0 !== oe.get("LOCATION_INFO").WATCH_ID && navigator.geolocation.clearWatch(oe.get("LOCATION_INFO").WATCH_ID);
                        oe.get("LOCATION_INFO").WATCH_ID = navigator.geolocation.watchPosition((function(e) {
                            var t = void 0 === oe.get("LOCATION_INFO").CACHED;
                            oe.get("LOCATION_INFO").CACHED = e, oe.get("LOCATION_INFO").PERMISSIONSTATE = "granted", t && d()
                        }), (function(r) {
                            var l;
                            1 === r.code ? (l = "denied", oe.get("LOCATION_INFO").PERMISSIONSTATE = l) : l = "failure", void 0 === oe.get("LOCATION_INFO").CACHED && ((o = o || {})["X-Geo-Location"] = JSON.stringify({
                                status: l
                            }), Je(e, t, s, i, n, a, o)), delete oe.get("LOCATION_INFO").CACHED
                        }))
                    }
                } else(o = o || {})["X-Geo-Location"] = JSON.stringify({
                    status: l
                }), Je(e, t, s, i, n, a, o)
            },
            postRequestToRTC: it,
            putRequest: function(e, t, s, i, n, a, o) {
                Ye(oe.get("WMSCONT"), e, t, s, i, n, a, o)
            },
            putRequestToChat: Qe,
            request: function(e, t, s, i, n, a, o) {
                qe(oe.get("WMSCONT"), e, t, s, i, n, a, o)
            },
            requestToChat: Xe,
            requestToRTC: tt
        }),
        ut = {
            CHATCFPARAMNAME: "zchat_csrparam",
            WMSCFPARAMNAME: "wms_csrparam",
            CHATCFCOOKIENAME: "CT_CSRF_TOKEN",
            WMSCFCOOKIENAME: "WMS_CSRF_TOKEN",
            WMSCONT: "_wms",
            WMSCHATURL: window.location.protocol + "//cliq.zoho.com/",
            REQSTATUS: {
                LOADING: 1,
                SUCCESS: 2,
                FAILED: 3,
                NORESULTS: 4,
                INITIALSTATE: 5
            },
            KEYCODES: {
                BACKSPACE: 8,
                TAB: 9,
                LEFT: 37,
                UP: 38,
                RIGHT: 39,
                DOWN: 40,
                ESCAPE: 27,
                ENTER: 13,
                SPACE: 32
            },
            TRIGGERS: {
                ADDMEM: "+",
                DELMEM: "-",
                ATMENTION: "@",
                SMILEY: ":",
                SLASH: "/"
            },
            CONTACTSTATUS: {
                UNAPRD: -1,
                REJECT: -2,
                REQACC: -3,
                DELETE: -4,
                REMOVE: -5,
                NOCHAT: -6,
                ACCEPT: 10
            },
            USERPERMISSIONS: {
                ADD_MEMBER: 6,
                REMOVE_MEMBER: 7,
                SEND_MESSAGE: 8,
                MENTION_USERS: 9,
                STICKY_MESSAGE: 20,
                LEAVE_ALLOWED: 11,
                THREAD_REPLY: 22,
                CLOSE_THREAD: 24
            },
            USERROLES: {
                SUPER_ADMIN: 0,
                ADMIN: 1,
                CREATOR: 2,
                MODERATOR: 3,
                PARTICIPANT: 4,
                ALLOWED_USER: 5,
                NONE: -1,
                BOT: 6
            },
            BOTCONFIG: {
                LISTENMSG: "LISTEN_MESSAGE",
                SENDMSG: "SEND_MESSAGE"
            },
            CHANNELS: {
                ORG: "1",
                TEAM: "2",
                PRIVATE: "3",
                SHARED: "4"
            },
            TEMPUSERSTATUS: {
                OFFLINE: "5",
                ORGCONTACT: "6"
            },
            CHATTYPES: {
                CHANNEL: 1,
                DEFAULT_BOT: "B1",
                CUSTOM_BOT: "B2",
                THREAD: 2
            },
            HYBRIDSEARCH: {
                CHANNEL: 1,
                CHAT: 2,
                CONTACT: 3,
                DEFAULTRESULT: 4,
                EMPTY: 5,
                FREQCONTACTS: 6,
                GENERICLIST: 7,
                GROUP: 8,
                MESSAGEHINT: 9,
                ORGCONTACT: 10,
                TITLEHINT: 11,
                USERLIST: 12,
                EMPTYUSERHINT: 13,
                EMPTYTITLEHINT: 14,
                EMPTYMSGHINT: 15,
                ADDCONTACT: 16,
                USER_CHANNELLIST: 17,
                CHANNELLIST: 18,
                BOT: 19,
                CUSTOMCONTACTLIST: 20,
                JOINEDCHANNEL: 21,
                THREAD: 22,
                modules: {
                    CONTACTMENU: 1,
                    GROUPMENU: 2,
                    CHATMENU: 3,
                    SMARTCHAT: 4,
                    FILEFWD: 5,
                    CUSTOMCONTACTMENU: 6
                }
            },
            CTYPES: {
                CHAT: "1",
                CUSTOMCHAT: "5",
                CHANNEL: "8",
                BOT: "9",
                CHATLET: "10",
                THREAD: "11"
            }
        },
        mt = {},
        ht = {
            result: [],
            noresult: []
        },
        gt = !1,
        pt = !1;

    function ft(e) {
        return e ? mt[e] : mt
    }

    function vt(e, t) {
        e ? mt[e] = t : mt = t
    }

    function Ct(e) {
        var t = {};
        if (this.opts.callbackargs && this.opts.callbackargs.new_request || !1) {
            e = "string" == typeof e ? JSON.parse(e).data : [];
            for (var s = 0; s < e.length; s++) un(e[s].zuid) || (t = {
                USERID: e[s].zuid,
                DNAME: e[s].display_name,
                EMAILID: e[s].email_id,
                UC: e[s].usage_count || 0
            }, oe.get("presence_keys") && e[s].presence && (t.STATUS = e[s].presence.scode, t.STYPE = e[s].presence.st, t.STATUSMSG = e[s].presence.smsg), vt(e[s].zuid, t))
        } else
            for (var i in e) un(i) || vt(i, t = {
                USERID: i,
                DNAME: e[i][0],
                EMAILID: e[i][1],
                UC: e[i][3]
            });
        if (this.opts.callbackargs && this.opts.callbackargs.params) {
            var n = this.opts.callbackargs.params.split("&").filter((function(e) {
                    if (-1 != e.indexOf("search=")) return !0
                }))[0].split("="),
                a = decodeURIComponent(n[1]);
            this.opts.callbackargs.searchtext = a, a && (e = $WC.HybridSearch.filter("display_name", a, e, null, null, "email_id")), e.length || !Gi(e) ? ht.result.push(this.opts.callbackargs.params) : ht.noresult.push(this.opts.callbackargs.params)
        }
        var o = this.opts.callbackargs && this.opts.callbackargs.reqid,
            r = this.opts.callbackargs && this.opts.callbackargs.topicname;
        "suggestionui" === r && (gt = !0, pt = !0), r ? an.publish("/orgcontacts/" + r, {
            callbackargs: this.opts.callbackargs,
            stat: e.length || !Gi(e) ? "" : ut.REQSTATUS.NORESULTS
        }) : an.publish("/orgcontacts/updateui", {
            callbackargs: this.opts.callbackargs,
            reqid: o
        })
    }

    function bt() {
        var e = "updateui",
            t = this.opts.callbackargs && this.opts.callbackargs.reqid,
            s = this.opts.callbackargs && this.opts.callbackargs.chid;
        this.opts.callbackargs && this.opts.callbackargs.topicname && (e = this.opts.callbackargs.topicname);
        var i = this.opts && this.opts.callbackargs;
        an.publish("/orgcontacts/" + e, {
            stat: ut.REQSTATUS.FAILED,
            chid: s,
            reqid: t,
            callbackargs: i
        })
    }

    function yt(e) {
        var t = "search=" + encodeURIComponent(e);
        return oe.get("isCliqUser")() && (t += oe.get("presence_keys") ? "&fields=all,presence" : "&fields=all"), t
    }

    function _t(e, t) {
        Wt({
            searchtext: e,
            topicname: "getapi"
        });
        var s = an.subscribe("/orgcontacts/getapi", (function() {
            t(), an.unsubscribe(s)
        }))
    }

    function Wt(e, t) {
        var s = void 0 !== WebMessanger && WebMessanger.isNetworkUser();
        if ((oe.get("isOrgUser")() || s) && !$WC.Config.get("iscontacts_listing_disabled")) {
            var i = e.chid,
                n = e.searchtext,
                a = yt(n),
                o = e.silentload;
            e.inpresultset;
            var r = e.topicname;
            e.reqid = t, !1 === St(n) ? oe.get("isCliqUser")() || s ? Xe("v2/users", a, Ct, bt, {
                reqid: t,
                params: a,
                topicname: r,
                chid: i,
                silentload: o,
                new_request: !0
            }) : Xe("getorgusers.do", a, Ct, bt, {
                reqid: t,
                params: a,
                topicname: r,
                chid: i,
                silentload: o,
                new_request: !1
            }) : r ? an.publish("/orgcontacts/" + r, {
                reqid: t,
                callbackargs: e
            }) : an.publish("/orgcontacts/updateui", {
                reqid: t,
                callbackargs: e
            })
        }
    }

    function St(e) {
        for (var t = e && e.searchtext || e, s = yt(t), i = 0; i < ht.result.length; i++) {
            if (-1 !== ht.result[i].indexOf(s)) return !0
        }
        return wt(t)
    }

    function wt(e) {
        for (var t = yt(e), s = 0; s < ht.noresult.length; s++) {
            var i = ht.noresult[s];
            if (t.startsWith(i)) return !0
        }
        return !1
    }

    function Mt(e, t) {
        void 0 !== ft(e) && (ft(e).DNAME = t)
    }
    var It = Object.freeze({
            __proto__: null,
            _constructParams: yt,
            checkAndUpdateContactsList: function() {
                0 == nn(mt) && 0 == pt && Wt({
                    searchtext: "",
                    topicname: "suggestionui"
                }, "")
            },
            fetchFromServer: Wt,
            getContacts: _t,
            getLastAvailableTime: function(e) {
                return e && mt[e] && mt[e].LASTAVAILABLETIME ? mt[e].LASTAVAILABLETIME : 0
            },
            getOrgContactsList: ft,
            handleFailure: bt,
            isCachedRequest: St,
            isEmptyResultReq: wt,
            isSuggestionsRequested: function() {
                return gt
            },
            setLastAvailableTime: function(e, t) {
                e && mt[e] && (mt[e].LASTAVAILABLETIME = t)
            },
            setOrgContactsList: vt,
            updateDisplayName: Mt,
            updateList: Ct
        }),
        Tt = function() {
            function e(t) {
                a(this, e);
                try {
                    "session" === t && sessionStorage ? this.storage = sessionStorage : "local" === t && localStorage && (this.storage = localStorage)
                } catch (e) {
                    this.storage = new At
                }
            }
            return r(e, [{
                key: "setItem",
                value: function(e, t) {
                    try {
                        return this.storage.setItem(e, JSON.stringify(t))
                    } catch (e) {
                        setTimeout((function() {
                            throw e
                        }), 1)
                    }
                }
            }, {
                key: "removeItem",
                value: function(e) {
                    return this.storage.removeItem(e)
                }
            }, {
                key: "getItem",
                value: function(e) {
                    var t = this.storage.getItem(e);
                    return t = "" != t ? t : null, JSON.parse(t)
                }
            }, {
                key: "setChatInfo",
                value: function(e) {
                    var t = "" + e.chid,
                        s = this.getItem("wms_openchats"),
                        i = !1;
                    if (null === s) this.setItem("wms_openchats", [e]);
                    else {
                        for (var n = 0; n < s.length; n++)
                            if (s[n].chid === t) {
                                for (var a in e) s[n][a] = e[a];
                                i = !0
                            }!1 === i && s.push(e), this.setItem("wms_openchats", s)
                    }
                }
            }, {
                key: "getChatInfo",
                value: function(e, t) {
                    e = "" + e;
                    var s = this.getItem("wms_openchats");
                    if (null === s) return null;
                    for (var i = 0; i < s.length; i++)
                        if (s[i].chid === e && s[i][t]) return s[i][t];
                    return null
                }
            }, {
                key: "removeChatState",
                value: function(e) {
                    e = "" + e;
                    for (var t = this.getItem("wms_openchats"), s = 0; s < t.length; s++)
                        if (t[s].chid === e) {
                            t.splice(s, 1);
                            break
                        }
                    0 === t.length ? this.removeItem("wms_openchats") : this.setItem("wms_openchats", t)
                }
            }]), e
        }(),
        At = function() {
            function e() {
                a(this, e), this.items = {}
            }
            return r(e, [{
                key: "getItem",
                value: function(e) {
                    return this.items[e] ? this.items[e] : ""
                }
            }, {
                key: "setItem",
                value: function(e, t) {
                    this.items[e] = t
                }
            }, {
                key: "removeItem",
                value: function(e) {
                    delete this.items[e]
                }
            }]), e
        }(),
        Et = new Tt("session"),
        Ut = new Tt("local");
    var kt = {
            overlay: "mcf1ee8b17_overlay",
            container: "mcf1ee8b17_container",
            wms_dialog_container: "mcf1ee8b17_wms_dialog_container",
            close: "mcf1ee8b17_close",
            header: "mcf1ee8b17_header",
            wms_dialog_header: "mcf1ee8b17_wms_dialog_header",
            heading: "mcf1ee8b17_heading",
            footer: "mcf1ee8b17_footer",
            wms_dialog_footer: "mcf1ee8b17_wms_dialog_footer",
            button: "mcf1ee8b17_button",
            aligncenter: "mcf1ee8b17_aligncenter",
            alignend: "mcf1ee8b17_alignend",
            destructive_button: "mcf1ee8b17_destructive_button",
            confirmation_button: "mcf1ee8b17_confirmation_button",
            confirmation_button_small: "mcf1ee8b17_confirmation_button_small",
            cancel_button: "mcf1ee8b17_cancel_button",
            wms_dialogtext: "mcf1ee8b17_wms_dialogtext",
            wms_dialog_imginner: "mcf1ee8b17_wms_dialog_imginner",
            wms_dialog_img: "mcf1ee8b17_wms_dialog_img",
            wms_dialog_txtcont: "mcf1ee8b17_wms_dialog_txtcont",
            wms_dialog_contentwrapper: "mcf1ee8b17_wms_dialog_contentwrapper",
            wms_dialog_txttitle: "mcf1ee8b17_wms_dialog_txttitle",
            wms_dialog_content: "mcf1ee8b17_wms_dialog_content",
            buttonwrapper: "mcf1ee8b17_buttonwrapper",
            showmandatoryerror: "mcf1ee8b17_showmandatoryerror",
            inputcontentwrapper: "mcf1ee8b17_inputcontentwrapper",
            zmNightMode: "zmNightMode"
        },
        Nt = function() {
            function e(t, s, i) {
                a(this, e), this.node = t, this.dragStart = this.dragStart.bind(this), this.dragOver = this.dragOver.bind(this), this.dragEnd = this.dragEnd.bind(this), this.dragStartCallBack = s, this.dragEndCallBack = i, this.node.onmousedown = this.dragStart, this.node.onmouseup = this.dragEnd;
                var n = this.node.querySelector("[data-header]");
                n && (n.onmousedown = this.dragStart, n.onmouseup = this.dragEnd, this.node.onmousedown = null, this.node.onmouseup = null)
            }
            return r(e, [{
                key: "dragStart",
                value: function(e) {
                    this.mouse_xposition = this.node.getBoundingClientRect().width - (e.clientX - this.node.getBoundingClientRect().x), this.mouse_yposition = this.node.getBoundingClientRect().height - (e.clientY - this.node.getBoundingClientRect().y), document.addEventListener("mousemove", this.dragOver), this.dragStartCallBack && this.dragStartCallBack()
                }
            }, {
                key: "dragOver",
                value: function(e) {
                    var t = 0,
                        s = 0;
                    this.node.setAttribute("data-drag", "true"), t = document.documentElement.clientWidth - (e.clientX + this.mouse_xposition), (s = document.documentElement.clientHeight - (e.clientY + this.mouse_yposition)) < 0 && (s = 0), s + this.node.offsetHeight > document.documentElement.clientHeight && (s = document.documentElement.clientHeight - this.node.offsetHeight), t + this.node.offsetWidth > document.documentElement.clientWidth && (t = document.documentElement.clientWidth - this.node.offsetWidth), t < 0 && (t = 0), this.node.style.right = t + "px", this.node.style.bottom = s + "px"
                }
            }, {
                key: "dragEnd",
                value: function(e) {
                    this.dragEndCallBack && this.dragEndCallBack(), document.removeEventListener("mousemove", this.dragOver), e.preventDefault(), e.stopPropagation()
                }
            }]), e
        }(),
        xt = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).destroy = i.destroy.bind(h(i)), i.setContainerNode = i.setContainerNode.bind(h(i)), i.container = null, i.setDialogNode = i.setDialogNode.bind(h(i)), i.dialog = null, i.escapeListener = function(t) {
                    var s = document.querySelectorAll("." + kt.overlay);
                    s[s.length - 1] === this.container && (27 === t.keyCode && (this.props.callbackOnClose && this.props.callbackOnClose(), this.destroy(), t.stopImmediatePropagation(), t.stopPropagation()), "function" == typeof e.keydownListener && e.keydownListener(t))
                }.bind(h(i)), document.addEventListener("keydown", i.escapeListener, !1), i
            }
            return r(s, [{
                key: "destroy",
                value: function() {
                    this.props.nodeToBeFocusedOnClose && this.props.nodeToBeFocusedOnClose.focus(), document.removeEventListener("keydown", this.escapeListener, !1), this.movable = null
                }
            }, {
                key: "setContainerNode",
                value: function(e) {
                    this.container = e
                }
            }, {
                key: "setDialogNode",
                value: function(e) {
                    this.dialog = e
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    this.props.ignoreFocusOnMount || this.container.focus(), this.movable = new Nt(this.dialog, null, function() {
                        "function" == typeof this.props.onDialogDragEnd && this.props.onDialogDragEnd()
                    }.bind(this))
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    this.destroy()
                }
            }, {
                key: "render",
                value: function(e, t) {
                    if (null === t.dialogcontent) return null;
                    var s = e.customDialogStyles && e.customDialogStyles.customContainerStyle ? e.customDialogStyles.customContainerStyle : kt.container,
                        i = e.customDialogStyles ? e.customDialogStyles.customHeaderStyle : kt.header,
                        n = e.customDialogStyles && e.customDialogStyles.customButtonStyle ? e.customDialogStyles.customButtonStyle : kt.close,
                        a = e.customDialogStyles ? e.customDialogStyles.customWrapperStyle : "",
                        o = e.customDialogStyles && e.customDialogStyles.customFooterStyle ? e.customDialogStyles.customFooterStyle : kt.footer,
                        r = e.customDialogStyles && e.customDialogStyles.customButtonWrapperStyle ? e.customDialogStyles.customButtonWrapperStyle : "",
                        l = N("div", {
                            "data-dialogwrapper": "true",
                            class: a
                        }, e.children),
                        d = e.actions && e.actions.map((function(e, t) {
                            e.buttonstyle = kt[e.buttonstyle] ? kt[e.buttonstyle] : e.buttonstyle;
                            var s = e.buttonstyle ? e.buttonstyle : kt.aligncenter;
                            return N(se, {
                                key: t,
                                type: "button",
                                content: e.text,
                                classname: s,
                                onclick: e.onclick,
                                onkeydown: e.onclick
                            })
                        }));
                    r && (d = N("div", {
                        class: r
                    }, d));
                    var c = kt.overlay,
                        u = e.customDialogStyles && e.customDialogStyles.customoverlaystyle || "";
                    return void 0 !== WebMessanger && (WebMessanger.isDarkModeEnabled && (c += " zmNightMode"), "function" == typeof WebMessanger.isDNDBackupIconEnabled && WebMessanger.isDNDBackupIconEnabled() && (c += " wms_dnd_backup_icon")), N("div", {
                        tabindex: "0",
                        ref: this.setContainerNode,
                        class: c + " " + u,
                        style: {
                            zIndex: oe.get("zindex")
                        }
                    }, N("div", {
                        class: s,
                        ref: this.setDialogNode
                    }, N("div", {
                        class: i,
                        "data-header": !0
                    }, e.heading, N(se, {
                        onclick: this.props.callbackOnClose,
                        type: "icon",
                        content: "e634",
                        classname: n
                    })), this.props.headerinfosuffix, l, N("div", {
                        class: o
                    }, e.footerinfoprefix, d, e.footerinfosuffix)))
                }
            }]), s
        }(R);
    var Ot = function() {
        function e(t) {
            a(this, e), this.module = t.type, this.id = t.id, this.ownerid = t.ownerid, this.name = t.name, this.photo_id = t.photo_id || t.store_app_photoid, t.store_appid && (this.store_appid = t.store_appid, this.store_appname = t.store_appname)
        }
        return r(e, [{
            key: "getModule",
            value: function() {
                return this.module
            }
        }, {
            key: "getID",
            value: function() {
                return this.ownerid
            }
        }, {
            key: "getObject",
            value: function() {
                switch (this.module) {
                    case "command":
                        return Commands.getObject(this.id)
                }
            }
        }, {
            key: "getName",
            value: function() {
                var e = this.getObject(),
                    t = this.name;
                return void 0 !== e && (t = e.name), "command" !== this.module || t.startsWith("/") || (t = "/" + t), t
            }
        }, {
            key: "getImageURL",
            value: function() {
                switch (this.module) {
                    case "command":
                        return Commands.getImgUrl(this.id, this.photo_id);
                    case "bot":
                        return Ws(this.id, this.photo_id);
                    case "application":
                    case "messageaction":
                        return oe.get("isUDSDownloadEnabled")() ? _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + this.photo_id + "&x-cli-msg=" + encodeURIComponent('{"x-cliq-resource-module":"photos","type":"appimg"}') : _WMSCHATURL + "appimg/" + this.photo_id + "/photo.do"
                }
            }
        }, {
            key: "getCreatorName",
            value: function() {
                var e = this.getObject();
                if (void 0 !== e) return Ji(e.creator, e.creator_name)
            }
        }, {
            key: "getStoreAppId",
            value: function() {
                var e = this.getObject();
                return e && e.appid ? e.appid : this.store_appid
            }
        }, {
            key: "getStoreAppName",
            value: function() {
                var e = this.getObject();
                return e && e.appdetails ? e.appdetails.name : this.store_appname
            }
        }]), e
    }();

    function Rt(e) {
        var t = [];
        return e = qt(e = es(e = $t(e = Dt(e = Gt(e = "" + e, t)))), t), e = Be.replace("markdown_codeblock", e, zt)
    }

    function Dt(e) {
        return e = Be.replace("markdown_image", e, Ht), e = Be.replace("markdown_quote", e, Ft), e = Be.replace("markdown_link", e, Pt), e = Be.replace("markdown_heading", e, Bt), e = Be.replace("markdown_code", e, Yt)
    }

    function $t(e) {
        return e = Be.replace("markdown_bold", e, Zt), e = Be.replace("markdown_italic", e, Kt), e = Be.replace("markdown_strike", e, Xt), e = Be.replace("markdown_underscore", e, Jt), e = Be.replace("markdown_line", e, jt), e = Be.replace("markdown_link", e, Pt)
    }

    function Ht(e, t, s, i, n) {
        return t + '<img src="' + ("www." === n ? "http://" + i : i) + '" alt="' + Qt(s) + '" />'
    }

    function Lt(e) {
        var t = Object.keys(e["btnindexvsdetails.msg"]);
        return function(e, s, i, n) {
            return t.indexOf(n) > -1 ? '<a zc-quickbutton="' + (void 0 !== s ? s : "") + '" btnindex="' + n + '">' + i + "</a>" : e
        }
    }

    function Pt(e, t, s, i, n) {
        var a = "www." === n ? "http://" + i : i;
        return $t(t) + '<a markdown="linkhtml" href="' + a + '" target="_blank">' + Qt(s) + "</a>"
    }

    function Ft(e, t) {
        return 0 === (t = t.trim()).length ? e : "<blockquote>" + $t(t) + "</blockquote>"
    }

    function Bt(e, t, s) {
        var i = t.length;
        return "<h" + i + ">" + Qt(s) + "</h" + i + ">"
    }

    function jt(e, t, s, i) {
        return "<hr>" + $t(i)
    }

    function zt(e, t, s) {
        return 0 === (s = s.trim()).length ? e : t + "<pre>" + Qt(s) + "</pre>"
    }

    function Gt(e, t, s) {
        var i = new RegExp(/(^|\s)(`{3}((?:(?:.*?$)\n)?(?:[\s\S]*?))`{3})(?=$|\s)/, "g");
        return s && (i = new RegExp(/(^|\s)(<pre>((?:(?:.*?$)\n)?(?:[\s\S]*?))<\/pre>)(?=$|\s)/, "g")), e = e.replace(i, (function(e, s, i) {
            return 0 === (i = i.trim()).length ? e : (t.push(i), s + "<CODEBLOCK>")
        }))
    }

    function qt(e, t) {
        for (var s = 0; s < t.length; s++) e = e.replace(/<CODEBLOCK>/, t[s]);
        return e
    }

    function Vt(e) {
        return Be.replace("markdown_instantbutton", e, (function(e, t, s) {
            return s
        }))
    }

    function Yt(e, t, s) {
        return !s || !s.match(/[^_*`~]/) || "`" === s[0] || "`" === s[s.length - 1] || " " === s[0] && " " === s[s.length - 1] ? e : t + "<code>" + Qt(s) + "</code>"
    }

    function Zt(e, t, s) {
        return !s || !s.match(/[^_*`~]/) || "*" === s[0] || "*" === s[s.length - 1] || " " === s[0] && " " === s[s.length - 1] ? e : t + "<strong>" + $t(s) + "</strong>"
    }

    function Kt(e, t, s) {
        return !s || !s.match(/[^_*`~]/) || "_" === s[0] || "_" === s[s.length - 1] || " " === s[0] && " " === s[s.length - 1] ? e : t + "<i>" + $t(s) + "</i>"
    }

    function Xt(e, t, s) {
        return !s || !s.match(/[^_*`~]/) || "~" === s[0] || "~" === s[s.length - 1] || " " === s[0] && " " === s[s.length - 1] ? e : t + "<strike>" + $t(s) + "</strike>"
    }

    function Jt(e, t, s) {
        return !s || !s.match(/[^_*`~]/) || "__" === s[0] || "__" === s[s.length - 1] || " " === s[0] && " " === s[s.length - 1] ? e : t + "<u>" + $t(s) + "</u>"
    }

    function Qt(e) {
        return e.replace(/\*/g, "&ast;").replace(/\_/g, "&#95;").replace(/\~/g, "&#126;")
    }

    function es(e) {
        return e.replace(/&ast;/g, "*").replace(/&#95;/g, "_").replace(/&#126;/g, "~")
    }
    var ts = Object.freeze({
        __proto__: null,
        apply: Rt,
        applyOnce: Dt,
        applyRecursive: $t,
        decodeChars: es,
        encodeChars: Qt,
        getBoldHTML: Zt,
        getCodeHTML: Yt,
        getCodeblockHTML: zt,
        getHeadingHTML: Bt,
        getImageHTML: Ht,
        getInstantButtonHTML: Lt,
        getItalicHTML: Kt,
        getLineHTML: jt,
        getLinkHTML: Pt,
        getQuoteHTML: Ft,
        getStrikeHTML: Xt,
        getUnderscoreHTML: Jt,
        putDummyCodeBlock: Gt,
        replaceDummyCodeBlock: qt,
        replaceInstantButton: function(e, t) {
            return t && t["btnindexvsdetails.msg"] && (e = Be.replace("markdown_instantbutton", e, Lt(t))), e
        },
        replaceInstantButtonWithLabel: Vt
    });
    var ss = {
            description: "mc772a21ad_description",
            item: "mc772a21ad_item",
            detailsicon: "mc772a21ad_detailsicon",
            embedimg: "mc772a21ad_embedimg",
            delugeicon: "mc772a21ad_delugeicon",
            slideup: "mc772a21ad_slideup",
            slidedown: "mc772a21ad_slidedown",
            consentlist: "mc772a21ad_consentlist",
            dashedbox: "mc772a21ad_dashedbox",
            detailsfield: "mc772a21ad_detailsfield",
            botdialog_title: "mc772a21ad_botdialog_title",
            relative_container: "mc772a21ad_relative_container",
            consent_view_link: "mc772a21ad_consent_view_link",
            consent_hide_link: "mc772a21ad_consent_hide_link",
            consent_name: "mc772a21ad_consent_name",
            consent_desc: "mc772a21ad_consent_desc",
            remember_note: "mc772a21ad_remember_note",
            consent_headerimg: "mc772a21ad_consent_headerimg",
            consent_headertitle: "mc772a21ad_consent_headertitle",
            consent_header: "mc772a21ad_consent_header",
            consent_content: "mc772a21ad_consent_content",
            bullets: "mc772a21ad_bullets",
            extensionwrapper: "mc772a21ad_extensionwrapper",
            allowextn_text: "mc772a21ad_allowextn_text",
            customcheckbox: "mc772a21ad_customcheckbox",
            customcheckboxsel: "mc772a21ad_customcheckboxsel",
            extension_consents: "mc772a21ad_extension_consents",
            extn_container: "mc772a21ad_extn_container",
            consents_container: "mc772a21ad_consents_container",
            consentscontainer: "mc772a21ad_consentscontainer",
            loading: "mc772a21ad_loading",
            loadingicon: "mc772a21ad_loadingicon",
            grantedconsents: "mc772a21ad_grantedconsents",
            scopeheader: "mc772a21ad_scopeheader",
            scopepermissions: "mc772a21ad_scopepermissions",
            scopeinfo_wrapper: "mc772a21ad_scopeinfo_wrapper",
            scopeinfo: "mc772a21ad_scopeinfo",
            scopeinfoheader: "mc772a21ad_scopeinfoheader",
            scopeinfocontent: "mc772a21ad_scopeinfocontent",
            authenticationContainer: "mc772a21ad_authenticationContainer",
            header_wrapper: "mc772a21ad_header_wrapper",
            zmNightMode: "zmNightMode"
        },
        is = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).toggleConsentsVerboseDetails = i.toggleConsentsVerboseDetails.bind(h(i)), i.setConsentsVerboseDetailsNode = i.setConsentsVerboseDetailsNode.bind(h(i)), i.setConsentsDetailsNode = i.setConsentsDetailsNode.bind(h(i)), i.consentsVerboseDetails = i.consentsVerboseDetails.bind(h(i)), i.consentsComponentDetails = i.consentsComponentDetails.bind(h(i)), i.consentsVerboseDetailsNode = null, i.consentsDetailsNode = null, i.state = {
                    expanded_view: !1
                }, i
            }
            return r(s, [{
                key: "setConsentsVerboseDetailsNode",
                value: function(e) {
                    this.consentsVerboseDetailsNode = e
                }
            }, {
                key: "setConsentsDetailsNode",
                value: function(e) {
                    this.consentsDetailsNode = e
                }
            }, {
                key: "toggleConsentsVerboseDetails",
                value: function() {
                    this.state.expanded_view ? this.setState({
                        expanded_view: !1
                    }) : this.setState({
                        expanded_view: !0
                    })
                }
            }, {
                key: "componentDidUpdate",
                value: function() {
                    var e = this.consentsVerboseDetailsNode;
                    if (this.state.expanded_view) {
                        e.style = "", e.style.display = "block";
                        var t = this.consentsDetailsNode,
                            s = e.getBoundingClientRect().height;
                        gn(e, "height", 0, s, (function() {
                            setTimeout((function() {
                                yn(t, {
                                    block: "start",
                                    behavior: "smooth"
                                })
                            }), 100)
                        }))
                    } else {
                        var i = e.getBoundingClientRect().height;
                        gn(e, "height", i, 0)
                    }
                }
            }, {
                key: "consentsVerboseDetails",
                value: function(e) {
                    for (var t = [], s = 0; s < e.length; s++) {
                        var i = ns(e[s].text);
                        t.push(N("div", {
                            class: ss.description
                        }, N("span", {
                            class: ss.bullets,
                            dangerouslySetInnerHTML: {
                                __html: i
                            }
                        }), this.consentsComponentDetails(e[s].components)))
                    }
                    return t
                }
            }, {
                key: "consentsComponentDetails",
                value: function(e) {
                    var t = [];
                    if (!dn(e))
                        for (var s = 0; s < e.length; s++) t.push(N("span", {
                            class: ss.bullets
                        }, e[s]));
                    return t
                }
            }, {
                key: "render",
                value: function() {
                    var e = this.props.classname,
                        t = this.props.consentsInfo.details,
                        s = ns(this.props.consentsInfo.title),
                        i = ns(this.props.consentsInfo.description),
                        n = this.state.expanded_view ? ss.slideup : ss.slidedown;
                    return N("div", {
                        onclick: this.toggleConsentsVerboseDetails.bind(this),
                        ref: this.setConsentsDetailsNode,
                        class: ss.item
                    }, N("span", {
                        class: e
                    }), N("div", {
                        class: ss.consent_content
                    }, N("div", {
                        class: ss.consent_name,
                        dangerouslySetInnerHTML: {
                            __html: s
                        }
                    }), N("div", {
                        class: ss.consent_desc,
                        dangerouslySetInnerHTML: {
                            __html: i
                        }
                    }), N("div", {
                        ref: this.setConsentsVerboseDetailsNode,
                        class: ss.consentlist
                    }, N("div", {
                        class: ss.dashedbox
                    }, this.consentsVerboseDetails(t)))), N("span", {
                        class: n
                    }))
                }
            }]), s
        }(R);

    function ns(e) {
        return Qi(Rt(Zi(e)))
    }
    var as = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).extensionConsentsNode = null, i.grantedConsentsNode = null, i.allowExtensionNode = null, i.toggleExtensionConsents = i.toggleExtensionConsents.bind(h(i)), i.setExtensionConsentsNode = i.setExtensionConsentsNode.bind(h(i)), i.setGrantedConsentsNode = i.setGrantedConsentsNode.bind(h(i)), i.setAllowExtensionNode = i.setAllowExtensionNode.bind(h(i)), i.integrationsdata = new Ot(e.response.message_source || e.response.data.extension), i.state = {
                    allow_extension: !1,
                    view_extension: !1,
                    extension_resp: {},
                    view_dialog: !0,
                    loading_consents: !1,
                    granted_consents: !1
                }, i
            }
            return r(s, [{
                key: "setExtensionConsentsNode",
                value: function(e) {
                    this.extensionConsentsNode = e
                }
            }, {
                key: "setGrantedConsentsNode",
                value: function(e) {
                    this.grantedConsentsNode = e
                }
            }, {
                key: "setAllowExtensionNode",
                value: function(e) {
                    this.allowExtensionNode = e
                }
            }, {
                key: "getConsentsWindow",
                value: function(e, t, s) {
                    var i = [],
                        n = [],
                        a = [];
                    if (e.resumeUrl) {
                        var o = [];
                        if (void 0 !== e.connectionDetails.scope)
                            for (var r in e.connectionDetails.scope) {
                                var l = e.connectionDetails.scope[r],
                                    d = l["Scope Name"];
                                l["Scope Value"] && d && d.indexOf("/") > 0 && (0 == d.indexOf("Zoho") || 0 == d.indexOf("DRE/")) && o.push(N("div", {
                                    class: ss.scopeinfocontent
                                }, ns(l["Scope Value"])))
                            }
                        if (!o.length) return null;
                        var c = re("app.req.scopes", [ns(e.connectionDetails.name)]);
                        n.push(N("div", {
                            class: ss.scopeinfo_wrapper
                        }, N("div", {
                            class: ss.scopeinfo
                        }, N("div", {
                            class: ss.scopeinfoheader,
                            dangerouslySetInnerHTML: {
                                __html: c
                            }
                        }), o)))
                    } else if (!1 === this.state.granted_consents) {
                        var u = re("platformconsents.brief", "<b>" + ns([this.integrationsdata.name]) + "</b>");
                        a.push(N("div", null, N("div", {
                            class: ss.botdialog_title,
                            dangerouslySetInnerHTML: {
                                __html: u
                            }
                        }), N("div", {
                            class: ss.consents_container
                        }, N("div", null, this.getConsents(e.consents)))))
                    } else Gi(e.granted_consents) || this.integrationsdata.store_appid || i.push(N("div", {
                        class: ss.granted_consents
                    }, N("div", {
                        class: ss.botdialog_title
                    }, re("platformconsents.granted.brief")), N("div", {
                        consents_container: !0,
                        class: ss.relative_container
                    }, N("div", null, this.getConsents(e.granted_consents)))));
                    var m = this.integrationsdata.store_appid ? this.integrationsdata.store_appid : "";
                    return N("div", {
                        class: ss.consentscontainer,
                        "data-consentkey": t,
                        "data-chid": s,
                        "data-store_appid": m,
                        "data-loadingstate": this.state.loading_consents
                    }, N("div", {
                        class: ss.loading
                    }, N("div", {
                        class: ss.loadingicon
                    })), a, i, n)
                }
            }, {
                key: "getConsents",
                value: function(e) {
                    var t = [];
                    return e.variables && !Gi(e.variables) && t.push(N(is, {
                        classname: ss.detailsicon,
                        consentsInfo: e.variables
                    })), e.deluge_tasks && !Gi(e.deluge_tasks) && t.push(N(is, {
                        classname: ss.delugeicon,
                        consentsInfo: e.deluge_tasks
                    })), e.api_calls && !Gi(e.api_calls) && t.push(N(is, {
                        classname: ss.embedimg,
                        consentsInfo: e.api_calls
                    })), t
                }
            }, {
                key: "getConsentsHeader",
                value: function(e) {
                    if (e.resumeUrl) {
                        var t = re("app.req.permission", ["<b>" + ns(e.connectionDetails.name) + "</b>", "<b>" + ns(e.connectionDetails.serviceDisplayName) + "</b>"]);
                        return N("div", {
                            class: ss.scopeheader
                        }, N("img", {
                            src: e.connectionDetails.imageUrl
                        }), N("div", {
                            class: ss.scopepermissions,
                            dangerouslySetInnerHTML: {
                                __html: t
                            }
                        }))
                    }
                    return N("div", {
                        class: ss.consent_header
                    }, N("span", {
                        class: ss.consent_headerimg
                    }, N("img", {
                        src: this.integrationsdata.getImageURL()
                    })), N("span", {
                        class: ss.consent_headertitle
                    }, this.integrationsdata.getName()))
                }
            }, {
                key: "getConsentsActions",
                value: function(e, t, s) {
                    var i = {
                            key: e,
                            allow_for_extension: this.state.allow_extension
                        },
                        n = {
                            "Content-Type": "application/json",
                            "x-consents-version": "1",
                            "X-XHR-exception": !0,
                            "X-SID": WebMessanger.getSid(),
                            "X-ZCSRF-TOKEN": Yi()
                        },
                        a = function(e) {
                            var i = JSON.parse(e);
                            Gi(i) || "function" != typeof s || s(t, i)
                        }.bind(this);
                    return [{
                        text: re("platformconsents.proceed"),
                        onclick: function() {
                            Je("v1/executions/1/confirmconsent", i, a, null, null, null, n), this.setState({
                                view_dialog: !1,
                                extension_resp: {}
                            }), this.props.callbackOnClose()
                        }.bind(this)
                    }]
                }
            }, {
                key: "toggleExtensionConsents",
                value: function(e, t, s) {
                    var i = mn(s);
                    i === this.extensionConsentsNode ? this.state.view_extension ? this.setState({
                        view_extension: !1
                    }) : Gi(this.state.extension_resp) ? (this.setState({
                        loading_consents: !0
                    }), this.viewExtensionConsents(e, t)) : this.setState({
                        view_extension: !0
                    }) : i === this.allowExtensionNode ? this.state.allow_extension ? this.setState({
                        allow_extension: !1
                    }) : this.setState({
                        allow_extension: !0
                    }) : i === this.grantedConsentsNode && (this.state.granted_consents ? this.setState({
                        granted_consents: !1
                    }) : this.setState({
                        granted_consents: !0
                    }))
                }
            }, {
                key: "viewExtensionConsents",
                value: function(e, t) {
                    var s = "key=" + t,
                        i = {
                            "Content-Type": "application/json",
                            "x-consents-version": "1",
                            "X-XHR-exception": !0,
                            "X-ZCSRF-TOKEN": Yi()
                        };
                    Xe("v1/applications/" + e + "/impacts", s, function(e) {
                        var t = JSON.parse(e);
                        this.setState({
                            view_extension: !0,
                            extension_resp: t,
                            loading_consents: !1
                        })
                    }.bind(this), null, null, null, i)
                }
            }, {
                key: "getExtensionConsents",
                value: function(e, t) {
                    var s = re("platformconsents.extension.title", "<b>" + ns([t]) + "</b>");
                    return N("div", {
                        id: "extension-consents",
                        class: ss.extension_container
                    }, N("div", {
                        class: ss.botdialog_title,
                        dangerouslySetInnerHTML: {
                            __html: s
                        }
                    }), N("div", {
                        class: ss.extn_container
                    }, N("div", null, this.getConsents(e))))
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = e.response,
                        i = e.response.consent_key,
                        n = e.chid,
                        a = e.response.resumeUrl,
                        o = e.callback,
                        r = e.response.message_source.store_appid,
                        l = N("span", {
                            class: ss.remember_note
                        }, N("strong", null, " * "), re("platformconsents.remembernote"), " "),
                        d = null,
                        c = null,
                        u = null,
                        m = this.getConsentsActions(i, n, o);
                    if (this.integrationsdata.store_appid) {
                        var h = re("common.view"),
                            g = t.allow_extension ? ss.customcheckboxsel : ss.customcheckbox,
                            p = re("platformconsents.extension.brief", ns([this.integrationsdata.store_appname]));
                        t.view_extension && (h = re("common.hide")), d = N("div", {
                            class: ss.extensionwrapper,
                            onclick: this.toggleExtensionConsents.bind(this, r, i)
                        }, N("span", null, N("span", {
                            class: g
                        }), N("input", {
                            id: "allowextension",
                            type: "checkbox",
                            ref: this.setAllowExtensionNode
                        }), N("label", {
                            for: "allowextension",
                            class: ss.allowextn_text,
                            dangerouslySetInnerHTML: {
                                __html: p
                            }
                        })), N("span", {
                            class: ss.consent_view_link,
                            ref: this.setExtensionConsentsNode
                        }, h))
                    } else if (!Gi(e.response.granted_consents)) {
                        var f = re("common.view");
                        t.granted_consents && (f = re("common.hide")), d = N("div", {
                            class: ss.extensionwrapper
                        }, N("span", {
                            class: ss.grantedconsents
                        }, re("platformconsents.grantednote")), N("span", {
                            class: ss.consent_view_link,
                            ref: this.setGrantedConsentsNode,
                            onclick: this.toggleExtensionConsents.bind(this, r, i)
                        }, f))
                    }
                    if (t.view_extension && !Gi(t.extension_resp)) {
                        var v = t.extension_resp.data.extension.store_appname,
                            C = t.extension_resp.data.consents;
                        c = this.getExtensionConsents(C, v)
                    } else a ? (d = null, l = null, c = this.getConsentsWindow(s, i, n), m = [{
                        text: re("common.authenticate"),
                        onclick: function() {
                            window.open(a), this.setState({
                                view_dialog: !1
                            })
                        }.bind(this)
                    }], null === c && (u = {
                        customContainerStyle: ss.authenticationContainer,
                        customHeaderStyle: ss.header_wrapper
                    })) : c = this.getConsentsWindow(s, i, n);
                    var b = null;
                    return t.view_dialog && (b = N(xt, {
                        nodeToBeFocusedOnClose: this.props.nodeToBeFocusedOnClose,
                        heading: this.getConsentsHeader(s),
                        actions: m,
                        footerinfoprefix: d,
                        footerinfosuffix: l,
                        customDialogStyles: u,
                        callbackOnClose: this.props.callbackOnClose
                    }, c)), b
                }
            }]), s
        }(R),
        os = function() {
            function e() {
                a(this, e)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s, i) {
                    document.querySelector("[data-consentkey]") || (this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(as, {
                        chid: e,
                        response: t,
                        callback: s,
                        nodeToBeFocusedOnClose: i,
                        callbackOnClose: this.removeParentNode.bind(this)
                    }), this.node))
                }
            }, {
                key: "removeParentNode",
                value: function() {
                    this.node.parentElement.removeChild(this.node)
                }
            }]), e
        }(),
        rs = {},
        ls = {};

    function ds(e, t) {
        var s = !0;
        if (rs[e]) {
            var i = rs[e];
            s = i.status ? "enabled" === i.status : s, s = !dn(t) && i.actions && i.actions[t] ? s && "enabled" == i.actions[t] : s
        }
        return s
    }
    var cs = Object.freeze({
            __proto__: null,
            errorcodes: {
                CS_DISABLED_BY_ADMIN: "module_disabled_by_admin",
                CS_ACTION_DISABLED_BY_ADMIN: "action_disabled_by_admin"
            },
            handleError: function(e, t) {
                if ($WC.$Win.isExist("actionforbidden") && $WC.$Win.destroy("actionforbidden"), null === document.getElementById("zcwindows")) {
                    var s = document.createElement("div");
                    s.id = "zcwindows", s.className = "zcoverlay", void 0 !== WebMessanger && (s.style.zIndex = WebMessanger.setzindex), document.body.appendChild(s)
                }
                $WC.$Dlg.create({
                    id: "actionforbidden",
                    version: 2,
                    class: "zcdalogbx zcbg_mask alert_dialog",
                    headerhtml: $WC.$Dlg.frameHeaderHTML({
                        imagehtml: '<div class="zcrestrict_icon"></div>',
                        header: re("module.access.restricted")
                    }),
                    bodyhtml: $WC.$Dlg.frameBodyInfoHTML({
                        info: [dn(e) || dn(e.message) ? re("module.disabled.common") : e.message]
                    }),
                    buttons: [{
                        text: re(t ? "common.reload" : "common.ok"),
                        colour: $WC.$Dlg.RED_BUTTON,
                        action: t ? function() {
                            location.reload()
                        } : ""
                    }]
                })
            },
            handleModulesStatusChange: function(e) {
                for (var t in e) this.isRegistered(t) && ls[t]()
            },
            hasPermission: ds,
            init: function(e) {
                for (var t in e) {
                    var s = {};
                    s.status = e[t].status, e[t].actions && (s.actions = e[t].actions), rs[t] = s
                }
                return !0
            },
            isRegistered: function(e) {
                return "function" == typeof ls[e]
            },
            isSecurityError: function(e) {
                return !dn(e) && !dn(e.code) && "string" == typeof e.code && (e.code.startsWith(this.errorcodes.CS_DISABLED_BY_ADMIN) || e.code.startsWith(this.errorcodes.CS_ACTION_DISABLED_BY_ADMIN))
            },
            register: function(e, t) {
                ls[e] = t
            },
            registerCallbacks: function(e) {
                for (var t in e) this.register(t, e[t])
            },
            update: function(e) {
                for (var t in e) rs[t] = e[t];
                this.handleModulesStatusChange(e)
            }
        }),
        us = {},
        ms = {},
        hs = !1,
        gs = null,
        ps = !1;

    function fs(e) {
        if (oe.get("isCliqUser")() && ds("bots") && (null == gs || e)) {
            var t = Ut.getItem(oe.get("zuid") + "_wms_bots");
            if (t)
                for (var s in us = t.botslist) us[s].ISSUBSCRIBED && (ms[s] = us[s]);
            vs(t && t.sync_token)
        }
    }

    function vs(e) {
        gs = (new Date).getTime(), hs = !1, ps = !1;
        var t = "limit=1000";
        e && (t += "&sync_token=" + e), Xe("v2/bots", t, (function(e) {
            var t = e && JSON.parse(e);
            Cs(t.data), _s(t.deleted),
                function(e) {
                    var t = {
                        botslist: us,
                        sync_token: e
                    };
                    Ut.setItem(oe.get("zuid") + "_wms_bots", t)
                }(t.sync_token), an.publish("/bots/updateui")
        }), (function() {
            gs = null, ps = !0
        }))
    }

    function Cs(e) {
        if ("object" === n(e) && !Rn(e)) {
            var t = [];
            for (var s in e) t.push(e[s]);
            e = t
        }
        e.forEach((function(e) {
            var t = function(e) {
                var t = ys(e.id),
                    s = t && t.original_info && t.original_info.type;
                e.type = e.type || s;
                var i = {
                    ISBOT: !0,
                    EMAILID: re("chatbot.smsg"),
                    STATUSMSG: re("chatbot.smsg"),
                    TYPE: "",
                    PROTOCOL: "zoho",
                    SCODE: 1,
                    UC: e.usage_count || e.info && e.info.uc || 0,
                    ZUID: ""
                };
                i.DNAME = e.name, i.UNIQUENAME = e.unique_name || e.info && e.info.uniquename || e.uniquename, i.PHOTO = e.photo || e.photo_id || e.photoid, i.CHID = e.chat_id || e.chid || "", i.USERID = e.id, i.PERMISSION = e.permission || e.info && e.info.permission, i.DESC = e.description || e.info && e.info.desc || e.desc, i.ISSUBSCRIBED = !!e.active, i.PHOTO ? i.PHOTO = oe.get("isUDSDownloadEnabled")() ? _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + i.PHOTO + "&x-cli-msg=" + encodeURIComponent('{"x-cliq-resource-module":"photos","type":"botimg"}') : "/_chat/botimg/" + i.PHOTO + "/photo.do" : i.CHID.endsWith("B1") ? "0" == e.type || "1" == e.type ? i.PHOTO = $WC.Config.get("staticserverpath") + "/images/9d792ace_bot-custom.png" : "2" == e.type ? i.PHOTO = $WC.Config.get("staticserverpath") + "/images/00f9c20a_zoho-projects.png" : i.PHOTO = $WC.Config.get("staticserverpath") + "/images/b7091bfa_bot-default.png" : i.PHOTO = $WC.Config.get("staticserverpath") + "/images/b7091bfa_bot-default.png";
                var n = e.status || e.statusmsg;
                if (n) {
                    var a = Math.round(Math.random() * (n.length - 1));
                    i.STATUSMSG = n[a], i.EMAILID = n[a]
                } else "2" == e.type && e.description && (i.STATUSMSG = re(e.description), i.EMAILID = re(e.description));
                return i.original_info = e, i
            }(e);
            e.active && (ms[e.id] = t), us[e.id] = t
        }))
    }

    function bs(e) {
        return e ? ms : us
    }

    function ys(e) {
        return e = -1 != ("" + e).indexOf("b-") ? e.split("-")[1] : "" + e, us[e]
    }

    function _s(e) {
        e && 0 != e.length && e.forEach((function(e) {
            delete us[e]
        }))
    }

    function Ws(e, t, s) {
        return s && (e = Ss(s)), e = -1 != ("" + e).indexOf("b-") ? e.split("-")[1] : "" + e, us[e] && us[e].original_info && (t = t || us[e].original_info.photo_id || us[e].original_info.photo || us[e].original_info.photoid || ""), t ? oe.get("isUDSDownloadEnabled")() ? _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + t + "&x-cli-msg=" + encodeURIComponent('{"x-cliq-resource-module":"photos","type":"botimg"}') : "/" + oe.get("CHATCONT") + "/botimg/" + t + "/photo.do" : us[e] && us[e].CHID.endsWith("B1") ? "0" == us[e].original_info.type || "1" == us[e].original_info.type ? $WC.Config.get("staticserverpath") + "/images/9d792ace_bot-custom.png" : "2" == us[e].original_info.type ? $WC.Config.get("staticserverpath") + "/images/00f9c20a_zoho-projects.png" : $WC.Config.get("staticserverpath") + "/images/b7091bfa_bot-default.png" : $WC.Config.get("staticserverpath") + "/images/b7091bfa_bot-default.png"
    }

    function Ss(e) {
        for (var t in us)
            if (us[t].CHID == e) return t
    }

    function ws(e) {
        if (e) {
            var t = ys(e);
            return t && t.DNAME
        }
    }

    function Ms(e) {
        return !(-1 == (e = "" + e).indexOf("b-") && !us[e])
    }
    var Is = Object.freeze({
            __proto__: null,
            fetchBots: vs,
            get: ys,
            getBotId: Ss,
            getBotName: ws,
            getFromServerAfterFocus: function() {
                hs = !0
            },
            getFromServerIfFocussed: function() {
                (hs || ps) && fs(ps)
            },
            getList: bs,
            getPhoto: Ws,
            initBots: fs,
            isBotId: Ms,
            removeFromBotsList: _s,
            removeFromSubscribedList: function(e) {
                e && (delete ms[e], us[e].ISSUBSCRIBED = !1, us[e].original_info.active = !1)
            },
            subscribe: function(e) {
                Je("v1/bots/b-" + e + "/subscribe", "consent_validation=true", (function() {
                    var e = JSON.parse(this.response);
                    "Consent" === e.data.status && (new os).mountComponent("", e.data)
                }), null, null, null, {
                    "x-consents-version": "1",
                    "X-XHR-exception": !0,
                    "X-ZCSRF-TOKEN": Yi()
                })
            },
            syncFromServerAfterFocus: function() {
                ps = !0
            },
            updateBotActions: function(e, t) {
                e = -1 != e.indexOf("b-") ? e.split("-")[1] : e, us[e] && (us[e].actionhandles = t)
            },
            updateBotContacts: Cs
        }),
        Ts = {
            ONLINE: 1,
            OFFLINE: 0,
            FEEDINFO: 2,
            BUSY: 3,
            IDLE: 4,
            DONOTDISTURB: 5,
            AWAY: 7,
            WEB_LOGIN: 1,
            MOB_LOGIN: 3,
            CLIQ_CALLS: 101,
            MEETING: 102,
            CALENDAR_EVENT: 103,
            SHOWTIME_TRAINING: 104,
            ASSIST_SESSION: 105,
            TELEPHONY: 106,
            SALESIQ: 107,
            WEBINAR: 108,
            VOICE: 109,
            BROADCAST: 110,
            LIVEEVENT: 111
        },
        As = [],
        Es = [],
        Us = {},
        ks = 0,
        Ns = !1;

    function xs(e) {
        return e ? As[e] : As
    }

    function Os(e) {
        return e ? Es[e] : Es
    }

    function Rs(e) {
        return e ? Us[e] : Us
    }

    function Ds(e, t) {
        e && (Us[e] = t)
    }

    function $s(e, t) {
        e && (Us[e].OPERATION_LOADER = t)
    }

    function Hs(e) {
        if (Rs(e)) return Rs(e).OPERATION_LOADER
    }

    function Ls(e) {
        delete Us[e]
    }

    function Ps(e) {
        null === e ? As = [] : As.push(e)
    }

    function Fs(e) {
        null === e ? Es = [] : Es.push(e)
    }

    function Bs(e) {
        ks = e
    }

    function js(e) {
        Ns = e
    }

    function zs() {
        return Ns
    }

    function Gs(e, t) {
        var s = !1;
        void 0 !== Rs(e) && (s = Rs(e).DNAME !== t, Rs(e).DNAME = t), s && WmsHybridSearch.populateContactListInMainUI(!0)
    }

    function qs(e) {
        var t = [];
        try {
            for (var s in e) {
                var i = e[s]; - 3 == i.STATUS && t.push(s), Vs(i)
            }
            Bs((new Date).getTime())
        } catch (e) {}
        t.length > 0 && (WmsImplHandler.invoke(WmsContactImpl.handleInvitations, t), WMSUI.updateInvitations(t))
    }

    function Vs(e) {
        Ds(e.USERID, {
            STATUS: e.STATUS,
            STYPE: e.st,
            STATUSMSG: e.STATUSMSG,
            OWNERID: oe.get("zuid"),
            USERID: e.USERID,
            DNAME: e.DNAME,
            EMAILID: e.EMAILID
        });
        var t = "";
        "" != e.PHOTO && null != e.PHOTO && (t = e.PHOTO), Rs(e.USERID).PHOTO = t
    }

    function Ys(e) {
        Ds(e.zuid, {
            STATUS: e.scode,
            STYPE: e.st,
            STATUSMSG: e.smsg,
            OWNERID: oe.get("zuid"),
            USERID: e.zuid,
            DNAME: e.dname,
            EMAILID: e.email,
            PHOTO: "",
            UC: e.uc
        }), Bs((new Date).getTime())
    }

    function Zs() {
        return zs()
    }

    function Ks(e) {
        var t = Js(e);
        return "inactive" === t ? re("user.status.inactive") : t == ut.CONTACTSTATUS.UNAPRD ? re("Invited") : t == ut.CONTACTSTATUS.REMOVE || t == ut.CONTACTSTATUS.DELETE ? "+" + re("chat.contact.add") : t == ut.CONTACTSTATUS.REQACC || t == ut.CONTACTSTATUS.NOCHAT ? re("common.accept") : Rs(e) ? Rs(e).STATUSMSG : ft(e) ? ft(e).STATUSMSG : void 0
    }

    function Xs(e) {
        return Rs(e) ? Rs(e).STYPE : ft(e) ? ft(e).STYPE : void 0
    }

    function Js(e) {
        return Rs(e) ? Rs(e).STATUS : ys(e) ? ys(e).STATUS : !!ft(e) && ft(e).STATUS
    }

    function Qs(e, t, s) {
        t = t || Js(e), s = s || Xs(e);
        var i = "";
        return t ? (i = {
            0: "offline",
            1: "available",
            2: "offline",
            3: "busy",
            4: "idle",
            5: "dnd",
            7: "away"
        }[t] || "", s == Ts.MOB_LOGIN && (i += "_mobile"), s != Ts.CLIQ_CALLS && s != Ts.VOICE || (i = "busy_cliqcall"), s != Ts.MEETING && s != Ts.SHOWTIME_TRAINING || (i = "busy_meeting"), s == Ts.CALENDAR_EVENT && (i = "busy_calendarevent"), s != Ts.ASSIST_SESSION && s != Ts.TELEPHONY || (i = "busy_assistsession"), s == Ts.WEBINAR && (i = "busy_webinar"), s == Ts.BROADCAST && (i = "busy_broadcast"), s == Ts.LIVEEVENT && (i = "busy_liveevent")) : Sn(e) ? i += "threads" : e && Ms(e) && (i += "bot"), i
    }

    function ei(e, t) {
        return Rs() && Rs(e) ? Rs(e) : Ms(e) && ys(e) ? ys(e) : t && ft() && ft(e) ? ft(e) : void 0
    }

    function ti(e) {
        try {
            return Rs(e) ? Rs(e).DNAME : ft(e) ? ft(e).DNAME : ys(e) ? ys(e).DNAME : null
        } catch (e) {
            return null
        }
    }

    function si(e, t, s, i) {
        Rs(e) && Rs(e).STATUS >= 0 && Rs(e).STATUS <= 4 ? Rs(e).STATUS === t && Rs(e).STYPE === s && Rs(e).STATUSMSG === i || (Rs(e).STATUS = t, Rs(e).STYPE = s, Rs(e).STATUSMSG = i, WmsHybridSearch.updatePresence(e), WmsMainUI.updateChatHTML(e)) : ft(e) && oe.get("presence_keys") && (ft(e).STATUS === t && ft(e).STYPE === s && ft(e).STATUSMSG === i || (ft(e).STATUS = t, ft(e).STYPE = s, ft(e).STATUSMSG = i, WmsMainUI.updateChatHTML(e)))
    }

    function ii(e, t, s) {
        var i, n;
        if (0 != t.trim()) {
            "zoho" == e ? (i = "approvecontact.do", n = "status=accept&userid=" + t) : (i = "mpcontact.do", n = "zohoid=" + WebMessanger.getUserName() + "&mploginid=" + s + "&contactid=" + t + "&opr=acceptcon");
            Je(i, n, null, (function() {
                void 0 !== WmsMainUI && ($s(zuid, !1), WmsHybridSearch.populateContactListInMainUI(!0))
            }))
        }
    }

    function ni(e) {
        Je("approvecontact.do", "status=remindmelater&userid=" + e)
    }

    function ai(e) {
        return Rs(e) ? Rs(e).EMAILID : ft(e) ? ft(e).EMAILID : null
    }

    function oi(e, t, s) {
        var i = "";
        if (Vi(e) || "null" == e ? i = $WC.Config.get("staticserverpath") + "/images/bar/8ff234a1_contactphoto.gif" : li(e) ? i = WebMessanger.getGuestPhotoUrl(e.slice(1)) : ys(e) ? i = Ws(e) : oe.get("customContacts") || void 0 !== WebMessanger && "function" == typeof WebMessanger.isRTCChat && WebMessanger.isRTCChat() ? i = WmsImplHandler.invokeSynchronously(WmsUIImpl.getUserPhoto, e, t) : WmsImplHandler.invokeSynchronously(WmsUIImpl.getUserPhoto, e) && (i = WmsImplHandler.invokeSynchronously(WmsUIImpl.getUserPhoto, e)), !i) {
            if (void 0 !== WebMessanger && WebMessanger.isNetworkUser()) {
                var n = e.split("-");
                e = n[n.length - 1]
            }
            i = oe.get("photoserver") + "/file?ID=" + e + "&t=user&exp=6000", i += s ? "&fs=" + s : "&fs=thumb"
        }
        return i
    }

    function ri(e) {
        var t = ei(e);
        return !(!t || t.STATUS != ut.CONTACTSTATUS.REQACC)
    }

    function li(e) {
        return e && "$" === e.charAt(0)
    }

    function di() {
        var e = {};
        for (var t in Rs()) Rs(t).ISBOT || (e[t] = Rs(t));
        return e
    }
    var ci = Mn((function() {
            var e = di(),
                t = Object.keys(e).filter((function(t) {
                    if ("" == e[t].EMAILID) return t
                })),
                s = !(void 0 === WmsSettings || !WmsSettings.isEmailIDHidden());
            (t = t.splice(0, 100)).length && t.length <= 100 && !s && Xe("v2/users/email", "user_ids=" + t.toString(), (function(e) {
                var t = JSON.parse(e).data;
                for (var s in t) ei(s) && (ei(s).EMAILID = t[s])
            }))
        }), null, 500),
        ui = Object.freeze({
            __proto__: null,
            accept: ii,
            add: function(e, t, s) {
                var i, n;
                0 != t.trim() && ("zoho" == e ? (i = "addcontact.do", n = "ulist=" + encodeURIComponent(t)) : (i = "mpcontact.do", n = "zohoid=" + WebMessanger.getUserName() + "&mploginid=" + s + "&contactid=" + t + "&opr=addcon"), Je(i, n))
            },
            copyContacts: qs,
            copyZohoContacts: Vs,
            defaultstatusmsg: ["Offline", "Available", "", "Busy", "Idle", "Do not disturb", "", "Away"],
            deletecontact: function(e) {
                Ls(e)
            },
            get: ei,
            getAndUpdateEmailIdFromServer: ci,
            getContactsList: Rs,
            getContactsListWithoutBots: di,
            getDisplayName: ti,
            getEmailId: ai,
            getInitializedValue: zs,
            getInvitedContactsList: xs,
            getLastAvailableTime: function(e) {
                return e && Us[e] && Us[e].LASTAVAILABLETIME ? Us[e].LASTAVAILABLETIME : 0
            },
            getLastUpdatedTime: function() {
                return ks
            },
            getOperationLoadingState: Hs,
            getPendingInvitedContactsList: Os,
            getSortedContacts: function(e, t, s, i) {
                var n = [];
                for (var a in s = s || Rs()) s[a][e] && n.push(s[a]);
                return "UC" === e ? n.sort(tn(e, t, (function(e) {
                    return parseInt(e, 10)
                }))) : n.sort(tn(e, t, (function(e) {
                    return e.toLowerCase()
                }))), n.slice(0, i)
            },
            getStatusClassName: Qs,
            getStatusMsg: Ks,
            getStatusType: Xs,
            getUserPhoto: oi,
            getZohoContacts: function() {
                return Rs()
            },
            getZuid: function(e) {
                var t = "",
                    s = Rs();
                for (var i in s) s[i].EMAILID === e && (t = i);
                if (!t) {
                    var n = ft();
                    for (var i in n) n[i].EMAILDID === e && (t = i)
                }
                return t
            },
            getcontacts: function() {
                return Rs()
            },
            handleInviteOperation: function(e) {
                var t = e.getAttribute("data-operation"),
                    s = e.getAttribute("data-id"),
                    i = e.getAttribute("data-dname");
                if (null === s && null === i && (s = e.parentNode.getAttribute("data-id"), i = e.parentNode.getAttribute("data-dname")), "accept" === t ? (ii("zoho", s, oe.get("zuid")), $s(s, !0)) : "reject" === t ? (ni(s), $s(s, !0)) : "addcontact" === t && (s ? WMSUI.inviteMember(s, i) : (WMSUI.inviteMember(i, i), WmsMainUI.resetToDefaultUI())), document.getElementById("wms-hysearch") && WmsHybridSearch.populateFrequentContactsInSmartChat(), void 0 !== WmsMainUI && !oe.get("customContacts")) {
                    var n = {
                        suggestions: "show_suggestions"
                    };
                    WmsHybridSearch.populateContactListInMainUI(!0, n)
                }
            },
            init: function(e) {
                Us = {}, Bs(0), js(!1), null != e && (qs(e), js(!0))
            },
            initialize: js,
            isAnnonUser: li,
            isInitialised: Zs,
            isInvitationPending: function(e) {
                var t = ei(e);
                return !(!t || t.STATUS != ut.CONTACTSTATUS.NOCHAT)
            },
            isInvitedContact: ri,
            isonline: function(e) {
                return !!Rs(e) && "0" !== Rs(e).status
            },
            reinvite: function(e, t, s) {
                0 != t.trim() && (Ke("reinvitebyemailid.sas", "emailid=" + t), Ds(s, {
                    STATUS: "0",
                    STATUSMSG: null,
                    OWNERID: null,
                    USERID: s
                }), Bs((new Date).getTime()))
            },
            reject: function(e, t, s) {
                var i, n;
                if (0 != t.trim()) {
                    "zoho" == e ? (i = "approvecontact.do", n = "status=reject&userid=" + t) : (i = "mpcontact.do", n = "zohoid=" + WebMessanger.getUserName() + "&mploginid=" + s + "&contactid=" + t + "&opr=rejectcon");
                    Je(i, n, null, (function() {
                        void 0 !== WmsMainUI && ($s(zuid, !1), WmsHybridSearch.populateContactListInMainUI(!0))
                    }))
                }
            },
            remindMeLater: ni,
            remove: function(e, t, s) {
                var i, n;
                "zoho" == e ? (i = "deletecontact.do", n = "emailid=" + encodeURIComponent(ai(t)) + "&userid=" + t) : (i = "mpcontact.do", n = "zohoid=" + WebMessanger.getUserName() + "&mploginid=" + s + "&contactid=" + t + "&opr=removecon"), Je(i, n), Ds(t, null), Bs((new Date).getTime())
            },
            removeFromContactsList: Ls,
            removeInvitations: function() {
                Ps(null), Fs(null)
            },
            setContactsList: Ds,
            setInvitedContactsList: Ps,
            setLastAvailableTime: function(e, t) {
                e && Rs(e) && (Rs(e).LASTAVAILABLETIME = t)
            },
            setLastUpdatedTime: Bs,
            setOperationLoadingState: $s,
            setPendingInvitedContactsList: Fs,
            status: Js,
            updateContact: Ys,
            updateContacts: function(e) {
                try {
                    for (var t in e) {
                        var s = {};
                        if (e[t].ua) {
                            var i = JSON.parse(e[t].ua);
                            s.zuid = t, s.email = i[0] || ai(t) || "", s.dname = i[1] || s.email, s.uc = i[2], s.scode = i[5], s.smsg = i[6] || WmsContacts.defaultstatusmsg[s.scode], s.st = i[7]
                        } else {
                            var n = qi(e[t].s, 6, !0);
                            s.zuid = t, s.scode = n[0], s.email = n[1] || ai(t) || "", s.st = n[2], s.uc = n[3], s.dname = n[5][1] || s.email, s.smsg = n[5][0] || WmsContacts.defaultstatusmsg[s.scode]
                        }
                        s.scode == ut.CONTACTSTATUS.REQACC && -1 === xs().indexOf(t) && -1 === Os().indexOf(t) ? (Ps(t), Fs(t)) : s.scode == ut.CONTACTSTATUS.NOCHAT && -1 === Os().indexOf(t) && Fs(t), Ys(s)
                    }
                    Bs((new Date).getTime())
                } catch (e) {}
                xs().length && "undefined" != typeof WmsContactImpl && WmsImplHandler.invoke(WmsContactImpl.handleInvitations, xs())
            },
            updateDisplayName: Gs,
            updateFromMDParent: function(e) {
                var t = [];
                try {
                    for (var s in e) {
                        -3 == e[s].STATUS && t.push(s)
                    }
                } catch (e) {}
                t.length > 0 && (WmsImplHandler.invoke(WmsContactImpl.handleInvitations, t), WMSUI.updateInvitations(t))
            },
            updateStatus: function(e) {
                var t = e.zuid;
                null == Rs(t) && Ds(t, {
                    OWNERID: oe.get("zuid"),
                    USERID: t,
                    DNAME: e.dname,
                    EMAILID: e.email ? e.email : ""
                }), e.lastavailabletime && (Rs(t).LASTAVAILABLETIME = e.lastavailabletime), Rs(t).STATUS = e.scode, Rs(t).STYPE = e.st, Rs(t).STATUSMSG = e.smsg
            },
            updateUserStatus: si,
            userstatus: Ts,
            verifyUserStatus: function(e) {
                for (var t = 0; t < e.length; t++) {
                    var s = e[t],
                        i = s.uname,
                        n = s.scode;
                    if (0 != s.zuid.trim().length) try {
                        var a = Js(i);
                        !1 !== a && n != a && a >= 0 && WebMessanger.verifyUserStatus(s.zuid, Rs(i).STATUS)
                    } catch (e) {}
                }
            }
        }),
        mi = {};

    function hi(e) {
        if (mi[e]) return mi[e]
    }

    function gi(e, t) {
        void 0 === hi(e) && (mi[e] = t, Gs(e, t.dname), Mt(e, t.dname))
    }
    var pi, fi = Object.freeze({
        __proto__: null,
        getInfo: hi,
        storeInfo: gi,
        updateInfo: function(e, t) {
            if (mi[e]) return delete mi[e], gi(e, t), !0
        }
    });

    function vi(e) {
        e = function(e) {
            return e.replace(/&#39;|&#x27;/g, "'").replace(/&quot;/g, '"').replace(/&gt;/g, ">").replace(/&lt;/g, "<").replace(/&amp;/g, "&")
        }("" + e);
        var t = {
            "&": "&amp;",
            ">": "&gt;",
            "<": "&lt;",
            '"': "&quot;",
            "'": "&#x27;"
        };
        return e.replace(/[&><"']/g, (function(e) {
            return t[e]
        }))
    }

    function Ci(e) {
        return "[object Array]" === Object.prototype.toString.call(e)
    }

    function bi(e) {
        var t = e;
        if (Ci(t)) {
            var s = t[1];
            return s = (s = Ci(s) ? s : [s]).map((function(e) {
                return vi(e)
            })), t[1] = s, pi.getRealValue.apply(pi, t)
        }
        return pi.getRealValue(t)
    }

    function yi(e, t, s) {
        var i = {};
        for (var n in t) {
            if (/^\$/.test(n)) {
                var a = bi(t[n]);
                n = n.substring(1), i[n] = a
            } else i[n] = "InSecureHTML" === s ? t[n] : vi(t[n])
        }
        var o = Object.keys(i).join("|"),
            r = new RegExp("{{(" + o + ")}}", "g");
        return e.replace(r, (function(e) {
            return e = e.substring(2).slice(0, -2), i[e]
        }))
    }
    var _i = Object.freeze({
            __proto__: null,
            replace: yi,
            setResource: function(e) {
                pi = e
            }
        }),
        Wi = {
            emoji: "",
            sticker: ""
        },
        Si = !1,
        wi = null,
        Mi = null,
        Ii = !1,
        Ti = {
            emoji: !0,
            sticker: !0
        };

    function Ai(e, t) {
        if (!Si) {
            var s = function(e) {
                    var s = JSON.parse(e),
                        i = s.custom_emojis;
                    t && t({
                        status: "Success",
                        custom_emojis: s.custom_emojis
                    });
                    var n = oe.get("customemojis") || {},
                        a = oe.get("stickers") || {};
                    for (var o in i) Be.check("customemoji", o) ? n[o] = i[o] : a[o] = i[o];
                    wi = n, Mi = a, oe.set({
                        customemojis: n,
                        stickers: a
                    }), s.next_token && s.criteria_type && (Wi[s.criteria_type] = s.next_token), Gi(s.custom_emojis) && s.criteria_type && !this.search_text && (Ti[s.criteria_type] = !1), Si = !1, $i() || Di(!0)
                }.bind(e),
                i = {
                    "X-XHR-exception": "true",
                    "X-ZCSRF-TOKEN": Yi()
                },
                n = "",
                a = e && e.criteriatype || "";
            a && (n += Ei(n) + "type=" + a), e && e.includenexttoken && Wi[a] && (n += Ei(n) + "next_token=" + Wi[a]), e && e.search_text && (n += Ei(n) + "search_text=" + e.search_text);
            Si = !0, Xe("v2/customemojis", n, s, (function() {
                Si = !1, t && t({
                    status: "Failure",
                    custom_emojis: {}
                })
            }), null, null, i)
        }
    }

    function Ei(e) {
        return e.length > 0 ? "&" : ""
    }

    function Ui() {
        return wi
    }

    function ki() {
        return Mi
    }

    function Ni(e, t) {
        var s = "sticker" == t ? ki() : Ui(),
            i = [];
        if (e) {
            var n = [],
                a = [];
            for (var o in s)
                if (1 == s[o].status) {
                    var r = o.replace(/[:$!]/g, "");
                    r.startsWith(e) && n.push(o), r.indexOf(e) > -1 && !r.startsWith(e) && a.push(o)
                }
            i = n.concat(a)
        } else {
            i = Object.keys(s).sort().filter((function(e) {
                if (1 == s[e].status) return s[e]
            }))
        }
        return i
    }

    function xi(e) {
        var t = wi[e];
        if (t) {
            var s = _WMSCHATURL + "v2/customemojis/" + t.emoji_id + "/download";
            return N("em", {
                class: "wms_comp_customemojimsg",
                title: e.replace(/[:$!]/g, ""),
                "data-smileycode": e,
                style: {
                    "background-image": "url(" + s + ")"
                }
            })
        }
        return null
    }

    function Oi(e) {
        var t = Mi[e];
        if (t) {
            var s = _WMSCHATURL + "v2/customemojis/" + t.emoji_id + "/download";
            return N("em", {
                class: "wms_componentstickermsg",
                title: e.replace(/[:$!]/g, ""),
                "data-smileycode": e,
                style: {
                    "background-image": "url(" + s + ")"
                }
            })
        }
        return null
    }

    function Ri(e) {
        return wi[e] || Mi[e]
    }

    function Di(e) {
        Ii = e
    }

    function $i() {
        return Ii
    }

    function Hi(e) {
        return Ti[e]
    }
    var Li = Object.freeze({
            __proto__: null,
            canFetchMore: Hi,
            constructCustomEmojiMeta: function(e) {
                var t = Be.match("customemoji", e, "gi") || [];
                t = t.concat(Be.match("sticker", e, "gi") || []);
                for (var s = {}, i = 0; i < t.length; i++) s[t[i]] = Ri(t[i]);
                return s
            },
            fetchStickers: Ai,
            getCustomEmoji: Ui,
            getCustomEmojiElement: xi,
            getCustomEmojiMeta: Ri,
            getInitialFetchStatus: $i,
            getSortedCustomEmojis: Ni,
            getStickerElemet: Oi,
            getStickers: ki,
            setInitialFetchStatus: Di
        }),
        Pi = function() {
            function e(t) {
                var s = this;
                a(this, e);
                var i = t && t.type || "workplace";
                this.type = "workplace" === i ? "w" : "f", this.default_size = t && t.default_size || 72, this.along_text_size = t && t.along_text_size || 24;
                var n = t && t.animation;
                for (var o in this.animation_disabled = "disabled" === n, this.animation_default_size = n && n.default_size || 72, this.animation_along_text_size = n && n.along_text_size || 24, this.customemoji_size = t && t.customemoji_size || "default", this.preLoadCustomEmoji = t && t.preLoadCustomEmoji || !1, this.emoji_lookup = {
                        ":grinning:": ["#x1f600"],
                        ":grin:": ["#x1f601"],
                        ":joy:": ["#x1f602"],
                        ":smiley:": ["#x1f603"],
                        ":smile:": ["#x1f604"],
                        ":sweat-smile:": ["#x1f605"],
                        ":laughing:": ["#x1f606"],
                        ":wink:": ["#x1f609"],
                        ":blush:": ["#x1f60a"],
                        ":yum:": ["#x1f60b"],
                        ":sunglasses:": ["#x1f60e"],
                        ":heart-eyes:": ["#x1f60d"],
                        ":kissing-heart:": ["#x1f618"],
                        ":kissing:": ["#x1f617"],
                        ":kissing-smiling-eyes:": ["#x1f619"],
                        ":kissing-closed-eyes:": ["#x1f61a"],
                        ":slight-smile:": ["#x1f642"],
                        ":hug:": ["#x1f917"],
                        ":thinking:": ["#x1f914"],
                        ":neutral-face:": ["#x1f610"],
                        ":expressionless:": ["#x1f611"],
                        ":no-mouth:": ["#x1f636"],
                        ":rolling-eyes:": ["#x1f644"],
                        ":smirk:": ["#x1f60f"],
                        ":persevere:": ["#x1f623"],
                        ":cry:": ["#x1f622"],
                        ":open-mouth:": ["#x1f62e"],
                        ":zipper-mouth:": ["#x1f910"],
                        ":hushed:": ["#x1f62f"],
                        ":sleepy:": ["#x1f62a"],
                        ":tired-face:": ["#x1f62b"],
                        ":sleeping:": ["#x1f634"],
                        ":relieved:": ["#x1f60c"],
                        ":stuck-out-tongue:": ["#x1f61b"],
                        ":stuck-out-tongue-winking-eye:": ["#x1f61c"],
                        ":stuck-out-tongue-closed-eyes:": ["#x1f61d"],
                        ":unamused:": ["#x1f612"],
                        ":sweat:": ["#x1f613"],
                        ":pensive:": ["#x1f614"],
                        ":confused:": ["#x1f615"],
                        ":upside-down:": ["#x1f643"],
                        ":money-mouth:": ["#x1f911"],
                        ":astonished:": ["#x1f632"],
                        ":slight-frowning:": ["#x1f641"],
                        ":confounded:": ["#x1f616"],
                        ":disappointed:": ["#x1f61e"],
                        ":worried:": ["#x1f61f"],
                        ":triumph:": ["#x1f624"],
                        ":disappointed-relieved:": ["#x1f625"],
                        ":sob:": ["#x1f62d"],
                        ":frowning-with-open-mouth:": ["#x1f626"],
                        ":anguished:": ["#x1f627"],
                        ":fearful:": ["#x1f628"],
                        ":weary:": ["#x1f629"],
                        ":grimacing:": ["#x1f62c"],
                        ":cold-sweat:": ["#x1f630"],
                        ":scream:": ["#x1f631"],
                        ":flushed:": ["#x1f633"],
                        ":dizzy-face:": ["#x1f635"],
                        ":rage:": ["#x1f621"],
                        ":angry:": ["#x1f620"],
                        ":mask:": ["#x1f637"],
                        ":sick:": ["#x1f912"],
                        ":head-bandaged:": ["#x1f915"],
                        ":halo-smiling:": ["#x1f607"],
                        ":nerd:": ["#x1f913"],
                        ":smiling-with-horns:": ["#x1f608"],
                        ":imp:": ["#x1f47f"],
                        ":japanese-ogre:": ["#x1f479"],
                        ":japanese-goblin:": ["#x1f47a"],
                        ":skull:": ["#x1f480"],
                        ":ghost:": ["#x1f47b"],
                        ":alien:": ["#x1f47d"],
                        ":robot:": ["#x1f916"],
                        ":hankey:": ["#x1f4a9"],
                        ":smiley-cat:": ["#x1f63a"],
                        ":smile-cat:": ["#x1f638"],
                        ":joy-cat:": ["#x1f639"],
                        ":heart-eyes-cat:": ["#x1f63b"],
                        ":smirk-cat:": ["#x1f63c"],
                        ":kissing-cat:": ["#x1f63d"],
                        ":scream-cat:": ["#x1f640"],
                        ":crying-cat-face:": ["#x1f63f"],
                        ":pouting-cat:": ["#x1f63e"],
                        ":baby:": ["#x1f476"],
                        ":girl:": ["#x1f467"],
                        ":boy:": ["#x1f466"],
                        ":woman:": ["#x1f469"],
                        ":man:": ["#x1f468"],
                        ":older-woman:": ["#x1f475"],
                        ":older-man:": ["#x1f474"],
                        ":man-with-gua-pi-mao:": ["#x1f472"],
                        ":man-with-turban:": ["#x1f473"],
                        ":person-with-blond-hair:": ["#x1f471"],
                        ":cop:": ["#x1f46e"],
                        ":construction-worker:": ["#x1f477"],
                        ":guardsman:": ["#x1f482"],
                        ":detective:": ["#x1f575"],
                        ":bride-in-veil:": ["#x1f470"],
                        ":princess:": ["#x1f478"],
                        ":santa:": ["#x1f385"],
                        ":angel:": ["#x1f47c"],
                        ":bow:": ["#x1f647"],
                        ":information-desk-person:": ["#x1f481"],
                        ":no-good:": ["#x1f645"],
                        ":ok-woman:": ["#x1f646"],
                        ":raising-hand:": ["#x1f64b"],
                        ":person-with-pouting-face:": ["#x1f64e"],
                        ":person-frowning:": ["#x1f64d"],
                        ":haircut:": ["#x1f487"],
                        ":massage:": ["#x1f486"],
                        ":nail-care:": ["#x1f485"],
                        ":dancer:": ["#x1f483"],
                        ":dancers:": ["#x1f46f"],
                        ":levitating-man:": ["#x1f574"],
                        ":walking:": ["#x1f6b6"],
                        ":runner:": ["#x1f3c3"],
                        ":couple:": ["#x1f46b"],
                        ":boys:": ["#x1f46c"],
                        ":girls:": ["#x1f46d"],
                        ":couplekiss:": ["#x1f48f"],
                        ":couple-with-heart:": ["#x1f491"],
                        ":boyskiss:": ["#x1f468", "#x200d", "#x2764", "#xfe0f", "#x200d", "#x1f48b", "#x200d", "#x1f468"],
                        ":boys-with-heart:": ["#x1f468", "#x200d", "#x2764", "#xfe0f", "#x200d", "#x1f468"],
                        ":girlskiss:": ["#x1f469", "#x200d", "#x2764", "#xfe0f", "#x200d", "#x1f48b", "#x200d", "#x1f469"],
                        ":girls-with-heart:": ["#x1f469", "#x200d", "#x2764", "#xfe0f", "#x200d", "#x1f469"],
                        ":family:": ["#x1f46a"],
                        ":family-man-woman-girl:": ["#x1f468", "#x200d", "#x1f469", "#x200d", "#x1f467"],
                        ":family-man-woman-girl-boy:": ["#x1f468", "#x200d", "#x1f469", "#x200d", "#x1f467", "#x200d", "#x1f466"],
                        ":family-man-woman-boy-boy:": ["#x1f468", "#x200d", "#x1f469", "#x200d", "#x1f466", "#x200d", "#x1f466"],
                        ":family-man-woman-girl-girl:": ["#x1f468", "#x200d", "#x1f469", "#x200d", "#x1f467", "#x200d", "#x1f467"],
                        ":family-man-man-boy:": ["#x1f468", "#x200d", "#x1f468", "#x200d", "#x1f466"],
                        ":family-man-man-girl:": ["#x1f468", "#x200d", "#x1f468", "#x200d", "#x1f467"],
                        ":family-man-man-girl-boy:": ["#x1f468", "#x200d", "#x1f468", "#x200d", "#x1f467", "#x200d", "#x1f466"],
                        ":family-man-man-boy-boy:": ["#x1f468", "#x200d", "#x1f468", "#x200d", "#x1f466", "#x200d", "#x1f466"],
                        ":family-man-man-girl-girl:": ["#x1f468", "#x200d", "#x1f468", "#x200d", "#x1f467", "#x200d", "#x1f467"],
                        ":family-woman-woman-girl-boy:": ["#x1f469", "#x200d", "#x1f469", "#x200d", "#x1f467", "#x200d", "#x1f466"],
                        ":family-woman-woman-boy-boy:": ["#x1f469", "#x200d", "#x1f469", "#x200d", "#x1f466", "#x200d", "#x1f466"],
                        ":family-woman-woman-girl-girl:": ["#x1f469", "#x200d", "#x1f469", "#x200d", "#x1f467", "#x200d", "#x1f467"],
                        ":family-woman-woman-boy:": ["#x1f469", "#x200d", "#x1f469", "#x200d", "#x1f466"],
                        ":family-woman-woman-girl:": ["#x1f469", "#x200d", "#x1f469", "#x200d", "#x1f467"],
                        ":see-no-evil:": ["#x1f648"],
                        ":hear-no-evil:": ["#x1f649"],
                        ":speak-no-evil:": ["#x1f64a"],
                        ":fire:": ["#x1f525"],
                        ":sparkles:": ["#x2728"],
                        ":star2:": ["#x1f31f"],
                        ":droplet:": ["#x1f4a7"],
                        ":tophat:": ["#x1f3a9"],
                        ":crown:": ["#x1f451"],
                        ":womans-hat:": ["#x1f452"],
                        ":athletic-shoe:": ["#x1f45f"],
                        ":mans-shoe:": ["#x1f45e"],
                        ":sandal:": ["#x1f461"],
                        ":high-heel:": ["#x1f460"],
                        ":boot:": ["#x1f462"],
                        ":shirt:": ["#x1f455"],
                        ":necktie:": ["#x1f454"],
                        ":womans-clothes:": ["#x1f45a"],
                        ":dress:": ["#x1f457"],
                        ":running-shirt-with-sash:": ["#x1f3bd"],
                        ":jeans:": ["#x1f456"],
                        ":kimono:": ["#x1f458"],
                        ":bikini:": ["#x1f459"],
                        ":briefcase:": ["#x1f4bc"],
                        ":handbag:": ["#x1f45c"],
                        ":pouch:": ["#x1f45d"],
                        ":purse:": ["#x1f45b"],
                        ":eyeglasses:": ["#x1f453"],
                        ":ribbon:": ["#x1f380"],
                        ":closed-umbrella:": ["#x1f302"],
                        ":gem:": ["#x1f48e"],
                        ":speech-balloon:": ["#x1f4ac"],
                        ":open-hands:": ["#x1f450"],
                        ":raised-hands:": ["#x1f64c"],
                        ":clap:": ["#x1f44f"],
                        ":thumbs-up:": ["#x1f44d"],
                        ":thumbs-down:": ["#x1f44e"],
                        ":oncoming-fist:": ["#x1f44A"],
                        ":fist:": ["#x270A"],
                        ":sign-of-horns:": ["#x1f918"],
                        ":ok-hand:": ["#x1f44c"],
                        ":point-left:": ["#x1f448"],
                        ":point-right:": ["#x1f449"],
                        ":point-up-2:": ["#x1f446"],
                        ":point-down:": ["#x1f447"],
                        ":raised-hand:": ["#x270B"],
                        ":spayed-fingers:": ["#x1f590"],
                        ":vulcan-salute:": ["#x1f596"],
                        ":wave:": ["#x1f44b"],
                        ":muscle:": ["#x1f4aa"],
                        ":middle-finger:": ["#x1f595"],
                        ":pray:": ["#x1f64f"],
                        ":ring:": ["#x1f48d"],
                        ":lipstick:": ["#x1f484"],
                        ":kiss:": ["#x1f48b"],
                        ":lips:": ["#x1f444"],
                        ":tongue:": ["#x1f445"],
                        ":ear:": ["#x1f442"],
                        ":nose:": ["#x1f443"],
                        ":footprints:": ["#x1f463"],
                        ":eye:": ["#x1f441"],
                        ":eyes:": ["#x1f440"],
                        ":speaking-head:": ["#x1f5e3"],
                        ":bust-in-silhouette:": ["#x1f464"],
                        ":busts-in-silhouette:": ["#x1f465"],
                        ":dog:": ["#x1f436"],
                        ":wolf:": ["#x1f43a"],
                        ":cat:": ["#x1f431"],
                        ":mouse:": ["#x1f42d"],
                        ":hamster:": ["#x1f439"],
                        ":rabbit:": ["#x1f430"],
                        ":frog:": ["#x1f438"],
                        ":tiger:": ["#x1f42f"],
                        ":koala:": ["#x1f428"],
                        ":bear:": ["#x1f43b"],
                        ":pig:": ["#x1f437"],
                        ":pig-nose:": ["#x1f43d"],
                        ":cow:": ["#x1f42e"],
                        ":boar:": ["#x1f417"],
                        ":monkey-face:": ["#x1f435"],
                        ":monkey:": ["#x1f412"],
                        ":horse:": ["#x1f434"],
                        ":sheep:": ["#x1f411"],
                        ":elephant:": ["#x1f418"],
                        ":panda-face:": ["#x1f43c"],
                        ":penguin:": ["#x1f427"],
                        ":bird:": ["#x1f426"],
                        ":baby-chick:": ["#x1f424"],
                        ":hatched-chick:": ["#x1f425"],
                        ":hatching-chick:": ["#x1f423"],
                        ":chicken:": ["#x1f414"],
                        ":snake:": ["#x1f40d"],
                        ":turtle:": ["#x1f422"],
                        ":bug:": ["#x1f41b"],
                        ":bee:": ["#x1f41d"],
                        ":ant:": ["#x1f41c"],
                        ":beetle:": ["#x1f41e"],
                        ":snail:": ["#x1f40c"],
                        ":octopus:": ["#x1f419"],
                        ":shell:": ["#x1f41a"],
                        ":tropical-fish:": ["#x1f420"],
                        ":fish:": ["#x1f41f"],
                        ":dolphin:": ["#x1f42c"],
                        ":whale:": ["#x1f433"],
                        ":racehorse:": ["#x1f40e"],
                        ":dragon-face:": ["#x1f432"],
                        ":blowfish:": ["#x1f421"],
                        ":camel:": ["#x1f42b"],
                        ":poodle:": ["#x1f429"],
                        ":feet:": ["#x1f43e"],
                        ":bouquet:": ["#x1f490"],
                        ":cherry-blossom:": ["#x1f338"],
                        ":tulip:": ["#x1f337"],
                        ":four-leaf-clover:": ["#x1f340"],
                        ":rose:": ["#x1f339"],
                        ":sunflower:": ["#x1f33b"],
                        ":hibiscus:": ["#x1f33a"],
                        ":maple-leaf:": ["#x1f341"],
                        ":leaves:": ["#x1f343"],
                        ":fallen-leaf:": ["#x1f342"],
                        ":herb:": ["#x1f33f"],
                        ":ear-of-rice:": ["#x1f33e"],
                        ":mushroom:": ["#x1f344"],
                        ":cactus:": ["#x1f335"],
                        ":palm-tree:": ["#x1f334"],
                        ":chestnut:": ["#x1f330"],
                        ":seedling:": ["#x1f331"],
                        ":blossom:": ["#x1f33c"],
                        ":new-moon:": ["#x1f311"],
                        ":first-quarter-moon:": ["#x1f313"],
                        ":moon:": ["#x1f314"],
                        ":full-moon:": ["#x1f315"],
                        ":first-quarter-moon-with-face:": ["#x1f31b"],
                        ":crescent-moon:": ["#x1f319"],
                        ":earth-asia:": ["#x1f30f"],
                        ":volcano:": ["#x1f30b"],
                        ":milky-way:": ["#x1f30c"],
                        ":stars:": ["#x1f320"],
                        ":partly-sunny:": ["#x26C5"],
                        ":snowman:": ["#x26C4"],
                        ":cyclone:": ["#x1f300"],
                        ":foggy:": ["#x1f301"],
                        ":rainbow:": ["#x1f308"],
                        ":ocean:": ["#x1f30a"],
                        ":house:": ["#x1f3e0"],
                        ":house-with-garden:": ["#x1f3e1"],
                        ":school:": ["#x1f3eb"],
                        ":office:": ["#x1f3e2"],
                        ":post-office:": ["#x1f3e3"],
                        ":hospital:": ["#x1f3e5"],
                        ":bank:": ["#x1f3e6"],
                        ":convenience-store:": ["#x1f3ea"],
                        ":love-hotel:": ["#x1f3e9"],
                        ":hotel:": ["#x1f3e8"],
                        ":wedding:": ["#x1f492"],
                        ":church:": ["#x26EA"],
                        ":department-store:": ["#x1f3ec"],
                        ":city-sunrise:": ["#x1f307"],
                        ":city-sunset:": ["#x1f306"],
                        ":japanese-castle:": ["#x1f3ef"],
                        ":european-castle:": ["#x1f3f0"],
                        ":tent:": ["#x26FA"],
                        ":factory:": ["#x1f3ed"],
                        ":tokyo-tower:": ["#x1f5fc"],
                        ":japan:": ["#x1f5fe"],
                        ":mount-fuji:": ["#x1f5fb"],
                        ":sunrise-over-mountains:": ["#x1f304"],
                        ":sunrise:": ["#x1f305"],
                        ":night-with-stars:": ["#x1f303"],
                        ":statue-of-liberty:": ["#x1f5fd"],
                        ":bridge-at-night:": ["#x1f309"],
                        ":carousel-horse:": ["#x1f3a0"],
                        ":ferris-wheel:": ["#x1f3a1"],
                        ":fountain:": ["#x26F2"],
                        ":roller-coaster:": ["#x1f3a2"],
                        ":ship:": ["#x1f6a2"],
                        ":boat:": ["#x26F5"],
                        ":speedboat:": ["#x1f6a4"],
                        ":rocket:": ["#x1f680"],
                        ":seat:": ["#x1f4ba"],
                        ":station:": ["#x1f689"],
                        ":high-speed-train:": ["#x1f684"],
                        ":bullet-train:": ["#x1f685"],
                        ":metro:": ["#x1f687"],
                        ":railway-car:": ["#x1f683"],
                        ":bus:": ["#x1f68c"],
                        ":blue-car:": ["#x1f699"],
                        ":car:": ["#x1f697"],
                        ":taxi:": ["#x1f695"],
                        ":truck:": ["#x1f69a"],
                        ":rotating-light:": ["#x1f6a8"],
                        ":police-car:": ["#x1f693"],
                        ":fire-engine:": ["#x1f692"],
                        ":ambulance:": ["#x1f691"],
                        ":bike:": ["#x1f6b2"],
                        ":barber-pole:": ["#x1f488"],
                        ":busstop:": ["#x1f68f"],
                        ":ticket:": ["#x1f3ab"],
                        ":traffic-light:": ["#x1f6a5"],
                        ":construction:": ["#x1f6a7"],
                        ":beginner:": ["#x1f530"],
                        ":fuelpump:": ["#x26FD"],
                        ":izakaya-lantern:": ["#x1f3ee"],
                        ":slot-machine:": ["#x1f3b0"],
                        ":moyai:": ["#x1f5ff"],
                        ":circus-tent:": ["#x1f3aa"],
                        ":performing-arts:": ["#x1f3ad"],
                        ":round-pushpin:": ["#x1f4cd"],
                        ":triangular-flag-on-post:": ["#x1f6a9"],
                        ":red-heart:": ["#x2764", "#xfe0f"],
                        ":yellow-heart:": ["#x1f49b"],
                        ":blue-heart:": ["#x1f499"],
                        ":purple-heart:": ["#x1f49c"],
                        ":green-heart:": ["#x1f49a"],
                        ":broken-heart:": ["#x1f494"],
                        ":heart-exclamation:": ["#x2763", "#xfe0f"],
                        ":two-hearts:": ["#x1f495"],
                        ":revolving-hearts:": ["#x1f49e"],
                        ":heartbeat:": ["#x1f493"],
                        ":heartpulse:": ["#x1f497"],
                        ":sparkling-heart:": ["#x1f496"],
                        ":cupid:": ["#x1f498"],
                        ":gift-heart:": ["#x1f49d"],
                        ":heart-decoration:": ["#x1f49f"],
                        ":love-letter:": ["#x1f48c"],
                        ":dizzy:": ["#x1f4ab"],
                        ":boom:": ["#x1f4a5"],
                        ":anger:": ["#x1f4a2"],
                        ":sweat-drops:": ["#x1f4a6"],
                        ":zzz:": ["#x1f4a4"],
                        ":dash:": ["#x1f4a8"],
                        ":hole:": ["#x1f573", "#xfe0f"],
                        ":peace-symbol:": ["#x262e", "#xfe0f"],
                        ":latin-cross:": ["#x271d", "#xfe0f"],
                        ":crescent-and-star:": ["#x262a", "#xfe0f"],
                        ":om:": ["#x1f549", "#xfe0f"],
                        ":wheel-of-dharma:": ["#x2638", "#xfe0f"],
                        ":star-of-david:": ["#x2721", "#xfe0f"],
                        ":star-with-middle-point:": ["#x1f52f"],
                        ":menorah:": ["#x1f54e"],
                        ":yin-yang:": ["#x262f", "#xfe0f"],
                        ":orthodox-cross:": ["#x2626", "#xfe0f"],
                        ":place-of-workship:": ["#x1f6d0"],
                        ":ophiuchus:": ["#x26ce"],
                        ":aries:": ["#x2648"],
                        ":taurus:": ["#x2649"],
                        ":gemini:": ["#x264a"],
                        ":cancer:": ["#x264b"],
                        ":leo:": ["#x264c"],
                        ":virgo:": ["#x264d"],
                        ":libra:": ["#x264e"],
                        ":scorpius:": ["#x264f"],
                        ":sagittarius:": ["#x2650"],
                        ":capricorn:": ["#x2651"],
                        ":aquarius:": ["#x2652"],
                        ":pisces:": ["#x2653"],
                        ":squared-id:": ["#x1f194"],
                        ":atom:": ["#x269b", "#xfe0f"],
                        ":japanese-vacancy-button:": ["#x1f233"],
                        ":japanese-discount-button:": ["#x1f239"],
                        ":radioactive:": ["#x2622", "#xfe0f"],
                        ":biohazard:": ["#x2623", "#xfe0f"],
                        ":japanese-not-free-of-charge-button:": ["#x1f236"],
                        ":japanese-free-of-charge-button:": ["#x1f21a"],
                        ":japanese-application-button:": ["#x1f238"],
                        ":japanese-open-for-business-button:": ["#x1f23a"],
                        ":japanese-monthly-amount:": ["#x1f237", "#xfe0f"],
                        ":eight-pointed-star:": ["#x2734", "#xfe0f"],
                        ":vs-button:": ["#x1f19a"],
                        ":japanese-acceptable-button:": ["#x1f251"],
                        ":white-flower:": ["#x1f4ae"],
                        ":japanese-bargain-button:": ["#x1f250"],
                        ":japanese-secret-button:": ["#x3299", "#xfe0f"],
                        ":japanese-congratulations-button:": ["#x3297", "#xfe0f"],
                        ":japanese-passing-grade-button:": ["#x1f234"],
                        ":japanese-no-vacancy-button:": ["#x1f235"],
                        ":japanese-prohibited-button:": ["#x1f232"],
                        ":baby-symbol:": ["#x1f6bc"],
                        ":a-group-blood": ["#x1f170", "#xfe0f"],
                        ":b-group-blood:": ["#x1f171", "#xfe0f"],
                        ":o-group-blood:": ["#x1f17e", "#xfe0f"],
                        ":cl-button:": ["#x1f191"],
                        ":sos-button:": ["#x1f198"],
                        ":no-entry:": ["#x26d4"],
                        ":name-badge:": ["#x1f4db"],
                        ":heavy-circle:": ["#x2b55"],
                        ":prohibited:": ["#x1f6ab"],
                        ":muted:": ["#x1f507"],
                        ":bell-with-slash:": ["#x1f515"],
                        ":no-smoking:": ["#x1f6ad"],
                        ":no-pedestrains:": ["#x1f6b7"],
                        ":no-littering:": ["#x1f6af"],
                        ":no-bicycle:": ["#x1f6b3"],
                        ":non-potable-water:": ["#x1f6b1"],
                        ":no-one-under-18:": ["#x1f51e"],
                        ":no-mobile-phones:": ["#x1f4f5"],
                        ":exclamation-mark:": ["#x2757"],
                        ":white-exclamation-mark:": ["#x2755"],
                        ":question-mark:": ["#x2753"],
                        ":white-question-mark:": ["#x2754"],
                        ":hundred-points:": ["#x1f4af"],
                        ":dim-button:": ["#x1f505"],
                        ":bright-button:": ["#x1f506"],
                        ":trident:": ["#x1f531"],
                        ":fleur-de-lis:": ["#x269c", "#xfe0f"],
                        ":part-alternation-mark:": ["#x303d", "#xfe0f"],
                        ":warning:": ["#x26a0", "#xfe0f"],
                        ":children-crossing:": ["#x1f6b8"],
                        ":japanese-beginner-button:": ["#x1f530"],
                        ":recycling:": ["#x267b", "#xfe0f"],
                        ":japanese-reserved-button:": ["#x1f22f"],
                        ":chart-increasing-with-yen:": ["#x1f4b9"],
                        ":sparkle:": ["#x2747", "#xfe0f"],
                        ":eight-spoked-asterisk:": ["#x2733", "#xfe0f"],
                        ":white-heavy-check-mark:": ["#x2705"],
                        ":cross-mark:": ["#x274c"],
                        ":diamond-with-dot:": ["#x1f4a0"],
                        ":globe-with-meridians:": ["#x1f310"],
                        ":circled-m:": ["#x24c2", "#xfe0f"],
                        ":japanese-service-charge-button:": ["#x1f202", "#xfe0f"],
                        ":double-curly-loop:": ["#x27bf"],
                        ":passport-control:": ["#x1f6c2"],
                        ":customs:": ["#x1f6c3"],
                        ":baggage-claim:": ["#x1f6c4"],
                        ":left-luggage:": ["#x1f6c5"],
                        ":wheel-chair:": ["#x267f"],
                        ":water-closet:": ["#x1f6be"],
                        ":p-button:": ["#x1f17f", "#xfe0f"],
                        ":potable-water:": ["#x1f6b0"],
                        ":men-room:": ["#x1f6b9"],
                        ":women-room:": ["#x1f6ba"],
                        ":restroom:": ["#x1f6bb"],
                        ":litter-in-bin:": ["#x1f6ae"],
                        ":antenna-bars:": ["#x1f4f6"],
                        ":japanese-here-button:": ["#x1f201"],
                        ":ng-button:": ["#x1f196"],
                        ":ok-button:": ["#x1f197"],
                        ":up-button:": ["#x1f199"],
                        ":cool-button:": ["#x1f192"],
                        ":new-button:": ["#x1f195"],
                        ":free-button:": ["#x1f193"],
                        ":input-number:": ["#x1f522"],
                        ":pause-button:": ["#x23f8", "#xfe0f"],
                        ":pause-or-play-button:": ["#x23ef", "#xfe0f"],
                        ":stop-button:": ["#x23f9", "#xfe0f"],
                        ":record-button:": ["#x23fa"],
                        ":next-track-button:": ["#x23ed", "#xfe0f"],
                        ":last-track-button:": ["#x23ee", "#xfe0f"],
                        ":fast-forward:": ["#x23e9"],
                        ":fast-reverse:": ["#x23ea"],
                        ":shuffle-tracks-button:": ["#x1f500"],
                        ":repeat-button:": ["#x1f501"],
                        ":repeat-once-button:": ["#x1f502"],
                        ":reverse-button:": ["#x25c0", "#xfe0f"],
                        ":fast-up-button:": ["#x23eb"],
                        ":fast-down-button:": ["#x23ec"],
                        ":right-arrow:": ["#x27a1", "#xfe0f"],
                        ":left-arrow:": ["#x2b05", "#xfe0f"],
                        ":up-arrow:": ["#x2b06", "#xfe0f"],
                        ":down-arrow:": ["#x2b07", "#xfe0f"],
                        ":up-right-arrow:": ["#x2197", "#xfe0f"],
                        ":down-left-arrow:": ["#x2199", "#xfe0f"],
                        ":counter-clockwise-arrows:": ["#x1f504"],
                        ":left-arrow-curving-right:": ["#x21aa", "#xfe0f"],
                        ":right-arrow-curving-left:": ["#x21a9", "#xfe0f"],
                        ":right-arrow-curving-up:": ["#x2934", "#xfe0f"],
                        ":right-arrow-curving-down:": ["#x2935", "#xfe0f"],
                        ":info-button:": ["#x2139", "#xfe0f"],
                        ":input-latin-letters:": ["#x1f524"],
                        ":input-latin-lowercase:": ["#x1f521"],
                        ":input-latin-uppercase:": ["#x1f520"],
                        ":input-symbols:": ["#x1f523"],
                        ":play-button:": ["#x25b6", "#xfe0f"],
                        ":eject-button:": ["#x23cf", "#xfe0f"],
                        ":down-right-arrow:": ["#x2198", "#xfe0f"],
                        ":up-left-arrow:": ["#x2196", "#xfe0f"],
                        ":clockwise-vertical-arrows:": ["#x1f503"],
                        ":on-arrow:": ["#x1f51b"],
                        ":top-arrow:": ["#x1f51d"],
                        ":soon-arrow:": ["#x1f51c"],
                        ":ballot-box-with-check:": ["#x2611", "#xfe0f"],
                        ":end-arrow:": ["#x1f51a"],
                        ":back-arrow:": ["#x1f519"],
                        ":wavy-dash:": ["#x3030", "#xfe0f"],
                        ":curly-loop:": ["#x27b0"],
                        ":heavy-check-mark:": ["#x2714", "#xfe0f"],
                        ":heavy-dollar-sign:": ["#x1f4b2"],
                        ":currency-exchange:": ["#x1f4b1"],
                        ":heavy-plus-sign:": ["#x2795"],
                        ":heavy-minus-sign:": ["#x2796"],
                        ":heavy-multiplication-sign:": ["#x2716", "#xfe0f"],
                        ":heavy-division-sign:": ["#x2797"],
                        ":copyright:": ["#xa9", "#xfe0f"],
                        ":registered:": ["#xae", "#xfe0f"],
                        ":trade-mark:": ["#x2122", "#xfe0f"],
                        ":radio-button:": ["#x1f518"],
                        ":white-circle:": ["#x26aa"],
                        ":black-circle:": ["#x26ab"],
                        ":red-circle:": ["#x1f534"],
                        ":blue-circle:": ["#x1f535"],
                        ":small-orange-diamond:": ["#x1f538"],
                        ":small-blue-diamond:": ["#x1f539"],
                        ":large-orange-diamond:": ["#x1f536"],
                        ":large-blue-diamond:": ["#x1f537"],
                        ":red-triangle-pointed-up:": ["#x1f53a"],
                        ":red-triangle-pointed-down:": ["#x1f53b"],
                        ":upwards-button:": ["#x1f53c"],
                        ":downwards-button:": ["#x1f53d"],
                        ":black-medium-small-square:": ["#x25fe"],
                        ":white-medium-small-square:": ["#x25fd"],
                        ":black-large-square:": ["#x2b1b"],
                        ":white-large-square:": ["#x2b1c"],
                        ":black-medium-square:": ["#x25fc", "#xfe0f"],
                        ":white-medium-square:": ["#x25fb", "#xfe0f"],
                        ":black-small-square:": ["#x25aa", "#xfe0f"],
                        ":white-small-square:": ["#x25ab", "#xfe0f"],
                        ":black-square-button:": ["#x1f533"],
                        ":white-square-button:": ["#x1f532"],
                        ":twelve-o-clock:": ["#x1f55b"],
                        ":twelve-thirty:": ["#x1f567"],
                        ":one-o-clock:": ["#x1f550"],
                        ":one-thirty:": ["#x1f55c"],
                        ":two-o-clock:": ["#x1f551"],
                        ":two-thirty:": ["#x1f55d"],
                        ":three-o-clock:": ["#x1f552"],
                        ":three-thirty:": ["#x1f55e"],
                        ":four-o-clock:": ["#x1f553"],
                        ":four-thirty:": ["#x1f55f"],
                        ":five-o-clock:": ["#x1f554"],
                        ":five-thirty:": ["#x1f560"],
                        ":six-o-clock:": ["#x1f555"],
                        ":six-thirty:": ["#x1f561"],
                        ":seven-o-clock:": ["#x1f556"],
                        ":seven-thirty:": ["#x1f562"],
                        ":eight-o-clock:": ["#x1f557"],
                        ":eight-thirty:": ["#x1f563"],
                        ":nine-o-clock:": ["#x1f558"],
                        ":nine-thirty:": ["#x1f564"],
                        ":ten-o-clock:": ["#x1f559"],
                        ":ten-thirty:": ["#x1f565"],
                        ":eleven-o-clock:": ["#x1f55a"],
                        ":eleven-thirty:": ["#x1f566"]
                    }, this.symbol_lookup = {
                        ":)": ":smile:",
                        ":-)": ":smile:",
                        ":^)": ":smile:",
                        ":]": ":smile:",
                        ":(": ":sad:",
                        ":-(": ":sad:",
                        ":[": ":sad:",
                        ":D": ":happy:",
                        ":d": ":happy:",
                        ":-D": ":happy:",
                        ":))": ":happy:",
                        ":-))": ":happy:",
                        "X-(": ":angry:",
                        ":-@": ":angry:",
                        ":@": ":angry:",
                        ":P": ":razz:",
                        ":-p": ":razz:",
                        ":p": ":razz:",
                        ";)": ":wink:",
                        ";-)": ":wink:",
                        ":/": ":smirk:",
                        ":-/": ":smirk:",
                        ":o": ":surprise:",
                        ":-o": ":surprise:",
                        ":O": ":surprise:",
                        ":-O": ":surprise:",
                        ":-s": ":worry:",
                        ":s": ":worry:",
                        ":-S": ":worry:",
                        ":S": ":worry:",
                        "I-)": ":sleepy:",
                        "|-)": ":sleepy:",
                        ":-X": ":keep-quiet:",
                        ":-x": ":keep-quiet:",
                        ":-#": ":keep-quiet:",
                        "(a)": ":peace:",
                        "(A)": ":peace:",
                        "O-)": ":peace:",
                        "O:)": ":peace:",
                        "O:-)": ":peace:",
                        ":+1:": ":thumbsup:",
                        "(y)": ":thumbsup:",
                        "(Y)": ":thumbsup:",
                        ":x-": ":thumbsup:",
                        ":yes:": ":thumbsup:",
                        ":agree:": ":thumbsup:",
                        ":like:": ":thumbsup:",
                        ":yes!:": ":thumbsup!:",
                        ":agree!:": ":thumbsup!:",
                        ":like!:": ":thumbsup!:",
                        ":-1:": ":thumbsdown:",
                        "(N)": ":thumbsdown:",
                        "(n)": ":thumbsdown:",
                        ":no:": ":thumbsdown:",
                        ":disagree:": ":thumbsdown:",
                        ":dislike:": ":thumbsdown:",
                        ":no!:": ":thumbsdown!:",
                        ":disagree!:": ":thumbsdown!:",
                        ":dislike!:": ":thumbsdown!:",
                        "B-)": ":cool:",
                        ":xs": ":love:",
                        ":-?": ":thinking:",
                        "*-:)": ":idea:",
                        "-_-": ":relaxed:",
                        "D:": ":anxious:",
                        "-.-": ":stressed-out:",
                        "(=_=)": ":tired:",
                        "?D": ":doubt:",
                        "(6.6)": ":faint:",
                        "(({..}))": ":headache:",
                        "+o(": ":sick:",
                        ":-{}": ":feeling-cold:",
                        ":v:": ":victory:",
                        "C(_)": ":coffee-cup:",
                        ":down-arrow:": ["disagree", "-1", "no", "dislike"],
                        ":up-arrow:": ["agree", "+1", "yes", "like"],
                        ":white-heavy-check-mark:": ["agree", "+1", "yes", "like"],
                        ":cross-mark:": ["disagree", "-1", "no", "dislike"],
                        ":heavy-plus-sign:": ["agree", "+1", "yes", "like"],
                        ":heavy-minus-sign:": ["disagree", "-1", "no", "dislike"]
                    }, this.textcodes = ["smile!", "happy!", "joy!", "grinning!", "cool!", "love!", "curious!", "awe!", "thinking!", "search!", "idea!", "wink!", "razz!", "relaxed!", "peace!", "blush!", "yummy!", "yuck!", "sad!", "upset!", "anxious!", "worry!", "stressed-out!", "angry!", "tensed!", "tired!", "bored!", "sleepy!", "jealous!", "evil!", "facepalm!", "doubt!", "surprise!", "faint!", "headache!", "sick!", "injured!", "neutral!", "smirk!", "keep-quiet!", "feeling-warm!", "feeling-cold!", "hi!", "thumbsup!", "thumbsdown!", "namaste!", "super!", "victory!", "yoyo!", "raising-hand!", "clap!", "bye-bye!", "fist!", "biceps!", "thumbsup-tone1", "thumbsdown-tone1", "namaste-tone1", "super-tone1", "victory-tone1", "yoyo-tone1", "raising-hand-tone1", "clap-tone1", "hi-tone1", "bye-bye-tone1", "fist-tone1", "biceps-tone1", "thumbsup-tone2", "thumbsdown-tone2", "namaste-tone2", "super-tone2", "victory-tone2", "yoyo-tone2", "raising-hand-tone2", "clap-tone2", "hi-tone2", "bye-bye-tone2", "fist-tone2", "biceps-tone2", "thumbsup-tone3", "thumbsdown-tone3", "namaste-tone3", "super-tone3", "victory-tone3", "yoyo-tone3", "raising-hand-tone3", "clap-tone3", "hi-tone3", "bye-bye-tone3", "fist-tone3", "biceps-tone3", "thumbsup-tone4", "thumbsdown-tone4", "namaste-tone4", "super-tone4", "victory-tone4", "yoyo-tone4", "raising-hand-tone4", "clap-tone4", "hi-tone4", "bye-bye-tone4", "fist-tone4", "biceps-tone4", "thumbsup-tone5", "thumbsdown-tone5", "namaste-tone5", "super-tone5", "victory-tone5", "yoyo-tone5", "raising-hand-tone5", "clap-tone5", "hi-tone5", "bye-bye-tone5", "fist-tone5", "biceps-tone5", "birthday!", "champagne", "chicken", "chicken!", "christmas-tree!", "coffee-cup!", "eid-mubarak!", "fireworks!", "food!", "gift-box!", "kaaba!", "new-year!", "party!", "peanuts!", "santa-hat!", "fire!", "fire-extinguisher", "first-aid-box", "medicine!", "poop!", "gold-medal", "silver-medal", "bronze-medal", "archer", "archer!", "refugee-olympic-team", "badminton!", "baseball!", "basketball!", "boxer!", "canoeing!", "chess!", "cricket!", "discus-throw!", "diver!", "equestrian!", "fencer!", "flag!", "foosball!", "football!", "golf", "golf!", "hammer-throw", "high-jump!", "hockey!", "hurdler!", "javelin-throw!", "judo!", "long-jump!", "pole-vault!", "athlete!", "rhythmic-gymnastics!", "shooter", "shooter!", "shotput-throw!", "snooker!", "table-tennis!", "target", "target!", "tennis", "tennis!", "volleyball", "volleyball!", "weightlifting", "weightlifting!", "wrestling", "wrestling!", "badminton-player", "badminton-player!", "basketball-player", "basketball-player!", "batsman", "batsman!", "batter", "batter!", "bowler", "break-boy", "break-boy!", "break-girl", "break-girl!", "chess-player", "chess-player!", "football-player", "football-player!", "female-tennis-player", "female-tabletennis-player", "female-volleyball-player", "female-tennis-player!", "female-tabletennis-player!", "female-volleyball-player!", "golfer", "golfer!", "gymnast", "gymnast!", "hockey-player", "hockey-player!", "karate", "karate!", "man-dancing", "man-dancing!", "man-cycling", "man-cycling!", "man-running", "man-running!", "man-swimming", "man-swimming!", "male-tabletennis-player", "male-volleyball-player", "male-tennis-player", "male-tabletennis-player!", "male-volleyball-player!", "male-tennis-player!", "pitcher", "pitcher!", "singing", "singing!", "snooker-player", "snooker-player!", "woman-dancing", "woman-cycling", "woman-running", "woman-swimming", "woman-dancing!", "woman-cycling!", "woman-running!", "woman-swimming!", "yoga", "yoga!", "bicycle", "bicycle!", "sports-bike", "sports-bike!", "cruiser-bike", "cruiser-bike!", "motor-scooter", "motor-scooter!", "car", "car!", "taxi", "taxi!", "bus", "bus!", "train", "train!", "police-car", "police-car!", "ambulance", "ambulance!", "fire-engine", "fire-engine!", "aeroplane", "aeroplane!", "passenger-ship", "passenger-ship!", "parking", "cafeteria", "bug", "milestone", "calendar", "security", "processor", "laptop", "server", "garden", "playground", "home", "office", "library", "auditorium", "store", "mail-room", "pharmacy", "task", "report", "gym", "americas", "europe-africa", "asia-pacific", "afghanistan", "aland-islands", "albania", "algeria", "american-samoa", "andorra", "angola", "anguilla", "antarctica", "antigua-and-barbuda", "argentina", "armenia", "aruba", "australia", "austria", "azerbaijan", "bahamas", "bahrain", "bangladesh", "barbados", "belarus", "belgium", "belize", "benin", "bermuda", "bhutan", "bolivia", "bonaire", "bosnia-and-herzegovina", "botswana", "brazil", "british-antarctic", "british-indian-ocean-territory", "british-virgin", "brunei-darussalam", "bulgaria", "burkina-faso", "burundi", "cambodia", "cameroon", "canada", "cape-verde", "cascadia", "cayman-islands", "central-african-republic", "chad", "chile", "china", "christmas-island", "cocos", "colombia", "comoros", "congo-kinshasa", "congo", "cook-islands", "costa-rica", "croatian", "cuba", "curacao", "cyprus", "czech-republic", "denmark", "djibouti", "dominican-republic", "east-timor", "ecuador", "egypt", "el-salvador", "england", "equatorial-guinea", "eritrea", "estonia", "ethiopia", "european-union", "yugoslavia", "falkland-islands", "faroe-islands", "fiji", "finland", "france", "french-polynesia", "french-southern", "gabon", "gambia", "georgia", "germany", "ghana", "gibraltar", "greece", "greenland", "grenada", "guadeloupe", "guam", "guatemala", "guernsey", "guinea-bissau", "guinea", "guyana", "haiti", "honduras", "hong-kong", "hungary", "iceland", "india", "indonesia", "iran", "iraq", "ireland", "isle-of-man", "israel", "italy", "ivory-coast", "jamaica", "japan", "jersey", "jordan", "kazakhstan", "kenya", "kiribati", "kosovo", "kuwait", "kyrgyzstan", "laos", "latvia", "lebanon", "lesotho", "liberia", "libya", "liechtenstein", "lithuania", "luxembourg", "macau", "macedonia", "madagascar", "malawi", "malaysia", "maldives", "mali", "malta", "marshall-islands", "martinique", "mauritania", "mauritius", "mayotte", "mexico", "micronesia", "moldova", "monaco", "mongolia", "montenegro", "montserrat", "morocco", "mozambique", "myanmar", "namibia", "nauru", "nepal", "netherlands-antilles", "netherlands", "new-caledonia", "new-zealand", "nicaragua", "niger", "nigeria", "niue", "norfolk-island", "north-korea", "northern-ireland", "northern-mariana", "norway", "oman", "pakistan", "palau", "palestinian-territory", "panama", "papua-new-guinea", "paraguay", "peru", "philippines", "pitcairn", "poland", "portugal", "puerto-rico", "qatar", "reunion", "romania", "russia", "rwanda", "saint-barthelemy", "saint-helena", "saint-kitts-and-nevis", "saint-lucia", "saint-pierre-and-miquelon", "saint-vincent-and-the-grenadines", "samoa", "san-marino", "sao-tome-and-principe", "saudi-arabia", "scotland", "senegal", "serbia", "seychelles", "sierra-leone", "singapore", "sint-eustatius", "sint-maarten", "slovakia", "slovenia", "solomon-islands", "somalia", "south-africa", "south-georgia", "south-korea", "south-sudan", "spain", "sri-lanka", "sudan", "suriname", "svalbard", "swaziland", "sweden", "switzerland", "syria", "tahiti", "taiwan", "tajikistan", "tanzania", "thailand", "timor-leste", "togo", "tokelau", "tonga", "trinidad-and-tobago", "tunisia", "turkey", "turkmenistan", "turks-and-caicos", "tuvalu", "uganda", "ukraine", "united-arab-emirates", "united-kingdom", "united-states-minor-outlying-islands", "united-states", "uruguay", "uzbekistan", "vanuatu", "vatican-city", "venezuela", "vietnam", "wales", "wallis-and-futuna", "yemen", "zambia", "zimbabwe"], "f" === this.type && (this.textcodes = ["smile!", "happy!", "joy!", "grinning!", "cool!", "love!", "curious!", "awe!", "thinking!", "search!", "idea!", "wink!", "razz!", "relaxed!", "peace!", "blush!", "yummy!", "yuck!", "sad!", "upset!", "anxious!", "worry!", "stressed-out!", "angry!", "tensed!", "tired!", "bored!", "sleepy!", "jealous!", "evil!", "facepalm!", "doubt!", "surprise!", "faint!", "headache!", "sick!", "injured!", "neutral!", "smirk!", "keep-quiet!", "feeling-warm!", "feeling-cold!", "hi!", "thumbsup!", "thumbsdown!", "namaste!", "super!", "victory!", "yoyo!", "raising-hand!", "clap!", "bye-bye!", "fist!", "biceps!", "birthday!", "champagne", "christmas-tree!", "coffee-cup!", "eid-mubarak!", "fireworks!", "food!", "gift-box!", "kaaba!", "new-year!", "party!", "peanuts!", "santa-hat!", "fire!", "medicine!", "poop!", "target!", "badminton!", "baseball!", "basketball!", "boxer!", "canoeing!", "chess!", "cricket!", "discus-throw!", "diver!", "equestrian!", "fencer!", "flag!", "foosball!", "football!", "high-jump!", "hockey!", "hurdler!", "javelin-throw!", "judo!", "long-jump!", "pole-vault!", "athlete!", "rhythmic-gymnastics!", "shooter", "shotput-throw!", "snooker!", "table-tennis!"]), this.frequentsmileys = {
                        work: [":smile:", ":happy:", ":joy:", ":love:", ":thinking:", ":surprise:", ":thumbsup:", ":thumbsdown:", ":namaste:", ":tensed:", ":biceps:", ":doubt:", ":super:", ":clap:", ":fireworks:", ":food:", ":gift-box:"],
                        emoji: [":grinning:", ":blush:", ":wink:", ":stuck-out-tongue-winking-eye:", ":flushed:", ":sob:", ":sweat-smile:", ":scream:", ":sunglasses:", ":raised-hands:", ":wave:", ":house-with-garden:", ":point-up-2:", ":dancer:", ":bouquet:", ":round-pushpin:", ":heavy-plus-sign:"],
                        animated: [":smile!:", ":happy!:", ":joy!:", ":love!:", ":thinking!:", ":surprise!:", ":thumbsup!:", ":thumbsdown!:", ":namaste!:", ":tensed!:", ":biceps!:", ":doubt!:", ":super!:", ":clap!:", ":fireworks!:", ":food!:", ":gift-box!:"],
                        customemoji: [],
                        sticker: []
                    }, this.textcodes_lookup = {}, this.textcodes.forEach((function(e) {
                        if (this.textcodes_lookup[":" + e.replace("!", "") + ":"] = re("smiley." + e.replace("!", "")) ? re("smiley." + e.replace("!", "")).trim() : re("smiley." + e.replace("!", "")), "!" === e.charAt(e.length - 1) && !1 === this.animation_disabled) {
                            var t = e.replace("!", "");
                            this.textcodes_lookup[":" + e + ":"] = re("smiley." + t) ? re("smiley." + t).trim() : re("smiley." + t)
                        }
                    }), this), this.smiley_lookup = {}, this.symbol_lookup) o in this.emoji_lookup || (this.smiley_lookup[o] = re("smiley." + this.symbol_lookup[o]) ? re("smiley." + this.symbol_lookup[o]).trim() : re("smiley." + this.symbol_lookup[o]));
                for (var r in this.textcodes_lookup) this.smiley_lookup[r] = this.textcodes_lookup[r];
                var l = "";
                for (var d in this.smiley_lookup) "" !== l ? l += "|" + d : l = d;
                l = "(" + (l = (l = l.replace(/\|-\)/g, "\\|-)")).replace(/[[\]()*+.?^]/g, (function(e) {
                    return "\\" + e
                }))) + ")", this.smiley_regex = new RegExp("([ >\n]|^)" + l + "(?=[ <\n]|$)", "g"), this.checkAndRemoveSkinToneCodes(), this.skintone_for_emoji = {
                    0: "",
                    1: "#x1F3FB",
                    2: "#x1F3FC",
                    3: "#x1F3FD",
                    4: "#x1F3FE",
                    5: "#x1F3FF"
                }, this.skintone_supported_unicode_emojis = [":baby:", ":girl:", ":boy:", ":woman:", ":man:", ":older-woman:", ":older-man:", ":man-with-gua-pi-mao:", ":man-with-turban:", ":person-with-blond-hair:", ":man-with-turban:", ":person-shrug:", ":cop:", ":construction-worker:", ":guardsman:", ":detective:", ":bride-in-veil:", ":princess:", ":santa:", ":angel:", ":bow:", ":information-desk-person:", ":no-good:", ":ok-woman:", ":raising-hand:", ":person-with-pouting-face:", ":person-frowning:", ":haircut:", ":massage:", ":nail-care:", ":dancer:", ":levitating-man:", ":walking:", ":runner:", ":couple:", ":boys:", ":girls:", ":couplekiss:", ":couple-with-heart:", ":open-hands:", ":raised-hands:", ":clap:", ":thumbs-up:", ":thumbs-down:", ":oncoming-fist:", ":fist:", ":sign-of-horns:", ":ok-hand:", ":point-left:", ":point-right:", ":point-up-2:", ":point-down:", ":middle-finger:", ":raised-hand:", ":splayed-fingers:", ":crossed-fingers:", ":vulcan-salute:", ":wave:", ":muscle:", ":pray:", ":ear:", ":nose:"], this.skintone_supported_zomojis = [":thumbsup:", ":thumbsdown:", ":namaste:", ":super:", ":victory:", ":yoyo:", ":raising-hand:", ":clap:", ":hi:", ":bye-bye:", ":fist:", ":biceps:"], this.emoji_reverse_lookup = {};
                var c = function() {
                    var e = "";
                    s.emoji_lookup[u].forEach((function(t) {
                        "" !== e && (e += "-"), e += t.replace("#x", "")
                    })), e && (s.emoji_reverse_lookup[e] = u)
                };
                for (var u in this.emoji_lookup) c();
                this.emoji_regex = new RegExp("([\ud800-\udbff][\udc00-\udfff](?:[‍️][\ud800-\udbff][\udc00-\udfff]){2,}|👩(?:‍(?:(?:👩‍)?👧|(?:👩‍)?👦)|\ud83c[\udffb-\udfff])|👩‍(?:👩‍)?👦‍👦|👩‍(?:👩‍)?👧‍(?:\ud83d[\udc66\udc67])|🏳️‍🌈|(?:\ud83c[\udfc3\udfc4\udfca]|\ud83d[\udc6e\udc71\udc73\udc77\udc81\udc82\udc86\udc87\ude45-\ude47\ude4b\ude4d\ude4e\udea3\udeb4-\udeb6]|\ud83e[\udd26\udd37-\udd39\udd3d\udd3e\uddd6-\udddd])(?:\ud83c[\udffb-\udfff])‍[♀♂]️|👩(?:\ud83c[\udffb-\udfff])‍(?:\ud83c[\udf3e\udf73\udf93\udfa4\udfa8\udfeb\udfed]|\ud83d[\udcbb\udcbc\udd27\udd2c\ude80\ude92])|(?:\ud83c[\udfc3\udfc4\udfca]|\ud83d[\udc6e\udc6f\udc71\udc73\udc77\udc81\udc82\udc86\udc87\ude45-\ude47\ude4b\ude4d\ude4e\udea3\udeb4-\udeb6]|\ud83e[\udd26\udd37-\udd39\udd3c-\udd3e\uddd6-\udddf])‍[♀♂]️|🇽🇰|🇶🇦|🇴🇲|🇩(?:\ud83c[\uddea\uddec\uddef\uddf0\uddf2\uddf4\uddff])|🇷(?:\ud83c[\uddea\uddf4\uddf8\uddfa\uddfc])|🇨(?:\ud83c[\udde6\udde8\udde9\uddeb-\uddee\uddf0-\uddf5\uddf7\uddfa-\uddff])|(?:⛹|\ud83c[\udfcb\udfcc]|🕵)(?:️‍[♀♂]|(?:\ud83c[\udffb-\udfff])‍[♀♂])️|(?:👁️‍🗨|👩(?:\ud83c[\udffb-\udfff])‍[⚕⚖✈]|👩‍[⚕⚖✈]|👨(?:(?:\ud83c[\udffb-\udfff])‍[⚕⚖✈]|‍[⚕⚖✈]))️|🇲(?:\ud83c[\udde6\udde8-\udded\uddf0-\uddff])|👩‍(?:\ud83c[\udf3e\udf73\udf93\udfa4\udfa8\udfeb\udfed]|\ud83d[\udcbb\udcbc\udd27\udd2c\ude80\ude92]|❤️‍(?:💋‍(?:\ud83d[\udc68\udc69])|\ud83d[\udc68\udc69]))|🇱(?:\ud83c[\udde6-\udde8\uddee\uddf0\uddf7-\uddfb\uddfe])|🇯(?:\ud83c[\uddea\uddf2\uddf4\uddf5])|🇭(?:\ud83c[\uddf0\uddf2\uddf3\uddf7\uddf9\uddfa])|🇫(?:\ud83c[\uddee-\uddf0\uddf2\uddf4\uddf7])|[#*0-9]️⃣|🇧(?:\ud83c[\udde6\udde7\udde9-\uddef\uddf1-\uddf4\uddf6-\uddf9\uddfb\uddfc\uddfe\uddff])|🇦(?:\ud83c[\udde8-\uddec\uddee\uddf1\uddf2\uddf4\uddf6-\uddfa\uddfc\uddfd\uddff])|🇿(?:\ud83c[\udde6\uddf2\uddfc])|🇵(?:\ud83c[\udde6\uddea-\udded\uddf0-\uddf3\uddf7-\uddf9\uddfc\uddfe])|🇻(?:\ud83c[\udde6\udde8\uddea\uddec\uddee\uddf3\uddfa])|🇳(?:\ud83c[\udde6\udde8\uddea-\uddec\uddee\uddf1\uddf4\uddf5\uddf7\uddfa\uddff])|🏴󠁧󠁢(?:󠁷󠁬󠁳|󠁳󠁣󠁴|󠁥󠁮󠁧)󠁿|👨(?:‍(?:❤️‍(?:💋‍)?👨|(?:(?:\ud83d[\udc68\udc69])‍)?👦‍👦|(?:(?:\ud83d[\udc68\udc69])‍)?👧‍(?:\ud83d[\udc66\udc67])|\ud83c[\udf3e\udf73\udf93\udfa4\udfa8\udfeb\udfed]|\ud83d[\udcbb\udcbc\udd27\udd2c\ude80\ude92])|(?:\ud83c[\udffb-\udfff])‍(?:\ud83c[\udf3e\udf73\udf93\udfa4\udfa8\udfeb\udfed]|\ud83d[\udcbb\udcbc\udd27\udd2c\ude80\ude92]))|🇸(?:\ud83c[\udde6-\uddea\uddec-\uddf4\uddf7-\uddf9\uddfb\uddfd-\uddff])|🇰(?:\ud83c[\uddea\uddec-\uddee\uddf2\uddf3\uddf5\uddf7\uddfc\uddfe\uddff])|🇾(?:\ud83c[\uddea\uddf9])|🇮(?:\ud83c[\udde8-\uddea\uddf1-\uddf4\uddf6-\uddf9])|🇹(?:\ud83c[\udde6\udde8\udde9\uddeb-\udded\uddef-\uddf4\uddf7\uddf9\uddfb\uddfc\uddff])|🇬(?:\ud83c[\udde6\udde7\udde9-\uddee\uddf1-\uddf3\uddf5-\uddfa\uddfc\uddfe])|🇺(?:\ud83c[\udde6\uddec\uddf2\uddf3\uddf8\uddfe\uddff])|🇪(?:\ud83c[\udde6\udde8\uddea\uddec\udded\uddf7-\uddfa])|🇼(?:\ud83c[\uddeb\uddf8])|(?:⛹|\ud83c[\udfcb\udfcc]|🕵)(?:\ud83c[\udffb-\udfff])|(?:\ud83c[\udfc3\udfc4\udfca]|\ud83d[\udc6e\udc71\udc73\udc77\udc81\udc82\udc86\udc87\ude45-\ude47\ude4b\ude4d\ude4e\udea3\udeb4-\udeb6]|\ud83e[\udd26\udd37-\udd39\udd3d\udd3e\uddd6-\udddd])(?:\ud83c[\udffb-\udfff])|(?:[☝✊-✍]|\ud83c[\udf85\udfc2\udfc7]|\ud83d[\udc42\udc43\udc46-\udc50\udc66\udc67\udc70\udc72\udc74-\udc76\udc78\udc7c\udc83\udc85\udcaa\udd74\udd7a\udd90\udd95\udd96\ude4c\ude4f\udec0\udecc]|\ud83e[\udd18-\udd1c\udd1e\udd1f\udd30-\udd36\uddd1-\uddd5])(?:\ud83c[\udffb-\udfff])|👨(?:‍(?:(?:(?:\ud83d[\udc68\udc69])‍)?👧|(?:(?:\ud83d[\udc68\udc69])‍)?👦)|\ud83c[\udffb-\udfff])|(?:[☝⛹✊-✍]|\ud83c[\udf85\udfc2-\udfc4\udfc7\udfca-\udfcc]|\ud83d[\udc42\udc43\udc46-\udc50\udc66-\udc69\udc6e\udc70-\udc78\udc7c\udc81-\udc83\udc85-\udc87\udcaa\udd74\udd75\udd7a\udd90\udd95\udd96\ude45-\ude47\ude4b-\ude4f\udea3\udeb4-\udeb6\udec0\udecc]|\ud83e[\udd18-\udd1c\udd1e\udd1f\udd26\udd30-\udd39\udd3d\udd3e\uddd1-\udddd])(?:\ud83c[\udffb-\udfff])?|(?:[⌚⌛⏩-⏬⏰⏳◽◾☔☕♈-♓♿⚓⚡⚪⚫⚽⚾⛄⛅⛎⛔⛪⛲⛳⛵⛺⛽✅✊✋✨❌❎❓-❕❗➕-➗➰➿⬛⬜⭐⭕]|\ud83c[\udc04\udccf\udd8e\udd91-\udd9a\udde6-\uddff\ude01\ude1a\ude2f\ude32-\ude36\ude38-\ude3a\ude50\ude51\udf00-\udf20\udf2d-\udf35\udf37-\udf7c\udf7e-\udf93\udfa0-\udfca\udfcf-\udfd3\udfe0-\udff0\udff4\udff8-\udfff]|\ud83d[\udc00-\udc3e\udc40\udc42-\udcfc\udcff-\udd3d\udd4b-\udd4e\udd50-\udd67\udd7a\udd95\udd96\udda4\uddfb-\ude4f\ude80-\udec5\udecc\uded0-\uded2\udeeb\udeec\udef4-\udef8]|\ud83e[\udd10-\udd3a\udd3c-\udd3e\udd40-\udd45\udd47-\udd4c\udd50-\udd6b\udd80-\udd97\uddc0\uddd0-\udde6])|(?:[#*0-9©®‼⁉™ℹ↔-↙↩↪⌚⌛⌨⏏⏩-⏳⏸-⏺Ⓜ▪▫▶◀◻-◾☀-☄☎☑☔☕☘☝☠☢☣☦☪☮☯☸-☺♀♂♈-♓♠♣♥♦♨♻♿⚒-⚗⚙⚛⚜⚠⚡⚪⚫⚰⚱⚽⚾⛄⛅⛈⛎⛏⛑⛓⛔⛩⛪⛰-⛵⛷-⛺⛽✂✅✈-✍✏✒✔✖✝✡✨✳✴❄❇❌❎❓-❕❗❣❤➕-➗➡➰➿⤴⤵⬅-⬇⬛⬜⭐⭕〰〽㊗㊙]|\ud83c[\udc04\udccf\udd70\udd71\udd7e\udd7f\udd8e\udd91-\udd9a\udde6-\uddff\ude01\ude02\ude1a\ude2f\ude32-\ude3a\ude50\ude51\udf00-\udf21\udf24-\udf93\udf96\udf97\udf99-\udf9b\udf9e-\udff0\udff3-\udff5\udff7-\udfff]|\ud83d[\udc00-\udcfd\udcff-\udd3d\udd49-\udd4e\udd50-\udd67\udd6f\udd70\udd73-\udd7a\udd87\udd8a-\udd8d\udd90\udd95\udd96\udda4\udda5\udda8\uddb1\uddb2\uddbc\uddc2-\uddc4\uddd1-\uddd3\udddc-\uddde\udde1\udde3\udde8\uddef\uddf3\uddfa-\ude4f\ude80-\udec5\udecb-\uded2\udee0-\udee5\udee9\udeeb\udeec\udef0\udef3-\udef8]|\ud83e[\udd10-\udd3a\udd3c-\udd3e\udd40-\udd45\udd47-\udd4c\udd50-\udd6b\udd80-\udd97\uddc0\uddd0-\udde6])️)", "g"), this.initRecentSmileys()
            }
            return r(e, [{
                key: "checkAndRemoveSkinToneCodes",
                value: function() {
                    for (var e in this.textcodes_lookup) e.match(/tone[1-5]/) && null != this.textcodes_lookup[e] && (delete this.textcodes_lookup[e], delete this.smiley_lookup[e])
                }
            }, {
                key: "updateSmiley",
                value: function(e, t, s) {
                    if (null != e) {
                        var i = e.selectionStart,
                            n = e.value;
                        n = n.substring(0, i);
                        var a = this.smiley_lookup[t];
                        t.indexOf("!") > -1 && (a = this.smiley_lookup[t] + "!"), Be.check("customemoji", t) && (a = t.replace(/:/g, "")), "" === n || n.endsWith(" ") || n.endsWith("\n") ? -1 == t.indexOf(":") ? (a = t, e.value = n + a + " " + e.value.substring(i)) : e.value = n + ":" + a + ": " + e.value.substring(i) : -1 == t.indexOf(":") ? (a = t, e.value = n + " " + a + " " + e.value.substring(i)) : e.value = n + " :" + a + ": " + e.value.substring(i), zi(e, i + t.length + 2, i + t.length + 2)
                    }
                }
            }, {
                key: "_isAnimationCode",
                value: function(e) {
                    return -1 !== e.indexOf("!:")
                }
            }, {
                key: "_replacer",
                value: function(e, t, s, i) {
                    (s = s.replace(i, "")) in this.symbol_lookup && (s = this.symbol_lookup[s]);
                    var n = this.smiley_lookup[this.removeTonePrefFromCode(s)];
                    for (var a in this.textcodes_lookup) a == this.removeTonePrefFromCode(s) && (n = a.replace(/:/g, ""));
                    var o = arguments[arguments.length - 1],
                        r = 0 !== (o = o && o.trim()).replace(s, "").length,
                        l = this.default_size;
                    if (this._isAnimationCode(s) && "f" === this.type) {
                        n = n.replace("!", ""), l = this.animation_default_size, r && (l = this.animation_along_text_size);
                        var d = " title=" + re("smiley." + n).trim();
                        return e && (d = ""), e = !1, i + "<em" + d + " data-reaction=" + s + " class='zomojianim-" + l + "-" + this.replaceSmileyNameForClass(s) + "'></em>"
                    }
                    var c = this.type;
                    this._isAnimationCode(s) && (c = "f", n = n.replace("!", ""));
                    d = " title=" + re("smiley." + n).trim();
                    return e && (d = ""), r ? l = this.along_text_size : t && "w" !== c && (l = 48), e = !1, i + "<em" + d + " data-reaction=" + s + " class='zomoji-" + c + "-" + l + "-" + this.replaceSmileyNameForClass(s) + "'></em>"
                }
            }, {
                key: "getSmileyLookup",
                value: function(e) {
                    var t = {};
                    if (e) {
                        for (var s in e = e.toLowerCase(), this.smiley_lookup)
                            if ((this.smiley_lookup[s].startsWith(":" + e) || this.smiley_lookup[s].indexOf(e) > -1) && s in this.symbol_lookup == !1) t[this.checkAndReplaceTonePrefCode(s)] = this.smiley_lookup[s];
                            else if (s.startsWith(":" + e) && s in this.symbol_lookup && s in this.emoji_lookup == 0) {
                            var i = this.symbol_lookup[s],
                                n = re("smiley." + i.replace(/:/g, "")).trim();
                            t[this.checkAndReplaceTonePrefCode(i)] = n
                        }
                    } else
                        for (var a in this.textcodes_lookup) t[a = this.checkAndReplaceTonePrefCode(a)] = this.textcodes_lookup[a];
                    return t
                }
            }, {
                key: "replace",
                value: function(e, t, s) {
                    return this.animation_disabled && (e = e.replace(/:(.*?):/g, function(e) {
                        for (var t in this.smiley_lookup)
                            if (t == e.replace(/!/g, "")) return t;
                        return e
                    }.bind(this))), !t && this.emoji_regex.test(e) && (e = this.getEmojiHTMLWithTitle(e)), "string" == typeof e ? e.replace(this.smiley_regex, this._replacer.bind(this, t, s)) : e
                }
            }, {
                key: "getSmiley",
                value: function(e) {
                    var t = this.smiley_lookup[this.removeTonePrefFromCode(e)],
                        s = this.default_size,
                        i = this.type,
                        n = e.replace("!", "");
                    return n = n.replace(/:/g, ""), this._isAnimationCode(e) ? N("em", {
                        title: t = t.replace("!", ""),
                        "data-smileycode": e,
                        class: "zomoji-" + (i = "f") + "-" + (s = this.animation_default_size) + "-" + n
                    }) : N("em", {
                        title: t,
                        "data-smileycode": e,
                        class: "zomoji-" + i + "-" + s + "-" + n
                    })
                }
            }, {
                key: "replaceSmileyForHtml",
                value: function(e) {
                    var t = Be.replacer(/<em (?:.*?) data-reaction="(.*?)" (?:.*?)><\/em>/g, null, e, function(e, t) {
                        if (t.match(/tone[1-5]/)) return t;
                        for (var s in this.textcodes_lookup)
                            if (t === s) return this.replaceCodeToText(s)
                    }.bind(this));
                    return t = Be.replacer(/<em (?:.*?) data-customemojicode="(.*?)" (?:.*?)><\/em>/g, null, t, function(e, t) {
                        return t
                    }.bind(this))
                }
            }, {
                key: "replaceCodeToText",
                value: function(e) {
                    return e = (e = e.replace(/:/g, "")).indexOf("!") > -1 ? ":" + re("smiley." + e.replace("!", "")).trim() + "!:" : ":" + re("smiley." + (e = e.replace(/:/g, ""))).trim() + ":"
                }
            }, {
                key: "replaceTextToEnglishCodes",
                value: function(e) {
                    if (!this.smileycode_regex) {
                        var t = "";
                        for (var s in this.textcodes_lookup) "" !== t ? t += "|:" + this.textcodes_lookup[s] + ":" : t = ":" + this.textcodes_lookup[s] + ":", this.animation_disabled || (t += "|:" + this.textcodes_lookup[s] + "!:");
                        this.smileycode_regex = new RegExp("(" + t + ")", "g")
                    }
                    var i = function(e) {
                        for (var t in this.textcodes_lookup)
                            if (!this.animation_disabled && e.indexOf("!") > -1) {
                                if (this.textcodes_lookup[t] == e.replace(/:/g, "").replace("!", "") && t.indexOf("!") > -1) return this.checkAndReplaceTonePrefCode(t)
                            } else if (this.textcodes_lookup[t] == e.replace(/:/g, "") && -1 === t.indexOf("!")) return this.checkAndReplaceTonePrefCode(t)
                    }.bind(this);
                    return e.replace(this.smileycode_regex, i)
                }
            }, {
                key: "getSmileyName",
                value: function(e) {
                    return e = this.removeTonePrefFromCode(e), this.smiley_lookup[e]
                }
            }, {
                key: "sortSmileys",
                value: function(e, t, s) {
                    var i = [];
                    if (t) {
                        if (s)
                            for (var n in this.symbol_lookup)
                                if (n.startsWith(":" + t) && n in this.emoji_lookup == 0) {
                                    var a = this.symbol_lookup[n];
                                    i.push(a)
                                }
                        for (var o in e) e[o].startsWith(t) && -1 === i.indexOf(o) && i.push(o);
                        for (var r in e) e[r].startsWith(t) || -1 !== i.indexOf(r) || i.push(r)
                    } else
                        for (var l in e) i.push(l);
                    return i
                }
            }, {
                key: "getEmojiLookup",
                value: function(e) {
                    var t = {};
                    if (e) {
                        for (var s in this.emoji_lookup) s.indexOf(e) > -1 && (t[s] = this.emoji_lookup[s]);
                        for (var i in this.symbol_lookup)
                            if (i in this.emoji_lookup)
                                for (var n = this.symbol_lookup[i], a = 0; a < n.length; a++) n[a].indexOf(e) > -1 && i in t == 0 && (t[i] = this.emoji_lookup[i])
                    } else t = this.emoji_lookup;
                    return t
                }
            }, {
                key: "sortEmojis",
                value: function(e, t) {
                    var s = [];
                    if (t) {
                        for (var i in e)
                            if (i.startsWith(":" + t) && s.push(i), i in this.symbol_lookup)
                                for (var n = this.symbol_lookup[i], a = 0; a < n.length; a++) n[a].startsWith(t) && -1 == s.indexOf(i) && s.push(i);
                        for (var o in e) o.startsWith(t) || -1 !== s.indexOf(o) || s.push(o)
                    } else
                        for (var r in e) s.push(r);
                    return s
                }
            }, {
                key: "getUnicode",
                value: function(e, t) {
                    e = this.removeTonePrefFromCode(e);
                    for (var s = "", i = 0; i < this.emoji_lookup[e].length; i++) s += hn(parseInt(this.emoji_lookup[e][i].replace("#x", ""), 16));
                    return this.checkAndReplaceEmojiToneCode(s, e, t)
                }
            }, {
                key: "getEmoji",
                value: function(e, t) {
                    var s = this.getUnicode(e, t);
                    return N("span", {
                        title: re("smiley." + e.replace(/:/g, "")).trim(),
                        "data-smileycode": s
                    }, s)
                }
            }, {
                key: "initRecentSmileys",
                value: function() {
                    oe.get("zuid") && (Ut.getItem(oe.get("zuid") + "_frequent_smileys") || Ut.setItem(oe.get("zuid") + "_frequent_smileys", this.replaceFrequentSmileySkinTone(this.frequentsmileys)))
                }
            }, {
                key: "getFrequentSmileys",
                value: function() {
                    return this.initRecentSmileys(), Ut.getItem(oe.get("zuid") + "_frequent_smileys") || this.frequentsmileys
                }
            }, {
                key: "updateFrequentSmileysList",
                value: function(e, t) {
                    e = this.removeTonePrefFromCode(e);
                    var s = this.getFrequentSmileys(),
                        i = e,
                        n = null;
                    this.textcodes_lookup[e] ? n = this._isAnimationCode(e) ? "animated" : "work" : Be.check("customemoji", e) ? (i = e, n = "customemoji") : (i = (i = this.getTextCodeFromUniCode(e)) || ":" + t + ":", n = "emoji"), s[n] || (s[n] = []), s[n].indexOf(i) > -1 ? s[n].splice(s[n].indexOf(i), 1) : ("sticker" == n && 5 == s[n].length || "customemoji" == n && 10 == s[n].length || "sticker" != n && "customemoji" != n) && s[n].pop(), s[n].unshift(i), Ut.setItem(oe.get("zuid") + "_frequent_smileys", s)
                }
            }, {
                key: "getTextCodeFromUniCode",
                value: function(e) {
                    var t = this.getEmojiLookup("");
                    for (var s in t)
                        if (this.getUnicode(s) == e) return s;
                    return !1
                }
            }, {
                key: "checkAndReplaceTonePrefCode",
                value: function(e) {
                    e = e.trim();
                    var t = oe.get("emojiskintone");
                    return t > 0 && this.skintone_supported_zomojis.indexOf(e) > -1 && (e = e.slice(0, -1) + "-tone" + t + ":"), e
                }
            }, {
                key: "replaceSmileyNameForClass",
                value: function(e) {
                    return e.match(/tone[1-5]/) && (e = this.checkAndReplaceTonePrefCode(e)), e.replace(/[:!]/g, "")
                }
            }, {
                key: "removeTonePrefFromCode",
                value: function(e) {
                    return e.replace(/-tone[1-5]/g, "")
                }
            }, {
                key: "replaceFrequentSmileySkinTone",
                value: function(e) {
                    var t = {
                        work: [],
                        emoji: [],
                        animated: [],
                        customemoji: [],
                        sticker: []
                    };
                    for (var s in e)
                        for (var i = e[s], n = 0; n < i.length; n++) t[s].push(this.checkAndReplaceTonePrefCode(i[n]));
                    return t
                }
            }, {
                key: "checkAndReplaceEmojiToneCode",
                value: function(e, t, s) {
                    var i = s || oe.get("emojiskintone");
                    return this.skintone_supported_unicode_emojis.indexOf(t) > -1 && parseInt(i) > 0 && (e += this.getSkinToneCodeForEmoji(parseInt(i))), e
                }
            }, {
                key: "getSkinToneCodeForEmoji",
                value: function(e) {
                    return hn(parseInt(this.skintone_for_emoji[e].replace("#x", ""), 16))
                }
            }, {
                key: "getTextForSkinToneCode",
                value: function(e) {
                    return Be.replacer(this.smiley_regex, null, e, function(e, t) {
                        return e = e.replace(t, ""), e = this.removeTonePrefFromCode(e), this.skintone_supported_zomojis.indexOf(e) > -1 ? t + this.replaceCodeToText(e) : t + e
                    }.bind(this))
                }
            }, {
                key: "isSkinToneSupported",
                value: function() {
                    var e = !0;
                    if ("windows" === ta()) {
                        var t = window.navigator.userAgent;
                        e = -1 !== t.indexOf("Windows NT 10.0") || -1 !== t.indexOf("Windows 10.0")
                    }
                    return e
                }
            }, {
                key: "replaceCustomEmoji",
                value: function(e, t) {
                    if (Be.check("customemoji", e)) return Be.replacer(Be.regexes.customemoji, null, e, this.getCustomEmojiHTML.bind(this))
                }
            }, {
                key: "getCustomEmojiHTML",
                value: function(e) {
                    var t = f(e.replaceAll(/[:$!]/g, "").split("_"), 5),
                        s = t[0],
                        i = t[1],
                        n = t[2],
                        a = t[3],
                        o = t[4],
                        r = !!e.endsWith("!$:");
                    if (!(s && i && n && null != a && "" != a && o)) return e;
                    if (0 == a) return ":" + o + ":";
                    if (i != _WMSAPPACCOUNTID) return '<em class="' + (r ? "wms_stickermsg wms_crossorgsticker" : "wms_customemojimsg wms_crossorgemoji") + '" title="' + re("customemoji.crossorgdesc") + '" ></em>';
                    var l = "v2/customemojisbykey/" + s + "/download";
                    r && (l = "v2/stickersbykey/" + s + "/download"), void 0 !== WebMessanger && WebMessanger.isUDSDownloadEnabled() && (l = _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + s + "&x-cli-msg=" + encodeURI('{"x-cliq-resource-module":"custom_emojis"}'));
                    var d = "small" == this.customemoji_size ? " wms_customemoji_small" : "";
                    return yi("<em class='{{emojiclass}}{{sizeclass}}' data-customemojicode='{{code}}' data-emojiname='{{name}}' title='{{name}}' " + (this.preLoadCustomEmoji ? "style=\"background-image: url('{{orginalsrc}}')\"" : "data-originalemojisrc='{{orginalsrc}}'") + "></em>", {
                        orginalsrc: l,
                        code: e,
                        emojiclass: r ? "wms_stickermsg" : "wms_customemojimsg",
                        name: o,
                        sizeclass: d
                    })
                }
            }, {
                key: "replaceCustomEmojiWithName",
                value: function(e) {
                    return Be.replacer(Be.regexes.customemoji, null, e, (function(e) {
                        return ":" + e.replaceAll(/[:$]/g, "").split("_")[-1] + ":"
                    }))
                }
            }, {
                key: "convertEmojiToHex",
                value: function(e) {
                    var t = "";
                    if ("function" == typeof Array.from && "function" == typeof String.prototype.codePointAt) {
                        for (var s = Array.from(e) || [], i = 0; i < s.length; i++) "" !== s[i] && (t += "-" + s[i].codePointAt(0).toString(16));
                        return t.replace("-", "")
                    }
                    return (t = 65536 | e.charCodeAt(0) - 55296 << 10 | e.charCodeAt(1) - 56320).toString(16)
                }
            }, {
                key: "getEmojiHTMLWithTitle",
                value: function(e) {
                    return e = e.replace(this.emoji_regex, function(e, t, s) {
                        if (e) {
                            var i = this.convertEmojiToHex(e),
                                n = "",
                                a = this.emoji_reverse_lookup[i];
                            if (a || -1 === i.indexOf("-") || (a = this.emoji_reverse_lookup[i.split("-")[0]]), a) {
                                var o = a.split(":")[1];
                                n = re("smiley." + o) !== "smiley." + o ? re("smiley." + o) : this.textcodes_lookup[o] ? this.textcodes_lookup[o] : ""
                            }
                            return '<span class="emoji" data-emoji="true"' + ("" == n ? "" : 'title="' + n + '"') + ">" + e + "</span>"
                        }
                        return ""
                    }.bind(this))
                }
            }]), e
        }(),
        Fi = null;

    function Bi(e) {
        var t = Math.floor(e / 3600),
            s = Math.floor(e % 3600 / 60),
            i = Math.floor(e % 60),
            n = (s = s < 10 ? "0" + s : s) + ":" + (i = i < 10 ? "0" + i : i);
        return t > 0 && (n = t + ":" + s + ":" + i), n
    }

    function ji(e, t, s, i) {
        var n, a, o, r, l = 0;
        i = i || {};
        var d = function() {
                l = !1 === i.leading ? 0 : (new Date).getTime(), n = null, r = e.apply(a, o), n || (a = o = null)
            },
            c = function() {
                var c = (new Date).getTime();
                l || !1 !== i.leading || (l = c);
                var u = s - (c - l);
                return a = t || this, o = arguments, u <= 0 || u > s ? (n && (clearTimeout(n), n = null), l = c, r = e.apply(a, o), n || (a = o = null)) : n || !1 === i.trailing || (n = setTimeout(d, u)), r
            };
        return c.cancel = function() {
            clearTimeout(n), l = 0, n = a = o = null
        }, c
    }

    function zi(e, t, s) {
        if (e.setSelectionRange) e.focus(), e.setSelectionRange(t, s);
        else if (e.createTextRange) {
            var i = e.createTextRange();
            i.collapse(!0), i.moveEnd("character", s), i.moveStart("character", t), i.select()
        }
    }

    function Gi(e) {
        for (var t in e)
            if (e.hasOwnProperty(t)) return !1;
        return JSON.stringify(e) === JSON.stringify({})
    }

    function qi(e, t, s) {
        var i = 0,
            n = 0;
        t -= 1;
        for (var a = 0; a < e.length; a++)
            if (":" == e.charAt(a) && ++i == t) {
                n = a;
                break
            }
        var o = e.substring(0, n).split(":"),
            r = e.substring(n + 1);
        return s ? o.push(JSON.parse(r)) : o.push(r), o
    }

    function Vi(e) {
        return !(e && e.trim().length > 0)
    }

    function Yi() {
        var e = WebMessanger.isGuestUser && WebMessanger.isGuestUser() ? oe.get("GUEST_CHATCFCOOKIENAME") : oe.get("CHATCFCOOKIENAME");
        return oe.get("CHATCFPARAMNAME") + "=" + Le(e)
    }

    function Zi(e) {
        var t = {
            "&": "&amp;",
            ">": "&gt;",
            "<": "&lt;",
            '"': "&quot;",
            "'": "&#x27;"
        };
        return ("" + e).replace(/[&><"']/g, (function(e) {
            return t[e]
        }))
    }

    function Ki(e) {
        if (e) return e.replace(/&gt;/g, ">").replace(/&lt;/g, "<").replace(/&quot;/g, '"').replace(/&#39;/g, "'").replace(/&amp;/g, "&").replace(/&#x2F;/g, "/").replace(/&#x27;/g, "'")
    }

    function Xi(e) {
        return !isNaN(e)
    }

    function Ji(e, t, s) {
        var i = t;
        return null != e && null != e && "" != e || (i = t), Xi(e) || (i = t), t || oe.get("zuid") != e || (i = re("chat.you")), e && null != Rs(e) && !Gi(Rs(e)) ? i = Rs(e).DNAME || Rs(e).EMAILID : e && ft(e) && !Gi(ft(e)) ? i = ft(e).DNAME : e && hi(e) ? i = hi(e).dname : e && ys(e) && !Gi(ys(e)) && (i = ys(e).DNAME), !1 === s ? i : i ? Zi(i) : void 0
    }

    function Qi(e, t, s) {
        if (!(!e.meta || !e.meta.mentions)) {
            var i = e.meta;
            e = s ? e.translation : e.msg || e.comment;
            var n = function() {
                var s = i.mentions[a],
                    n = "";
                if (3 === s.type) n = new RegExp("{#" + s.id + "}"), e = e.replace(n, s.name);
                else if (2 === s.type) n = new RegExp("{@G" + s.id + "}"), e = e.replace(n, s.name);
                else if (1 === s.type || 4 === s.type) {
                    var o = s.action ? "{\\" + s.action + "@" + s.id + "}" : "{@" + s.id + "}",
                        r = oe.get("zuid") == s.id ? Zi(Ki(oe.get("dname"))) : Ji(s.id, s.name, !0);
                    s.id.startsWith("$") && (r = (r = Zi(Ki(s.dname))).substring(1), o = "{@\\" + s.id + "}"), n = new RegExp(o, "g");
                    var l = s.action ? s.action : "@";
                    e = e.replace(n, (function() {
                        return t ? l + r : '<span class="wms-atmtnlink" ' + ("1" == s.type || "4" == s.type ? 'data-zcprofileid="' + s.id + '"' : "") + ">" + l + r + "</span>"
                    }))
                } else s.type !== $WC.CMsgUtil.SpecialMention.participants && s.type !== $WC.CMsgUtil.SpecialMention.available && s.type !== $WC.CMsgUtil.OldMention || (n = new RegExp("{@" + s.id + "}"), e = e.replace(n, (function() {
                    return t ? "@" + s.name : "<span data-mentiontype=" + s.type + ' class="wms-atmtnlink">@' + s.name + "</span>"
                })))
            };
            for (var a in i.mentions) n()
        } else e = Be.replace("atmention_v2", e, (function(e, s, i) {
            var n = s,
                a = i;
            return a = oe.get("zuid") == n ? Zi(Ki(oe.get("dname"))) : Ji(n, a, !0), t ? "@" + a : Xi(n) || li(n) ? '<span class="wms-atmtnlink" data-zcprofileid="' + n + '">@' + a + "</span>" : e
        }));
        return "silentmention" === "silentmention" && (e = oe.get("getSilentUserMention")(e, t)), e
    }

    function en(e) {
        if (e) return "&nocache=" + (new Date).getTime();
        var t = "";
        return null != oe.get("WMSCFPARAMNAME") && (t = "&" + oe.get("WMSCFPARAMNAME") + "=" + Le(oe.get("_WMSCFCOOKIENAME"))), t += "&nocache=" + (new Date).getTime()
    }

    function tn(e, t, s, i) {
        var n = s ? function(t) {
            return t[i] ? s(t[i]) : s(t[e])
        } : function(t) {
            return t[i] ? t[e] > t[i] ? t[e] : t[i] : t[e]
        };
        return t = t ? -1 : 1,
            function(e, s) {
                return e = n(e), s = n(s), t * ((e > s) - (s > e))
            }
    }

    function sn() {
        var e = Array.prototype.slice.call(arguments);
        return function(t, s) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i](t, s);
                if (0 != n) return n
            }
            return 0
        }
    }

    function nn(e) {
        if ("object" === n(e)) {
            if (Object && Object.keys) return Object.keys(e).length;
            var t = 0;
            for (var s in e) t++;
            return t
        }
    }
    var an = {};

    function on(e, t) {
        return t ? rn(!0, {}, e) : rn({}, e)
    }

    function rn() {
        var e, t, s, i, a, o, r, l = arguments[0] || {},
            d = 1,
            c = arguments.length,
            u = !1;

        function m(e) {
            return e instanceof Array
        }

        function h(e) {
            return "object" == n(e) && e.constructor == Object
        }
        for ("boolean" == typeof l && (u = l, l = arguments[d] || {}, d++), "object" !== n(l) && ("function" != typeof(r = l) || r.constructor !== Function) && (l = {}), d === c && (l = this, d--); d < c; d++)
            if (null != (a = arguments[d]))
                for (i in a) e = l[i], l !== (s = a[i]) && (u && s && (h(s) || (t = m(s))) ? (t ? (t = !1, o = e && m(e) ? e : []) : o = e && h(e) ? e : {}, l[i] = rn(u, o, s)) : null != s && (l[i] = s));
        return l
    }

    function ln(e, t, s) {
        var i = t.getBoundingClientRect().top,
            n = t.getBoundingClientRect().bottom,
            a = e.getBoundingClientRect().top,
            o = e.getBoundingClientRect().bottom;
        return !(0 === i && 0 === n || 0 === a && 0 === o) && (s ? o >= i && a <= n : a >= i && o <= n)
    }

    function dn(e) {
        return null == e || "" === e
    }! function(e) {
        var t = {},
            s = -1;
        e.subscribe = function(e, i) {
            t[e] || (t[e] = []);
            var n = (++s).toString();
            return t[e].push({
                token: n,
                func: i
            }), n
        }, e.publish = function() {
            var e = arguments,
                s = e[0];
            return !!t[s] && (setTimeout((function() {
                for (var i = t[s], n = i ? i.length : 0; n--;) i[n].func.apply(null, e)
            }), 0), !0)
        }, e.unsubscribe = function(e) {
            for (var s in t)
                if (t[s])
                    for (var i = 0, n = t[s].length; i < n; i++)
                        if (t[s][i].token === e) return t[s].splice(i, 1), e;
            return !1
        }
    }(an);
    var cn = null;

    function un(e) {
        return e == oe.get("zuid") || (null === cn && (cn = !!oe.get("zuid").startsWith("o-")), !(!cn || !e || oe.get("zuid").split("-").pop() !== e.split("-").pop()))
    }

    function mn(e) {
        return e ? e.target : window.event.srcElement
    }
    var hn = String.fromCodePoint ? String.fromCodePoint : function(e) {
        for (var t = String.fromCharCode, s = [], i = 0, n = "", a = 0, o = arguments.length; a !== o; ++a) {
            var r = +arguments[a];
            if (!(r < 1114111 && r >>> 0 === r)) throw RangeError("Invalid code point: " + r);
            r <= 65535 ? i = s.push(r) : (r -= 65536, i = s.push(55296 + (r >> 10), r % 1024 + 56320)), i >= 16383 && (n += t.apply(null, s), s.length = 0)
        }
        return n + t.apply(null, s)
    };

    function gn(e, t, s, i, n) {
        var a;
        "height" === t && (a = s < i ? function() {
            (s += 20) <= i ? (e.style[t] = s + "px", window.requestAnimationFrame(a)) : (e.style[t] = i + "px", "function" == typeof n && n())
        } : function() {
            (s -= 20) >= i ? (e.style[t] = s + "px", window.requestAnimationFrame(a)) : (e.style[t] = i + "px", "function" == typeof n && n())
        }), a()
    }

    function pn(e) {
        return "string" == typeof e ? e.replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;").replace(/\//g, "&#x2F;").replace(/&amp;quot;/g, "&quot;").replace(/&amp;gt;/g, "&gt;").replace(/&amp;lt;/g, "&lt;").replace(/&amp;#x27;/g, "&#x27;").replace(/&amp;#x2F;/g, "&#x2F;").replace(/&amp;amp;/g, "&amp;") : e
    }

    function fn(e, t, s) {
        var i, n, a, o, r = e.getBoundingClientRect();
        a = window.innerWidth - (r.left + e.offsetWidth), o = window.innerHeight - t.offsetHeight - 21, n = a > t.offsetWidth ? r.left + e.offsetWidth : r.left - t.offsetWidth, n = s ? n + parseInt(s) : n, i = r.top + e.offsetHeight / 2 - t.offsetHeight / 2, i = Math.min(o, i), i = Math.max(45, i), t.style.top = i + "px", t.style.left = n + "px"
    }

    function vn(e, t, s, i, n) {
        var a = document.createElement(e);
        if (s && (a.className = s), t && (a.id = t), n && (a.innerHTML = n), i)
            for (var o in i) a.setAttribute(o, i[o]);
        return a
    }

    function Cn(e, t, s, i, n) {
        i = "boolean" != typeof i || i;
        var a = function(e) {
            s.call(this, e, n)
        };
        return e.addEventListener ? e.addEventListener(t, a, i) : e.attachEvent ? e.attachEvent("on" + t, a) : e["on" + t] = a, a
    }

    function bn(e, t) {
        var s = !(!t || "end" == t.block);
        setTimeout((function() {
            try {
                e.scrollIntoView(t)
            } catch (t) {
                e.scrollIntoView(s)
            }
        }), 30)
    }

    function yn(e, t, s) {
        var i = null,
            n = (t = t || {}) && t.block;
        (s = s || e.parentNode) && (i = "center" === n ? e.offsetTop - s.offsetHeight / 2 + e.clientHeight / 2 : "end" === n ? e.offsetTop - (s.offsetHeight - e.offsetHeight) : e.offsetTop, t.top = i, t.left = 0, setTimeout((function() {
            try {
                s.scrollTo(t)
            } catch (t) {
                Pn(e, null, !1, s, n)
            }
        }), 30))
    }

    function _n(e) {
        var t = e.split("_", 3);
        if (3 == t.length) {
            var s = t[2],
                i = s.split("-", 2);
            if (-1 != s.indexOf("-T-")) return ut.CHATTYPES.THREAD;
            if (2 == i.length) return "C4" == i[1] ? ut.CHATTYPES.CHANNEL : i[1];
            if (1 == i.length) return ut.CHATTYPES.CHANNEL
        }
    }

    function Wn(e) {
        return e && _n(e) === ut.CHATTYPES.CHANNEL
    }

    function Sn(e) {
        return e && _n(e) === ut.CHATTYPES.THREAD
    }

    function wn(e) {
        var t = _n(e);
        return t === ut.CHATTYPES.DEFAULT_BOT || t === ut.CHATTYPES.CUSTOM_BOT
    }

    function Mn(e, t, s, i) {
        var n, a = 0;
        return function() {
            var o = arguments,
                r = t || this;
            !0 === i ? (Date.now() - a > s && e.apply(r, o), a = Date.now()) : (clearTimeout(n), n = setTimeout((function() {
                e.apply(r, o)
            }), s))
        }
    }

    function In(e) {
        return Array.prototype.slice.call(e, 0)
    }

    function Tn(e) {
        return e = Object.keys(e).map((function(t) {
            return e[t]
        }))
    }

    function An(e) {
        if (e) return e.parentNode.removeChild(e)
    }

    function En(e, t) {
        e && (e.classList ? e.classList.add(t) : -1 === e.className.split(" ").indexOf(t) && (e.className += " " + t))
    }

    function Un(e, t) {
        if (e)
            if (e.classList) e.classList.remove(t);
            else {
                var s = new RegExp("(?:^|\\s)" + t + "(?!\\S)");
                e.className = e.className.replace(s, "")
            }
    }

    function kn(e, t, s) {
        if (e && "function" == typeof e.getAttribute) return e.setAttribute(t, s)
    }

    function Nn(e, t, s) {
        var i = e && e.querySelectorAll("div[data-originalsrc]");

        function n() {
            if (this.existingnode && this.existingnode.parentNode && (!t || this.existingnode.getAttribute("data-imgid") === this.getAttribute("data-zcprofileid"))) {
                t ? this.existingnode.parentNode.insertBefore(this, this.existingnode.parentNode.firstChild) : this.existingnode.parentNode.querySelector("[data-cutouticon]") ? this.existingnode.parentNode.insertBefore(this, this.existingnode.parentNode.querySelector("[data-cutouticon]")) : this.existingnode.parentNode.appendChild(this);
                var e = this;
                setTimeout((function() {
                    e.style.opacity = "1", e.existingnode.removeAttribute("data-originalsrc"), t && An(e.existingnode)
                }), 20)
            }
            var s;
            s = this.existingnode.getAttribute("data-imgid") || this.existingnode.getAttribute("data-channelimgid"), xn[s] = !0
        }
        for (var a in i)
            if (i.hasOwnProperty(a) && (s || ln(i[a], e, !0))) {
                var o = i[a],
                    r = new Image;
                o.getAttribute("data-imgid") && r.setAttribute("data-zcprofileid", o.getAttribute("data-imgid")), r.className = "wms_userphoto_trans", r.existingnode = o, r.onload = n, r.src = o.getAttribute("data-originalsrc")
            }
        "function" == typeof WMSUI && WMSUI.checkAndLoadCustomEmojis(e)
    }
    var xn = {};

    function On(e) {
        return xn[e]
    }

    function Rn(e) {
        return "[object Array]" === Object.prototype.toString.call(e)
    }

    function Dn(e) {
        if (e) return document.getElementsByTagName("body")[0].textContent ? e.textContent : e.innerText
    }

    function $n(e, t) {
        var s = e.closest(t);
        return s || !1
    }

    function Hn(e, t) {
        var s = [];
        if (t)
            for (var i = e.split(new RegExp("(" + Be.replace("escaperegexp", t) + "+)", "i")), n = 0; n < i.length; n++) s.push(i[n].toLowerCase().indexOf(t.toLowerCase()) > -1 ? N("b", null, i[n]) : i[n]);
        return s.length > 0 ? s : e
    }

    function Ln(e, t, s) {
        if (s = s || e.parentNode, t) {
            var i = s.scrollLeft,
                n = s.scrollLeft + s.offsetWidth,
                a = e.offsetLeft + e.offsetWidth;
            if (e.offsetLeft >= i && a < n) return !0
        } else {
            var o = s.scrollTop,
                r = s.scrollTop + s.offsetHeight,
                l = e.offsetTop + e.offsetHeight;
            if (e.offsetTop >= o && l < r) return !0
        }
        return !1
    }

    function Pn(e, t, s, i, n) {
        i = i || e.parentNode, t = t || function(e, t) {
            var s = e.getBoundingClientRect(),
                i = t.getBoundingClientRect();
            return s.y - i.y + s.height > i.height ? ut.KEYCODES.DOWN : s.y < i.y ? ut.KEYCODES.UP : void 0
        }(e, i), s ? !1 === Ln(e, !0, i) && (t === $WC.WmsConstants.KEYCODES.LEFT ? i.scrollLeft = e.offsetLeft : t === $WC.WmsConstants.KEYCODES.RIGHT && (i.scrollLeft = e.offsetLeft + e.offsetWidth - i.offsetWidth)) : !1 === Ln(e, null, i) && (t === ut.KEYCODES.UP ? i.scrollTop = "center" === n ? e.offsetTop - i.clientHeight / 2 + e.clientHeight / 2 : "end" === n ? e.offsetTop - i.clientHeight + e.clientHeight : e.offsetTop : t !== ut.KEYCODES.DOWN && t !== ut.KEYCODES.LEFT && t !== ut.KEYCODES.RIGHT || (i.scrollTop = "center" === n ? e.offsetTop - i.clientHeight / 2 + e.clientHeight / 2 : "end" === n ? e.offsetTop - i.clientHeight + e.clientHeight : e.offsetTop + e.offsetHeight - i.offsetHeight))
    }

    function Fn(e) {
        var t = e;
        return (e = Math.round(t / 1024)) ? e < 1024 ? e + " KB" : Math.round(e / 1024) + " MB" : t + " bytes"
    }

    function Bn(e, t) {
        if (e) {
            for (var s = 0, i = 0; i < e.length; i++) s += e[i].size;
            return s > t && (WmsUIImpl.showFilesizeExceedAlert(s) || alert(re("upload.maxsize.exceed")), !0)
        }
    }

    function jn(e) {
        return e instanceof File
    }
    var zn = null;

    function Gn(e, t, s) {
        Fi || (Fi = new Pi({
            default_size: "24",
            animation: {
                default_size: "24"
            }
        }));
        var i = vn("DIV", "wms-errormsg", "wms-errormsg", null, ("info" == t ? '<span class="wms_infomsgicon"><em class="wms_hintanim"></em></span>' : '<span class="wms_errormsgicon"></span>') + "<span>" + Fi.replace(Zi(Ki(e))) + "</span><span class='wms-errorclosecnt'><span class='wms-errorcloseicon' data-errorcloseicon='true'></span></span>");
        i.style.zIndex = WebMessanger.setzindex <= 9999 ? 9999 : WebMessanger.setzindex, qn(!0), document.body.appendChild(i), i.querySelector("[data-errorcloseicon]").onclick = qn, zn = setTimeout((function() {
            qn()
        }), s || 5e3)
    }

    function qn(e) {
        if (Vn("wms-errormsg")) {
            clearTimeout(zn);
            var t = document.getElementById("wms-errormsg");
            e ? t.parentNode.removeChild(t) : (t.className += " wms_errormsg_slideup", setTimeout(function(e) {
                e.parentNode.removeChild(e)
            }.bind(this, t), 1e3))
        }
    }

    function Vn(e) {
        return null != document.getElementById(e)
    }

    function Yn(e, t, s) {
        for (var i = [], n = [], a = 0; a < e.length; a++) e[a][s].toLowerCase().startsWith(t) ? i.push(e[a]) : e[a][s].toLowerCase().indexOf(t) > -1 && n.push(e[a]);
        return i.concat(n)
    }

    function Zn() {
        return WmsSettings.adminsettings.hidden_chatlets_product && "0" != WmsSettings.adminsettings.hidden_chatlets_product ? WmsSettings.adminsettings.hidden_chatlets_product : null
    }

    function Kn(e) {
        var t = Zn();
        if (t && e)
            for (var s = t.split(","), i = e.split(".")[0], n = 0; n < s.length; n++)
                if (i == s[n]) return !0;
        return !1
    }

    function Xn() {
        return "undefined" != typeof window && "object" === n(window.process) && "renderer" === window.process.type || (!("undefined" == typeof process || "object" !== n(process.versions) || !process.versions.electron) || "object" === ("undefined" == typeof navigator ? "undefined" : n(navigator)) && "string" == typeof navigator.userAgent && navigator.userAgent.indexOf("Electron") >= 0)
    }

    function Jn(e) {
        return 0 != e.indexOf("http") && (e = window.location.origin + e), !("undefined" == typeof electron || !electron.remote || !electron.remote.getCurrentWebContents()) && (electron.remote.getCurrentWebContents().downloadURL(e), !0)
    }

    function Qn(e) {
        navigator.clipboard.writeText(e)
    }

    function ea(e) {
        return e.filter((function(t, s) {
            return e.indexOf(t) === s
        }))
    }

    function ta() {
        var e = window.navigator.userAgent,
            t = window.navigator.platform,
            s = null;
        return -1 !== ["Macintosh", "MacIntel", "MacPPC", "Mac68K"].indexOf(t) ? s = "Mac" : -1 !== ["iPhone", "iPad", "iPod"].indexOf(t) ? s = "iOS" : -1 !== ["Win32", "Win64", "Windows", "WinCE"].indexOf(t) ? s = "Windows" : /Android/.test(e) ? s = "Android" : !s && /Linux/.test(t) && (s = "Linux"), s.toLowerCase()
    }

    function sa(e, t) {
        for (var s = 0; s < e.length; s++)
            for (var i in e[s])
                if (e[s][i] == t) return s;
        return -1
    }

    function ia(e, t) {
        var s = sa(e, t);
        return s > -1 && e.splice(s, 1), e
    }

    function na(e, t, s) {
        var i = sa(e, s);
        return i > -1 ? e[i] = t : e.push(t), e
    }

    function aa() {
        return "64396901" == _WMSAPPACCOUNTID
    }

    function oa() {
        return -1 != window.location.hostname.indexOf("csez") || -1 != window.location.hostname.indexOf("localzoho") ? "com" : void 0 !== WmsSettings && WmsSettings.adminsettings && WmsSettings.adminsettings.service_configurations && WmsSettings.adminsettings.service_configurations.dc ? {
            us: "com",
            eu: "eu",
            cn: "com.cn",
            in: "in",
            au: "com.au",
            jp: "jp"
        }[WmsSettings.adminsettings.service_configurations.dc] : "com"
    }

    function ra(e) {
        if (Sn(e)) {
            var t = e.indexOf("-T-");
            return e.slice(0, t)
        }
    }

    function la(e, t, s) {
        for (var i = window.atob(e.split(",")[1]), n = new Uint8Array(i.length), a = 0; a < i.length; a++) n[a] = i.charCodeAt(a);
        var o = new Blob([n], {
            type: t
        });
        return [new File([o], s, {
            type: t,
            lastModified: (new Date).getTime()
        })]
    }

    function da(e, t) {
        t = Object.assign({}, t);
        var s = new URL(e).search,
            i = new URLSearchParams(s);
        if (i.has("x-cli-msg")) {
            var n = i.get("x-cli-msg");
            (n = (n = (n = decodeURIComponent(n)).slice(1, -1)).split(",")).forEach((function(e) {
                var s = e.split(":");
                t[s[0]] = s[1]
            }))
        }
        return i.set("x-cli-msg", JSON.stringify(t)), e.split("?")[0] + "?" + i.toString()
    }
    var ca = Object.freeze({
            __proto__: null,
            addClass: En,
            addEvent: Cn,
            addMultipleListeners: function(e, t, s, i, n) {
                for (var a = function(e) {
                        s.call(this, e, n)
                    }, o = 0; o < t.length; o++) Cn(e, t[o], a, i)
            },
            animate: gn,
            annotateImage: function(e) {
                ZAnnotator.init({
                    imageURL: e.url,
                    onSuccess: function(t) {
                        if ("function" == typeof e.success) {
                            var s = t.imageSource;
                            e.success(s, la(s, e.type, e.name))
                        }
                    },
                    finishButton: {
                        text: $WC.I18N("common.savechanges")
                    },
                    onCancel: function() {
                        "function" == typeof e.cancel && e.cancel()
                    },
                    onLoad: function() {
                        "function" == typeof e.load && e.load(), document.getElementById("zimageeditor").style.zIndex = oe.get("zindex") + 1
                    },
                    onError: function() {
                        "function" == typeof e.cancel && e.cancel()
                    }
                })
            },
            boldMatchedString: Hn,
            bringElemToView: Pn,
            checkIfChatletHidden: Kn,
            checkSessionConfig: function(e) {
                return (_WMSCONFIG & WMSSessionConfig[e]) === WMSSessionConfig[e]
            },
            clearBrowserStorage: function() {
                for (var e = ["_allow_forward_info", "_wms_bots", "_wms_drafts", "_frequent_smileys", "_frequentsmileytab", "_wms_orgcontacts"], t = ["wms_draft_lmtime"], s = 0; s < localStorage.length; s++) {
                    var i = localStorage.key(s);
                    (Xi(i.substring(0, i.indexOf("_"))) || WebMessanger.isGuestUser()) && -1 !== e.indexOf(i.substring(i.indexOf("_"))) && t.push(i)
                }
                t.forEach((function(e) {
                    Ut.removeItem(e)
                })), ["commands", "wms_openchats"].forEach((function(e) {
                    Et.removeItem(e)
                }))
            },
            cloneObject: on,
            compositeComparator: sn,
            consoleWarn: function(e) {
                aa() && "undefined" != typeof console && console.warn && console.warn(e)
            },
            constructAnnotateImgFile: la,
            constructTranscriptLoadButton: function(e, t) {
                return t = t || !0, '<div class="wms-loadmorebutton-wrapper" data-loadmorebutton="true"><div class="wms-loadmorebutton" data-prev-msgtime="' + (e = e || !0) + '">' + $WC.I18N("chat.messages.loadbelow") + '</div><div class="wms-loadmorebutton-line"></div><div class="wms-loadmorebutton" data-next-msgtime="' + t + '">' + $WC.I18N("chat.messages.loadabove") + "</div></div>"
            },
            convertObjectToArray: Tn,
            convertToArray: In,
            copyTextToClipboard: Qn,
            createElement: vn,
            debounce: Mn,
            decodeHTMLEntities: function(e) {
                return e.replace(/&#x2F;/g, "/").replace(/&#39;|&#x27;/g, "'").replace(/&quot;/g, '"').replace(/&gt;/g, ">").replace(/&lt;/g, "<").replace(/&amp;/g, "&")
            },
            escapeHTML: pn,
            extend: rn,
            filterList: Yn,
            findIndexByObjectValue: sa,
            findParent: $n,
            formatMentions: Qi,
            formatSecondsToHHMM: Bi,
            fromCodePoint: hn,
            getAdjacentNode: function(e, t, s) {
                do {
                    e && (e = t ? e.previousSibling : e.nextSibling)
                } while (e && !e.getAttribute(s));
                return e
            },
            getCSRF: Yi,
            getChatType: _n,
            getChatletHiddenPrd: Zn,
            getContactName: Ji,
            getCssAnimEndListener: function() {
                var e = "Webkit Moz O ms".split(" "),
                    t = {
                        noprefix: "animationend",
                        Moz: "animationend",
                        Webkit: "webkitAnimationEnd",
                        O: "oAnimationEnd",
                        ms: "MSAnimationEnd"
                    };
                if (void 0 !== document.body.style.animationName) return t.noprefix;
                for (var s = 0; s < e.length; s++)
                    if (void 0 !== document.body.style[e[s] + "AnimationName"]) return t[e[s]]
            },
            getCurrentDCSuffix: oa,
            getDecimalsCount: function(e) {
                return Math.floor(e) === e ? 0 : e.toString().split(".")[1].length || 0
            },
            getEventTarget: mn,
            getFileSize: Fn,
            getInnerText: Dn,
            getOS: ta,
            getObjectLength: nn,
            getParentChidFromThreadChid: ra,
            getUnfurlableLink: function(e) {
                for (var t = this.decodeHTMLEntities(e).split(/\s+/g), s = [], i = 0; i < t.length; i++) {
                    var n = t[i].trim();
                    if (Be.checkWithFlag("linkRegExp", n, "gi")) {
                        if ($WC.Matcher.match("linkRegExp", n, "gi")[0] != n) continue;
                        s.push(n)
                    }
                }
                return s
            },
            hexToRGB: function(e) {
                var t;
                10 == (e = e.replace("#", "0x")).length && (t = e.slice(-2), e = e.slice(0, 8), t > 1 && t < 100 ? t /= 100 : t >= 0 && (t = 0));
                var s = e >> 16 & 255,
                    i = e >> 8 & 255,
                    n = 255 & e;
                return t || 0 == t ? s + "," + i + "," + n + "," + t : s + "," + i + "," + n
            },
            hideErrorMsg: qn,
            indexOf: function(e, t) {
                if (Array.prototype.indexOf) return Array.prototype.indexOf.call(e, t);
                for (var s = 0; s < e.length; s++)
                    if (t === e[s]) return s;
                return -1
            },
            isArray: Rn,
            isBannerShown: Vn,
            isBetaOrg: aa,
            isBotChid: wn,
            isChannelChid: Wn,
            isCustomBot: function(e) {
                return _n(e) === ut.CHATTYPES.CUSTOM_BOT
            },
            isElectron: Xn,
            isEmpty: dn,
            isEmptyObject: Gi,
            isEmptyString: Vi,
            isFile: jn,
            isFilesizeExceeded: Bn,
            isImageLazyLoaded: On,
            isLocalUser: un,
            isMacOS: function() {
                return -1 != navigator.appVersion.indexOf("Mac")
            },
            isMacOSMojaveOrOlder: function() {
                var e = navigator.userAgent.match(/Mac\sOS\sX\s10(.|_)(7|8|9|10|11|12|13|14)/);
                return !dn(e) && e.length
            },
            isScrolledIntoView: ln,
            isThreadChid: Sn,
            isViewableInScroll: Ln,
            isWindowsOS: function() {
                return -1 !== ["Win32", "Win64", "Windows", "WinCE"].indexOf(navigator.platform)
            },
            isZuid: Xi,
            loadFiles: function(e, t, s, i, n) {
                "string" == typeof e && (e = [e]);
                var a = e.length;
                e.forEach((function(e) {
                    var o = 1;
                    ! function e(r) {
                        var l = vn(t);
                        "script" === t ? (l.defer = !0, l.type = "text/javascript", l.src = r) : "link" === t && (l.type = "text/css", l.rel = "stylesheet", l.href = r), n && n.integrity && (l.crossOrigin = "anonymous", l.integrity = n.integrity), l.onload = function() {
                            --a <= 0 && "function" == typeof s && s()
                        }, i && i > 0 && (l.onerror = function() {
                            o <= i ? setTimeout((function() {
                                o += 1, An(l), e(r)
                            }), 15 * o * 1e3) : An(l)
                        }), document.head.appendChild(l)
                    }(e)
                }))
            },
            loadImageWithDebounce: function(e) {
                return Mn((function() {
                    Nn(e)
                }), null, 100)
            },
            loadOriginalImage: Nn,
            modifyXCliMsgParam: da,
            moveCaretPosition: zi,
            nocachefix: en,
            positionElement: fn,
            pubsub: an,
            removeClass: Un,
            removeDuplicatesFromArray: ea,
            removeElement: An,
            removeElementFromArray: function(e, t) {
                var s = e.indexOf(t); - 1 !== s && e.splice(s, 1)
            },
            removeItemFromListByValue: ia,
            safeHTML: Zi,
            scrollIntoView: bn,
            scrollTo: yn,
            setAttribute: kn,
            showErrorMsg: Gn,
            sortBy: tn,
            splitWmsFormattedString: qi,
            throttle: ji,
            toggle: function(e) {
                "block" == e.style.display ? e.style.display = "none" : e.style.display = "block"
            },
            triggerDownloadInDesktopApp: Jn,
            unescapeHTML: Ki,
            updateItemInListByValue: na
        }),
        ua = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                a(this, s), i = t.call(this, e);
                var n = e.placeholder || new Date;
                return i.datepicickernode = null, e.presetdate && Oe(e.presetdate) && (n = new Date(e.presetdate)), i.state = {
                    calendarvisible: !1,
                    selecteddate: n,
                    mountedtop: null
                }, i.mountCalendar = i.mountCalendar.bind(h(i)), i.onDateSelection = i.onDateSelection.bind(h(i)), i.onDateSelectionCallBack = i.props.onDateSelection.bind(h(i)), i.setDatepickerNode = i.setDatepickerNode.bind(h(i)), i.onClickOutside = i.onClickOutside.bind(h(i)), i.clearValue = i.clearValue.bind(h(i)), i
            }
            return r(s, [{
                key: "updateDate",
                value: function(e) {
                    this.setState({
                        selecteddate: new Date(e)
                    })
                }
            }, {
                key: "setDatepickerNode",
                value: function(e) {
                    this.datepickernode = e
                }
            }, {
                key: "mountCalendar",
                value: function(e) {
                    if ("keydown" == e.type && 13 == e.keyCode || "click" == e.type) {
                        var t = !1;
                        if (this.datepickernode.getBoundingClientRect().bottom + 250 > window.innerHeight) t = !0;
                        else if (this.props.mountedviaforms && this.datepickernode) {
                            var s = $n(this.datepickernode, "[data-dialogwrapper=true]");
                            this.datepickernode.offsetParent.offsetParent.offsetTop - s.scrollTop + s.offsetTop + this.datepickernode.offsetParent.offsetParent.offsetHeight + 200 > s.offsetHeight && (t = !0)
                        }
                        this.setState({
                            calendarvisible: !this.state.calendarvisible,
                            mountedtop: t
                        })
                    }
                }
            }, {
                key: "onDateSelection",
                value: function(e) {
                    this.onDateSelectionCallBack(e), this.setState({
                        selecteddate: e,
                        calendarvisible: !this.state.calendarvisible
                    })
                }
            }, {
                key: "onClickOutside",
                value: function() {
                    this.setState({
                        calendarvisible: !1
                    })
                }
            }, {
                key: "clearValue",
                value: function(e) {
                    this.setState({
                        selecteddate: this.props.placeholder
                    }), this.onDateSelectionCallBack(null), e.stopPropagation(), e.preventDefault()
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = "",
                        i = ke(t.selecteddate),
                        n = Ce,
                        a = t.selecteddate,
                        o = "disable" == this.props.status ? "-1" : "0",
                        r = N(se, {
                            tabindex: o,
                            classname: Se,
                            type: "icon",
                            content: "e9ee",
                            onclick: this.clearValue
                        });
                    e.placeholder == t.selecteddate && (i = t.selecteddate, n = be, a = new Date, r = null), t.mountedtop && t.calendarvisible ? s = fe : !1 === t.mountedtop && t.calendarvisible && (s = pe);
                    var l = e.mountedviaforms ? We : "",
                        d = e.mountedviaforms ? _e : ye,
                        c = N("div", {
                            class: ve + " " + l,
                            key: "calendarview"
                        }, N(ce, {
                            onDateSelection: this.onDateSelection,
                            selecteddate: a,
                            mounttop: t.mountedtop,
                            filter: this.props.filter
                        }));
                    return N(we, {
                        onClickOutside: this.onClickOutside
                    }, N("div", {
                        tabindex: o,
                        onkeydown: this.mountCalendar,
                        class: he
                    }, t.mountedtop && t.calendarvisible && c, N("div", {
                        ref: this.setDatepickerNode,
                        key: "datepickerview",
                        class: ge + " " + s,
                        onclick: this.mountCalendar
                    }, N("span", {
                        class: n
                    }, i), r, N("span", {
                        class: d
                    })), !1 === t.mountedtop && t.calendarvisible && c))
                }
            }]), s
        }(R),
        ma = function() {
            function e() {
                a(this, e), this.instance = null
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s) {
                    this.node = e, ee(N(ua, {
                        ref: function(e) {
                            this.instance = e
                        }.bind(this),
                        onDateSelection: s,
                        presetdate: t
                    }), e)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node)
                }
            }, {
                key: "updateDate",
                value: function(e) {
                    this.instance.updateDate(e)
                }
            }]), e
        }();
    var ha, ga = {
            zomojiContainer: "mc854d52f3_zomojiContainer",
            searchcontainer: "mc854d52f3_searchcontainer",
            searchBox: "mc854d52f3_searchBox",
            smileycnt: "mc854d52f3_smileycnt",
            smileycntlive: "mc854d52f3_smileycntlive",
            stickercnt: "mc854d52f3_stickercnt",
            smileywithtext: "mc854d52f3_smileywithtext",
            smileyContainer: "mc854d52f3_smileyContainer",
            toggler: "mc854d52f3_toggler",
            zmNightMode: "zmNightMode",
            zomoji: "mc854d52f3_zomoji",
            livezomoji: "mc854d52f3_livezomoji",
            frequentzomoji: "mc854d52f3_frequentzomoji",
            customemoji: "mc854d52f3_customemoji",
            sticker: "mc854d52f3_sticker",
            emptysearchcontainer: "mc854d52f3_emptysearchcontainer",
            emojitonedisplay: "mc854d52f3_emojitonedisplay",
            toneitem: "mc854d52f3_toneitem",
            unsupported: "mc854d52f3_unsupported",
            loadinggif_cont: "mc854d52f3_loadinggif_cont",
            header: "mc854d52f3_header",
            togglertop: "mc854d52f3_togglertop",
            livezomojiicon: "mc854d52f3_livezomojiicon",
            row: "mc854d52f3_row",
            rowlast: "mc854d52f3_rowlast",
            selectedsmiley: "mc854d52f3_selectedsmiley",
            emoji: "mc854d52f3_emoji",
            emojiwithouttext: "mc854d52f3_emojiwithouttext",
            emptysearchemoji: "mc854d52f3_emptysearchemoji",
            emptysearchtext: "mc854d52f3_emptysearchtext",
            elementstitle: "mc854d52f3_elementstitle",
            containerspacing: "mc854d52f3_containerspacing",
            autocompleteheight: "mc854d52f3_autocompleteheight",
            "wms-rtl": "wms-rtl",
            tonepickercontainer: "mc854d52f3_tonepickercontainer",
            tones: "mc854d52f3_tones",
            tonelabel: "mc854d52f3_tonelabel",
            selectedtone: "mc854d52f3_selectedtone",
            loadinggif: "mc854d52f3_loadinggif",
            gifs: "mc854d52f3_gifs",
            gifcontainer: "mc854d52f3_gifcontainer",
            loader: "mc854d52f3_loader",
            virtuallist: "mc854d52f3_virtuallist",
            zomojiicon: "mc854d52f3_zomojiicon"
        },
        pa = [],
        fa = {},
        va = {};

    function Ca(e, t, s, i) {
        var n = ba(e, t);
        if (ya(n)) "function" == typeof s && s(e);
        else {
            var a = {
                "X-XHR-exception": "true",
                "X-ZCSRF-TOKEN": Yi()
            };
            WebMessanger.isGuestUser() && WebMessanger.guest_info && WebMessanger.guest_info.encrypt_id && (a["x-cliq-guid"] = WebMessanger.guest_info.encrypt_id), Xe(void 0 !== WebMessanger && WebMessanger.isGuestUser() ? "guestapi/v2/gifs" : "v2/gifs", n, (function() {
                var t, i = JSON.parse(this.response);
                t = e ? va : fa, i.gifs.length > 0 && i.gifs.forEach((function(s) {
                    var i = s.thumb.split("/");
                    i = (i = i[i.length - 1]).slice(0, i.indexOf(".gif")), s.title = e && !i.includes(e) ? i + "-" + e : i, t[s.thumb] = s
                })), pa.push(n), "function" == typeof s && s(e)
            }), (function() {
                0 == Object.keys(fa).length && ha && (ha = void 0), "function" == typeof i && i()
            }), null, null, a)
        }
    }

    function ba(e, t) {
        var s = "";
        return e && "" !== e && (s = "search=" + encodeURIComponent(e)), t && (s += e ? "&" : "", s += "p_no=" + function(e) {
            var t = wa(e).length;
            if (t > 10 && t < 50) return 2;
            return parseInt(t / 50) + 1
        }(e)), s
    }

    function ya(e) {
        return -1 !== pa.indexOf(e)
    }
    var _a = Mn((function(e, t, s, i) {
        Ca(e, t, s, i)
    }), null, 300);

    function Wa(e, t) {
        0 != Object.keys(fa).length || ha || (ha = (new Date).getTime(), Ca(null, null, e, t))
    }

    function Sa(e) {
        return e ? Tn(fa).concat(Tn(va)) : Tn(fa)
    }

    function wa(e) {
        var t = Sa(e),
            s = [];
        return e && (t = t.filter((function(t) {
            return t.thumb.includes(e) || t.title.includes(e)
        }))), t.forEach((function(e) {
            s.push(e.thumb)
        })), s
    }

    function Ma(e) {
        var t = wa(e),
            s = va[t] || fa[t];
        return e ? (s || (s = {
            thumb: e,
            orig: e,
            title: ""
        }), N("img", {
            src: s.thumb,
            class: ga.gifs,
            title: s.title,
            "data-url": s.orig
        })) : null
    }

    function Ia() {
        return void 0 !== ha
    }

    function Ta(e, t) {
        return (!e && !t || !ya(ba(e, t))) && wa(e).length < 150
    }

    function Aa(e) {
        var t = pa[pa.length - 1];
        return !!t && ("p_no" == (t = t.split("&")[0]).split("=")[0] || (t = (t = t.split("=")[1]).replaceAll("%20", " ")) == e)
    }

    function Ea(e) {
        var t = va[e] || fa[e];
        return t && t.orig || e
    }

    function Ua(e) {
        var t;
        t = e.trim(), 0 === pa.filter((function(e) {
            var s = e.split("&")[0];
            if ((s = s.split("=")[1]) === t) return !0
        })).length && (va = {}, pa = [])
    }
    var ka = Object.freeze({
            __proto__: null,
            canDownloadMore: Ta,
            checkAndClearSearchStore: Ua,
            getAllGIFs: Sa,
            getGIFElement: Ma,
            getGIFSWithDebounce: _a,
            getGIFTextCodes: wa,
            getOriginalGIFUrl: Ea,
            initGIFs: Wa,
            isGifInitialized: Ia,
            isLastSearchedValue: Aa
        }),
        Na = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                var e;
                return a(this, s), (e = t.call(this)).resize = e.resize.bind(h(e)), e.handleScroll = e.handleScroll.bind(h(e)), e
            }
            return r(s, [{
                key: "resize",
                value: function() {
                    this.state.height !== this.base.offsetHeight && this.setState({
                        height: this.base.offsetHeight
                    })
                }
            }, {
                key: "handleScroll",
                value: function(e) {
                    this.setState({
                        offset: this.base.scrollTop
                    }), this.props.sync && this.forceUpdate(), this.props.handleScrollCallback && this.props.handleScrollCallback(e)
                }
            }, {
                key: "componentDidUpdate",
                value: function() {
                    this.resize()
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    this.resize(), addEventListener("resize", this.resize)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    removeEventListener("resize", this.resize)
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = e.data,
                        i = e.rowHeight,
                        n = e.renderRow,
                        a = e.overscanCount,
                        o = void 0 === a ? 10 : a;
                    e.sync;
                    var r = e.headerItemsCount,
                        l = e.headerItemHeight,
                        d = e.className,
                        c = t.offset,
                        u = void 0 === c ? 0 : c,
                        m = t.height,
                        h = u / i | 0,
                        g = (void 0 === m ? 0 : m) / i | 0;
                    o && (h = Math.max(0, h - h % o), g += o);
                    var p = h + 1 + g,
                        f = s.slice(h, p);
                    r = r || 0;
                    var v = (s.length - r) * i + r * l,
                        C = (h = h > r ? h - r : h) * i != 0 ? h * i + r * l : h * i;
                    return N("div", {
                        onScroll: this.handleScroll,
                        class: d
                    }, N("div", {
                        style: "".concat("position:relative; overflow:hidden; width:100%; min-height:100%;", " height:").concat(v, "px;")
                    }, N("div", {
                        style: "".concat("position:absolute; top:0; left:0; height:100%; width:100%; overflow:visible;", " top:").concat(C, "px;")
                    }, f.map(n))))
                }
            }]), s
        }(R),
        xa = {},
        Oa = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                a(this, s), (i = t.call(this, e)).autocompleteenabled = e.config && e.config.autocomplete;
                var n = {
                    default_size: "24",
                    animation: {
                        default_size: e.config && e.config.showEmojiWithText ? "24" : "48"
                    }
                };
                i.getSmileyCode = i.getSmileyCode.bind(h(i)), i.searchSmiley = i.searchSmiley.bind(h(i)), i.setZomojiNode = i.setZomojiNode.bind(h(i)), i.displayZomoji = i.displayZomoji.bind(h(i)), i.closeZomojiComponent = i.closeZomojiComponent.bind(h(i)), i.displayLiveZomoji = i.displayLiveZomoji.bind(h(i)), i.selectSmiley = i.selectSmiley.bind(h(i)), i.setSmileyPosition = i.setSmileyPosition.bind(h(i)), i.displayEmoji = i.displayEmoji.bind(h(i)), i.storeSearchNode = i.storeSearchNode.bind(h(i)), i.storeSmileysContainer = i.storeSmileysContainer.bind(h(i)), i.storeSelectedElementRef = i.storeSelectedElementRef.bind(h(i)), i.storeGIFVirtualList = i.storeGIFVirtualList.bind(h(i)), i.displayFrequentEmojis = i.displayFrequentEmojis.bind(h(i)), i.addAnimationClass = i.addAnimationClass.bind(h(i)), i.removeAnimationClass = i.removeAnimationClass.bind(h(i)), i.updateSkinTone = i.updateSkinTone.bind(h(i)), i.displayCustomEmoji = i.displayCustomEmoji.bind(h(i)), i.displaySticker = i.displaySticker.bind(h(i)), i.displayGIF = i.displayGIF.bind(h(i)), i.getNextPageForGIFs = i.getNextPageForGIFs.bind(h(i)), i.onSearchSuccessCallback = i.onSearchSuccessCallback.bind(h(i)), i.onSearchFailureCallback = i.onSearchFailureCallback.bind(h(i)), i.showGIFsInVirtualList = i.showGIFsInVirtualList.bind(h(i)), i.fetchStickers = Mn(Ai, h(i), 300), i.rearrangeSmileysOnResize = Mn(i.rearrangeSmileysOnResize, h(i), 300), i.getNextPageForCustomEmojis = Mn(i.getNextPageForCustomEmojis, h(i), 50), i.zm = new Pi(n);
                var o = i.props.config && i.props.config.searchterm ? i.props.config.searchterm : "",
                    r = i.getSmileysForSelectedPane(o, i.getFrequentSmileyTab());
                return i.state = {
                    smileyvalue: o,
                    smileycodes: r,
                    currentpane: i.getFrequentSmileyTab(),
                    isloading: !1,
                    containerwidth: 300,
                    currentsmileyposition: {
                        row: 0,
                        column: 0
                    }
                }, i
            }
            return r(s, [{
                key: "componentDidUpdate",
                value: function(e, t) {
                    if ("gif" == this.state.currentpane) {
                        var s = this.zomojinode.querySelector("div[data-selected=true]");
                        if (t.currentsmileyposition.row !== this.state.currentsmileyposition.row) {
                            var i = this.gifvirtuallistnode && this.gifvirtuallistnode.base;
                            i && (!s || s && !ln(s, i, !0)) && (i.scrollTop = 92 * this.state.currentsmileyposition.row)
                        }
                    } else {
                        var n = this.selectedelement;
                        n && !ln(n, this.smileycontainernode, !1) && (this.avoidscroll ? setTimeout(function() {
                            this.avoidscroll = !1
                        }.bind(this)) : yn(n, null, this.smileycontainernode))
                    }
                    if (t.currentpane !== this.state.currentpane) {
                        var a = !1;
                        "gif" == this.state.currentpane && (Ia() || 0 != wa().length || (Wa(this.onSearchSuccessCallback, this.onSearchFailureCallback), a = !0), this.state.smileyvalue && wa(this.state.smileyvalue).length < 10 && (this.getNextPageForGIFs(null, this.state.smileyvalue), a = !0)), this.setState({
                            isloading: a
                        })
                    }
                }
            }, {
                key: "componentWillMount",
                value: function() {
                    if ("gif" == this.state.currentpane) {
                        Wa(this.onSearchSuccessCallback, this.onSearchFailureCallback);
                        var e = !0;
                        Ia() && wa().length && (e = !1), this.setState({
                            isloading: e
                        })
                    }
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    if (this.autocompleteenabled && this.checkEmptyResultSet(this.state.smileycodes, this.state.currentpane)) return void this.props.closeComponent();
                    this.setSmileyPosition(), this.searchnode && this.searchnode.focus(), window.addEventListener("resize", this.rearrangeSmileysOnResize)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    window.removeEventListener("resize", this.rearrangeSmileysOnResize)
                }
            }, {
                key: "rearrangeSmileysOnResize",
                value: function(e) {
                    this.setState({
                        containerwidth: this.zomojinode.offsetWidth - 7
                    })
                }
            }, {
                key: "switchTabs",
                value: function(e) {
                    var t = ["frequentemoji", "livezomoji", "zomoji", "emoji", "gif", "customemoji", "sticker"];
                    this.props.config && (this.props.config.hidelivezomoji && (t = t.filter((function(e) {
                        return "livezomoji" !== e
                    }))), this.props.config.hidezomoji && (t = t.filter((function(e) {
                        return "zomoji" !== e
                    }))), this.props.config.hideemoji && (t = t.filter((function(e) {
                        return "emoji" !== e
                    }))), this.props.config.hidegifs && (t = t.filter((function(e) {
                        return "gif" !== e
                    }))), this.props.config.hidecustomemoji && (t = t.filter((function(e) {
                        return "customemoji" !== e
                    }))), this.props.config.hidestickers && (t = t.filter((function(e) {
                        return "sticker" !== e
                    }))));
                    var s = t.indexOf(this.state.currentpane),
                        i = t.length || 6;
                    switch (e.shiftKey ? s-- : s++, s == i && (s = 0), s < 0 && (s = i - 1), t[s]) {
                        case "frequentemoji":
                            this.displayFrequentEmojis(e);
                            break;
                        case "livezomoji":
                            this.displayLiveZomoji(e);
                            break;
                        case "zomoji":
                            this.displayZomoji(e);
                            break;
                        case "emoji":
                            this.displayEmoji(e);
                            break;
                        case "gif":
                            this.displayGIF(e);
                            break;
                        case "customemoji":
                            this.displayCustomEmoji(e);
                            break;
                        case "sticker":
                            this.displaySticker(e)
                    }
                    e.stopPropagation(), e.preventDefault()
                }
            }, {
                key: "updateSearchTermFromComposer",
                value: function(e) {
                    this.searchSmiley(null, e)
                }
            }, {
                key: "storeSearchNode",
                value: function(e) {
                    this.searchnode = e
                }
            }, {
                key: "storeSmileysContainer",
                value: function(e) {
                    this.smileycontainernode = e
                }
            }, {
                key: "storeSelectedElementRef",
                value: function(e) {
                    this.selectedelement = e
                }
            }, {
                key: "storeGIFVirtualList",
                value: function(e) {
                    this.gifvirtuallistnode = e
                }
            }, {
                key: "getFrequentSmileyTab",
                value: function() {
                    if (this.autocompleteenabled) return "frequentemoji";
                    Ut.getItem(oe.get("zuid") + "_frequentsmileytab") || this.setFrequentSmileyTab("frequentemoji");
                    var e = Ut.getItem(oe.get("zuid") + "_frequentsmileytab") || "frequentemoji";
                    return ("sticker" == e && this.props.config.hidestickers || "customemoji" == e && this.props.config.hidecustomemoji || "gif" == e && this.props.config.hidegifs || "emoji" == e && this.props.config.hideemoji || "livezomoji" == e && this.props.config.hidelivezomoji || "zomoji" == e && this.props.config.hidezomoji) && (e = "frequentemoji"), e
                }
            }, {
                key: "setFrequentSmileyTab",
                value: function(e) {
                    Ut.setItem(oe.get("zuid") + "_frequentsmileytab", e)
                }
            }, {
                key: "getDefaultSmileyCodePositions",
                value: function(e) {
                    var t = 0;
                    return "frequentemoji" == (e = e || this.state.currentpane) && (t = 1), {
                        row: t,
                        column: 0
                    }
                }
            }, {
                key: "setSmileyPosition",
                value: function(e) {
                    this.setState({
                        currentsmileyposition: this.getDefaultSmileyCodePositions(),
                        containerwidth: this.zomojinode.offsetWidth - 7
                    })
                }
            }, {
                key: "selectSmiley",
                value: function(e) {
                    var t = this.state.currentsmileyposition.row,
                        s = this.state.currentsmileyposition.column,
                        i = this.populateSmiley();
                    switch (e.keyCode) {
                        case 39:
                            s++, e.preventDefault();
                            break;
                        case 37:
                            s--, e.preventDefault();
                            break;
                        case 38:
                            t--;
                            break;
                        case 40:
                            t++;
                            break;
                        case 13:
                            if ("gif" == this.state.currentpane) {
                                this.props.getSmileyCode(i[t].props.children[s].props.children[0].props["data-url"], e, this.state.currentpane), e.preventDefault();
                                break
                            }
                            if (this.smileycodepositions[t][s]) {
                                var n = this.zm.removeTonePrefFromCode(this.smileycodepositions[t][s]),
                                    a = i[t].props.children[s].props.children[0].props.title;
                                this.zm.updateFrequentSmileysList(n, a), this.props.getSmileyCode(n, e, this.state.currentpane)
                            }
                            e.preventDefault();
                            break;
                        case ut.KEYCODES.TAB:
                            return void this.switchTabs(e);
                        default:
                            t = 0, s = 0
                    }
                    s > (this.smileycodepositions[t] && this.smileycodepositions[t].length - 1) && (39 == e.keyCode && t++, s = 0), s < 0 && (37 == e.keyCode && t--, s = this.smileycodepositions[t] && this.smileycodepositions[t].length - 1), i[t] && 1 == i[t].props["data-zomojiheader"] && (39 == e.keyCode || 40 == e.keyCode ? t++ : 37 != e.keyCode && 38 != e.keyCode || t--), t > this.totalrows || t < 0 || s > (i[t] && i[t].props.children.length - 1) || ("frequentemoji" == this.state.currentpane && 0 == t && (t = 1), t == this.totalrows && "gif" == this.state.currentpane && this.getNextPageForGIFs(null, this.state.smileyvalue), this.setState({
                        currentsmileyposition: {
                            row: t,
                            column: s
                        }
                    }))
                }
            }, {
                key: "addAnimationClass",
                value: function(e) {
                    var t = e.target.firstChild || e.target,
                        s = $WC.Config.get("cliqstaticserverpath") + "/officechat/images/default/sm-animation/48/" + t.getAttribute("data-smileycode").replace(/:/g, "").replace("!", "") + ".png";
                    oe.get("builddomain") && (s = oe.get("builddomain") + s);
                    var i = "livezomoji" == this.state.currentpane ? "48" : "24";
                    if (xa[s]) t.className = t.className.replace("zomoji-f-" + i, "zomojianim-" + i);
                    else {
                        var n = new Image;
                        n.src = s, n.onload = function() {
                            xa[s] = !0, t.className = t.className.replace("zomoji-f-" + i, "zomojianim-" + i)
                        }
                    }
                }
            }, {
                key: "removeAnimationClass",
                value: function(e) {
                    var t = e.target.firstChild || e.target,
                        s = "livezomoji" == this.state.currentpane ? "48" : "24";
                    t.className = t.className.replace("zomojianim-" + s, "zomoji-f-" + s)
                }
            }, {
                key: "displayLiveZomoji",
                value: function(e) {
                    this.setFrequentSmileyTab("livezomoji"), this.setState({
                        currentpane: "livezomoji",
                        currentsmileyposition: this.getDefaultSmileyCodePositions("livezomoji")
                    }, (function() {
                        this.searchnode && this.searchnode.focus()
                    })), e.stopPropagation()
                }
            }, {
                key: "displayFrequentEmojis",
                value: function(e) {
                    this.setFrequentSmileyTab("frequentemoji"), this.setState({
                        currentpane: "frequentemoji",
                        currentsmileyposition: this.getDefaultSmileyCodePositions("frequentemoji")
                    }, (function() {
                        this.searchnode && this.searchnode.focus()
                    })), e.stopPropagation()
                }
            }, {
                key: "displayZomoji",
                value: function(e) {
                    this.setFrequentSmileyTab("zomoji"), this.setState({
                        currentpane: "zomoji",
                        currentsmileyposition: this.getDefaultSmileyCodePositions("zomoji")
                    }, (function() {
                        this.searchnode && this.searchnode.focus()
                    })), e.stopPropagation()
                }
            }, {
                key: "displayEmoji",
                value: function(e) {
                    this.setFrequentSmileyTab("emoji"), this.setState({
                        currentpane: "emoji",
                        currentsmileyposition: this.getDefaultSmileyCodePositions("emoji")
                    }, (function() {
                        this.searchnode && this.searchnode.focus()
                    })), e.stopPropagation()
                }
            }, {
                key: "displayCustomEmoji",
                value: function(e) {
                    this.setFrequentSmileyTab("customemoji"), this.setState({
                        currentpane: "customemoji",
                        currentsmileyposition: this.getDefaultSmileyCodePositions("customemoji")
                    }, (function() {
                        this.searchnode && this.searchnode.focus()
                    })), e.stopPropagation()
                }
            }, {
                key: "displaySticker",
                value: function(e) {
                    this.setFrequentSmileyTab("sticker"), this.setState({
                        currentpane: "sticker",
                        currentsmileyposition: this.getDefaultSmileyCodePositions("sticker")
                    }, (function() {
                        this.searchnode && this.searchnode.focus()
                    })), e.stopPropagation()
                }
            }, {
                key: "displayGIF",
                value: function(e) {
                    this.setFrequentSmileyTab("gif"), this.setState({
                        currentpane: "gif",
                        currentsmileyposition: this.getDefaultSmileyCodePositions("gif")
                    }, (function() {
                        this.searchnode && this.searchnode.focus()
                    })), e.stopPropagation()
                }
            }, {
                key: "closeZomojiComponent",
                value: function(e) {
                    27 === e.keyCode && this.props.closeComponent()
                }
            }, {
                key: "setZomojiNode",
                value: function(e) {
                    this.zomojinode = e
                }
            }, {
                key: "getSmileyCode",
                value: function(e, t, s) {
                    "gif" == this.state.currentpane ? s = Ea(s) : ("customemoji" === this.state.currentpane && "sticker" === this.state.currentpane || (s = this.zm.removeTonePrefFromCode(t.props["data-smileycode"])), this.zm.updateFrequentSmileysList(s, t.props.title)), this.props.getSmileyCode(s, e, this.state.currentpane), e.preventDefault()
                }
            }, {
                key: "getSortedZomojis",
                value: function(e) {
                    return this.zm.sortSmileys(this.zm.getSmileyLookup(e), e)
                }
            }, {
                key: "getSortedEmojis",
                value: function(e) {
                    return this.zm.sortEmojis(this.zm.getEmojiLookup(e), e)
                }
            }, {
                key: "getNextPageForCustomEmojis",
                value: function(e) {
                    !this.state.isloading && e.target.scrollHeight == e.target.offsetHeight + e.target.scrollTop && Hi(this.getCriteriaType(this.state.currentpane)) && (this.getCustomEmojisFromServer(), this.setState({
                        isloading: !0
                    }))
                }
            }, {
                key: "getCriteriaType",
                value: function(e) {
                    return "customemoji" == e ? "emoji" : "sticker"
                }
            }, {
                key: "getCustomEmojisFromServer",
                value: function(e, t) {
                    t = t || this.state.currentpane;
                    var s = function(e) {
                            var s = Object.keys(e.custom_emojis).filter((function(t) {
                                    return 1 == e.custom_emojis[t].status
                                })),
                                i = Ni(this.state.smileyvalue, t);
                            this.emojis_from_server = "Success" == e.status ? ea([].concat(v(i), v(s))) : this.state.smileycodes, this.setState({
                                isloading: !1
                            })
                        }.bind(this),
                        i = !e;
                    this.fetchStickers({
                        search_text: e,
                        criteriatype: this.getCriteriaType(t),
                        includenexttoken: i
                    }, s)
                }
            }, {
                key: "onSearchSuccessCallback",
                value: function() {
                    this.setState({
                        isloading: !1
                    })
                }
            }, {
                key: "onSearchFailureCallback",
                value: function() {
                    this.setState({
                        isloading: !1,
                        searchfailure: !0
                    })
                }
            }, {
                key: "getNextPageForGIFs",
                value: function(e, t) {
                    var s = !!(e && "scroll" == e.type && e.target.scrollHeight - e.target.scrollTop < 3 * e.target.offsetHeight);
                    if ((!s || !this.state.isloading) && (s || t)) {
                        var i = !1;
                        if (Ta(t = t || this.state.smileyvalue || "", s)) {
                            i = !0;
                            var n = function(e) {
                                e !== this.state.smileyvalue && this.getNextPageForGIFs(null, this.state.smileyvalue), Aa(this.state.smileyvalue) && this.setState({
                                    isloading: !1
                                })
                            }.bind(this);
                            _a(t, s, n, this.onSearchFailureCallback)
                        }
                        this.setState({
                            isloading: i
                        })
                    }
                }
            }, {
                key: "getSmileysForSelectedPane",
                value: function(e, t) {
                    var s = [];
                    if ("emoji" === t) s = this.getSortedEmojis(e);
                    else if ("frequentemoji" == t)
                        if (e) {
                            for (var i = this.getSortedZomojis(e), n = {
                                    animated: []
                                }, a = {
                                    work: []
                                }, o = {
                                    emoji: this.getSortedEmojis(e)
                                }, r = {
                                    customemoji: Ni(e, "customemoji")
                                }, l = {
                                    sticker: Ni(e, "sticker")
                                }, d = 0; d < i.length; d++) this.zm._isAnimationCode(i[d]) ? n.animated.push(i[d]) : a.work.push(i[d]);
                            s.push(a, o, n, r, l)
                        } else {
                            var c = this.zm.replaceFrequentSmileySkinTone(this.zm.getFrequentSmileys());
                            for (var u in c) {
                                var m = {};
                                m[u] = c[u], s.push(m)
                            }
                        }
                    else s = "customemoji" == t || "sticker" == t ? Ni(e, t) : "gif" == t ? wa(e) : this.getSortedZomojis(e);
                    return s
                }
            }, {
                key: "checkEmptyResultSet",
                value: function(e, t) {
                    var s = !0;
                    if (this.autocompleteenabled) {
                        if ("frequentemoji" == t)
                            for (var i = 0; i < e.length; i++) {
                                var n = Object.keys(e[i])[0];
                                if (e[i][n].length > 0) {
                                    if ("sticker" == n && this.props.config.hidestickers) continue;
                                    s = !1;
                                    break
                                }
                            } else e.length > 0 && (s = !1);
                        return s
                    }
                }
            }, {
                key: "filterAndGetSmileys",
                value: function(e) {
                    var t = this.getSmileysForSelectedPane(e, this.state.currentpane);
                    return this.checkEmptyResultSet(t, this.state.currentpane) && this.autocompleteenabled ? (this.props.closeComponent(), t) : t
                }
            }, {
                key: "searchSmiley",
                value: function(e, t) {
                    var s = e && e.target.value.toLowerCase().trim() || t,
                        i = this.state.isloading;
                    "customemoji" != this.state.currentpane && "sticker" != this.state.currentpane || !(!s && Hi(this.getCriteriaType(this.state.currentpane)) || s) || ((!s && Hi(this.getCriteriaType(this.state.currentpane)) || s) && this.getCustomEmojisFromServer(s, this.state.currentpane), i = !0), "gif" == this.state.currentpane && (s ? (Ua(s), wa(s).length < 10 && (i = !0, this.getNextPageForGIFs(null, s))) : this.state.isloading && (i = !1)), this.setState({
                        smileyvalue: s,
                        smileycodes: this.filterAndGetSmileys(s),
                        isloading: i,
                        currentsmileyposition: this.getDefaultSmileyCodePositions(),
                        searchfailure: !1
                    })
                }
            }, {
                key: "getFrequentSmileys",
                value: function(e, t, s, i) {
                    var n = this,
                        a = null;
                    "animated" == i && (a = new Pi({
                        default_size: "24",
                        animation: {
                            default_size: "24"
                        }
                    }));
                    for (var o = 0, r = [], l = [], d = [], c = [], u = null, m = null, h = this.getElementSpacingValue(), g = function() {
                            var g = ga.smileycnt,
                                f = null,
                                v = null;
                            if ("animated" == i) {
                                if (n.props.config.hidelivezomoji) return 0;
                                f = a.getSmiley(e[p]), m = n.removeAnimationClass, u = n.addAnimationClass
                            }
                            if ("emoji" == i) {
                                if (n.props.config.hideemoji) return 0;
                                g += " " + ga.emoji, n.props.config && !n.props.config.showEmojiWithText && (g += " " + ga.emojiwithouttext), f = n.zm.getEmoji(e[p])
                            }
                            if ("work" == i) {
                                if (n.props.config.hidezomoji) return 0;
                                f = n.zm.getSmiley(e[p])
                            }
                            if ("sticker" == i && (f = Oi(e[p])), "customemoji" == i && (f = xi(e[p])), null == f) return 0;
                            var C = !1;
                            n.state.currentsmileyposition.row === s && n.state.currentsmileyposition.column === o && (g += " " + ga.selectedsmiley, C = !0, v = n.storeSelectedElementRef);
                            var b = n.props.config.showEmojiWithText ? N("span", {
                                class: ga.elementstitle
                            }, f.props.title) : null;
                            n.props.config.showEmojiWithText && (g += " " + ga.smileywithtext), r.push(N("div", {
                                class: g,
                                tabindex: "-1",
                                onmouseover: u,
                                onmouseout: m,
                                title: f.props.title,
                                "data-selected": C,
                                style: {
                                    "margin-right": h + "px"
                                },
                                onclick: function(e) {
                                    this.getSmileyCode(e, f)
                                }.bind(n),
                                ref: v
                            }, f, b)), d.push(f.props["data-smileycode"]), ++o == t && (l.push(N("div", {
                                class: ga.row
                            }, r)), s++, o = 0, r = [], c.push(d), d = [])
                        }, p = 0; p < e.length; p++) g();
                    return r.length > 0 && (l.push(N("div", {
                        class: ga.rowlast
                    }, r)), c.push(d), s++), {
                        smileys_array: l,
                        smileycodepositions: c,
                        row: s
                    }
                }
            }, {
                key: "getLoadingElement",
                value: function() {
                    return N("div", {
                        class: ga.loadinggif_cont
                    }, N("div", {
                        class: ga.loadinggif
                    }))
                }
            }, {
                key: "getEmptySearchResult",
                value: function() {
                    var e = this.zm.getEmoji(":disappointed-relieved:");
                    return N("div", {
                        class: ga.emptysearchcontainer
                    }, N("div", {
                        class: ga.emptysearchemoji
                    }, e), N("div", {
                        class: ga.emptysearchtext
                    }, re("zomojicomponent.noresult", ['"' + this.state.smileyvalue + '"'])))
                }
            }, {
                key: "getFullPageLoader",
                value: function() {
                    return N("div", {
                        class: ga.emptysearchcontainer
                    }, N("div", {
                        class: ga.emptysearchemoji
                    }, N("div", {
                        class: ga.loader
                    })))
                }
            }, {
                key: "getCurrentElementWidth",
                value: function() {
                    return this.props.config.showEmojiWithText ? 135 : "gif" == this.state.currentpane ? 93 : "livezomoji" == this.state.currentpane || "sticker" == this.state.currentpane ? 58 : 32
                }
            }, {
                key: "getElementSpacingValue",
                value: function() {
                    var e = this.getTotalColumns(),
                        t = (this.state.containerwidth - e * this.getCurrentElementWidth()) / e;
                    return t < 0 ? 0 : t
                }
            }, {
                key: "getTotalColumns",
                value: function() {
                    return (this.state.containerwidth - this.state.containerwidth % this.getCurrentElementWidth()) / this.getCurrentElementWidth()
                }
            }, {
                key: "populateSmiley",
                value: function() {
                    var e = this,
                        t = [],
                        s = [],
                        i = [],
                        n = [],
                        a = this.filterAndGetSmileys(this.state.smileyvalue);
                    this.emojis_from_server && !this.state.isloading && (a = this.emojis_from_server, this.emojis_from_server = null);
                    var o = 0,
                        r = 0;
                    this.getCurrentElementWidth();
                    for (var l = this.getTotalColumns(), d = this.getElementSpacingValue(), c = function(c) {
                            var u = a[c],
                                m = !1,
                                h = null;
                            if ("frequentemoji" != e.state.currentpane) {
                                var g = ga.smileycnt;
                                if ("emoji" == e.state.currentpane) u = e.zm.getEmoji(a[c]), g += " " + ga.emoji, e.props.config && !e.props.config.showEmojiWithText && (g += " " + ga.emojiwithouttext);
                                else if ("customemoji" == e.state.currentpane) u = xi(u);
                                else if ("sticker" == e.state.currentpane) u = Oi(u);
                                else if ("gif" == e.state.currentpane) u = Ma(u);
                                else {
                                    if ("zomoji" === e.state.currentpane && e.zm._isAnimationCode(u) || "livezomoji" === e.state.currentpane && !e.zm._isAnimationCode(u)) return 0;
                                    u = e.zm.getSmiley(u)
                                }
                                var p = e.props.showEmojiWithText ? N("span", {
                                    class: ga.elementstitle
                                }, u.props.title) : null;
                                e.state.currentsmileyposition.row === r && e.state.currentsmileyposition.column === o && (g += " " + ga.selectedsmiley, m = !0, h = e.storeSelectedElementRef);
                                var f = null,
                                    v = null;
                                "livezomoji" == e.state.currentpane && (f = e.addAnimationClass, v = e.removeAnimationClass, g += " " + ga.smileycntlive), "sticker" == e.state.currentpane && (g += " " + ga.stickercnt), e.props.config.showEmojiWithText && (g += " " + ga.smileywithtext), s.push(N("div", {
                                    class: g,
                                    tabindex: "-1",
                                    title: u.props.title,
                                    "data-selected": m,
                                    onmouseover: f,
                                    onmouseout: v,
                                    style: {
                                        "margin-right": d + "px"
                                    },
                                    onclick: function(e) {
                                        this.getSmileyCode(e, u, a[c])
                                    }.bind(e),
                                    ref: h
                                }, u, p)), i.push(u.props["data-smileycode"]), o++
                            } else if ("frequentemoji" == e.state.currentpane) {
                                var C = Object.keys(u)[0];
                                if (e.props.config.hidecustomemoji && "customemoji" == C || e.props.config.hidestickers && "sticker" == C || e.props.config.hidegifs && "gif" == C || e.props.config.hidezomoji && "zomoji" == C || e.props.config.hidelivezomoji && "livezomoji" == C || e.props.config.hideemoji && "emoji" == C) return 0;
                                var b = re("work" == C ? "zomojicomponent.zomoji" : "emoji" == C ? "zomojicomponent.emoji" : "zomojicomponent.livezomoji");
                                if ("sticker" == C && (b = re("zomojicomponent.sticker")), "customemoji" == C && (b = re("zomojicomponent.customemoji")), 0 == u[C].length) return 0;
                                t.push(N("div", {
                                    class: ga.header,
                                    "data-zomojiheader": !0
                                }, b)), r++, n.push(["heading"]);
                                var y = e.getFrequentSmileys(u[C], l, r, C);
                                return y.smileys_array.length > 0 ? t = t.concat(y.smileys_array) : t.splice(-1), y.smileycodepositions.length > 0 ? n = n.concat(y.smileycodepositions) : n.splice(-1), r = y.row, 0
                            }
                            o === l && (t.push(N("div", {
                                class: ga.row
                            }, s)), s = [], o = 0, n.push(i), i = [], r++)
                        }, u = 0; u < a.length; u++) c(u);
                    return s.length > 0 && (t.push(N("div", {
                        class: ga.rowlast
                    }, s)), n.push(i), i = [], r++), this.totalrows = r - 1, 0 != t.length || this.state.isloading || this.autocompleteenabled || (t = this.getEmptySearchResult()), this.state.isloading && t.push(this.getLoadingElement()), this.smileycodepositions = n, t
                }
            }, {
                key: "updateCliqSetting",
                value: function(e) {
                    Je("updbsettings.do", "emojiskintone=" + e, null, (function() {
                        Gn(re("zomoji.skinupdate.error"))
                    }))
                }
            }, {
                key: "updateSkinTone",
                value: function(e) {
                    oe.set({
                        emojiskintone: e
                    }), this.updateCliqSetting(e), this.avoidscroll = !0, this.searchSmiley(null, this.state.smileyvalue)
                }
            }, {
                key: "showGIFsInVirtualList",
                value: function(e) {
                    var t = 0,
                        s = 0,
                        i = wa(this.state.smileyvalue);
                    return (this.state.searchfailure || this.state.isloading && 0 == i.length) && (e = []), this.state.isloading && 0 !== i.length && (t = 1, s = 10), e.length ? N(Na, {
                        data: e,
                        rowHeight: 92,
                        renderRow: function(e) {
                            return e
                        },
                        overscanCount: 6,
                        headerItemsCount: t,
                        headerItemHeight: s,
                        className: ga.virtuallist,
                        handleScrollCallback: this.getNextPageForGIFs,
                        ref: this.storeGIFVirtualList
                    }) : 0 == i.length && this.state.isloading ? this.getFullPageLoader() : !this.state.isloading && !this.autocompleteenabled || this.state.searchfailure ? this.getEmptySearchResult() : void 0
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = ga.togglertop,
                        i = "",
                        n = "",
                        a = "",
                        o = ga.containerspacing,
                        r = "",
                        l = this.autocompleteenabled ? ga.autocompleteheight : "",
                        d = "",
                        c = "",
                        u = "";
                    "livezomoji" === t.currentpane && (i = ga.togglertop, s = ""), "emoji" === t.currentpane && (n = ga.togglertop, s = ""), "sticker" === t.currentpane && (d = ga.togglertop, s = ""), "customemoji" === t.currentpane && (c = ga.togglertop, s = ""), "gif" === t.currentpane && (u = ga.togglertop, s = "", r = " " + ga.gifcontainer), "frequentemoji" === t.currentpane && (a = ga.togglertop, s = "", o = "");
                    var m = "",
                        h = N(se, {
                            classname: ga.frequentzomoji + " " + a,
                            onclick: this.displayFrequentEmojis
                        }, N(se, {
                            classname: ga.zomojiicon,
                            content: "ea24",
                            type: "icon",
                            tabindex: "-1"
                        })),
                        g = N(se, {
                            classname: ga.zomoji + " " + s,
                            onclick: this.displayZomoji
                        }, N(se, {
                            classname: ga.zomojiicon,
                            content: "e958",
                            type: "icon",
                            tabindex: "-1"
                        })),
                        p = N(se, {
                            classname: ga.livezomoji + " " + i,
                            onclick: this.displayLiveZomoji
                        }, N(se, {
                            content: "e987",
                            type: "icon",
                            tabindex: "-1"
                        })),
                        f = N(se, {
                            classname: ga.zomoji + " " + n,
                            onclick: this.displayEmoji
                        }, N(se, {
                            classname: ga.zomojiicon,
                            content: "e952",
                            type: "icon",
                            tabindex: "-1"
                        })),
                        v = N(se, {
                            classname: ga.sticker + " " + d,
                            onclick: this.displaySticker
                        }, N(se, {
                            classname: ga.zomojiicon,
                            content: "e926",
                            type: "icon",
                            tabindex: "-1"
                        })),
                        C = N(se, {
                            classname: ga.customemoji + " " + c,
                            onclick: this.displayCustomEmoji
                        }, N(se, {
                            classname: ga.zomojiicon,
                            content: "e91f",
                            type: "icon",
                            tabindex: "-1"
                        })),
                        b = N(se, {
                            classname: ga.customemoji + " " + u,
                            onclick: this.displayGIF
                        }, N(se, {
                            classname: ga.zomojiicon,
                            content: "ea25",
                            type: "icon",
                            tabindex: "-1"
                        }));
                    e.config.hidezomoji && (g = null), e.config.hidelivezomoji && (p = null), e.config.hideemoji && (f = null), e.config.hidestickers && (v = null), e.config.hidecustomemoji && (C = null), e.config.hidegifs && (b = null), e.animation && !this.autocompleteenabled && (m = N("div", {
                        class: ga.toggler
                    }, h, p, g, f, b, C, v));
                    var y = "frequentemoji" != t.currentpane && "emoji" != t.currentpane && "zomoji" != t.currentpane || !e.config.skintonepicker ? null : N(Ra, {
                            zm: this.zm,
                            updateSkinTone: this.updateSkinTone
                        }),
                        _ = "gif" == this.state.currentpane ? re("gifsearch.attribution.tenor") : re("Search"),
                        W = N("div", {
                            class: ga.searchcontainer
                        }, N("div", {
                            class: ga.searchBox
                        }, N("input", {
                            ref: this.storeSearchNode,
                            "data-purpose": "search",
                            type: "text",
                            placeholder: _,
                            oninput: this.searchSmiley,
                            onkeydown: this.selectSmiley
                        })), y);
                    e.config && e.config.hidesearch && (W = null);
                    var S = "gif" == this.state.currentpane ? this.showGIFsInVirtualList(this.populateSmiley()) : this.populateSmiley(),
                        w = "customemoji" == this.state.currentpane || "sticker" == this.state.currentpane ? this.getNextPageForCustomEmojis : "gif" == this.state.currentpane ? this.getNextPageForGIFs : null;
                    return N("div", {
                        class: ga.zomojiContainer + " " + l,
                        ref: this.setZomojiNode,
                        onkeydown: this.closeZomojiComponent
                    }, W, N("div", {
                        onscroll: w,
                        key: t.currentpane,
                        class: ga.smileyContainer + " " + o + r,
                        ref: this.storeSmileysContainer
                    }, S), m)
                }
            }]), s
        }(R),
        Ra = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                var e;
                return a(this, s), (e = t.call(this)).state = {
                    showdropbox: !1,
                    currenttone: oe.get("emojiskintone")
                }, e.toggleDropBox = e.toggleDropBox.bind(h(e)), e
            }
            return r(s, [{
                key: "getDisplayEmojiCode",
                value: function() {
                    return ":raised-hand:"
                }
            }, {
                key: "onSelectSkinTone",
                value: function(e, t) {
                    this.props.updateSkinTone(e), this.setState({
                        currenttone: e,
                        showdropbox: !1
                    }), t.stopPropagation(), t.preventDefault()
                }
            }, {
                key: "getDropBox",
                value: function() {
                    for (var e = [], t = this.props.zm.isSkinToneSupported(), s = 0; s < 6; s++) {
                        var i = this.props.zm.getEmoji(this.getDisplayEmojiCode(), s + ""),
                            n = "";
                        oe.get("emojiskintone") == s && (n = " " + ga.selectedtone), e.push(N("div", {
                            tabindex: "0",
                            onclick: this.onSelectSkinTone.bind(this, s),
                            class: ga.toneitem + n
                        }, i))
                    }
                    t || e.push(N("div", {
                        class: ga.unsupported
                    }, re("zomoji.skintone.unsupported")));
                    var a = re("zomoji.skintone.label");
                    return N("div", {
                        class: ga.tonepickercontainer
                    }, N("div", {
                        class: ga.tones
                    }, e.reverse()), N("div", {
                        class: ga.tonelabel
                    }, a))
                }
            }, {
                key: "toggleDropBox",
                value: function(e) {
                    this.setState({
                        showdropbox: !this.state.showdropbox
                    }), e.stopPropagation(), e.preventDefault()
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = e.zm.getEmoji(this.getDisplayEmojiCode(), t.currenttone),
                        i = null;
                    return t.showdropbox && (i = this.getDropBox()), N("div", {
                        class: ga.emojitonedisplay,
                        onclick: this.toggleDropBox
                    }, s, i)
                }
            }]), s
        }(R),
        Da = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this), this.handleCustomNavigation = this.handleCustomNavigation.bind(this)
            }
            return r(e, [{
                key: "updateSearchTerm",
                value: function(e) {
                    this.instance.updateSearchTermFromComposer(e)
                }
            }, {
                key: "handleCustomNavigation",
                value: function(e) {
                    var t = e.keyCode;
                    t === ut.KEYCODES.LEFT || t === ut.KEYCODES.RIGHT || t === ut.KEYCODES.DOWN || t === ut.KEYCODES.UP || t === ut.KEYCODES.ENTER ? (this.instance.selectSmiley(e), e.preventDefault(), e.stopPropagation()) : t === ut.KEYCODES.ESCAPE && (this.closeComponent(), e.preventDefault(), e.stopPropagation())
                }
            }, {
                key: "mountComponent",
                value: function(e, t, s, i, n) {
                    this.node = e, this.closeComponent = i, ee(N(Oa, {
                        ref: function(e) {
                            this.instance = e
                        }.bind(this),
                        animation: t,
                        getSmileyCode: s,
                        closeComponent: i,
                        config: n
                    }), e)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node)
                }
            }]), e
        }();
    var $a = "mc6f7529c1_hours",
        Ha = "mc6f7529c1_minutes",
        La = "mc6f7529c1_timeperiod",
        Pa = "mc6f7529c1_timecontainer",
        Fa = "mc6f7529c1_timeicon",
        Ba = "mc6f7529c1_timecnt",
        ja = "mc6f7529c1_invalidcnt",
        za = "mc6f7529c1_colon",
        Ga = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), i = t.call(this, e), e.time ? i.state = i.constructStateFromTime(e.time) : i.state = i.constructStateFromTime(), i.handleTimeInput = i.handleTimeInput.bind(h(i)), i.handleUpDownArrows = i.handleUpDownArrows.bind(h(i)), i.handleTimePeriod = i.handleTimePeriod.bind(h(i)), i.onTimeChange = i.props.onTimeChange, i
            }
            return r(s, [{
                key: "constructStateFromTime",
                value: function(e) {
                    var t = "--",
                        s = "--",
                        i = "--";
                    return e && (t = 0 === (t = (e = new Date(e)).getHours() % 12) ? 12 : t, t = 1 === (t += "").length ? "0" + t : t, s = e.getMinutes(), s = 1 === (s += "").length ? "0" + s : s, i = e.getHours() < 12 ? "AM" : "PM"), {
                        hours: t,
                        minutes: s,
                        timeperiod: i,
                        invalid_hours: !1,
                        invalid_minutes: !1,
                        invalid_timeperiod: !1
                    }
                }
            }, {
                key: "updateTime",
                value: function(e) {
                    this.setState(this.constructStateFromTime(e))
                }
            }, {
                key: "componentDidUpdate",
                value: function(e, t) {
                    if (t.hours != this.state.hours || t.minutes != this.state.minutes || t.timeperiod != this.state.timeperiod) {
                        var s = this.state.hours + ":" + this.state.minutes,
                            i = s + " " + this.state.timeperiod,
                            n = s,
                            a = !1,
                            o = !1;
                        if ("AM" == this.state.timeperiod) {
                            var r = parseInt(this.state.hours);
                            12 == this.state.hours && (r = "00"), n = r + ":" + this.state.minutes
                        }
                        if ("PM" === this.state.timeperiod) {
                            var l = parseInt(this.state.hours) + 12;
                            24 == l && (l = "12"), n = l + ":" + this.state.minutes
                        }(this.state.invalid_hours || "--" === this.state.hours) && (a = !0), (this.state.invalid_minutes || "--" === this.state.minutes) && (o = !0), this.onTimeChange(i, n, a, o)
                    }
                }
            }, {
                key: "handleTimePeriod",
                value: function(e) {
                    9 != e.keyCode && e.preventDefault();
                    var t = this.state.timeperiod;
                    "click" === e.type && "--" === t && (t = "AM"), 38 !== e.keyCode && 40 !== e.keyCode || (t = "AM" === this.state.timeperiod ? "PM" : "AM"), 65 == e.keyCode ? t = "AM" : 80 == e.keyCode ? t = "PM" : "AM" != t && "PM" != t && (t = "AM"), this.setState({
                        timeperiod: t
                    })
                }
            }, {
                key: "handleUpDownArrows",
                value: function(e, t) {
                    var s = "--" != e.target.value ? parseInt(e.target.value) : 0;
                    38 !== e.keyCode && 40 !== e.keyCode || (38 === e.keyCode && s++, 40 === e.keyCode && s--, "hours" === t && (s > 12 ? s = 1 : s < 1 && (s = 12)), "minutes" === t && (s > 59 ? s = 0 : s < 0 && (s = 59)), this.handleTimeInput(s + "", t))
                }
            }, {
                key: "handleTimeInput",
                value: function(e, t) {
                    var s = !1;
                    isNaN(parseInt(e)) && (e = "", s = !0), !isNaN(e) && e.length <= 2 ? (1 == e.length && (e = "0" + e), "hours" == t ? (e > 12 || e <= 0) && (s = !0) : e > 59 && (s = !0)) : (e = "", s = !0), "hours" == t ? this.setState({
                        hours: e,
                        invalid_hours: s
                    }) : this.setState({
                        minutes: e,
                        invalid_minutes: s
                    })
                }
            }, {
                key: "render",
                value: function() {
                    var e = this,
                        t = this.state.invalid_hours ? ja : "",
                        s = this.state.invalid_minutes ? ja : "",
                        i = this.state.invalid_timeperiod ? ja : "",
                        n = this.props.customclass && this.props.customclass.timecontainer ? this.props.customclass.timecontainer : "",
                        a = this.props.customclass && this.props.customclass.timecnt ? this.props.customclass.timecnt : "";
                    return N("div", {
                        class: Pa + " " + n
                    }, N("span", {
                        class: Ba + " " + a
                    }, N("input", {
                        type: "text",
                        maxlength: "2",
                        value: this.state.hours,
                        onchange: function(t) {
                            e.handleTimeInput(t.target.value, "hours")
                        },
                        onkeydown: function(t) {
                            e.handleUpDownArrows(t, "hours")
                        },
                        class: $a + " " + t
                    }), N("span", {
                        class: za
                    }, ":"), N("input", {
                        type: "text",
                        maxlength: "2",
                        value: this.state.minutes,
                        onchange: function(t) {
                            e.handleTimeInput(t.target.value, "minutes")
                        },
                        onkeydown: function(t) {
                            e.handleUpDownArrows(t, "minutes")
                        },
                        class: Ha + " " + s
                    }), N("input", {
                        type: "text",
                        maxlength: "2",
                        value: re(this.state.timeperiod),
                        onclick: this.handleTimePeriod,
                        onkeydown: this.handleTimePeriod,
                        class: La + "" + i
                    })), N("span", {
                        class: Fa
                    }, " "))
                }
            }]), s
        }(R),
        qa = function() {
            function e() {
                a(this, e), this.instance = null
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s) {
                    ee(N(Ga, {
                        ref: function(e) {
                            this.instance = e
                        }.bind(this),
                        onTimeChange: s,
                        time: t
                    }), e)
                }
            }, {
                key: "updateTime",
                value: function(e) {
                    this.instance.updateTime(e)
                }
            }]), e
        }();
    void 0 === Object.keys && (Object.keys = function(e) {
        var t = [];
        for (var s in e) t.push(s);
        return t
    }), String.prototype.startsWith || (String.prototype.startsWith = function(e, t) {
        return t = t || 0, this.indexOf(e, t) === t
    }), String.prototype.endsWith || (String.prototype.endsWith = function(e, t) {
        return (void 0 === t || t > this.length) && (t = this.length), this.substring(t - e.length, t) === e
    }), Array.prototype.filter || (Array.prototype.filter = function(e) {
        if (null == this) throw new TypeError;
        var t = Object(this),
            s = t.length >>> 0;
        if ("function" != typeof e) throw new TypeError;
        for (var i = [], n = arguments.length >= 2 ? arguments[1] : void 0, a = 0; a < s; a++)
            if (a in t) {
                var o = t[a];
                e.call(n, o, a, t) && i.push(o)
            }
        return i
    }), Array.prototype.map || (Array.prototype.map = function(e, t) {
        var s, i, n;
        if (null == this) throw new TypeError(" this is null or not defined");
        var a = Object(this),
            o = a.length >>> 0;
        if ("function" != typeof e) throw new TypeError(e + " is not a function");
        for (arguments.length > 1 && (s = t), i = new Array(o), n = 0; n < o;) {
            var r, l;
            n in a && (r = a[n], l = e.call(s, r, n, a), i[n] = l), n++
        }
        return i
    }), Array.prototype.forEach || (Array.prototype.forEach = function(e, t) {
        var s, i;
        if (null == this) throw new TypeError(" this is null or not defined");
        var n = Object(this),
            a = n.length >>> 0;
        if ("function" != typeof e) throw new TypeError(e + " is not a function");
        for (arguments.length > 1 && (s = t), i = 0; i < a;) {
            var o;
            i in n && (o = n[i], e.call(s, o, i, n)), i++
        }
    }), Array.prototype.find || Object.defineProperty(Array.prototype, "find", {
        value: function(e) {
            if (null == this) throw new TypeError("'this' is null or not defined");
            var t = Object(this),
                s = t.length >>> 0;
            if ("function" != typeof e) throw new TypeError("predicate must be a function");
            for (var i = arguments[1], n = 0; n < s;) {
                var a = t[n];
                if (e.call(i, a, n, t)) return a;
                n++
            }
        }
    }), Element.prototype.matches || (Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function(e) {
        for (var t = (this.document || this.ownerDocument).querySelectorAll(e), s = t.length; --s >= 0 && t.item(s) !== this;);
        return s > -1
    }), Element.prototype.closest || (Element.prototype.closest = function(e) {
        for (var t = this; t.matches;) {
            if (t.matches(e)) return t;
            t = t.parentNode
        }
        return null
    }), Array.prototype.some || (Array.prototype.some = function(e) {
        if (null == this) throw new TypeError("Array.prototype.some called on null");
        if ("function" != typeof e) throw new TypeError;
        for (var t = Object(this), s = t.length >>> 0, i = arguments.length >= 2 ? arguments[1] : void 0, n = 0; n < s; n++)
            if (n in t && e.call(i, t[n], n, t)) return !0;
        return !1
    }), "function" != typeof Object.assign && Object.defineProperty(Object, "assign", {
        value: function(e, t) {
            if (null == e) throw new TypeError("Cannot convert undefined or null to object");
            for (var s = Object(e), i = 1; i < arguments.length; i++) {
                var n = arguments[i];
                if (null != n)
                    for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (s[a] = n[a])
            }
            return s
        },
        writable: !0,
        configurable: !0
    });
    var Va = {
            theatremode_overlay: "mc183cf01f_theatremode_overlay",
            playerfwdcontainer: "mc183cf01f_playerfwdcontainer",
            playerforwardicon: "mc183cf01f_playerforwardicon",
            videoplayer: "videoplayer",
            posterimage: "mc183cf01f_posterimage",
            playeroverlay: "mc183cf01f_playeroverlay",
            playerparent_container: "mc183cf01f_playerparent_container",
            playerpopout: "mc183cf01f_playerpopout",
            displayminiplayer: "mc183cf01f_displayminiplayer",
            theatremode: "mc183cf01f_theatremode",
            videoplayer_container: "mc183cf01f_videoplayer_container",
            video_content: "mc183cf01f_video_content",
            playpausecontainer: "mc183cf01f_playpausecontainer",
            fullscreenplaypause: "mc183cf01f_fullscreenplaypause",
            playpauseinitial: "mc183cf01f_playpauseinitial",
            audioplayerplaypause: "mc183cf01f_audioplayerplaypause",
            forwardiconcontainer: "mc183cf01f_forwardiconcontainer",
            downloadiconcontainer: "mc183cf01f_downloadiconcontainer",
            copyiconcontainer: "mc183cf01f_copyiconcontainer",
            playicon: "mc183cf01f_playicon",
            forwardicon: "mc183cf01f_forwardicon",
            overlaydownloadicon: "mc183cf01f_overlaydownloadicon",
            copyicon: "mc183cf01f_copyicon",
            videodesc: "mc183cf01f_videodesc",
            videodesc_theatremode: "mc183cf01f_videodesc_theatremode",
            closeicon: "mc183cf01f_closeicon",
            controller_bgclass: "mc183cf01f_controller_bgclass",
            controls_container: "mc183cf01f_controls_container",
            controls_container_theatremode: "mc183cf01f_controls_container_theatremode",
            seekbar: "mc183cf01f_seekbar",
            seekbar_theatremode: "mc183cf01f_seekbar_theatremode",
            leftpane: "mc183cf01f_leftpane",
            rightpane: "mc183cf01f_rightpane",
            duration_content: "mc183cf01f_duration_content",
            duration_theatremode: "mc183cf01f_duration_theatremode",
            tooltip: "mc183cf01f_tooltip",
            tooltip_theatremode: "mc183cf01f_tooltip_theatremode",
            buffer: "mc183cf01f_buffer",
            seekguide: "mc183cf01f_seekguide",
            progressbar: "mc183cf01f_progressbar",
            sliderthumb: "mc183cf01f_sliderthumb",
            seekbar_hoverspace: "mc183cf01f_seekbar_hoverspace",
            popedin: "mc183cf01f_popedin",
            seekbarfocus: "mc183cf01f_seekbarfocus",
            volume_slider_container: "mc183cf01f_volume_slider_container",
            volumesliderparent: "mc183cf01f_volumesliderparent",
            volumeslider_theatremode: "mc183cf01f_volumeslider_theatremode",
            hidevolumeslider: "mc183cf01f_hidevolumeslider",
            volfocuson: "mc183cf01f_volfocuson",
            volumeslider_background: "mc183cf01f_volumeslider_background",
            volume_lowerfill: "mc183cf01f_volume_lowerfill",
            volume_thumb: "mc183cf01f_volume_thumb",
            iconsmall: "mc183cf01f_iconsmall",
            iconmed: "mc183cf01f_iconmed",
            iconlarge: "mc183cf01f_iconlarge",
            videomodeplayicon: "mc183cf01f_videomodeplayicon",
            display: "mc183cf01f_display",
            details: "mc183cf01f_details",
            displaydetails: "mc183cf01f_displaydetails",
            header: "mc183cf01f_header",
            topgradiant: "mc183cf01f_topgradiant",
            videoend_details: "mc183cf01f_videoend_details",
            downloadicon: "mc183cf01f_downloadicon",
            actionscontainer: "mc183cf01f_actionscontainer",
            videomodefwdicon: "mc183cf01f_videomodefwdicon",
            ffbuttoncontainer: "mc183cf01f_ffbuttoncontainer",
            basic_controlscontainer: "mc183cf01f_basic_controlscontainer",
            ffbutton: "mc183cf01f_ffbutton",
            rewbutton: "mc183cf01f_rewbutton",
            revbutton: "mc183cf01f_revbutton",
            loadingdiv: "mc183cf01f_loadingdiv",
            progressbar_parent: "mc183cf01f_progressbar_parent",
            seekbar_thumb: "mc183cf01f_seekbar_thumb",
            replayicon: "mc183cf01f_replayicon",
            expander: "mc183cf01f_expander",
            disable: "mc183cf01f_disable",
            errorcontainer: "mc183cf01f_errorcontainer",
            errorcontainerdata: "mc183cf01f_errorcontainerdata",
            errormessage: "mc183cf01f_errormessage",
            errorposterimg: "mc183cf01f_errorposterimg",
            retry: "mc183cf01f_retry",
            errordownload: "mc183cf01f_errordownload",
            dot: "mc183cf01f_dot",
            erroractions: "mc183cf01f_erroractions",
            playbackrate: "mc183cf01f_playbackrate",
            controllerbgerror: "mc183cf01f_controllerbgerror",
            erroricon: "mc183cf01f_erroricon",
            errorcontainerbig: "mc183cf01f_errorcontainerbig",
            audioplayerbg: "mc183cf01f_audioplayerbg",
            basiccontrolsposition: "mc183cf01f_basiccontrolsposition",
            zmNightMode: "zmNightMode",
            "wms-rtl": "wms-rtl",
            voicerecordertrack: "mc183cf01f_voicerecordertrack",
            seperator: "mc183cf01f_seperator",
            optionscontainer: "mc183cf01f_optionscontainer",
            optionitem: "mc183cf01f_optionitem",
            itemlabel: "mc183cf01f_itemlabel",
            optionselected: "mc183cf01f_optionselected",
            moreoptions: "mc183cf01f_moreoptions",
            labelwithicon: "mc183cf01f_labelwithicon",
            moreoptionscontainer: "mc183cf01f_moreoptionscontainer",
            fileDownloadRestricted: "fileDownloadRestricted",
            fileForwardRestricted: "fileForwardRestricted"
        },
        Ya = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this)).progressbarwidth = e.current_time / e.duration || 0, i.tooltip_time = "00:00", i.setSeekBarNode = i.setSeekBarNode.bind(h(i)), i.setProgressBarWidth = i.setProgressBarWidth.bind(h(i)), i.setSeekGuideWidth = i.setSeekGuideWidth.bind(h(i)), i.seekVideo = i.seekVideo.bind(h(i)), i.setClickedState = i.setClickedState.bind(h(i)), i.dragThumb = i.dragThumb.bind(h(i)), i.removeThumbEventListener = i.removeThumbEventListener.bind(h(i)), i.state = {
                    seekguidewidth: 0,
                    clicked: !1
                }, i
            }
            return r(s, [{
                key: "componentWillUnmount",
                value: function() {
                    document.removeEventListener("mouseup", this.removeThumbEventListener, !0)
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    document.addEventListener("mouseup", this.removeThumbEventListener, !0)
                }
            }, {
                key: "removeThumbEventListener",
                value: function() {
                    document.removeEventListener("mousemove", this.seekVideo)
                }
            }, {
                key: "componentWillUpdate",
                value: function(e) {
                    0 === e.current_time && (this.progressbarwidth = 0), this.props.videostate == e.videostate || "paused" != e.videostate && "ended" != e.videostate || this.setProgressBarWidth()
                }
            }, {
                key: "componentDidUpdate",
                value: function(e) {
                    e.current_time != this.props.current_time && this.setProgressBarWidth(), 0 === this.props.current_time && (this.progressbarwidth = 0)
                }
            }, {
                key: "setSeekBarNode",
                value: function(e) {
                    this.seekbarnode = e
                }
            }, {
                key: "setClickedState",
                value: function() {
                    this.setState({
                        clicked: !1
                    })
                }
            }, {
                key: "setProgressBarWidth",
                value: function(e) {
                    var t = this.props.duration,
                        s = e || this.props.current_time,
                        i = this.seekbarnode.getBoundingClientRect().width;
                    this.progressbarwidth = 0, 0 != t && (this.progressbarwidth = i * s / t), this.progressbarwidth > i && (this.progressbarwidth = i)
                }
            }, {
                key: "getWidthPerSecond",
                value: function() {
                    return this.getSeekBarWidth() / this.props.duration
                }
            }, {
                key: "setToolTip",
                value: function(e) {
                    this.tooltippos = e - 20;
                    var t = this.getSeekBarWidth();
                    e + 20 > t && (this.tooltippos = t - 40), e - 20 < 0 && (this.tooltippos = 0), this.tooltip_time = isFinite(Math.ceil(e / this.getWidthPerSecond())) ? Bi(Math.ceil(e / this.getWidthPerSecond())) : ""
                }
            }, {
                key: "setSeekGuideWidth",
                value: function(e) {
                    var t = e.clientX - e.target.getBoundingClientRect().left,
                        s = t / this.getSeekBarWidth();
                    s > 1 && (s = 1), this.setToolTip(t), this.setState({
                        seekguidewidth: s
                    })
                }
            }, {
                key: "seekVideo",
                value: function(e) {
                    if ("keydown" === e.type) {
                        var t = this.props.current_time;
                        39 === e.keyCode && (t = this.props.current_time + 10) > this.props.duration && (t = this.props.duration), 37 === e.keyCode && (t = this.props.current_time - 10) < 0 && (t = 0), this.props.updateCurrentTime(t)
                    }
                    if ("mousedown" === e.type || "mousemove" == e.type) {
                        var s = (e.clientX - this.seekbarnode.getBoundingClientRect().left) / this.getWidthPerSecond();
                        s < 0 && (s = 0), this.setProgressBarWidth(s), this.props.updateCurrentTime(s), this.setState({
                            clicked: !0
                        })
                    }
                    e.stopPropagation(), e.preventDefault()
                }
            }, {
                key: "dragThumb",
                value: function(e) {
                    document.addEventListener("mousemove", this.seekVideo), this.seekVideo(e)
                }
            }, {
                key: "getProgressBarWidth",
                value: function() {
                    return this.seekbarnode && this.setProgressBarWidth(), this.progressbarwidth
                }
            }, {
                key: "getSeekBarWidth",
                value: function() {
                    return this.seekbarnode && this.seekbarnode.getBoundingClientRect().width || 0
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = t.clicked ? "" : Va.seekbarfocus,
                        i = Va.seekbar,
                        n = this.tooltip_time.length ? Va.tooltip : "",
                        a = this.getSeekBarWidth();
                    (e.fullscreen || e.theatremode) && (i = Va.seekbar_theatremode, n = this.tooltip_time.length ? Va.tooltip_theatremode : "");
                    var o = "error" == e.videostate ? Va.disable : "",
                        r = "clamp(0px,100%,calc(100% - " + (e.fullscreen || e.theatremode ? 15 : 12) + "px))";
                    i += e.isvoicerecorder ? " " + Va.voicerecordertrack : "";
                    var l = 0,
                        d = this.getProgressBarWidth();
                    return d > 0 && a > 0 && (l = d / a * 100), N("div", {
                        class: i + " " + s + " " + o,
                        ref: this.setSeekBarNode,
                        tabindex: "0",
                        onkeydown: this.seekVideo,
                        onblur: this.setClickedState,
                        onmousedown: this.dragThumb,
                        onmousemove: this.setSeekGuideWidth
                    }, N("div", {
                        class: Va.buffer,
                        style: {
                            transform: "scaleX(" + Math.min(e.bufferpercentage, 1) + ")"
                        }
                    }), N("div", {
                        class: Va.seekguide,
                        style: {
                            transform: "scaleX(" + t.seekguidewidth + ")"
                        }
                    }), N("div", {
                        class: Va.progressbar_parent,
                        onmousedown: this.dragThumb,
                        style: {
                            width: l + "%"
                        }
                    }, N("div", {
                        class: Va.progressbar
                    }), N("div", {
                        class: Va.seekbar_thumb,
                        style: {
                            left: r
                        }
                    })), N("div", {
                        class: Va.seekbar_hoverspace,
                        onmousedown: this.dragThumb
                    }), N("div", {
                        class: n,
                        style: {
                            left: this.tooltippos + "px"
                        }
                    }, this.tooltip_time))
                }
            }]), s
        }(R),
        Za = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this)).slidernode = null, i.volume = null != e.volume ? e.volume : 1, i.state = {
                    position: 64 * i.volume,
                    clicked: !1
                }, i.setEventListener = i.setEventListener.bind(h(i)), i.setThumbPosition = i.setThumbPosition.bind(h(i)), i.setSliderNode = i.setSliderNode.bind(h(i)), i.setVolume = i.setVolume.bind(h(i)), i.removeEventListener = i.removeEventListener.bind(h(i)), i.volumeBlur = i.volumeBlur.bind(h(i)), i
            }
            return r(s, [{
                key: "componentDidMount",
                value: function() {
                    window.addEventListener("mouseup", this.removeEventListener, !0)
                }
            }, {
                key: "setSliderNode",
                value: function(e) {
                    this.slidernode = e
                }
            }, {
                key: "setVolume",
                value: function(e) {
                    if (!e.type || "click" !== e.type && "keydown" !== e.type) this.volume = e;
                    else {
                        var t = 0;
                        this.volume > 0 ? this.volume = 0 : (this.volume = 1, t = 64), this.setState({
                            position: t
                        })
                    }
                    this.props.setVolume(this.volume)
                }
            }, {
                key: "volumeBlur",
                value: function() {
                    this.setState({
                        clicked: !1
                    })
                }
            }, {
                key: "setEventListener",
                value: function(e) {
                    window.addEventListener("mousemove", this.setThumbPosition), this.slidernode.addEventListener("mouseup", this.setThumbPosition), this.setState({
                        clicked: !0
                    }), e.stopPropagation()
                }
            }, {
                key: "setThumbPosition",
                value: function(e) {
                    var t = this.state.position;
                    if ("keydown" === e.type) {
                        38 === e.keyCode && (t += 5.2), 40 === e.keyCode && (t -= 5.2), e.preventDefault(), e.stopPropagation()
                    }
                    "mouseup" !== e.type && "mousemove" !== e.type || (t = 70 - (t = e.clientY - this.slidernode.getBoundingClientRect().top), e.preventDefault(), e.stopPropagation()), t < 0 && (t = 0), t > 64 && (t = 64), this.setVolume(t / 64), this.setState({
                        position: t
                    })
                }
            }, {
                key: "removeEventListener",
                value: function() {
                    window.removeEventListener("mousemove", this.setThumbPosition), window.removeEventListener("mouseup", this.setThumbPosition)
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = Va.iconsmall,
                        i = "ea16";
                    0 === this.volume && (i = "ea11");
                    var n = t.clicked ? "" : Va.volfocuson,
                        a = Va.volumesliderparent;
                    (e.theatremode || e.fullscreen) && (s = Va.iconmed, a = a + " " + Va.volumeslider_theatremode);
                    var o = "audio" == e.playertype ? " " + Va.hidevolumeslider : "";
                    return N("div", {
                        class: Va.volume_slider_container + o
                    }, N(se, {
                        classname: s,
                        type: "icon",
                        title: re("videoplayer.volume"),
                        content: i,
                        onclick: this.setVolume
                    }), N("div", {
                        class: a + " " + n,
                        ref: this.setSliderNode,
                        onmousedown: this.setEventListener,
                        onmouseup: this.removeEventListener,
                        onkeydown: this.setThumbPosition,
                        onblur: this.volumeBlur,
                        tabindex: "0"
                    }, N("div", {
                        class: Va.volumeslider_background
                    }, N("span", {
                        class: Va.volume_lowerfill,
                        style: {
                            height: t.position + "px"
                        }
                    }), N("span", {
                        class: Va.volume_thumb,
                        style: {
                            bottom: t.position + "px"
                        }
                    }))))
                }
            }]), s
        }(R);

    function Ka(e) {
        var t = null,
            s = null;
        e.icon && (t = N(se, {
            classname: e.icon.classname,
            content: e.icon.content,
            type: "icon"
        }), s = Va.labelwithicon);
        var i = e.selected ? " " + Va.optionselected : "";
        return N("div", {
            onclick: function(e) {
                this.props.onClickItem && this.props.onClickItem(e, this.props.keyname)
            }.bind(this),
            class: Va.optionitem + i
        }, t, N("div", {
            class: Va.itemlabel + " " + s,
            title: e.content
        }, e.content))
    }

    function Xa(e) {
        var t = Va.videomodefwdicon + " " + Va.iconsmall,
            s = Va.duration_content,
            i = Va.controls_container,
            n = null,
            a = Va.iconsmall,
            o = null,
            r = Va.downloadicon + " " + Va.iconsmall,
            l = Va.iconmed,
            d = isFinite(Math.round(e.current_time)) ? Bi(Math.round(e.current_time)) : "00",
            c = isFinite(Math.round(e.duration)) ? "/" + Bi(Math.round(e.duration)) : "",
            u = "error" == e.videostate ? Va.disable : "",
            m = N(se, {
                classname: Va.iconsmall,
                type: "icon",
                content: "ea15",
                title: re("videoplayer.theatremode"),
                onclick: e.toggleTheatreMode
            }),
            h = "error" != e.videostate || e.theatremode || e.fullscreen || e.popout ? "" : Va.controllerbgerror;
        if (e.theatremode || e.fullscreen && "video" == e.playertype || e.popout && e.config.supportFullscreenFromMiniplayer) {
            var g = Va.iconsmall;
            (!e.config.supportFullscreenFromMiniplayer || e.config.supportFullscreenFromMiniplayer && e.fullscreen) && (t = Va.iconmed, s = Va.duration_theatremode, r = Va.downloadicon + " " + Va.iconmed, i = Va.controls_container_theatremode, g = Va.iconmed), n = N(se, {
                classname: g,
                type: "icon",
                title: re("mediacall.fullscreen"),
                content: "ea0e",
                onclick: e.toggleFullScreen
            }), m = null
        }
        e.theatremode && (a = Va.iconmed);
        var p = N(se, {
                classname: a,
                content: "ea10",
                type: "icon",
                title: re("videoplayer.miniplayer"),
                onclick: e.toggleMiniPlayer
            }),
            f = N(se, {
                classname: t,
                type: "icon",
                title: re("message.actions.forward"),
                content: "ea0d",
                onclick: e.forwardAttachment
            }),
            v = null;
        e.config && e.config.wpCopyHandled && (v = N(se, {
            classname: l,
            type: "icon",
            title: re("message.actions.copyfile"),
            content: "e948",
            onclick: e.copyAttachment
        })), (e.popout || e.fullscreen) && (p = null), (e.fullscreen || e.config && 1 == e.config.hideforwardicon || oe.get("isViewTranscriptUI")) && (f = null), e.popout && (t = Va.iconsmall);
        var C = e.config && e.config.handleDownload ? e.config.handleDownload : null,
            b = N("a", {
                download: !0,
                target: "_blank",
                href: e && e.config && e.config.originalVideoSource || e.videosrc,
                onclick: C
            }, N("span", {
                class: r,
                title: re("chat.download")
            }));
        C && (b = N("a", {
            onclick: C
        }, N("span", {
            class: r,
            title: re("chat.download")
        }))), Xn() && (b = N("a", C ? {
            onclick: C
        } : {
            onclick: e.downloadVideo,
            documentclick: "attdownload",
            download: !0,
            target: "_blank",
            href: e.videosrc
        }, N("span", {
            class: r,
            title: re("chat.download")
        }))), e.config && e.config.hidedownloadicon && (b = null);
        var y = "video" == e.playertype ? Va.controller_bgclass : "";
        if ("audio" == e.playertype && (p = null, m = null), e.config && e.config.hidetheatremodeicon && (m = null), e.config && e.config.hideminiplayericon && (p = null), this.props.videoplayernode && this.props.videoplayernode.offsetWidth < 300 && "audio" != e.playertype) {
            var _ = !b;
            this.props.videoplayernode.offsetWidth < 250 && (p = null), o = N(Ja, {
                hidedownload: _,
                hideforward: e.config && e.config.hideforwardicon,
                videoplayerprops: e,
                handledownloadcallback: C,
                moreoptionsvisible: e.moreoptionsvisible,
                toggleMoreOptions: e.toggleMoreOptions
            }), b = null, f = null, v = null
        }
        return oe.get("videoPlayerControls") && ("disable" == oe.get("videoPlayerControls").miniplayer && (p = null), "disable" == oe.get("videoPlayerControls").fullscreen && (n = null)), N("div", {
            class: y + " " + h
        }, N(Ya, {
            duration: e.duration,
            current_time: e.current_time,
            updateCurrentTime: e.updateCurrentTime,
            bufferpercentage: e.bufferpercentage,
            theatremode: e.theatremode,
            popout: e.popout,
            fullscreen: e.fullscreen && "video" == e.playertype,
            videostate: e.videostate
        }), N("div", {
            class: i
        }, N("div", {
            class: Va.leftpane + " " + u
        }, N(Za, {
            setVolume: e.setVolume,
            volume: e.volume,
            videoplayernode: e.videoplayernode,
            theatremode: e.theatremode,
            fullscreen: e.fullscreen,
            playertype: e.playertype
        }), N("div", {
            class: s
        }, d + c), N("div", {
            class: Va.seperator
        }), N(Qa, {
            playbackratevisible: e.playbackratevisible,
            playbackrate: e.playbackrate,
            togglePlayBackOptions: e.togglePlayBackOptions,
            playbackrateCallback: e.playbackrateCallback
        })), N("div", {
            class: Va.rightpane
        }, o, v, b, f, p, m, n)))
    }

    function Ja(e) {
        var t = this,
            s = e.moreoptionsvisible ? function() {
                var s = [];
                if (e.hideforward || s.push(N(Ka, {
                        icon: {
                            classname: Va.iconsmall,
                            content: "ea0d"
                        },
                        content: re("message.actions.forward"),
                        onClickItem: e.videoplayerprops.forwardAttachment
                    })), !e.hidedownload) {
                    var i = N("div", {
                            class: Va.itemlabel + " " + Va.labelwithicon,
                            title: re("chat.download")
                        }, re("chat.download")),
                        n = N("div", {
                            class: Va.downloadicon + " " + Va.iconsmall,
                            title: re("chat.download")
                        });
                    if (Xn()) {
                        var a = t.props.handledownloadcallback ? t.props.handledownloadcallback : t.props.videoplayerprops.downloadVideo;
                        s.push(N("a", {
                            onclick: a,
                            documentclick: "attdownload",
                            download: !0,
                            target: "_blank",
                            href: t.props.videoplayerprops.videosrc
                        }, n, i))
                    } else s.push(N("div", {
                        class: Va.optionitem
                    }, N("a", {
                        download: !0,
                        target: "_blank",
                        href: t.props.videoplayerprops.videosrc,
                        onclick: t.props.handledownloadcallback
                    }, n, i)))
                }
                return t.props.videoplayerprops.videoplayernode.offsetWidth < 250 && oe.get("videoPlayerControls") && "disable" !== oe.get("videoPlayerControls").miniplayer && s.push(N(Ka, {
                    icon: {
                        classname: Va.iconsmall,
                        content: "ea10"
                    },
                    content: re("videoplayer.miniplayer"),
                    onClickItem: e.videoplayerprops.toggleMiniPlayer
                })), N(we, {
                    onClickOutside: e.toggleMoreOptions
                }, N("div", {
                    class: Va.optionscontainer + " " + Va.moreoptionscontainer
                }, s))
            }() : null;
        return N(se, {
            type: "icon",
            content: "e950",
            title: re("common.more"),
            classname: Va.iconsmall + " " + Va.moreoptions,
            onclick: e.toggleMoreOptions
        }, s)
    }

    function Qa(e) {
        var t = this;

        function s(e, t) {
            this.props.playbackrateCallback && this.props.playbackrateCallback(t)
        }
        var i = e.playbackratevisible ? function() {
            for (var i = [], n = [.5, .75, 1, 1.25, 1.5], a = 0; a < n.length; a++) {
                var o = 2 == a ? re("Normal") : n[a] + " X",
                    r = e.playbackrate == n[a];
                i.push(N(Ka, {
                    selected: r,
                    keyname: n[a],
                    content: o,
                    onClickItem: s.bind(t)
                }))
            }
            return N(we, {
                onClickOutside: e.togglePlayBackOptions
            }, N("div", {
                class: Va.optionscontainer
            }, i, " "))
        }() : null;
        return N("div", {
            class: Va.playbackrate,
            onClick: e.togglePlayBackOptions
        }, e.playbackrate + " X", i)
    }
    for (var eo = {}, to = [
            ["requestFullscreen", "exitFullscreen", "fullscreenchange", "fullscreenElement"],
            ["webkitRequestFullScreen", "webkitExitFullscreen", "webkitfullscreenchange", "webkitFullscreenElement"],
            ["mozRequestFullScreen", "mozCancelFullScreen", "mozfullscreenchange", "mozFullscreenElement"],
            ["msRequestFullscreen", "msExitFullscreen", "msfullscreenchange", "msFullscreenElement"]
        ], so = 0; so < to.length; so++) {
        var io = to[so];
        if (io && io[1] in document)
            for (var no = 0; no < io.length; no++) eo[to[0][no]] = io[no]
    }
    var ao = function() {
            function e(t, s) {
                a(this, e), this.node = t, this.onFullScreenChangeCallBack = s, this.onFullScreenChange = this.onFullScreenChange.bind(this), document.addEventListener(eo.fullscreenchange, this.onFullScreenChange, !1)
            }
            return r(e, [{
                key: "onFullScreenChange",
                value: function() {
                    this.onFullScreenChangeCallBack()
                }
            }, {
                key: "requestFullScreen",
                value: function() {
                    this.node[eo.requestFullscreen]()
                }
            }, {
                key: "exitFullScreen",
                value: function() {
                    document[eo.exitFullscreen]()
                }
            }, {
                key: "toggleFullScreen",
                value: function() {
                    document[eo.fullscreenElement] ? this.exitFullScreen() : this.requestFullScreen()
                }
            }, {
                key: "removeEventListener",
                value: function() {
                    document.removeEventListener(eo.onscreenchange, this.onFullScreenChange, !1)
                }
            }]), e
        }(),
        oo = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                a(this, s), (i = t.call(this, e)).videoplayernode = null, i.videosourcenode = null, i.timeout = null, i.playertype = i.getPlayerType();
                var n = "error" == e.videostate ? "playing" : e.videostate;
                "audio" != i.playertype || e.videostate || (n = "paused");
                var o = "audio" == i.playertype ? "100px" : "330px",
                    r = "audio" == i.playertype ? "350px" : "500px";
                return i.state = {
                    fullscreen: !1,
                    videostate: n || "playing",
                    volume: null != e.volume ? e.volume : 1,
                    current_time: e.current_time || 0,
                    duration: e.duration || 0,
                    bufferpercentage: 0,
                    displayopacity: Va.displaydetails,
                    playbackrate: e.playbackrate ? e.playbackrate : 1,
                    display: "block",
                    displayminiplayer: !1,
                    miniplayerinlinestyle: {
                        height: o,
                        width: r
                    },
                    moreoptionsvisible: !1,
                    playbackratevisible: !1
                }, i.toggleFullScreen = i.toggleFullScreen.bind(h(i)), i.setVideoPlayerNode = i.setVideoPlayerNode.bind(h(i)), i.onFullScreenChange = i.onFullScreenChange.bind(h(i)), i.toggleVideoPlay = i.toggleVideoPlay.bind(h(i)), i.setVideoSourceNode = i.setVideoSourceNode.bind(h(i)), i.setVolume = i.setVolume.bind(h(i)), i.onVideoEnd = i.onVideoEnd.bind(h(i)), i.updateTime = i.updateTime.bind(h(i)), i.updateCurrentTime = i.updateCurrentTime.bind(h(i)), i.handleDragEnd = i.handleDragEnd.bind(h(i)), i.toggleMiniPlayer = i.toggleMiniPlayer.bind(h(i)), i.toggleTheatreMode = i.toggleTheatreMode.bind(h(i)), i.escEventListener = i.escEventListener.bind(h(i)), i.displayPlayerDetails = i.displayPlayerDetails.bind(h(i)), i.detailsTransitionEnd = i.detailsTransitionEnd.bind(h(i)), i.playerMouseOut = i.playerMouseOut.bind(h(i)), i.throttle = ji(i.displayPlayerDetails, h(i), 300), i.calcBufferPercentage = i.calcBufferPercentage.bind(h(i)), i.ffVideo = i.ffVideo.bind(h(i)), i.rewVideo = i.rewVideo.bind(h(i)), i.setLoadingState = i.setLoadingState.bind(h(i)), i.handleResizeDrag = i.handleResizeDrag.bind(h(i)), i.resizeMiniPlayer = ji(i.resizeMiniPlayer, h(i), 50), i.throwVideoError = i.throwVideoError.bind(h(i)), i.retryPlayingVideo = i.retryPlayingVideo.bind(h(i)), i.downloadVideo = i.downloadVideo.bind(h(i)), i.storeVideoTagParent = i.storeVideoTagParent.bind(h(i)), i.onClickCloseIcon = i.onClickCloseIcon.bind(h(i)), i.setPlaybackrate = i.setPlaybackrate.bind(h(i)), i.toggleMoreOptions = i.toggleMoreOptions.bind(h(i)), i.togglePlayBackOptions = i.togglePlayBackOptions.bind(h(i)), i.hidePopupOptions = i.hidePopupOptions.bind(h(i)), i
            }
            return r(s, [{
                key: "componentWillUnmount",
                value: function() {
                    window.removeEventListener("keydown", this.escEventListener), window.removeEventListener("keydown", this.toggleVideoPlay), this.props.popout && document.removeEventListener("mouseup", this.handleResizeDrag), "paused" != this.state.videostate && this.videosourcenode.pause(), this.props.config.handleVideoNode || (this.videosourcenode.srcObject = null, this.videosourcenode.src = null, this.videosourcenode.removeAttribute("src"), this.videosourcenode.load()), this.fullscreen.removeEventListener(), this.activeelement.focus()
                }
            }, {
                key: "getPlayerType",
                value: function() {
                    return this.props.videotype.indexOf("audio") > -1 ? "audio" : "video"
                }
            }, {
                key: "storeVideoTagParent",
                value: function(e) {
                    this.videotagcontainer = e
                }
            }, {
                key: "hidePopupOptions",
                value: function() {
                    this.setState({
                        moreoptionsvisible: !1,
                        playbackratevisible: !1
                    })
                }
            }, {
                key: "calcBufferPercentage",
                value: function() {
                    if (this.videosourcenode) {
                        var e = 0,
                            t = 0,
                            s = this.videosourcenode.buffered,
                            i = this.videosourcenode.currentTime;
                        if (this.videosourcenode.readyState >= 2) {
                            for (var n = 0; n < s.length; n++)
                                if (i >= s.start(n) && i <= s.end(n)) {
                                    t = n;
                                    break
                                }
                            e = s.end(t) / (this.props.duration || this.videosourcenode.duration)
                        }
                        this.setState({
                            bufferpercentage: e
                        })
                    }
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    if (!this.props.videosrc && this.props.config.handleVideoNode && (this.videosourcenode = co(this.props.videoid, this.playertype)), this.fullscreen = new ao(this.videoplayernode, this.onFullScreenChange), this.activeelement = document.activeElement, window.addEventListener("keydown", this.escEventListener), (this.props.current_time || 0 === this.props.current_time) && (this.videoplayernode.focus(), this.videosourcenode.currentTime = this.props.current_time, "paused" === this.props.videostate ? this.videosourcenode.pause() : "playing" === this.props.videostate && this.videosourcenode.play()), this.props.theatremode && window.addEventListener("keydown", this.toggleVideoPlay), this.props.popout && (new Nt(this.videoplayernode, null, this.handleDragEnd), document.addEventListener("mouseup", this.handleResizeDrag, !0), this.setState({
                            displayminiplayer: !0
                        })), 1 != this.props.config.theatremode)
                        if (null != this.props.volume && this.setVolume(this.props.volume), 1 != this.props.config.miniplayer) {
                            if (!this.props.videosrc && this.props.config.handleVideoNode && (this.videotagcontainer.appendChild(this.videosourcenode), this.setVideoTagEvents(), this.videosourcenode.src || this.props.config.handleVideoNode(this.videosourcenode)), this.props.playbackrate && (this.videosourcenode.playbackRate = this.props.playbackrate), this.props.config.manifestUrl) {
                                var e = this.props.config.playerInstance,
                                    t = this;
                                e.loadSource(this.props.config.manifestUrl), e.attachMedia(this.videosourcenode), e.on(Hls.Events.ERROR, (function(e, s) {
                                    s && "manifestLoadError" === s.details && (t.videosourcenode || co(t.props.videoid, t.playertype)).setAttribute("src", t.props.videosrc)
                                }))
                            }
                        } else this.toggleMiniPlayer(null, !0);
                    else this.toggleTheatreMode(null, !1)
                }
            }, {
                key: "setVideoTagEvents",
                value: function() {
                    if (this.videosourcenode.autoplay = !0, this.getPosterUrl() && (this.videosourcenode.poster = this.getPosterUrl()), this.videosourcenode.onloadstart = this.setLoadingState, this.videosourcenode.onwaiting = this.setLoadingState, this.videosourcenode.onprogress = this.calcBufferPercentage, this.videosourcenode.className = Va.video_content, this.videosourcenode.onended = this.onVideoEnd, this.videosourcenode.ontimeupdate = this.updateTime, this.videosourcenode.onerror = this.throwVideoError, "audio" == this.playertype) {
                        var e = this.props.videostate ? this.props.videostate : "playing";
                        this.setState({
                            videostate: e
                        })
                    }
                }
            }, {
                key: "playerMouseOut",
                value: function(e) {
                    e.relatedTarget.closest("div[data-playerparent=true]") || this.setState({
                        displayopacity: ""
                    })
                }
            }, {
                key: "detailsTransitionEnd",
                value: function(e) {
                    "playerdetails" === e.srcElement.getAttribute("data-id") && "" == this.state.displayopacity && this.setState({
                        display: "none"
                    })
                }
            }, {
                key: "displayPlayerDetails",
                value: function() {
                    this.videoplayernode && (this.setState({
                        displayopacity: Va.displaydetails,
                        display: "block"
                    }), clearTimeout(this.timeout), this.timeout = setTimeout(function() {
                        this.setState({
                            displayopacity: ""
                        })
                    }.bind(this), 2500))
                }
            }, {
                key: "escEventListener",
                value: function(e) {
                    var t = 0;
                    27 === e.keyCode && this.props.theatremode && (this.toggleTheatreMode(e), an.publish("uievent/videoplayerviewchange", "close"), this.props.config.onComponentClose && this.props.config.onComponentClose()), 39 == e.keyCode && this.props.theatremode ? ((t = this.state.current_time + 5) > this.state.duration && (t = this.state.duration), this.updateCurrentTime(t)) : 37 == e.keyCode && this.props.theatremode && ((t = this.state.current_time - 5) < 0 && (t = 0), this.updateCurrentTime(t))
                }
            }, {
                key: "resizeMiniPlayer",
                value: function(e) {
                    var t = this.videoplayernode.getBoundingClientRect().y;
                    t = t > 0 ? t : 0;
                    var s = (e.clientY > 0 ? e.clientY : 0) - t,
                        i = 1.7 * (s = (s = s > 0 ? this.videoplayernode.offsetHeight - s : this.videoplayernode.offsetHeight + Math.abs(s)) > 300 ? s : 300);
                    i = i > 500 ? i : 500, this.setState({
                        miniplayerinlinestyle: {
                            height: s + "px",
                            width: i + "px"
                        }
                    }), e.stopPropagation(), e.preventDefault()
                }
            }, {
                key: "handleResizeDrag",
                value: function(e) {
                    "mousedown" == e.type && (document.addEventListener("mousemove", this.resizeMiniPlayer), e.stopPropagation(), e.preventDefault()), "mouseup" == e.type && document.removeEventListener("mousemove", this.resizeMiniPlayer)
                }
            }, {
                key: "handleDragEnd",
                value: function() {
                    "playing" === this.state.videostate && this.videosourcenode.play()
                }
            }, {
                key: "toggleMiniPlayer",
                value: function(e) {
                    if (!e || "click" == e.type || "ended" !== this.state.videostate) {
                        var t = !0;
                        this.videosourcenode.currentTime = 0, this.videosourcenode.pause(), this.props.popout && (t = !1), this.props.theatremode && this.toggleTheatreMode(e, "pausepreviousplayer"), this.props.toggleMiniPlayer(this.props.videosrc, this.state.current_time, t, this.state.videostate, this.state.volume, this.state.duration, this.props.videoname, this.props.videotype, this.props.uploadername, this.props.zindex, this.props.videoid, this.state.playbackrate, this.props.config), this.setState({
                            videostate: "paused"
                        }), e && (e.preventDefault(), e.stopPropagation())
                    }
                }
            }, {
                key: "toggleTheatreMode",
                value: function(e, t) {
                    var s = !0;
                    this.videosourcenode.currentTime = 0, this.videosourcenode.pause(), this.props.theatremode && (s = !1), this.props.toggleTheatreView(this.props.videosrc, this.state.current_time, s, this.videoplayernode, this.state.videostate, this.state.volume, this.state.duration, this.props.videoname, this.props.videotype, this.props.uploadername, this.props.zindex, this.props.videoid, this.state.playbackrate, this.props.config), t || this.setState({
                        videostate: "paused"
                    }), e && (e.preventDefault(), e.stopPropagation())
                }
            }, {
                key: "updateTime",
                value: function() {
                    if (this.videosourcenode && this.videosourcenode.readyState > 2) {
                        0 === this.state.bufferpercentage && this.calcBufferPercentage();
                        var e = this.state.videostate;
                        "ended" == this.state.videostate ? e = "paused" : "loading" == this.state.videostate && (e = "playing");
                        var t = "";
                        t = this.props.duration ? this.props.duration : isFinite(this.videosourcenode.duration) ? this.videosourcenode.duration : 0, this.setState({
                            current_time: this.videosourcenode.currentTime,
                            duration: t,
                            videostate: e
                        })
                    }
                }
            }, {
                key: "setVideoSourceNode",
                value: function(e) {
                    this.videosourcenode = e
                }
            }, {
                key: "setVolume",
                value: function(e) {
                    e = Math.round(100 * parseFloat(e)) / 100, this.setState({
                        volume: e
                    }), this.videosourcenode.volume = e
                }
            }, {
                key: "setVideoPlayerNode",
                value: function(e) {
                    this.videoplayernode = e
                }
            }, {
                key: "updateCurrentTime",
                value: function(e) {
                    this.setState({
                        current_time: e
                    }), this.videosourcenode.currentTime = e
                }
            }, {
                key: "onFullScreenChange",
                value: function() {
                    this.videoplayernode && this.videoplayernode.focus(), this.setState({
                        fullscreen: !this.state.fullscreen
                    }, (function() {
                        an.publish("uievent/videoplayerviewchange", this.state.fullscreen ? "fullscreen" : "exitfullscreen")
                    }))
                }
            }, {
                key: "toggleFullScreen",
                value: function() {
                    this.fullscreen.toggleFullScreen()
                }
            }, {
                key: "toggleVideoPlay",
                value: function(e) {
                    if ("error" != this.state.videostate)
                        if ("true" !== this.videoplayernode.getAttribute("data-drag")) {
                            if ("loading" != this.state.videostate || "audio" == this.playertype)
                                if ("click" === e.type || "keydown" === e.type && 32 === e.keyCode) {
                                    var t = null;
                                    if (this.videosourcenode.paused) this.videosourcenode.play(), t = "playing", this.props.pauseRemainingInstances && this.props.pauseRemainingInstances(e);
                                    else if (this.videosourcenode.play) {
                                        if (0 == this.videosourcenode.readyState && "audio" != this.playertype) return;
                                        this.videosourcenode.pause(), t = "paused"
                                    }
                                    this.setState({
                                        videostate: t
                                    })
                                } else "keydown" == e.type && 82 == e.keyCode && this.retryPlayingVideo()
                        } else this.videoplayernode.setAttribute("data-drag", "false")
                }
            }, {
                key: "onVideoEnd",
                value: function() {
                    this.videosourcenode.ended && this.setState({
                        videostate: "ended",
                        current_time: this.props.duration || this.videosourcenode.duration
                    })
                }
            }, {
                key: "ffVideo",
                value: function(e) {
                    ("click" == e.type || "keydown" == e.type && 13 == e.keyCode) && (this.updateCurrentTime(this.state.current_time + 5), e.stopPropagation(), e.preventDefault())
                }
            }, {
                key: "rewVideo",
                value: function(e) {
                    ("click" == e.type || "keydown" == e.type && 13 == e.keyCode) && (this.updateCurrentTime(this.state.current_time - 5), e.stopPropagation(), e.preventDefault())
                }
            }, {
                key: "setLoadingState",
                value: function(e) {
                    "playing" == this.state.videostate && this.setState({
                        videostate: "loading"
                    }), e.stopPropagation(), e.preventDefault()
                }
            }, {
                key: "throwVideoError",
                value: function(e) {
                    e.target && e.target.error && (this.videosourcenode.pause(), this.setState({
                        videostate: "error"
                    }))
                }
            }, {
                key: "retryPlayingVideo",
                value: function() {
                    this.videosourcenode && this.videosourcenode.load(), this.setState({
                        videostate: "playing"
                    })
                }
            }, {
                key: "downloadVideo",
                value: function(e) {
                    Jn(this.props.videosrc || this.videosourcenode.src) && (e.stopPropagation(), e.stopPropagation())
                }
            }, {
                key: "onClickCloseIcon",
                value: function(e) {
                    var t;
                    this.props.theatremode ? this.toggleTheatreMode(e) : this.props.popout && this.toggleMiniPlayer(e), this.props.config && this.props.config.onComponentClose && this.props.config.onComponentClose(), this.props.config.handleVideoNode && (t = this.props.videoid, lo[t] && (lo[t].srcObject = null, lo[t].src = null, lo[t].removeAttribute("src"), delete lo[t])), an.publish("uievent/videoplayerviewchange", "close")
                }
            }, {
                key: "getPosterUrl",
                value: function() {
                    return this.props.poster && !this.props.config.isguestuser && (this.props.poster.indexOf(encodeURIComponent("{thumbnail:true}")) > -1 || this.props.poster.indexOf(encodeURIComponent('{"thumbnail":true}')) > -1) ? this.props.poster : ""
                }
            }, {
                key: "setPlaybackrate",
                value: function(e) {
                    this.videosourcenode.playbackRate = e, this.setState({
                        playbackrate: e
                    })
                }
            }, {
                key: "toggleMoreOptions",
                value: function(e) {
                    this.setState({
                        moreoptionsvisible: !this.state.moreoptionsvisible,
                        playbackratevisible: !1
                    }), this.props.closePopupOptions && this.props.closePopupOptions(), "A" != e.target.tagName && (e.stopPropagation(), e.preventDefault())
                }
            }, {
                key: "togglePlayBackOptions",
                value: function(e) {
                    this.setState({
                        moreoptionsvisible: !1,
                        playbackratevisible: !this.state.playbackratevisible
                    }), this.props.closePopupOptions && this.props.closePopupOptions(), e.stopPropagation(), e.preventDefault()
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = "vidplayer",
                        i = "",
                        n = "",
                        a = "ea1b",
                        o = Va.videodesc,
                        r = Va.playpausecontainer,
                        l = null,
                        d = null,
                        c = Va.iconsmall,
                        u = Va.popedin,
                        m = "",
                        h = "",
                        g = "",
                        p = re("videoplayer.pause"),
                        f = "",
                        v = "",
                        C = "",
                        b = "",
                        y = "",
                        _ = null,
                        W = null;
                    "playing" === t.videostate && (a = "ea12"), "ended" === t.videostate && (a = "ea17", g = Va.videoend_details, p = re("videoplayer.replay"), y = Va.replayicon), "paused" === t.videostate && (g = Va.videoend_details, p = re("videoplayer.play")), "error" === t.videostate && (g = Va.videoend_details), this.props.popout && (d = N(se, {
                        classname: Va.closeicon + " " + Va.iconsmall,
                        type: "icon",
                        title: re("common.close"),
                        content: "e9ee",
                        onclick: this.onClickCloseIcon
                    }), i = Va.playerpopout, n = {
                        "z-index": e.zindex,
                        height: t.miniplayerinlinestyle.height,
                        width: t.miniplayerinlinestyle.width
                    }), (!t.fullscreen && e.theatremode || t.fullscreen && "audio" != this.playertype) && (r = r + " " + Va.fullscreenplaypause, o = o + " " + Va.videodesc_theatremode, c = Va.iconlarge, f = N("div", {
                        class: Va.ffbuttoncontainer,
                        onclick: this.ffVideo,
                        onkeydown: this.ffVideo,
                        tabindex: "0"
                    }, N(se, {
                        type: "icon",
                        classname: Va.iconlarge + " " + Va.ffbutton,
                        content: "ea14",
                        tabindex: "-1"
                    })), v = N("div", {
                        class: Va.ffbuttoncontainer,
                        onclick: this.rewVideo,
                        onkeydown: this.rewVideo,
                        tabindex: "0"
                    }, N(se, {
                        type: "icon",
                        classname: Va.iconlarge + " " + Va.rewbutton,
                        content: "ea0c",
                        tabindex: "-1"
                    }))), !t.fullscreen && e.theatremode && (l = N(se, {
                        classname: Va.closeicon + " " + Va.iconmed,
                        type: "icon",
                        title: re("common.close"),
                        content: "e9ee",
                        onclick: this.onClickCloseIcon
                    }), s = "wms_theatremode", i = Va.theatremode, u = "", n = {
                        "z-index": e.zindex
                    });
                    var S = void 0 !== WebMessanger && WebMessanger.crossoriginisolation ? "use-credentials" : null,
                        w = null,
                        M = e.videosrc;
                    e.config && e.config.hidedownloadicon && (w = function(e) {
                        e.preventDefault(), e.stopPropagation()
                    }), e.config.manifestUrl && (M = "");
                    var I = N("video", {
                            autoplay: !0,
                            onloadstart: this.setLoadingState,
                            onwaiting: this.setLoadingState,
                            preload: "none",
                            onprogress: this.calcBufferPercentage,
                            poster: this.getPosterUrl(),
                            class: Va.video_content,
                            ref: this.setVideoSourceNode,
                            onended: this.onVideoEnd,
                            src: M,
                            ontimeupdate: this.updateTime,
                            onerror: this.throwVideoError,
                            crossorigin: S,
                            oncontextmenu: w
                        }),
                        T = "",
                        A = "";
                    if ("audio" == this.playertype && (I = N("audio", {
                            onloadstart: this.setLoadingState,
                            onwaiting: this.setLoadingState,
                            preload: "none",
                            onprogress: this.calcBufferPercentage,
                            poster: this.getPosterUrl(),
                            class: Va.video_content,
                            ref: this.setVideoSourceNode,
                            onended: this.onVideoEnd,
                            src: e.videosrc,
                            ontimeupdate: this.updateTime,
                            onerror: this.throwVideoError,
                            crossorigin: S
                        }), T = " " + Va.audioplayerbg, r += " " + Va.audioplayerplaypause, A += " " + Va.basiccontrolsposition, g = " " + Va.videoend_details), e.config.handleVideoNode && (I = null), e.popout && (s = "wms_playerpopout", u = "", _ = "audio" != this.playertype ? N("div", {
                            class: Va.expander,
                            onmousedown: this.handleResizeDrag
                        }) : null), t.displayminiplayer && (h = Va.displayminiplayer), "none" === t.display && (m = Va.display), "loading" == this.state.videostate ? b = "audio" == this.playertype ? N("div", {
                            key: "loader",
                            class: Va.basic_controlscontainer + A
                        }, N("div", {
                            class: r,
                            title: re("videoplayer.pause"),
                            onclick: this.toggleVideoPlay
                        }, N("div", {
                            class: Va.loadingdiv
                        }), N(se, {
                            classname: c + " " + Va.videomodeplayicon + " " + y,
                            type: "icon",
                            tabindex: "-1",
                            content: "ea12"
                        }))) : N("div", {
                            key: "loader",
                            class: Va.basic_controlscontainer + A
                        }, N("div", {
                            class: r
                        }, N("div", {
                            class: Va.loadingdiv
                        }))) : "error" != t.videostate && (C = N("div", {
                            key: "controls",
                            class: Va.basic_controlscontainer + A
                        }, v, N("div", {
                            class: r,
                            title: p,
                            onclick: this.toggleVideoPlay
                        }, N(se, {
                            classname: c + " " + Va.videomodeplayicon + " " + y,
                            type: "icon",
                            tabindex: "-1",
                            content: a
                        })), f)), "error" == t.videostate) {
                        var E = e.theatremode || e.fullscreen || e.popout ? Va.errorcontainerbig : "";
                        W = N("div", {
                            class: Va.basic_controlscontainer + " " + Va.errorcontainer + " " + E
                        }, N("div", {
                            class: Va.errorcontainerdata
                        }, N(se, {
                            classname: Va.erroricon,
                            type: "icon",
                            content: "e675"
                        }), N("div", {
                            class: Va.errormessage
                        }, re("videoplayer.error")), N("div", {
                            class: Va.erroractions
                        }, N(se, {
                            classname: Va.retry,
                            type: "button",
                            content: re("videoplayer.tryagain"),
                            onclick: this.retryPlayingVideo
                        }), N("span", {
                            class: Va.dot
                        }), N("a", {
                            style: {
                                "text-decoration": "none"
                            },
                            download: "true",
                            target: "_blank",
                            href: e.videosrc
                        }, N(se, {
                            classname: Va.errordownload,
                            type: "button",
                            content: re("chat.download")
                        })))))
                    }
                    return N("div", {
                        tabindex: "0",
                        ref: this.setVideoPlayerNode,
                        id: s,
                        class: Va.playerparent_container + " " + u + " " + t.displayopacity + " " + i + " " + h + " " + g,
                        "data-playerparent": "true",
                        "data-playertype": "audio" == this.playertype ? "audio" : "video",
                        style: n,
                        onmousemove: this.throttle,
                        mouseout: this.playerMouseOut,
                        onclick: this.displayPlayerDetails
                    }, N("div", {
                        dangerouslySetInnerHTML: I ? null : e.videoid,
                        ref: this.storeVideoTagParent,
                        "data-id": "videoplayer",
                        class: Va.videoplayer_container + T,
                        onclick: this.toggleVideoPlay
                    }, I), b, W, N("div", {
                        key: "playerdetails",
                        "data-id": "playerdetails",
                        class: m + " " + Va.details,
                        ontransitionend: this.detailsTransitionEnd
                    }, N("div", {
                        class: Va.header
                    }, N("div", {
                        class: Va.topgradiant
                    }), N("div", {
                        class: o
                    }, N("span", {
                        title: e.videoname
                    }, e.videoname)), d, l), C, N(Xa, {
                        fullscreen: t.fullscreen,
                        toggleFullScreen: this.toggleFullScreen,
                        setVolume: this.setVolume,
                        volume: t.volume,
                        current_time: t.current_time,
                        duration: t.duration,
                        updateCurrentTime: this.updateCurrentTime,
                        renderSettings: this.renderSettings,
                        bufferpercentage: t.bufferpercentage,
                        popout: this.props.popout,
                        toggleMiniPlayer: this.toggleMiniPlayer,
                        theatremode: e.theatremode,
                        toggleTheatreMode: this.toggleTheatreMode,
                        videoplayernode: this.videoplayernode,
                        forwardAttachment: e.forwardAttachment,
                        videosrc: e.videosrc,
                        config: e.config,
                        videostate: t.videostate,
                        downloadVideo: this.downloadVideo,
                        playertype: this.playertype,
                        playbackrate: this.state.playbackrate,
                        playbackrateCallback: this.setPlaybackrate,
                        moreoptionsvisible: this.state.moreoptionsvisible,
                        playbackratevisible: this.state.playbackratevisible,
                        toggleMoreOptions: this.toggleMoreOptions,
                        togglePlayBackOptions: this.togglePlayBackOptions,
                        copyAttachment: e.copyAttachment
                    })), _)
                }
            }]), s
        }(R),
        ro = function() {
            function e() {
                a(this, e), this.forwardAttachment = null, this.toggleMiniPlayer = this.toggleMiniPlayer.bind(this), this.toggleTheatreView = this.toggleTheatreView.bind(this), this.forwardAttachmentCallBack = this.forwardAttachmentCallBack.bind(this), this.pauseRemainingInstances = this.pauseRemainingInstances.bind(this), this.pauseVideoPlayer = this.pauseVideoPlayer.bind(this), this.closePopupOptions = this.closePopupOptions.bind(this), this.closeCurrentPopupOption = this.closeCurrentPopupOption.bind(this), this.copyAttachment = null, this.copyAttachmentCallBack = this.copyAttachmentCallBack.bind(this)
            }
            return r(e, [{
                key: "forwardAttachmentCallBack",
                value: function() {
                    this.forwardAttachment()
                }
            }, {
                key: "copyAttachmentCallBack",
                value: function() {
                    this.copyAttachment()
                }
            }, {
                key: "invokeToggleMiniPlayer",
                value: function(e) {
                    this.instance && "playing" === this.instance.state.videostate && "audio" != this.instance.playertype && this.instance.toggleMiniPlayer(e)
                }
            }, {
                key: "toggleTheatreModeOverlay",
                value: function(e, t) {
                    if (e) {
                        var s = vn("div", "wms_theatremode_overlay", Va.theatremode_overlay);
                        s.style.zIndex = t, document.body.appendChild(s)
                    } else An(document.getElementById("wms_theatremode_overlay"))
                }
            }, {
                key: "toggleTheatreView",
                value: function(e, t, s, i, n, a, o, r, l, d, c, u, m) {
                    var h = arguments.length > 13 && void 0 !== arguments[13] ? arguments[13] : {};
                    this.toggleTheatreModeOverlay(s, c);
                    var g = document.getElementById("wms_theatre_mountpoint");
                    if (g || (g = vn("div", "wms_theatre_mountpoint"), document.body.appendChild(g)), s) {
                        1 == h.theatremode && (h.theatremode = !1, this.unmountComponent());
                        var p = N(oo, {
                            ref: function(e) {
                                this.storeTheatremodeInstance(e)
                            }.bind(this),
                            videosrc: e,
                            current_time: t,
                            videostate: n,
                            volume: a,
                            duration: o,
                            videoname: r,
                            videotype: l,
                            uploadername: d,
                            theatremode: s,
                            zindex: c,
                            videoid: u,
                            toggleTheatreView: this.toggleTheatreView,
                            toggleMiniPlayer: this.toggleMiniPlayer,
                            forwardAttachment: this.forwardAttachmentCallBack,
                            playbackrate: m,
                            config: h,
                            copyAttachment: this.copyAttachmentCallBack
                        });
                        if (this.unmountComponent(), document.getElementById("wms_popout_mountpoint")) {
                            var f = document.getElementById("wms_popout_mountpoint");
                            ee("", f), An(f)
                        }
                        ee(p, g), an.publish("uievent/videoplayerviewchange", "theatre")
                    } else ee(null, g), An(g)
                }
            }, {
                key: "toggleMiniPlayer",
                value: function(e, t, s, i, n, a, o, r, l, d, c, u) {
                    var m = arguments.length > 12 && void 0 !== arguments[12] ? arguments[12] : {},
                        h = document.getElementById("wms_popout_mountpoint");
                    if (h || (h = vn("div", "wms_popout_mountpoint"), document.body.appendChild(h)), 1 == m.miniplayer && (m.miniplayer = !1, this.unmountComponent()), s) {
                        var g = N(oo, {
                            ref: function(e) {
                                this.storeMiniPlayerInstance(e)
                            }.bind(this),
                            class: Va.name,
                            key: e,
                            videosrc: e,
                            current_time: t,
                            videostate: i,
                            volume: n,
                            duration: a,
                            videoname: o,
                            videotype: r,
                            uploadername: l,
                            popout: s,
                            zindex: d,
                            videoid: c,
                            toggleMiniPlayer: this.toggleMiniPlayer,
                            toggleTheatreView: this.toggleTheatreView,
                            forwardAttachment: this.forwardAttachmentCallBack,
                            playbackrate: u,
                            config: m,
                            copyAttachment: this.copyAttachmentCallBack
                        });
                        this.unmountComponent(), document.getElementById("wms_popout_mountpoint") && ee("", document.getElementById("wms_popout_mountpoint")), ee(g, h), an.publish("uievent/videoplayerviewchange", "miniplayer")
                    } else ee(null, h), An(h), this.storeMiniPlayerInstance(null)
                }
            }, {
                key: "createOverlay",
                value: function() {
                    this.poster = this.poster || "";
                    var e = this.createInitialState(this.poster, this.config);
                    this.node.innerHTML = e
                }
            }, {
                key: "createInitialState",
                value: function(e, t) {
                    var s = "";
                    void 0 !== WebMessanger && WebMessanger.crossoriginisolation && (s = ' crossorigin="use-credentials" ');
                    var i = "<img class='{{posterclass}}' src='{{posterurl}}'" + s + ">"; - 1 === e.indexOf(encodeURIComponent("thumbnail:true")) && -1 === e.indexOf(encodeURIComponent('"thumbnail":true')) && -1 === e.indexOf("/thumbnail") && (t && !t.isguestuser || t && !t.customposter || !t) && (i = "");
                    var n = "";
                    n = (n = -1 !== e.indexOf("appaccount_id") ? (n = e.replace(encodeURIComponent("thumbnail:true,"), "")).replace(encodeURIComponent('"thumbnail":true,'), "") : (n = e.replace("&x-cli-msg=" + encodeURIComponent("{thumbnail:true}"), "")).replace("&x-cli-msg=" + encodeURIComponent('{"thumbnail":true}'), "")).replace("/thumbnail", ""), t && t.videourl && (n = t.videourl);
                    var a = "<div class='{{forwardiconcontainer}}' " + (t && t.handleForward ? "documentclick='attforward'" : "") + " title='{{forwardtitle}}' data-filefrwrd=true><div class='{{forwardicon}}' data-id=fwdicon></div></div>";
                    (t && 1 == t.hideforwardicon || oe.get("isViewTranscriptUI")) && (a = "");
                    var o = t && t.handleDownload ? "<span class='{{downloadicon}}'></span>" : "<a download target='_blank' href='{{videourl}}'><span class='{{downloadicon}}'></span></a>",
                        r = t && t.handleDownload ? "documentclick='attdownload' src='{{videourl}}'" : "";
                    Xn() && (o = '<a documentclick="attdownload" data-documentclick="attdownload" href="{{videourl}}" target="_blank" src="{{videourl}}"><span class="{{downloadicon}}"></span></a>');
                    var l = "<div class='{{downloadiconcontainer}}' data-filedownload=true title='{{downloadtitle}}' " + r + "> " + o + "</div>";
                    t && 1 == t.hidedownloadicon && (l = "");
                    var d = "";
                    t && t.wpCopyHandled && t.wpcopy_attribute && (d = "<div class='{{copyiconcontainer}}' title='{{copyicontitle}}' data-copyacrossapp=true data-zhshare-src-meta='{{copyacrossapp_attribute}}'><div class='{{copyicon}}' data-id=cpyicon></div></div>");
                    var c = "<div class='{{overlayclass}}' data-id=initialovrlay>" + i + "<div class='{{playpauseclass}}' data-id=playbtncontainer title='{{playicontitle}}'><div class='{{playicon}}' data-id=playicon></div></div> <div class='{{actionscontainer}}'>" + a + l + d + "</div></div>",
                        u = t && t.wpcopy_attribute;
                    return yi(c, {
                        overlayclass: Va.playeroverlay,
                        posterclass: Va.posterimage,
                        posterurl: e,
                        playpauseclass: Va.playpauseinitial,
                        playicon: Va.playicon,
                        forwardiconcontainer: Va.forwardiconcontainer,
                        forwardicon: Va.forwardicon,
                        videourl: n,
                        downloadiconcontainer: Va.downloadiconcontainer,
                        downloadicon: Va.overlaydownloadicon,
                        copyiconcontainer: Va.copyiconcontainer,
                        copyicon: Va.copyicon,
                        copyacrossapp_attribute: u,
                        actionscontainer: Va.actionscontainer,
                        $forwardtitle: "message.actions.forward",
                        $downloadtitle: "chat.download",
                        $playicontitle: "videoplayer.play",
                        $copyicontitle: "message.actions.copyfile"
                    })
                }
            }, {
                key: "pauseRemainingInstances",
                value: function(e) {
                    this.pauseVideosCallback && this.pauseVideosCallback(this.instance, e)
                }
            }, {
                key: "pauseVideoPlayer",
                value: function(e) {
                    this.instance && "playing" == this.instance.state.videostate && this.instance.toggleVideoPlay(e)
                }
            }, {
                key: "closePopupOptions",
                value: function() {
                    this.closeOtherPopupOptions && this.closeOtherPopupOptions(this.videoid)
                }
            }, {
                key: "closeCurrentPopupOption",
                value: function() {
                    this.instance && (this.instance.state.moreoptionsvisible || this.instance.state.playbackratevisible) && this.instance.hidePopupOptions()
                }
            }, {
                key: "mountComponent",
                value: function(e, t, s, i, n, a, o, r, l, d, c, u, m, h, g, p) {
                    this.node = e, this.poster = a, this.node.removeChild(this.node.childNodes[0]), this.forwardAttachment = l, this.onComponentUnmount = d, this.pauseVideosCallback = c, this.storeMiniPlayerInstance = u, this.storeTheatremodeInstance = m, this.closeOtherPopupOptions = h, this.videoid = r, this.config = g, this.copyAttachment = p, ee(N(oo, {
                        ref: function(e) {
                            this.instance = e
                        }.bind(this),
                        videosrc: t,
                        videotype: s,
                        videoname: i,
                        videostate: g.videostate,
                        uploadername: n,
                        poster: a,
                        zindex: o,
                        videoid: r,
                        duration: this.config.duration,
                        toggleMiniPlayer: this.toggleMiniPlayer,
                        toggleTheatreView: this.toggleTheatreView,
                        forwardAttachment: this.forwardAttachmentCallBack,
                        pauseRemainingInstances: this.pauseRemainingInstances,
                        closePopupOptions: this.closePopupOptions,
                        config: this.config,
                        copyAttachment: this.copyAttachmentCallBack
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    this.onComponentUnmount(this.videoid), ee("", this.node), this.createOverlay()
                }
            }, {
                key: "removeComponent",
                value: function() {
                    this.onComponentUnmount(this.videoid), ee("", this.node)
                }
            }]), e
        }(),
        lo = {};

    function co(e, t) {
        return lo[e] || function(e, t) {
            lo[e] = vn("audio" == t ? "audio" : "video");
            return lo[e]
        }(e, t)
    }
    var uo = {},
        mo = null,
        ho = null;

    function go(e) {
        for (var t in uo)
            if (uo[t][e]) {
                delete uo[t][e];
                break
            }
    }
    var po = {
        create: function(e, t, s, i, n, a, o, r, l, d, c, u, m, h) {
            if (!(m && m.handleVideoNode && mo && mo.props.videoid == u)) {
                var g = new $WC.VideoPlayer;
                uo[e] || (uo[e] = {}, Cn(t, "scroll", Mn(fo, e, 70))), uo[e][u] = g, vo(g, c), g.mountComponent(s, i, n, a, o, r, l, u, d, go, vo, bo, yo, Co, m, h)
            }
        },
        removeSpecificComponent: function(e, t) {
            uo[e] && uo[e][t] && (uo[e][t].removeComponent(), delete uo[e][t], uo[e] && !Object.keys(uo[e]).length && delete uo[e])
        },
        removeAllComponents: function(e) {
            if (uo[e]) {
                for (var t in uo[e]) uo[e][t].unmountComponent();
                delete uo[e]
            }
        },
        removeExternalVideoPlayers: function(e) {
            mo && mo.props.videoid == e && mo.props.toggleMiniPlayer(null, null, !1), ho && ho.props.videoid == e && ho.props.toggleTheatreView(null, null, !1)
        },
        isCurrentlyInTheatreMode: function(e) {
            return ho && ho.props.videoid == e
        },
        isCurrentlyInMiniPlayerMode: function(e) {
            return mo && mo.props.videoid == e
        }
    };

    function fo(e) {
        for (var t in uo[this]) {
            var s = uo[this][t];
            ln(s.node, e.target, !0) || s.invokeToggleMiniPlayer(e)
        }
    }

    function vo(e, t) {
        for (var s in uo)
            for (var i in uo[s]) e != uo[s][i] && uo[s][i].pauseVideoPlayer(t);
        mo && "playing" == mo.state.videostate && mo.toggleVideoPlay(t)
    }

    function Co(e) {
        for (var t in uo)
            for (var s in uo[t]) e != s && uo[t][s].closeCurrentPopupOption()
    }

    function bo(e) {
        mo = e
    }

    function yo(e) {
        ho = e
    }
    var _o = {},
        Wo = [];

    function So(e) {
        return e ? _o[e] : _o
    }

    function wo(e) {
        var t = JSON.parse(e).data,
            s = t && t.chats;
        if (s && s.length)
            for (var i = 0; i < s.length;) {
                "8" == s[i].chat_type && Kl(s[i]);
                var n = {};
                n.ADDINFO = s[i].addinfo, n.CHATID = s[i].chatid, n.LASTMSGINFO = s[i].lastmsginfo && JSON.parse(s[i].lastmsginfo), n.PARTICIPANTS = s[i].recipants && JSON.parse(s[i].recipants) || [], n.PARTICIPANTSCOUNT = s[i].pcount, n.LMTIME = s[i].lmtime, n.TITLE = s[i].title, n.CTYPE = s[i].chat_type, n.MUTEDINTERVAL = s[i].mutedinterval, n.CUSTOMGROUP = s[i].customgroup, "11" == s[i].chat_type && (n.THREAD_MESSAGE_ID = s[i].thread_message_id, n.THREAD_PARENT_CHID = s[i].parent_chat_id, n.THREAD_FOLLOWER = s[i].is_follower, n.THREAD_STATE = s[i].thread_state), _o[s[i].chatid] = n, i++
            }
        this.opts.callbackargs && this.opts.callbackargs.params && Wo.push(this.opts.callbackargs.params);
        var a = this.opts.callbackargs && this.opts.callbackargs.reqid,
            o = this.opts.callbackargs && this.opts.callbackargs.topicname;
        o ? an.publish("/chatlist/" + o, {
            callbackargs: this.opts.callbackargs
        }) : an.publish("/chatlist/updateui", {
            reqid: a,
            callbackargs: this.opts.callbackargs
        })
    }

    function Mo() {
        var e = this.opts.callbackargs && this.opts.callbackargs.reqid;
        an.publish("/chatlist/updateui", {
            reqid: e,
            stat: ut.REQSTATUS.FAILED
        })
    }

    function Io(e) {
        return -1 !== Wo.indexOf(To(e))
    }

    function To(e) {
        var t = "limit=10";
        return t += e ? "&title=" + e : ""
    }

    function Ao(e, t) {
        var s = e.searchtext,
            i = To(s),
            n = e.topicname,
            a = e.silentload,
            o = e.chid; - 1 === Wo.indexOf(i) ? Xe("v1/chats", i, wo, Mo, {
            reqid: t,
            params: i,
            topicname: n,
            chid: o,
            silentload: a,
            searchtext: s
        }, null, {
            "X-XHR-exception": "true",
            "X-ZCSRF-TOKEN": Yi()
        }) : n ? an.publish("/chatlist/" + n, {
            reqid: t,
            callbackargs: e
        }) : an.publish("/chatlist/updateui", {
            reqid: t
        })
    }
    var Eo = Object.freeze({
        __proto__: null,
        _constructParams: To,
        fetchFromServer: Ao,
        get: So,
        getList: function(e) {
            return e ? Ir("TITLE", e, _o) : _o
        },
        handleFailure: Mo,
        isCachedRequest: Io,
        updateAddinfoData: function(e, t) {
            var s = So(e);
            s && (s.ADDINFO = s.ADDINFO ? s.ADDINFO + ":" + t : t)
        },
        updateList: wo,
        updatePartCount: function(e, t, s) {
            var i = So(e);
            if (i) {
                var n = parseInt(i.PARTICIPANTSCOUNT);
                i.PARTICIPANTSCOUNT = s ? n + t : n - t
            }
        },
        updateTitle: function(e, t) {
            var s = So(e);
            s && (s.TITLE = t)
        }
    });
    var Uo = {
        listItems: "mc118439ee_listItems",
        listimgcontainer: "mc118439ee_listimgcontainer",
        default_img: "mc118439ee_default_img",
        wms_badge_statusicon_threads_cutout: "wms_badge_statusicon_threads_cutout",
        wms_channelimg_badge: "wms_channelimg_badge",
        virtuallist: "mc118439ee_virtuallist",
        listimgstatus: "mc118439ee_listimgstatus",
        listinfocontainer: "mc118439ee_listinfocontainer",
        listinfotitle: "mc118439ee_listinfotitle",
        listinfoheader: "mc118439ee_listinfoheader",
        header: "mc118439ee_header",
        listinfodesc: "mc118439ee_listinfodesc",
        listContainer: "mc118439ee_listContainer",
        listContainerHeader: "mc118439ee_listContainerHeader",
        listContainerWrapper: "mc118439ee_listContainerWrapper",
        listwrapper: "mc118439ee_listwrapper",
        searchBox: "mc118439ee_searchBox",
        searchIcon: "mc118439ee_searchIcon",
        searchinputwrapper: "mc118439ee_searchinputwrapper",
        searchBoxInput: "mc118439ee_searchBoxInput",
        titlewrapper: "mc118439ee_titlewrapper",
        listContainerClose: "mc118439ee_listContainerClose",
        listContainerFooter: "mc118439ee_listContainerFooter",
        container: "mc118439ee_container",
        infotext: "mc118439ee_infotext",
        loading: "mc118439ee_loading",
        optionscontainer: "mc118439ee_optionscontainer",
        optionswrapper: "mc118439ee_optionswrapper",
        optionsitem: "mc118439ee_optionsitem",
        valign_mid_block: "mc118439ee_valign_mid_block",
        listselected: "mc118439ee_listselected",
        zmNightMode: "zmNightMode",
        badgeimg: "mc118439ee_badgeimg",
        loading_container: "mc118439ee_loading_container",
        hvalign: "mc118439ee_hvalign",
        error_info: "mc118439ee_error_info",
        error_img: "mc118439ee_error_img",
        infotxt: "mc118439ee_infotxt",
        infotext_1: "mc118439ee_infotext_1",
        infotext_2: "mc118439ee_infotext_2",
        hv_align: "mc118439ee_hv_align",
        descloading: "mc118439ee_descloading",
        wrapperminheight: "mc118439ee_wrapperminheight"
    };
    var ko = {
            msgactions_container: "mc2f762162_msgactions_container",
            actioncontainer: "mc2f762162_actioncontainer",
            quickreactionscontainer: "mc2f762162_quickreactionscontainer",
            msgactionicon: "mc2f762162_msgactionicon",
            reacticon: "mc2f762162_reacticon",
            deleteaction: "mc2f762162_deleteaction",
            actionname: "mc2f762162_actionname",
            moreactionname: "mc2f762162_moreactionname",
            itemselected: "mc2f762162_itemselected",
            iconreply: "mc2f762162_iconreply",
            newglitter: "mc2f762162_newglitter",
            defaultmsgactions_container: "mc2f762162_defaultmsgactions_container",
            searchcontainer: "mc2f762162_searchcontainer",
            actionimg: "mc2f762162_actionimg",
            moreactionicon: "mc2f762162_moreactionicon",
            popupicon: "mc2f762162_popupicon",
            loader: "mc2f762162_loader",
            loadermargin: "mc2f762162_loadermargin",
            moreactionslabel: "mc2f762162_moreactionslabel",
            emptyresult: "mc2f762162_emptyresult",
            errorimg: "mc2f762162_errorimg",
            errorinfotext: "mc2f762162_errorinfotext",
            popupcontainerstyle: "mc2f762162_popupcontainerstyle",
            defaultpopupcontainer: "mc2f762162_defaultpopupcontainer",
            quickreaction: "mc2f762162_quickreaction",
            zmNightMode: "zmNightMode",
            "wms-rtl": "wms-rtl",
            moreActionsDefaultIcon: "mc2f762162_moreActionsDefaultIcon"
        },
        No = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).setListNode = i.setListNode.bind(h(i)), i.toggleOptionsContainer = i.toggleOptionsContainer.bind(h(i)), i.hoverOff = i.hoverOff.bind(h(i)), i.listnode = null, i.state = {
                    image_loaded: !1,
                    show_options: !1
                }, i
            }
            return r(s, [{
                key: "setListNode",
                value: function(e) {
                    this.listnode = e
                }
            }, {
                key: "selectListItem",
                value: function(e, t) {
                    if (this.props.onListItemClicked) {
                        var s = mn(t);
                        this.props.onListItemClicked(e, s, t)
                    }
                }
            }, {
                key: "toggleOptionsContainer",
                value: function() {
                    this.setState({
                        show_options: !this.state.show_options
                    })
                }
            }, {
                key: "hoverOff",
                value: function() {
                    this.state.show_options && this.setState({
                        show_options: !1
                    })
                }
            }, {
                key: "componentDidUpdate",
                value: function() {
                    this.props.setFocussedNode && this.props.setFocussedNode(this.props.item, this.listnode)
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = e.item;
                    if ("loading" === t.id) return N("div", {
                        class: Uo.listItems + " " + Uo.hvalign
                    }, N("div", {
                        class: Uo.loading_container
                    }, N("div", null), N("div", null), N("div", null)));
                    var s = N("div", {
                        class: Uo.default_img
                    });
                    if (t.empty_img ? s = "" : t.badge_img ? s = N("div", {
                            class: Uo.badgeimg
                        }, t.badge_letter) : this.state.image_loaded && (s = N("img", {
                            "data-zcprofileid": t.id,
                            src: t.imgsrc
                        })), !this.state.image_loaded && t.imgsrc) {
                        var i = new Image;
                        i.src = t.imgsrc, i.onload = function() {
                            this.setState({
                                image_loaded: !0
                            })
                        }.bind(this)
                    }
                    var n = t.classname ? t.classname : "",
                        a = t.classname && Qs(t.id) ? N("span", {
                            class: "wms_badge_img_cutout wms_badge_statusicon_" + Qs(t.id) + "_cutout"
                        }) : null;
                    a = t.threadicon ? N("span", {
                        class: "wms_badge_img_cutout wms_badge_statusicon_" + t.threadicon + "_cutout threadlist"
                    }) : a;
                    var o = t.empty_img && !t.fonticon_class ? "" : Uo.listimgcontainer + " " + n,
                        r = t.desc || t.htmldesc ? "" : Uo.valign_mid_block,
                        l = Uo.listinfocontainer + " " + r + " ";
                    e.customlistitemstyles && e.customlistitemstyles.listinfoContainerStyle && (l += e.customlistitemstyles.listinfoContainerStyle);
                    var d = null;
                    this.state.show_options && (d = t.options.map((function(e) {
                        return N("div", {
                            key: e.name,
                            "data-operation": e.operation,
                            class: Uo.optionsitem
                        }, e.name)
                    })), d = N("div", {
                        class: Uo.optionswrapper
                    }, " ", d, " "));
                    var c = t.options ? N("div", {
                            class: Uo.optionscontainer,
                            onclick: this.toggleOptionsContainer
                        }, d) : null,
                        u = "loading" == t.desc ? Uo.descloading : "",
                        m = N("div", {
                            class: Uo.listinfodesc + " " + u
                        }, t.desc);
                    t.htmldesc && (m = N("div", {
                        class: Uo.listinfodesc,
                        dangerouslySetInnerHTML: {
                            __html: t.htmldesc
                        }
                    })), t.desc && Be.check("emailid", t.desc) && void 0 !== WmsSettings && WmsSettings.isEmailIDHidden() && (m = null);
                    var h = e.customlistitemstyles && e.customlistitemstyles.customContainerStyles ? e.customlistitemstyles.customContainerStyles : Uo.listItems;
                    h += t.listheader ? " " + Uo.listinfoheader : "", h += e.isfocussed ? " " + Uo.listselected : "";
                    var g = null;
                    e.customlistitemprops && e.customlistitemprops.listitemhoverdetails && e.customlistitemprops.gethoverdetailscontainer && (g = N("div", {
                        class: Uo.hoverdetails
                    }, e.customlistitemprops.gethoverdetailscontainer(t)));
                    var p = t.isloading ? N("div", {
                        class: ko.loader
                    }) : null;
                    return N("div", {
                        ref: this.setListNode,
                        class: h,
                        onclick: this.selectListItem.bind(this, t),
                        onMouseLeave: this.hoverOff
                    }, N("div", {
                        class: o
                    }, s, a), N("div", {
                        class: l
                    }, N("div", {
                        "data-zcprofileid": t.id,
                        class: Uo.listinfotitle
                    }, Ki(t.title)), m), c, g, p)
                }
            }]), s
        }(R),
        xo = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).navigateListItems = i.navigateListItems.bind(h(i)), i.setFocussedNode = i.setFocussedNode.bind(h(i)), i.isListItemFocussed = i.isListItemFocussed.bind(h(i)), i.setListContainer = i.setListContainer.bind(h(i)), i.curr_index_onfocus = 0, i.isKeyPressed = !1, i.focussednode = null, i.containernode = null, i
            }
            return r(s, [{
                key: "setListContainer",
                value: function(e) {
                    this.containernode = e
                }
            }, {
                key: "setFocussedNode",
                value: function(e, t) {
                    this.props.list[this.curr_index_onfocus] === e && (this.focussednode = t)
                }
            }, {
                key: "componentDidUpdate",
                value: function() {
                    this.isKeyPressed && (this.props.navigation_keycode === ut.KEYCODES.ENTER && this.props.onListItemClicked(this.props.list[this.curr_index_onfocus], this.focussednode), this.focussednode && this.containernode && !Ln(this.focussednode, null, this.containernode.firstChild) && Pn(this.focussednode, null, null, this.containernode.firstChild), this.isKeyPressed = !1)
                }
            }, {
                key: "isListItemFocussed",
                value: function(e) {
                    return this.props.list[this.curr_index_onfocus] === e
                }
            }, {
                key: "renderRow",
                value: function(e) {
                    return N(No, {
                        setFocussedNode: this.setFocussedNode,
                        isfocussed: this.isListItemFocussed(e),
                        key: e.id,
                        item: e,
                        onListItemClicked: this.props.onListItemClicked,
                        customlistitemstyles: this.props.customlistitemstyles,
                        customlistitemprops: this.props.customlistitemprops
                    })
                }
            }, {
                key: "navigateListItems",
                value: function() {
                    var e = this.props.list.length;
                    this.props.navigation_keycode === ut.KEYCODES.DOWN || this.props.navigation_keycode === ut.KEYCODES.UP || this.props.navigation_keycode === ut.KEYCODES.ENTER ? (this.props.navigation_keycode === ut.KEYCODES.DOWN && this.curr_index_onfocus != e - 1 ? (this.curr_index_onfocus++, this.props.list[this.curr_index_onfocus].listheader && this.curr_index_onfocus++) : this.props.navigation_keycode === ut.KEYCODES.UP && this.curr_index_onfocus > 0 && (this.curr_index_onfocus--, this.props.list[this.curr_index_onfocus].listheader && this.curr_index_onfocus--), this.isKeyPressed = !0) : (this.curr_index_onfocus = this.props.defaultselect ? 0 : -1, this.props.list[this.curr_index_onfocus] && this.props.list[this.curr_index_onfocus].listheader && this.curr_index_onfocus++)
                }
            }, {
                key: "render",
                value: function() {
                    var e = this.props.list.slice(),
                        t = null,
                        s = (this.props.customlistitemstyles && this.props.customlistitemstyles.customListWrapper) + " " + Uo.listwrapper;
                    if (e.length < 10 && !this.props.iscompletelist && !this.props.isinitiallist && e.push({
                            id: "loading"
                        }), e.length) {
                        this.navigateListItems();
                        var i = this.props.customlistitemstyles && this.props.customlistitemstyles.rowHeight || 60,
                            n = this.props.customlistitemstyles && this.props.customlistitemstyles.headerItemHeight || 53;
                        t = N(Na, {
                            data: e,
                            rowHeight: i,
                            renderRow: this.renderRow.bind(this),
                            overscanCount: 20,
                            className: Uo.virtuallist,
                            headerItemsCount: this.props.headerItemsCount,
                            headerItemHeight: n
                        })
                    } else this.props.loadingstate ? (s += " " + Uo.wrapperminheight, t = N("div", {
                        class: Uo.loading + " " + Uo.hv_align
                    })) : this.props.selectedall ? (s += " " + Uo.wrapperminheight, t = N("div", {
                        class: Uo.error_info + " " + Uo.hv_align
                    }, N("div", {
                        class: Uo.infotxt
                    }, N("div", {
                        class: Uo.infotext_1
                    }, re("items.selection.none"))))) : this.props.customemptypage && this.props.getCustomEmptyPage ? (s += " " + Uo.wrapperminheight, t = this.props.getCustomEmptyPage()) : this.props.iscompletelist && (s += " " + Uo.wrapperminheight, t = Oo());
                    return N("div", {
                        class: s,
                        ref: this.setListContainer
                    }, t)
                }
            }]), s
        }(R);

    function Oo(e) {
        var t = $WC.Config.get("staticserverpath") + "/images/bar/a9c2d1f2_search_empty.svg",
            s = e && e.customstyles && e.customstyles.infotext ? e.customstyles.infotext : Uo.infotxt,
            i = e && e.customstyles && e.customstyles.errorimg ? e.customstyles.errorimg : Uo.error_img;
        return N("div", {
            class: Uo.error_info + " " + Uo.hv_align
        }, N("img", {
            class: i,
            src: t
        }), N("div", {
            class: s
        }, N("div", {
            class: Uo.infotext_1
        }, re("search.noresult")), N("div", {
            class: Uo.infotext_2
        }, re("search.again"))))
    }
    var Ro = function() {
            function e() {
                a(this, e)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s, i, n) {
                    this.listContainerNode = n, ee(N(xo, {
                        list: e,
                        onListItemClicked: t,
                        loadingstate: s,
                        customlistitemstyles: i
                    }), this.listContainerNode)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.listContainerNode)
                }
            }]), e
        }(),
        Do = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).setSearchTextInputNode = i.setSearchTextInputNode.bind(h(i)), i.searchTextInputNode = null, i
            }
            return r(s, [{
                key: "setSearchTextInputNode",
                value: function(e) {
                    this.searchTextInputNode = e
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    this.searchTextInputNode.focus(), this.searchTextInputNode.value = ""
                }
            }, {
                key: "componentDidUpdate",
                value: function() {
                    this.searchTextInputNode.value = this.props.searchvalue ? this.searchTextInputNode.value : this.props.searchvalue, this.searchTextInputNode.focus()
                }
            }, {
                key: "render",
                value: function(e) {
                    return N("div", {
                        class: Uo.searchBox + " " + (e.customsearchstyle && e.customsearchstyle.searchcontainerstyle || "")
                    }, N("span", {
                        class: Uo.searchIcon
                    }), N("div", {
                        class: Uo.searchinputwrapper
                    }, N("input", {
                        class: Uo.searchBoxInput + " " + (e.customsearchstyle && e.customsearchstyle.searchinputstyle || ""),
                        ref: this.setSearchTextInputNode,
                        "data-purpose": "search",
                        type: "text",
                        placeholder: this.props.searchplaceholder,
                        oninput: this.props.componentid ? this.props.handleChange.bind(this, this.props.componentid) : this.props.handleChange,
                        onkeydown: this.props.handleKeyPress
                    })))
                }
            }]), s
        }(R),
        $o = function() {
            function e() {
                a(this, e)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s, i) {
                    this.searchContainerNode = i, ee(N(Do, {
                        componentid: e,
                        searchplaceholder: t,
                        handleChange: s
                    }), this.searchContainerNode)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.searchContainerNode)
                }
            }]), e
        }();
    var Ho = {
            zmNightMode: "zmNightMode",
            alignend: "mc31303ae8_alignend",
            containerwrapper: "mc31303ae8_containerwrapper",
            imgwrapper: "mc31303ae8_imgwrapper",
            img: "mc31303ae8_img",
            container: "mc31303ae8_container",
            deletenode: "mc31303ae8_deletenode",
            wms_badgeimg: "mc31303ae8_wms_badgeimg",
            destructive_button: "mc31303ae8_destructive_button",
            confirmation_button: "mc31303ae8_confirmation_button"
        },
        Lo = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                return a(this, s), t.apply(this, arguments)
            }
            return r(s, [{
                key: "render",
                value: function() {
                    var e = this.props.selectedItems,
                        t = this.props.fetchImageSource;
                    this.props.disableRemoval && e.sort(function(e, t) {
                        return this.props.disableRemoval.hasOwnProperty(e) ? -1 : 0
                    }.bind(this));
                    var s = e.map(function(e) {
                        var s = null,
                            i = "",
                            n = t(e);
                        s = n.imgsrc ? N("img", {
                            class: Ho.img,
                            src: n.imgsrc
                        }) : n.fonticon_class ? N("div", {
                            class: n.fonticon_class
                        }) : N("div", {
                            class: Ho.wms_badgeimg
                        }, n.badge_letter);
                        var a = N("div", {
                                class: Ho.deletenode
                            }),
                            o = this.props.removeSelectedItem.bind(this, e);
                        return this.props.disableRemoval && this.props.disableRemoval.hasOwnProperty(e) && (a = null, o = null), this.props.fetchImageTitle && (i = this.props.fetchImageTitle(e)), N("div", {
                            key: e,
                            class: Ho.imgwrapper,
                            title: i,
                            onclick: o
                        }, s, a)
                    }.bind(this));
                    if (this.props.selectedItems.length) {
                        var i = this.props.actionCallback && this.props.actionCallback.map(function(e, t) {
                            var s = e.buttonstyle ? Ho[e.buttonstyle] : Ho.aligncenter,
                                i = function() {
                                    e.onclick(this.props.selectedItems)
                                }.bind(this);
                            return N(se, {
                                key: t,
                                type: "button",
                                content: e.text,
                                classname: s,
                                onclick: i
                            })
                        }.bind(this));
                        return N("div", {
                            class: Ho.containerwrapper
                        }, N("div", {
                            class: Ho.container
                        }, s), i)
                    }
                    return null
                }
            }]), s
        }(R),
        Po = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                a(this, s), (i = t.call(this, e)).storeListInstance = i.props.storeListInstance, i.removeSelectedItem = i.removeSelectedItem.bind(h(i)), i.handleMultipleItemsSelection = i.handleMultipleItemsSelection.bind(h(i)), i.handleItemSelection = i.handleItemSelection.bind(h(i)), i.initial_list = i.props.list, i.bulk_list = rn({}, i.props.list), i.headerItemsCount = 0;
                var n = 0 != e.sortonsearch;
                return i.preselectedlist = rn({}, i.props.preselectedlist), i.state = {
                    excluded_list: {},
                    filtered_list: i.convertToArrayList(i.initial_list),
                    sort_on_search: n,
                    loading_state: i.props.loadingstate,
                    iscompletelist: i.props.iscompletelist,
                    searchtext: i.props.searchtext || "",
                    navigation_keycode: "",
                    excludeduser_ids: i.props.excludeduser_ids
                }, i
            }
            return r(s, [{
                key: "componentDidUpdate",
                value: function(e, t) {
                    e.loadingstate === this.props.loadingstate && e.listid == this.props.listid && e.forceupdateinitiallist == this.props.forceupdateinitiallist || this.updateList(this.props.list, null, this.props.iscompletelist), this.props.customsearch && t.searchtext !== this.props.searchtext && this.onSearch(null, this.props.searchtext)
                }
            }, {
                key: "componentWillUpdate",
                value: function(e) {
                    this.props.updateinitiallist && (this.initial_list = rn(this.initial_list, e.list), this.bulk_list = rn(this.bulk_list, e.list)), e.searchtext && this.props.searchtext !== e.searchtext && (this.initial_list = rn(this.initial_list, e.list), this.bulk_list = rn(this.bulk_list, e.list), this.onSearch(null, e.searchtext))
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    this.props.searchtext && this.onSearch(null, this.props.searchtext), this.props.preselectedlist && this.setState({
                        excluded_list: this.props.preselectedlist
                    })
                }
            }, {
                key: "updateList",
                value: function(e, t, s, i) {
                    var n = Object.keys(e);
                    if (i)
                        if (t && n.length && this.state.searchtext === i) {
                            var a = this.state.filtered_list.slice(0),
                                o = a.length;
                            n.forEach(function(t) {
                                this.bulk_list[t] || (e[t].counter = o++, a.push(e[t]))
                            }.bind(this)), this.setState({
                                filtered_list: a,
                                sort_on_search: this.props.sortonsearch,
                                iscompletelist: s,
                                loading_state: this.props.loadingstate
                            })
                        } else this.setState({
                            iscompletelist: s
                        });
                    else s ? this.setState({
                        filtered_list: this.convertToArrayList(e),
                        loading_state: !1
                    }) : null != this.props.loadingstate && this.setState({
                        loading_state: this.props.loadingstate
                    });
                    this.bulk_list = rn(this.bulk_list, e)
                }
            }, {
                key: "convertToArrayList",
                value: function(e) {
                    var t = [];
                    return Object.keys(e).forEach((function(s) {
                        t.push(e[s])
                    })), t
                }
            }, {
                key: "defaultSearch",
                value: function(e, t, s, i) {
                    var n = kr(e, null, !1, s);
                    n.length < 10 && jr("fetch", null, null, !0, "searchlist", {
                        topicname: "searchlist",
                        searchtext: e
                    }, s, i);
                    var a, o = {},
                        r = 0;
                    n.forEach(function(e) {
                        (a = vr(e)).counter = r++, s == ut.HYBRIDSEARCH.CHAT && 2 == e.PARTICIPANTS.length && (a.classname = Cr(e.CHATID).classname), o[a.id] = a
                    }.bind(this));
                    var l = o;
                    o = (o = Object.keys(o).map((function(e) {
                        return o[e]
                    }))).sort(tn("counter"), !1);
                    var d = Object.keys(o).map((function(e) {
                        return o[e].id
                    }));
                    return i(l, null, !1), d
                }
            }, {
                key: "handleKeyPress",
                value: function(e) {
                    e.keyCode !== ut.KEYCODES.DOWN && e.keyCode !== ut.KEYCODES.UP && e.keyCode !== ut.KEYCODES.ENTER || this.setState({
                        navigation_keycode: e.keyCode
                    }), e.keyCode !== ut.KEYCODES.DOWN && e.keyCode !== ut.KEYCODES.UP || e.preventDefault(), this.props.handleEscOnSearchInput && e.keyCode === ut.KEYCODES.ESCAPE && (e.stopPropagation(), e.preventDefault()), "function" == typeof this.props.onKeyPress && this.props.onKeyPress(e)
                }
            }, {
                key: "onSearch",
                value: function(e, t) {
                    var s = e ? mn(e).value : t;
                    if ("" !== s || this.props.handlecustomemptysearch) {
                        var i = this.bulk_list,
                            n = this.props.defaultsearch ? this.defaultSearch(s, i, this.props.searchsequence, this.updateList.bind(this)) : this.props.onSearch && this.props.onSearch(s, i, e);
                        if (n.length) {
                            var a = 0,
                                o = n.map((function(e) {
                                    if (i.hasOwnProperty(e)) return i[e].counter = a++, i[e]
                                }));
                            if (this.state.excludeduser_ids && this.props.defaultsearch) this.state.excludeduser_ids.USERID.forEach((function(e) {
                                var t = [];
                                o.forEach((function(s) {
                                    s.id !== e && t.push(s)
                                })), o = t
                            }));
                            this.setState({
                                filtered_list: o,
                                sort_on_search: this.props.sortonsearch,
                                searchtext: s,
                                loading_state: this.props.loadingstate
                            })
                        } else this.setState({
                            filtered_list: [],
                            searchtext: s,
                            iscompletelist: this.state.iscompletelist,
                            loading_state: !1
                        })
                    } else {
                        var r = Gi(this.initial_list) ? this.bulk_list : this.initial_list;
                        this.setState({
                            filtered_list: this.convertToArrayList(r),
                            sort_on_search: !0,
                            searchtext: s
                        })
                    }
                }
            }, {
                key: "excludeSelectedItemsFromList",
                value: function(e) {
                    var t = rn({}, this.props.excluded_list ? this.props.excluded_list : this.state.excluded_list);
                    return Object.assign(t, this.props.invisible_excluded_list), e.filter((function(e) {
                        if (!1 === t.hasOwnProperty(e.id)) return !0
                    }))
                }
            }, {
                key: "removeSelectedItem",
                value: function(e) {
                    var t = this.state.excluded_list;
                    delete t[e], this.onSearch(null, this.state.searchtext), this.props.onSelectedItemRemoval && this.props.onSelectedItemRemoval(t)
                }
            }, {
                key: "handleMultipleItemsSelection",
                value: function(e, t, s) {
                    var i = e.id,
                        n = this.state.excluded_list;
                    void 0 === this.props.selection_limit || nn(n) < this.props.selection_limit ? (n[i] = this.bulk_list[i], this.setState({
                        excluded_list: n,
                        iscompletelist: !0,
                        searchtext: "",
                        filtered_list: this.convertToArrayList(this.initial_list),
                        navigation_keycode: ""
                    }), this.props.onListItemClicked && this.props.onListItemClicked(e, t, s)) : this.props.onSelectionLimitExceed()
                }
            }, {
                key: "handleItemSelection",
                value: function(e, t, s) {
                    this.setState({
                        navigation_keycode: ""
                    }), this.props.onListItemClicked(e, t, s)
                }
            }, {
                key: "groupListItems",
                value: function(e) {
                    var t = "",
                        s = [],
                        i = 0;
                    return e.forEach((function(e) {
                        if (e.groupheader && t !== e.groupheader) {
                            t = e.groupheader;
                            var n = {};
                            n.title = e.groupheader, n.classname = Uo.listheader, n.empty_img = !0, n.listheader = !0, s.push(n), i++
                        }
                        s.push(e)
                    })), this.headerItemsCount = i, s
                }
            }, {
                key: "render",
                value: function() {
                    var e = this.excludeSelectedItemsFromList(this.state.filtered_list);
                    this.props.updateinitiallist && "" === this.state.searchtext && (e = this.excludeSelectedItemsFromList(this.convertToArrayList(this.initial_list)));
                    var t = this.props.multiselect ? this.handleMultipleItemsSelection : this.handleItemSelection;
                    if (this.state.sort_on_search) {
                        var s = [];
                        if (e.length)
                            for (var i = 0; i < e.length; i++) Ms(e[i].id) && (s = e.splice(i, 1));
                        var n = this.props.defaultsearch ? tn("counter", !1) : this.props.sortComparator || tn("title");
                        e = (e = (e = Object.keys(e).map((function(t) {
                            return e[t]
                        }))).sort(n)).concat(s)
                    }
                    e = this.groupListItems(e);
                    var a = {
                        customContainerStyle: Uo.listContainer,
                        customHeaderStyle: Uo.listContainerHeader,
                        customButtonStyle: Uo.listContainerClose,
                        customWrapperStyle: Uo.listContainerWrapper
                    };
                    this.props.multiselect && nn(this.state.excluded_list) && (a.customFooterStyle = Uo.listContainerFooter), this.props.customDialogStyles && this.props.customDialogStyles.footerWrapper && (a.customFooterStyle = this.props.customDialogStyles.footerWrapper);
                    var o = N("div", {
                            class: Uo.titlewrapper
                        }, N("div", {
                            class: Uo.header
                        }, this.props.title)),
                        r = [];
                    this.props.footerprefix && r.push(this.props.footerprefix), this.props.multiselect && r.push(N(Lo, {
                        selectedItems: Object.keys(this.state.excluded_list),
                        fetchImageSource: this.props.fetchImageSource,
                        actionCallback: this.props.actions,
                        removeSelectedItem: this.removeSelectedItem,
                        disableRemoval: this.preselectedlist,
                        fetchImageTitle: this.props.fetchImageTitle
                    }));
                    var l = this.props.multiselect ? [] : this.props.actions,
                        d = !!this.state.searchtext,
                        c = !(nn(this.props.excluded_list) !== nn(this.props.list) || !this.props.iscompletelist || !this.props.multiselect);
                    if (this.props.dialogview) return N(xt, {
                        heading: o,
                        actions: l,
                        customDialogStyles: a,
                        callbackOnClose: this.props.callbackOnClose,
                        footerinfoprefix: r,
                        ignoreFocusOnMount: !0
                    }, N(Do, {
                        searchplaceholder: this.props.searchplaceholder,
                        handleChange: this.onSearch.bind(this),
                        searchvalue: this.state.searchtext,
                        handleKeyPress: this.handleKeyPress.bind(this)
                    }), this.props.listlabel, N(xo, {
                        list: e,
                        onListItemClicked: t,
                        loadingstate: this.state.loading_state,
                        iscompletelist: this.state.iscompletelist,
                        customlistitemstyles: this.props.customlistitemstyles,
                        isinitiallist: !this.state.searchtext,
                        navigation_keycode: this.state.navigation_keycode,
                        headerItemsCount: this.headerItemsCount,
                        customlistitemprops: this.props.customlistitemprops,
                        defaultselect: d,
                        selectedall: c,
                        customemptypage: this.props.customemptypage,
                        getCustomEmptyPage: this.props.getCustomEmptyPage
                    }));
                    if (this.props.searchnode || this.props.customsearch) return N(xo, {
                        list: e,
                        onListItemClicked: t,
                        loadingstate: this.state.loading_state,
                        iscompletelist: this.state.iscompletelist,
                        customlistitemstyles: this.props.customlistitemstyles,
                        isinitiallist: !this.state.searchtext,
                        navigation_keycode: this.props.navigation_keycode,
                        headerItemsCount: this.headerItemsCount,
                        customlistitemprops: this.props.customlistitemprops,
                        defaultselect: d,
                        selectedall: c
                    });
                    var u = this.props.customlistitemstyles && this.props.customlistitemstyles.containerWrapperStyle,
                        m = this.props.disablesearchcontainer ? null : N(Do, {
                            customsearchstyle: this.props.customlistitemstyles && this.props.customlistitemstyles.customsearchstyle,
                            searchplaceholder: this.props.searchplaceholder,
                            handleChange: this.onSearch.bind(this),
                            searchvalue: this.state.searchtext,
                            handleKeyPress: this.handleKeyPress.bind(this)
                        });
                    return N("div", {
                        class: u
                    }, m, N(xo, {
                        list: e,
                        onListItemClicked: t,
                        loadingstate: this.state.loading_state,
                        iscompletelist: this.state.iscompletelist,
                        customlistitemstyles: this.props.customlistitemstyles,
                        navigation_keycode: this.state.navigation_keycode,
                        headerItemsCount: this.headerItemsCount,
                        customlistitemprops: this.props.customlistitemprops,
                        defaultselect: d,
                        selectedall: c
                    }))
                }
            }]), s
        }(R),
        Fo = function() {
            function e() {
                a(this, e), this.instance = null
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s, i, n, a, o, r, l, d, c, u, m, h, g, p, f, v, C, b, y, _, W, S) {
                    this.listid = e, this.removeComponent = C, h ? (this.node = document.getElementById("wms_listviewdialog"), null == this.node && (this.node = document.createElement("div"), this.node.id = "wms_listviewdialog", document.body.appendChild(this.node))) : (this.storeListInstance = v, this.node = f), ee(N(Po, {
                        ref: function(t) {
                            this.instance = t, this.storeListInstance && this.storeListInstance(t, e)
                        }.bind(this),
                        list: t,
                        title: s,
                        searchplaceholder: i,
                        onSearch: n,
                        sortComparator: a,
                        onListItemClicked: o,
                        sortonsearch: r,
                        loadingstate: l,
                        actions: d,
                        multiselect: c,
                        fetchImageSource: u,
                        iscompletelist: m,
                        dialogview: h,
                        customlistitemstyles: g,
                        searchnode: p,
                        callbackOnClose: C && C.bind(this, e),
                        defaultsearch: b,
                        searchsequence: y,
                        updateinitiallist: _,
                        selection_limit: W,
                        onSelectionLimitExceed: S
                    }), this.node)
                }
            }, {
                key: "updateList",
                value: function(e, t, s, i) {
                    this.instance.updateList(e, t, s, i)
                }
            }, {
                key: "removeParentNode",
                value: function() {
                    this.node.parentElement.removeChild(this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), this.removeParentNode()
                }
            }]), e
        }(),
        Bo = [],
        jo = null,
        zo = [],
        Go = null,
        qo = {},
        Vo = 0;

    function Yo() {
        return Vo
    }

    function Zo() {
        var e = [],
            t = {
                FEEDSID: "wms_menu_feedsnotify",
                PARTICIPANTS: [],
                LMTIME: ""
            };
        return t.TITLE = 1 === Vo ? re("chat.feed.you") : re("chat.feeds.you", [Vo]), t.desc = re("view.click.here"), e.push(t), e
    }

    function Ko() {
        var e = El();
        return zo.filter((function(t) {
            if (Wn(t.CHATID)) {
                if (!Al(t.CHATID) || Al(t.CHATID) && ds(e[Al(t.CHATID).sc])) return t
            } else {
                if (Sn(t.CHATID)) return t;
                if (!Wn(t.CHATID) && (wn(t.CHATID) && Ss(t.CHATID) || t.PARTICIPANTSCOUNT > 2 || t.CUSTOMGROUP && "false" != t.CUSTOMGROUP || "2" == t.PARTICIPANTSCOUNT && (!t.CUSTOMGROUP || "false" == t.CUSTOMGROUP) && ds("direct_message"))) return t
            }
        }))
    }

    function Xo(e) {
        return e ? Bo.filter((function(t) {
            if (t.CHATID === e) return !0
        }))[0] : Bo.filter((function(e) {
            if (10 != e.CTYPE || !Kn(e.ENTITYID) || -1 != e.ENTITYID.indexOf(WebMessanger.prd)) return !0
        }))
    }

    function Jo(e, t) {
        var s = Xo(e);
        s && (s.LASTSEEN = t || 0)
    }

    function Qo(e) {
        return zo.find((function(t) {
            if (t.CHATID === e) return !0
        }))
    }

    function er(e) {
        var t = El(),
            s = cr();
        return s.sort(tn("LMTIME", !0)), s = s.filter((function(e) {
            if (Wn(e.CHATID)) {
                if (!Al(e.CHATID) || Al(e.CHATID) && ds(t[Al(e.CHATID).sc])) return e
            } else {
                if (10 == e.CTYPE) {
                    if (Kn(e.ENTITYID) && -1 == e.ENTITYID.indexOf(WebMessanger.prd)) return;
                    return e
                }
                if (!Wn(e.CHATID)) return "2" == e.PARTICIPANTSCOUNT && !oe.get("iscontacts_listing_disabled") && ds("direct_message") ? e : wn(e.CHATID) && Ss(e.CHATID) || e.PARTICIPANTSCOUNT > 2 || Sn(e.CHATID) || 1 == e.CUSTOMGROUP || "true" == e.CUSTOMGROUP ? e : void 0
            }
        })), e ? s.slice(0, e) : s.slice(0)
    }

    function tr(e) {
        return e.map((function(e) {
            return e.CHATID
        }))
    }

    function sr(e, t) {
        var s = "limit=" + (e = e || 4);
        t && (s = "totime=" + t + "&limit=" + e);
        var i = {
            "X-XHR-exception": "true",
            "X-ZCSRF-TOKEN": Yi()
        };
        Xe(oe.get("isCliqUser")() ? "v1/history" : "v1/chats", s, function(e) {
            jo = (new Date).getTime();
            var t = JSON.parse(e).data,
                s = t && t.chats,
                i = ut.REQSTATUS.NORESULTS;
            s && s.length ? (s.forEach(function(e) {
                "8" == e.chat_type && (Al(e.chatid) ? Kl(e) : (e.chid = e.chatid, Jl(e)));
                var t = {};
                if (t.ADDINFO = e.addinfo, t.CHATID = e.chatid, t.LASTMSGINFO = e.lastmsginfo && JSON.parse(e.lastmsginfo), t.PARTICIPANTS = e.recipants && JSON.parse(e.recipants) || [], t.PARTICIPANTSCOUNT = e.pcount, t.LMTIME = e.lmtime, t.TITLE = e.title, t.CUSTOMGROUP = e.customgroup, wn(t.CHATID) && (t.PHOTO = Ws(null, null, t.CHATID), t.TITLE = ws(Ss(t.CHATID)) || t.TITLE), t.CTYPE = e.chat_type, t.MUTEDINTERVAL = e.muted_interval, e.entity_id && (t.ENTITYID = e.entity_id), "1" == e.chat_type && "2" == e.pcount && !e.customgroup)
                    for (var s = t.PARTICIPANTS, i = 0; i < s.length; i++) s[i].zuid !== oe.get("zuid") && (t.TITLE = Ji(s[i].zuid, t.TITLE) || t.TITLE);
                "11" == e.chat_type && (t.THREAD_MESSAGE_ID = e.thread_message_id, t.THREAD_PARENT_CHID = e.parent_chat_id, t.THREAD_FOLLOWER = e.is_follower, t.THREAD_STATE = e.thread_state, t.CUSTOMGROUP = !0, t.THREAD_PARENT_TITLE = e.parent_chat_title);
                var n = Xo(t.CHATID);
                if (n) {
                    var a = Bo.indexOf(n);
                    Bo[a].FETCHEDFROMWMS && (Bo[a].FETCHEDFROMWMS = !1)
                } else Bo.push(t);
                if ("function" == typeof WebMessanger) {
                    var o = {};
                    o.chid = t.CHATID, o.pcount = t.PARTICIPANTSCOUNT, o.users = t.PARTICIPANTS, WebMessanger.mapChat(o)
                }
            }.bind(this)), i = ut.REQSTATUS.SUCCESS) : i = ut.REQSTATUS.INITIALSTATE, an.publish("/recentchats/updateui", i)
        }.bind(this), (function() {
            an.publish("/recentchats/updateui", ut.REQSTATUS.FAILED)
        }), null, null, i)
    }

    function ir(e, t, s, i) {
        if (t) {
            var n = Xo(e);
            if (Qo(e)) return;
            if (n) n = JSON.stringify(n), (n = JSON.parse(n)).LMTIME = "", n.LMSGTIME = n.LASTMSGINFO.time, n.order_position = zo.length + 1, zo.push(n);
            else if (Sn(e)) {
                var a = WindowHandler.getWinObjById(e) && WindowHandler.getWinObjById(e).recipant,
                    o = {};
                o.CHATID = e, o.CTYPE = $WC.WmsConstants.CTYPES.THREAD, o.ADDINFO = a ? "PARENT_MESSAGE_SENDER:" + a : "", o.order_position = zo.length + 1, o.TITLE = i.title || WindowHandler.getWinObjById(e) && WindowHandler.getWinObjById(e).title, zo.push(o), ll()
            } else if (-1 == e.indexOf("CT") || wn(e))
                if (i.title && i.type) {
                    var r = {};
                    r.CHATID = e, r.CUSTOMGROUP = "group" === i.type, r.order_position = zo.length + 1, r.TITLE = i.title, zo.push(r), ll()
                } else void 0 !== WebMessanger && WebMessanger.getChatDataForPinnedChats(e);
            else {
                var l = Al(e);
                if (l) {
                    var d = {};
                    d.ADDINFO = l.addinfo, d.CHATID = e, d.LASTMSGINFO = l.lminfo && JSON.parse(l.lminfo), d.PARTICIPANTS = [], d.TITLE = l.cn, d.LMSGTIME = l.lminfo && JSON.parse(l.lminfo).time, d.CUSTOMGROUP = l.customgroup, d.CTYPE = l.chat_type, d.MUTEDINTERVAL = l.muted_interval, d.order_position = zo.length + 1, zo.push(d), ll()
                }
            }
        } else {
            var c = Qo(e);
            c && (s || ur(e, null, !0), zo.splice(zo.indexOf(c), 1))
        }
    }

    function nr(e) {
        for (var t in e) {
            var s = ar(e[t], t),
                i = or(s.CHATID, Bo);
            if (i ? Bo[Bo.indexOf(i)] = s : Bo.push(s), void 0 !== WmsMainUI)
                if ("11" != s.CTYPE && (e[t].mute && e[t].mute > (new Date).getTime() || (12 == e[t].mtype || 20 == e[t].mtype) && e[t].m ? WmsMainUI.setMuteStatus(t, !0) : WmsMainUI.setMuteStatus(t, !1)), "11" == s.CTYPE) {
                    if (e[t].parentchatid || (e[t].parentchatid = ra(t)), e[t].parentchatid && !or(e[t].parentchatid, Bo) && !Xo(e[t].parentchatid) && Al(e[t].parentchatid)) {
                        var n = ar(Al(e[t].parentchatid), e[t].parentchatid);
                        n.LASTMSGINFO && n.LMTIME && Bo.push(n)
                    }
                    e[t].parentchatid && !un(e[t].sender) && ((12 == e[t].mtype || 20 == e[t].mtype) && WmsMainUI.getUnreadCount(e[t].parentchatid, null, t, !1) || WmsMainUI.setUnreadCount(e[t].parentchatid, s.UNREADMSGS, null, null, t), delete WebMessanger.unreadthreadmap[e[t].parentchatid])
                } else {
                    var a = 10 == s.CTYPE ? s.ENTITYID : null;
                    (12 == e[t].mtype || 20 == e[t].mtype) && WmsMainUI.getUnreadCount(t, null, null, !0) || WmsMainUI.setUnreadCount(t, s.UNREADMSGS, null, a)
                }
            if (Jo(s.CHATID, e[t].unreadtime), void 0 !== WindowHandler && WindowHandler.openedChats[s.CHATID] && WindowHandler.checkAndHighlightChat(s.CHATID), "false" == e[t].customgroup) {
                var o = un(s.PARTICIPANTS[0].zuid) ? s.PARTICIPANTS[1].zuid : s.PARTICIPANTS[0].zuid;
                qo[o] = s.CHATID
            }
        }
    }

    function ar(e, t) {
        var s = {};
        s.ADDINFO = e.addinfo, s.CHATID = t || e.chid, s.LASTMSGINFO = e.lastmsginfo && JSON.parse(e.lastmsginfo) || e.lminfo && JSON.parse(e.lminfo) || e.lmhash && JSON.parse(e.lmhash);
        var i = e.recipantssummary && JSON.parse(e.recipantssummary),
            n = [];
        for (var a in i) n.push({
            dname: i[a],
            zuid: a
        });
        if (s.PARTICIPANTS = n || or(s.CHATID, Bo).PARTICIPANTS, s.PARTICIPANTSCOUNT = e.pcount || e.pc, s.LMTIME = e.lmtime || e.unreadtime, s.LASTSEEN = e.unreadtime, s.TITLE = e.title || e.cn, s.FETCHEDFROMWMS = !0, s.UNREADMSGS = 0, e.unreadmsgcount ? s.UNREADMSGS = e.unreadmsgcount : !e.unreadreactionmsguids && e.unreadtime && (s.UNREADMSGS = "1"), s.UNREADMSGS = un(e.sender) ? 0 : s.UNREADMSGS, e.ctype && (s.CTYPE = e.ctype), e.entityid && (s.ENTITYID = e.entityid), wn(s.CHATID) && (s.PHOTO = Ws(null, null, s.CHATID), s.TITLE = ws(Ss(s.CHATID)) || s.TITLE), e.ctype == $WC.WmsConstants.CTYPES.THREAD) {
            if (!e.parentmsguid) {
                var o = s.ADDINFO.split(":");
                e.parentmsguid = o[o.indexOf("THREAD_MESSAGE_ID") + 1]
            }
            e.parentchatid || (e.parentchatid = ra(s.CHATID)), s.PARENTMSGUID = e.parentmsguid, s.THREAD_MESSAGE_ID = e.parentmsguid, s.THREAD_PARENT_CHID = e.parentchatid, s.CUSTOMGROUP = !0, e.channelData && e.channelData.dn && (s.THREAD_PARENT_TITLE = e.channelData.dn)
        }
        return s
    }

    function or(e, t) {
        for (var s in t)
            if (t[s].CHATID === e) return t[s];
        return !1
    }

    function rr(e) {
        return Ir("TITLE", e, er())
    }

    function lr(e) {
        if (e) sr(20);
        else {
            var t = (new Date).getTime();
            if (Bo.length) {
                var s = Bo.filter((function(e) {
                    if (1 != e.FETCHEDFROMWMS) return e
                }));
                s.sort(tn("LMTIME", !0)), s && s.length > 0 && (t = s[s.length - 1].LMTIME)
            }
            sr(15, t)
        }
    }

    function dr(e) {
        return Xo().filter((function(t) {
            var s = "";
            if (11 == t.CTYPE && (s = t.THREAD_PARENT_CHID || ra(t.CHATID)), void 0 !== WmsMainUI && (WmsMainUI.getUnreadCount(t.CHATID, null, null, !0) || 11 == t.CTYPE && WmsMainUI.getUnreadCount(s, !1, t.CHATID, !1))) return "muted" === e ? !!WmsMainUI.getMuteStatus(t.CHATID) : "unmuted" !== e || !1 === WmsMainUI.getMuteStatus(t.CHATID)
        }))
    }

    function cr() {
        var e = Xo(),
            t = tr(dr());
        e = e.filter((function(e) {
            return -1 === t.indexOf(e.CHATID)
        }));
        var s = dr("unmuted").sort(tn("LMTIME", !0)),
            i = dr("muted").sort(tn("LMTIME", !0)),
            n = s.concat(i);
        return n = n.length > 99 ? n.slice(0, 99) : n, e.concat(n)
    }

    function ur(e, t, s) {
        for (var i = Qo(e), n = i.order_position, a = t && Qo(t).order_position, o = a && a > n ? a - 1 : a, r = zo, l = s || o > n ? n + 1 : o, d = s ? r.length : o > n ? o : n - 1, c = 0; c < r.length; c++) {
            var u = r[c].order_position;
            u >= l && u <= d && (s || o > n ? u -= 1 : u += 1, r[c].order_position = u)
        }
        i.order_position = !s && o, ll()
    }
    an.subscribe("/channels/updateui", (function() {
        an.publish("/recentchats/updateui", ut.REQSTATUS.SUCCESS)
    }));
    var mr = Object.freeze({
        __proto__: null,
        checkPresence: or,
        get: Xo,
        getChatIdList: tr,
        getChats: er,
        getChidFor121UnreadChat: function(e) {
            return qo[e]
        },
        getFromPinnedChatList: Qo,
        getLastSeenTime: function(e) {
            var t = Xo(e);
            return t && t.LASTSEEN ? t.LASTSEEN : 0
        },
        getList: rr,
        getPinnedChats: Ko,
        getPinnedChatsLastFetchedTime: function() {
            return Go
        },
        getRecentChatTime: function() {
            var e = Bo[0] && Bo[0].LMTIME;
            if (e) return +e
        },
        getRecentChatsFromChatServer: sr,
        getRecentChatsWithLimitedUnreadChats: cr,
        getUnreadChatList: dr,
        getUnreadFeedsCount: Yo,
        incrementUnreadFeedsCount: function() {
            Vo++
        },
        initRecentChats: function() {
            null === jo && lr(!0)
        },
        loadPreviousChatList: lr,
        removeFromRecentChats: function(e) {
            var t = Xo(e);
            t && (Bo.splice(Bo.indexOf(t), 1), an.publish("/recentchats/updateui", ut.REQSTATUS.SUCCESS))
        },
        reorderPinnedChats: ur,
        resetUnreadCount: function(e) {
            Xo(e).UNREADMSGS = 0
        },
        setPinnedChatsLastFetchedTime: function(e) {
            Go = e
        },
        setUnreadFeedsCount: function(e) {
            Vo = e
        },
        update121RecentChatName: function() {
            var e = Xo(),
                t = !1;
            e && e.filter((function(e) {
                if (1 == e.CTYPE && "false" == e.CUSTOMGROUP) {
                    for (var s = 0; s < e.PARTICIPANTS.length; s++) !un(e.PARTICIPANTS[s].zuid) && Rs(e.PARTICIPANTS[s].zuid) && Rs(e.PARTICIPANTS[s].zuid).DNAME && Rs(e.PARTICIPANTS[s].zuid).DNAME !== e.TITLE && (e.TITLE = Rs(e.PARTICIPANTS[s].zuid).DNAME, t = !0);
                    t && an.publish("/recentchats/updateui", ut.REQSTATUS.SUCCESS)
                }
            }))
        },
        updateAddinfoData: function(e, t) {
            var s = Xo(e);
            s && (s.ADDINFO = s.ADDINFO ? s.ADDINFO + ":" + t : t);
            var i = Qo(e);
            i && (i.ADDINFO = i.ADDINFO ? i.ADDINFO + ":" + t : t)
        },
        updateFromActiveChats: function(e) {
            for (var t in e) {
                var s = {};
                (s = {}).CHATID = t, s.LASTMSGINFO = JSON.parse(e[t].lmhash), s.PARTICIPANTS = [];
                var i = JSON.parse(e[t].recipantssummary);
                for (var n in i) s.PARTICIPANTS.push({
                    zuid: n,
                    dname: i[n]
                });
                if (s.PARTICIPANTSCOUNT = e[t].pcount, s.TITLE = e[t].title, s.ADDINFO = e[t].addinfo, s.LMTIME = +e[t].lmtime, s.CUSTOMGROUP = e[t].customgroup, s.CTYPE = e[t].ctype, s.MUTEDINTERVAL = e[t].mute, s.FETCHEDFROMWMS = !0, e[t].entityid && (s.ENTITYID = e[t].entityid), wn(s.CHATID) && (s.PHOTO = Ws(null, null, s.CHATID), s.TITLE = ws(Ss(s.CHATID)) || s.TITLE), Sn(s.CHATID)) {
                    if (!e[t].parentmsguid && "" !== s.ADDINFO) {
                        var a = s.ADDINFO.split(":");
                        e[t].parentmsguid = a[a.indexOf("THREAD_MESSAGE_ID") + 1]
                    }
                    e[t].parentchatid || (e[t].parentchatid = ra(s.CHATID)), s.PARENTMSGUID = e[t].parentmsguid, s.THREAD_MESSAGE_ID = e[t].parentmsguid, s.THREAD_PARENT_CHID = e[t].parentchatid, s.CUSTOMGROUP = !0, e[t].parentchattitle ? s.THREAD_PARENT_TITLE = e[t].parentchattitle : Gl(s.THREAD_PARENT_CHID) && (s.THREAD_PARENT_TITLE = Gl(s.THREAD_PARENT_CHID))
                }
                if ("1" == s.CTYPE && "2" == s.PARTICIPANTSCOUNT && "false" == s.CUSTOMGROUP)
                    for (var o = s.PARTICIPANTS, r = 0; r < o.length; r++) o[r].zuid !== oe.get("zuid") && (s.TITLE = Ji(o[r].zuid, s.TITLE) || s.TITLE);
                var l = Xo(t),
                    d = Qo(t);
                d && (zo[zo.indexOf(d)] = s), l ? (s.LASTSEEN = l.LASTSEEN, Bo[Bo.indexOf(l)] = s) : Bo.push(s)
            }
            void 0 !== WmsMainUI && an.publish("/recentchats/updateui", ut.REQSTATUS.SUCCESS)
        },
        updateLastMsgInfo: function(e) {
            var t = Qo(e.chid);
            t && (t.LMSGTIME = e.lmtime, i(t));
            var s = Xo(e.chid);

            function i(t) {
                if (t.LASTMSGINFO || (t.LASTMSGINFO = {}), t.LASTMSGINFO.addinfo = e.addinfo || {}, t.LASTMSGINFO.sender = e.sender, t.LASTMSGINFO.dname = Ji(e.sender, e.dname), t.LASTMSGINFO.msguid = e.msguid, Rn(e.msg.msg)) {
                    var s = e.msg.msg;
                    "object" === n(s[s.length - 1].msg) && (t.LASTMSGINFO.msg = s[s.length - 1].msg.msg, t.LASTMSGINFO.mtype = s[s.length - 1].msg.mtype, t.LASTMSGINFO.meta = s[s.length - 1].msg.meta)
                } else e.msg.msg ? (t.LASTMSGINFO.msg = e.msg.msg, t.LASTMSGINFO.meta = e.msg.meta) : (t.LASTMSGINFO.msg = e.msg, t.LASTMSGINFO.meta = e.meta);
                t.LMTIME && (t.LMTIME = e.lmtime), e.mtype && (t.LASTMSGINFO.mtype = e.mtype), "63" === e.mtype && (t.LASTMSGINFO.mtype = e.mtype, t.LASTMSGINFO.info_visiblity = e.info_visiblity), e.module ? t.LASTMSGINFO.__module = e.module : delete t.LASTMSGINFO.__module
            }
            s && i(s), void 0 !== WmsMainUI && (WmsMainUI.menu && "block" !== WmsMainUI.menu.style.display && "flex" !== WmsMainUI.menu.style.display ? (WmsMainUI.updateUnreadChatsCount(), WmsMainUI.updateCountDependentUI()) : an.publish("/recentchats/updateui", ut.REQSTATUS.SUCCESS))
        },
        updateLastSeenTime: Jo,
        updateLastThreadMsgTime: function(e, t) {
            var s = Xo(e);
            s && (s.LASTTHREADMSGTIME = t || 0)
        },
        updateLocalThreadFollower: function(e, t) {
            var s = Xo(e);
            s && "11" == s.CTYPE && (s.THREAD_FOLLOWER = t, s.PARTICIPANTSCOUNT = t ? s.PARTICIPANTSCOUNT + 1 : s.PARTICIPANTSCOUNT - 1)
        },
        updatePartCount: function(e, t, s) {
            var i = Xo(e);
            if (i) {
                var n = parseInt(i.PARTICIPANTSCOUNT);
                i.PARTICIPANTSCOUNT = s ? n + t : n - t
            }
            var a = Qo(e);
            if (a) {
                var o = parseInt(a.PARTICIPANTSCOUNT);
                a.PARTICIPANTSCOUNT = s ? o + t : o - t
            }
        },
        updatePartInfo: function(e, t, s) {
            var i = Xo(e) || Qo(e);
            if (i)
                if (s) i.PARTICIPANTS.push(t);
                else
                    for (var n = 0; n < i.PARTICIPANTS.length; n++) {
                        i.PARTICIPANTS[n].zuid === t.zuid && i.PARTICIPANTS.splice(n, 1)
                    }
        },
        updatePinnedChat: ir,
        updatePinnedChatList: function(e, t, s, i) {
            if (Go = (new Date).getTime(), t) {
                var n = [];
                if (e.data && e.data.length)
                    for (var a = 0; a < e.data.length; a++) e.data[a].chats && (n = [].concat(v(n), v(e.data[a].chats)));
                if (n)
                    for (var o = 0; o < n.length; o++) {
                        var r = n[o];
                        if (!Qo(r.id)) {
                            var l = {};
                            if (l.CHATID = r.id, l.TITLE = r.title, l.chat_type = r.type, l.CUSTOMGROUP = "group" === r.type || "chatlet" === r.type, l.PARTICIPANTSCOUNT = r.pcount, l.PARTICIPANTS = r.recipants, i && (l.order_position = o + 1), zo.push(l), void 0 !== WindowHandler) {
                                var d = WindowHandler.getWinObjById(r.id);
                                d && d.updatePinnedInfo(!0)
                            }
                        }
                    }
                ll()
            } else {
                var c = e.data.chats;
                if (c)
                    for (var u = 0; u < c.length; u++) {
                        var m = c[u],
                            h = Qo(m.chatid);
                        if (!h || s) {
                            var g = {};
                            if (g.ADDINFO = m.addinfo, g.CHATID = m.chatid, g.LASTMSGINFO = m.lastmsginfo && JSON.parse(m.lastmsginfo), g.PARTICIPANTS = m.recipants && JSON.parse(m.recipants), g.PARTICIPANTSCOUNT = m.pcount, g.TITLE = m.title, g.LMSGTIME = m.lastmsginfo && JSON.parse(m.lastmsginfo).time, g.CUSTOMGROUP = m.customgroup, g.CTYPE = m.chat_type, g.MUTEDINTERVAL = m.muted_interval, g.order_position = h && h.order_position || zo.length + 1, ir(m.chatid, !1, !0), zo.push(g), "8" == m.chat_type && $WC.Channels.updateChannelMetaData(m), void 0 !== WindowHandler) {
                                var p = WindowHandler.getWinObjById(m.chatid);
                                p && p.updatePinnedInfo(!0)
                            }
                        }
                    }
                ll()
            }
        },
        updateThreadParentMsgId: function(e, t) {
            var s = Xo(e);
            if (s) s.PARENTMSGUID = t;
            else {
                var i = {};
                i.PARENTMSGUID = t, i.CTYPE = ut.CTYPES.THREAD, i.CHATID = e, Bo.push(i)
            }
        },
        updateTitle: function(e, t) {
            var s = Xo(e);
            if (s) {
                s.TITLE = t, an.publish("/recentchats/updateui", ut.REQSTATUS.SUCCESS);
                var i = Qo(e);
                i && (i.TITLE = t)
            }
        },
        updateUnReadChats: nr,
        wrapUnreadFeedsObj: Zo,
        wrapUnreadObj: ar
    });

    function hr(e, t, s) {
        for (var i = {}, n = Al(e), a = n && n.currole, o = 0; o < t.length; o++) {
            var r = t[o],
                l = {};
            if (r.botId) {
                l.id = r.botId, l.title = r.dname;
                var d = r.current_config;
                d[0] === ut.BOTCONFIG.LISTENMSG && d[1] === ut.BOTCONFIG.SENDMSG || d[0] === ut.BOTCONFIG.SENDMSG && d[1] === ut.BOTCONFIG.LISTENMSG ? l.desc = re("botconfig.listenmsg.sendmsg") : d[0] === ut.BOTCONFIG.LISTENMSG ? l.desc = re("botconfig.listenmsg") : d[0] === ut.BOTCONFIG.SENDMSG && (l.desc = re("botconfig.sendmsg")), l.imgsrc = Ws(r.botId, r.photo_id), l.groupheader = re("channels.userroles.bot"), l.sortidentifier = ut.USERROLES.BOT, i[r.botId] = l
            } else if (r.zuid) {
                l.title = Ji(r.zuid, r.dname), un(r.zuid) && (l.title = re("chat.you")), l.desc = r.email || r.emailid, l.id = r.zuid, l.statuscode = pr(Js(r.zuid)), l.presence = r.presence;
                var c = r.zuid;
                if (void 0 !== WebMessanger && WebMessanger.isNetworkUser()) {
                    var u = c.split("-");
                    c = u[u.length - 1]
                }
                if (l.imgsrc = WmsUIImpl && WmsUIImpl.getUserPhoto(r.zuid) || oe.get("photoserver") + "/file?ID=" + c + "&t=user&exp=6000&fs=thumb", r.guest && (l.imgsrc = "/" + _CHATCONT + "/guestimg/" + r.zuid.slice(1) + "/photo.do"), l.classname = "wms_badge_imgwrapper", r.hasOwnProperty("role") && (l.groupheader = gr(r.role, e), l.sortidentifier = r.role), r.zuid === oe.get("zuid") || !s || void 0 !== r.role && r.role === a || (l.options = s(e, r.role)), r.email || r.emailid || r.zoid === oe.get("orgid") || r.guest || (l.desc = void 0 !== WmsSettings && WmsSettings.isEmailIDHidden() ? "" : $WC.I18N("chat.participant.nonorg")), null != Rs(r.zuid)) l.dname = Rs(r.zuid).DNAME, l.classname = "wms_badge_imgwrapper wms_badge_statusicon_" + Qs(r.zuid);
                else if (oe.get("presence_keys")) {
                    if (null != l.presence) {
                        var m = l.presence,
                            h = m.scode,
                            g = m.stype;
                        l.classname = "wms_badge_imgwrapper wms_badge_statusicon_" + Qs(r.zuid, h, g)
                    } else l.classname = "wms_badge_imgwrapper wms_badge_statusicon_offline";
                    r.zuid === oe.get("zuid") && (l.classname = "wms_badge_imgwrapper wms_badge_statusicon_" + Qs(r.zuid, oe.get("scode"), oe.get("stype")))
                }
                i[r.zuid] = l
            }
        }
        return i
    }

    function gr(e, t) {
        var s = Al(t);
        return e === ut.USERROLES.SUPER_ADMIN ? s && s.sc === ut.CHANNELS.ORG ? re("channels.userroles.orgadmin") : s && s.sc === ut.CHANNELS.TEAM ? re("channels.userroles.teamadmin") : re("channels.userroles.superadmin") : e === ut.USERROLES.ADMIN ? re("channels.userroles.admin") : e === ut.USERROLES.MODERATOR ? re("channels.userroles.moderator") : e === ut.USERROLES.PARTICIPANT ? re("channels.userroles.participant") : void 0
    }

    function pr(e) {
        return !1 === e ? ut.TEMPUSERSTATUS.ORGCONTACT : +e === Ts.ONLINE || +e === Ts.BUSY || +e === Ts.IDLE ? e : +e === Ts.OFFLINE ? ut.TEMPUSERSTATUS.OFFLINE : ut.TEMPUSERSTATUS.ORGCONTACT
    }

    function fr(e, t) {
        var s, i = e && e.sc;
        return "1" === i ? s = "orgchannel" : "2" === i ? s = "orggroup" : "3" === i ? s = "privatechannel" : "4" === i && (s = "shared-channel"), e ? e.photoid ? (t.imgsrc = oe.get("isUDSDownloadEnabled")() ? _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + e.photoid + "&x-cli-msg=" + encodeURIComponent('{"x-cliq-resource-module":"photos","type":"channel"}') : "/_chat/channel/" + e.photoid + "/photo.do", t.classname = "wms_badge_imgwrapper wms_channelimg_badge wms-" + s + "-small") : (t.empty_img = !0, t.classname = "wms_badge_imgwrapper wms_channelimg wms-" + s + "-small", t.fonticon_class = "wms_badge_imgwrapper wms_channelimg wms-" + s + "-small") : (t.badge_img = !0, t.badge_letter = "#"), t
    }

    function vr(e) {
        var t = Wn(e.CHATID),
            s = {};
        if (e._filtertype === ut.HYBRIDSEARCH.CHANNEL) s.title = e.dn, s.desc = e.cd, s.id = e.chid, s.pcount = e.pc, fr(e, s), s.filtertype = e._filtertype;
        else if (e._filtertype === ut.HYBRIDSEARCH.CHAT) {
            var i = Al(e.CHATID);
            if (t && i) fr(i, s), s.title = i.dn, s.htmldesc = Ur(e), s.id = i.chid, s.pcount = i.pc;
            else {
                if (s.title = e.TITLE, s.htmldesc = Ur(e), s.id = e.CHATID, s.pcount = e.PARTICIPANTSCOUNT, e.CHATID && wn(e.CHATID)) {
                    var n = Ss(e.CHATID);
                    s.imgsrc = Ws(n)
                } else Ar(e, !0) && 11 != e.CTYPE ? s.imgsrc = Ar(e, !0) : (s.badge_img = !0, s.badge_letter = Tr(e.TITLE));
                var a = Ar(e);
                Sn(e.CHATID) && (a = e.CHATID), s.classname = "wms_badge_imgwrapper wms_badge_statusicon_" + Qs(a)
            }
            s.filtertype = e._filtertype
        } else if (e._filtertype === ut.HYBRIDSEARCH.CONTACT || e._filtertype === ut.HYBRIDSEARCH.BOT || e._filtertype === ut.HYBRIDSEARCH.ORGCONTACT) s.title = Ji(e.USERID, e.DNAME), s.desc = e.EMAILID, s.id = e.USERID, e._filtertype === ut.HYBRIDSEARCH.CONTACT || e._filtertype === ut.HYBRIDSEARCH.ORGCONTACT ? s.imgsrc = WmsUIImpl.getUserPhoto(e.USERID) || _WMSPHOTOSERVER + "/file?ID=" + e.USERID + "&t=user&exp=6000&fs=thumb" : s.imgsrc = Ws(e.USERID), s.classname = "wms_badge_imgwrapper", Rs(e.USERID), s.classname = "wms_badge_imgwrapper wms_badge_statusicon_" + Qs(e.USERID), s.filtertype = e._filtertype;
        else if (s.title = e.TITLE, s.htmldesc = Ur(e), s.id = e.CHATID, s.pcount = e.PARTICIPANTSCOUNT, t) {
            var o = Al(e.CHATID);
            fr(o, s), s.title = o ? o.dn : e.TITLE, s.filtertype = e._filtertype
        } else {
            if (e.CHATID && wn(e.CHATID)) {
                var r = Ss(e.CHATID);
                s.imgsrc = Ws(r)
            } else Ar(e, !0) && 11 != e.CTYPE ? s.imgsrc = Ar(e, !0) : (s.badge_img = !0, s.badge_letter = Tr(e.TITLE));
            var l = Ar(e);
            Sn(e.CHATID) && (l = e.CHATID), s.classname = "wms_badge_imgwrapper wms_badge_statusicon_" + Qs(l)
        }
        return s
    }

    function Cr(e) {
        var t = "",
            s = "";
        if (Wn(e)) return fr(Al(e), {
            badge_letter: s
        });
        if (wn(e)) t = Ws(Ss(e));
        else if (Rs(e) || ft(e) || e == oe.get("zuid")) t = oi(e);
        else if (Xo(e) || So(e)) {
            var i = Xo(e) || So(e);
            i.PARTICIPANTS && 2 === i.PARTICIPANTS.length ? t = Ar(i, !0) : s = Tr(i.TITLE)
        } else t || Sn(e) || (t = oi(e));
        return {
            imgsrc: t,
            classname: "",
            badge_letter: s
        }
    }

    function br() {
        var e = {},
            t = 0,
            s = er();
        return s.length < 10 && (s = s.concat($r("", !1, null, ""))), s.forEach((function(s) {
            var i = vr(s);
            i.counter = t++, e[s.CHATID || s.USERID] = i
        })), e
    }
    an.subscribe("/orgcontacts/searchlist", (function(e, t) {
        jr("update", null, t.callbackargs.reqid, null, t.callbackargs.topicname, t.callbackargs)
    })), an.subscribe("/channels/searchlist", (function(e, t) {
        jr("update", null, t.callbackargs.reqid, null, t.callbackargs.topicname, t.callbackargs)
    })), an.subscribe("/chatlist/searchlist", (function(e, t) {
        jr("update", null, t.callbackargs.reqid, null, t.callbackargs.topicname, t.callbackargs)
    }));
    var yr = Object.freeze({
        __proto__: null,
        constructChannelImage: fr,
        fetchImageSource: Cr,
        getGroupHeader: gr,
        getRefinedChatslist: vr,
        getRefinedInitialChatsList: br,
        getRefinedParticipantsList: hr,
        getTempParticipantStatus: pr,
        showChatsList: function(e, t, s, i, n, a, o) {
            function r(r) {
                var l = br(),
                    d = new Fo,
                    c = i[0].onclick;
                i[0] = {
                    text: i[0].text || re("common.send"),
                    buttonstyle: "alignend",
                    onclick: function(e) {
                        c(e), d.unmountComponent()
                    }
                }, d.mountComponent(e, l, t, s, null, null, null, !0, !1, i, !0, Cr, !1, !0, null, null, null, null, d.unmountComponent, !0, n, r, a, o)
            }
            r(), Xo().length || an.subscribe("/recentchats/updatechatslistui", (function() {
                document.getElementById("wms_listviewdialog") && r(!0)
            }))
        }
    });

    function _r(e, t) {
        var s = Sr(e, t),
            i = "";
        return s && (i = '<div class="wms-img-badge ' + s + '"></div>'), i
    }

    function Wr(e, t) {
        var s = '<div class="wms-img-cont">';
        return s += t ? '<img class="wms-hysearch-result-img" src="' + t + '">' : '<img class="wms-hysearch-result-img" src="' + oi(e) + '">', s += _r(e, !1) + "</div>"
    }

    function Sr(e, t) {
        var s = Js(e),
            i = "";
        if (!1 !== s)
            if ((s = +s) === Ts.ONLINE ? i = t ? "wms-status-online" : "wms-pos-online" : s === Ts.BUSY ? i = t ? "wms-status-busy" : "wms-pos-busy" : s === Ts.IDLE ? i = t ? "wms-status-idle" : "wms-pos-idle" : s === Ts.AWAY ? i = t ? "wms-status-away" : "wms-pos-away" : s === Ts.DONOTDISTURB ? i = t ? " wms-status-dnd" : "wms-pos-dnd" : s === Ts.OFFLINE && (i = t ? "wms-status-offline" : "wms-pos-offline"), i) {
                var n = parseInt(Xs(e), 10);
                n === Ts.MOB_LOGIN && (i += "-mobile"), n == Ts.CLIQ_CALLS && (i = "wms-pos-busy-cliqcall"), n != Ts.MEETING && n != Ts.SHOWTIME_TRAINING || (i = "wms-pos-busy-meeting"), n != Ts.ASSIST_SESSION && n != Ts.TELEPHONY || (i += "-assistsession"), n == Ts.CALENDAR_EVENT && (i += "-calendarevent")
            } else ys(e) && (i = "wms-pos-bot");
        return i
    }
    var wr = Object.freeze({
        __proto__: null,
        createUserImageHtml: Wr,
        getStatusClass: Sr,
        getStatusHtml: _r
    });
    var Mr = {
        heading: "mc0ede5230_heading",
        header_wrapper: "mc0ede5230_header_wrapper",
        close_button: "mc0ede5230_close_button",
        msg_wrapper: "mc0ede5230_msg_wrapper",
        msg: "mc0ede5230_msg",
        msg_details: "mc0ede5230_msg_details",
        msgdetails_sender: "mc0ede5230_msgdetails_sender",
        msgdetails_time: "mc0ede5230_msgdetails_time",
        msg_content: "mc0ede5230_msg_content",
        zmNightMode: "zmNightMode",
        contact_operation_loader: "mc0ede5230_contact_operation_loader"
    };

    function Ir(e, t, s, i, n, a, o, r) {
        t = t.toLowerCase();
        var l = [];
        if (Rn(s)) l = s;
        else
            for (var d in s) l.push(s[d]);
        if (n) {
            var c = function(e) {
                var t = n[e];
                l = l.filter((function(s) {
                    var i;
                    return i = s[e] ? s[e] : Er(s), -1 == t.indexOf(i)
                }))
            };
            for (var u in n) c(u)
        }
        void 0 !== WmsSettings && WmsSettings.isEmailIDHidden() && ("EMAILID" === a || "email_id" === a || "desc" === a && l[0] && Be.check("emailid", l[0].desc)) && (a = "");
        var m = l.slice(0);

        function h(e) {
            var t = m.filter(e);
            return "UC" === (o = o || "UC") || "lmtime" === o ? t.sort(tn(o, !0, Number)) : t.sort(tn(o, !1, (function(e) {
                return e.toLowerCase()
            }))), t.forEach((function(e) {
                m.splice(m.indexOf(e), 1)
            })), t
        }
        var g, p = h((function(s) {
                var i = s[e];
                if (i && i.startsWith("#") && (i = i.substring(1)), i && i.toLowerCase().startsWith(t)) return !0
            })),
            f = h((function(e) {
                if (e[a] && e[a].toLowerCase() === t) return !0
            })),
            v = h((function(e) {
                if (e[a] && e[a].toLowerCase().startsWith(t)) return !0
            })),
            C = h((function(s) {
                if (s[e] && -1 !== s[e].toLowerCase().indexOf(" " + t)) return !0
            })),
            b = h((function(e) {
                if (e[a] && -1 !== e[a].toLowerCase().indexOf(" " + t)) return !0
            })),
            y = h((function(s) {
                if (s[e] && s[e].toLowerCase() === t) return !0
            })),
            _ = h((function(s) {
                var i = s[e];
                if (i) {
                    i = i.toLowerCase();
                    var n = t.toLowerCase().split(/[-~!@%&[\]/{}<>()*+?.,^$|:;'"#\s]/g).join(".*");
                    if (-1 !== i.search(new RegExp(n))) return !0
                }
            })),
            W = h((function(e) {
                var s = e[a];
                if (s) {
                    s = s.toLowerCase();
                    var i = t.toLowerCase().split(/[-~!@%&[\]/{}<>()*+?.,^$|:;'"#\s]/g).join(".*");
                    if (-1 !== s.search(new RegExp(i))) return !0
                }
            }));

        function S(e, t) {
            return e.map((function(e) {
                e._filterweight = t
            }))
        }
        return S(p, 1), S(f, 2), S(C, 3), S(y, 4), S(_, 5), S(v, 6), S(b, 7), S(W, 8), g = r ? p.concat(v) : p.concat(y, v, f, C, b, _, W), i ? g.slice(0, i) : g.slice(0)
    }

    function Tr(e) {
        e.startsWith("#") && (e = e.slice(1));
        var t = e.split(" "),
            s = "";
        return t && (s = t.length > 1 ? t[0].charAt(0) + t[1].charAt(0) : e.charAt(0)), Zi(s.toUpperCase())
    }

    function Ar(e, t) {
        var s = "",
            i = [];
        if (e.PARTICIPANTS)
            for (var n = 0; n < e.PARTICIPANTS.length; n++) e.PARTICIPANTS[n].zuid !== oe.get("zuid") && i.push(e.PARTICIPANTS[n].zuid);
        if (1 === i.length) return s = e.PHOTO ? e.PHOTO : oi(i[0]), t ? s : i[0]
    }

    function Er(e) {
        var t;
        return e.PARTICIPANTS && 2 == e.PARTICIPANTS.length ? t = e.PARTICIPANTS[0].zuid == oe.get("zuid") ? e.PARTICIPANTS[1].zuid : e.PARTICIPANTS[0].zuid : wn(e.CHATID) && (t = Ss(e.CHATID)), t || ""
    }

    function Ur(e) {
        if (e.LASTMSGINFO && e.LASTMSGINFO.msg) {
            var t = "";
            if (e.LASTMSGINFO.msg.__module && (e.LASTMSGINFO.__module = e.LASTMSGINFO.msg.__module), e.LASTMSGINFO.__module) {
                var s = un(e.LASTMSGINFO.sender);
                return "att" === e.LASTMSGINFO.__module ? t = s ? re("chat.file.shared.you") : re("chat.file.shared", Ji(e.LASTMSGINFO.sender, e.LASTMSGINFO.dname, !0)) : "contact" === e.LASTMSGINFO.__module ? t = s ? re("chat.contact.shared.you") : re("chat.contact.shared", Ji(e.LASTMSGINFO.sender, e.LASTMSGINFO.dname, !0)) : "location" === e.LASTMSGINFO.__module ? t = s ? re("chat.location.shared.you") : re("chat.location.shared", Ji(e.LASTMSGINFO.sender, e.LASTMSGINFO.dname, !0)) : "event" === e.LASTMSGINFO.__module && (t = s ? re("chat.event.shared.you") : re("chat.event.shared", Ji(e.LASTMSGINFO.sender, e.LASTMSGINFO.dname, !0))), t
            }
            if ("string" == typeof e.LASTMSGINFO.msg || "object" === n(e.LASTMSGINFO.msg) && e.LASTMSGINFO.msg.isedited)
                if (-1 !== e.LASTMSGINFO.msg.indexOf("<img")) t = re("chat.img");
                else if (-1 !== e.LASTMSGINFO.msg.indexOf("<hr>")) t = Zi(Ki(t = e.LASTMSGINFO.msg.replace(/<hr>/g, "---")));
            else {
                var i = e.LASTMSGINFO.msg.indexOf("<br>"),
                    a = e.LASTMSGINFO.msg.indexOf("\n");
                t = Rt(t = Zi(Ki(t = -1 !== i ? e.LASTMSGINFO.msg.substring(0, i) : -1 !== a ? e.LASTMSGINFO.msg.substring(0, a) : e.LASTMSGINFO.msg)));
                var o = on(e.LASTMSGINFO, !0);
                o.msg = t, t = Vt(t = o.meta && o.meta.mentions ? Qi(o, !0) : Qi(t)), t = Smiley.replace(t, !0), Be.check("customemoji", t) && (t = Be.replacer(Be.regexes.customemoji, null, t, (function(s) {
                    return s.endsWith("!$:") ? un(e.LASTMSGINFO.sender) ? re("chat.sticker.shared.you") : re("chat.sticker.shared", Ji(e.LASTMSGINFO.sender, e.LASTMSGINFO.dname, !0)) : "<span class='wms_menu_custom_emoji'>" + Smiley.replaceCustomEmoji(t) + "</span>"
                })))
            } else {
                if ("object" === n(e.LASTMSGINFO.msg) && "64" === e.LASTMSGINFO.mtype) {
                    var r = un(e.LASTMSGINFO.sender);
                    return t = r ? re("chat.file.shared.you") : re("chat.file.shared", Ji(e.LASTMSGINFO.sender, e.LASTMSGINFO.dname, !0))
                }
                if ("object" === n(e.LASTMSGINFO.msg) && ("16" === e.LASTMSGINFO.mtype || "65" === e.LASTMSGINFO.mtype)) return e.LASTMSGINFO.msg.chid = e.LASTMSGINFO.msg.chid || e.CHATID || e.chatid || "", sd(e.LASTMSGINFO.msg);
                if (e.LASTMSGINFO.isdeleted) return 1 == e.LASTMSGINFO.msg.info_visiblity ? '<span class="wms-delmsg">' + re("chat.info.deletemsg") + "</span>" : ""
            }
            return e.LASTMSGINFO.addinfo && e.LASTMSGINFO.addinfo.sender ? '<span class="wmsgrey">' + Zi(Ki(e.LASTMSGINFO.addinfo.sender.name)) + ": </span>" + t : "2" === e.PARTICIPANTSCOUNT && e.LASTMSGINFO.sender !== oe.get("zuid") ? t : un(e.LASTMSGINFO.sender) ? '<span class="wmsgrey">' + re("chat.you") + ": </span>" + t : e.LASTMSGINFO.meta && e.LASTMSGINFO.meta.usermessagedetails && e.LASTMSGINFO.meta.usermessagedetails.custom_sender_name ? '<span class="wmsgrey">' + Zi(Ki(e.LASTMSGINFO.meta.usermessagedetails.custom_sender_name)) + ": </span>" + t : '<span class="wmsgrey">' + Ji(e.LASTMSGINFO.sender, e.LASTMSGINFO.dname, !0) + ": </span>" + t
        }
        return e.LASTMSGINFO && "63" === e.LASTMSGINFO.mtype ? 1 == e.LASTMSGINFO.info_visiblity ? '<span class="wms-delmsg">' + re("chat.info.deletemsg") + "</span>" : "" : e.desc ? e.desc : ""
    }

    function kr(e, t, s, i, a) {
        var o = t;
        if (s = void 0 === n(s) || s, !o) {
            o = [];
            var r = [],
                l = Nr(e),
                d = l.map((function(e) {
                    var t = Er(e);
                    return t && r.push(t), e.CHATID
                })),
                c = xr(e, s, d = {
                    CHATID: d
                }),
                u = c.map((function(e) {
                    var t = Er(e);
                    return t && r.push(t), e.CHATID
                }));
            r = {
                USERID: r
            }, i && -1 === i.indexOf(ut.HYBRIDSEARCH.CHAT) && (r = {});
            var m = oe.get("iscontacts_listing_disabled"),
                h = m ? [] : Dr(e, !1, r, i),
                g = h.map((function(e) {
                    return e.USERID
                }));
            g = {
                USERID: g.concat(r.USERID)
            }, d = {
                chid: d.CHATID.concat(u)
            };
            var p = [],
                f = !!(document.getElementById("wms-fileupldwin") || i && -1 !== i.indexOf($WC.WmsConstants.HYBRIDSEARCH.JOINEDCHANNEL)),
                v = m ? [] : Lr(e, !1, g);
            if (i) {
                if (-1 !== i.indexOf(ut.HYBRIDSEARCH.CONTACT) && (o = o.concat(h)), -1 !== i.indexOf(ut.HYBRIDSEARCH.ORGCONTACT) && (o = h.concat(Lr(e, !1, g), o)), -1 !== i.indexOf($WC.WmsConstants.HYBRIDSEARCH.CHAT) && (o = o.concat(l, c)), -1 !== i.indexOf($WC.WmsConstants.HYBRIDSEARCH.CHANNEL) || -1 !== i.indexOf($WC.WmsConstants.HYBRIDSEARCH.JOINEDCHANNEL)) {
                    var C = -1 !== i.indexOf($WC.WmsConstants.HYBRIDSEARCH.CHAT);
                    o = o.concat(Br(e, null, f, C ? d : ""))
                } - 1 !== i.indexOf($WC.WmsConstants.HYBRIDSEARCH.BOT) && (o = o.concat(p))
            } else o = h.concat(v, p, l, c, Br(e, null, f, d))
        }
        var b = o.filter((function(e) {
                return 1 === e._filterweight
            })),
            y = o.filter((function(e) {
                return 2 === e._filterweight
            })),
            _ = o.filter((function(e) {
                return 3 === e._filterweight
            })),
            W = o.filter((function(e) {
                return 4 === e._filterweight
            }));
        o.filter((function(e) {
            return 5 === e._filterweight
        }));
        var S = o.filter((function(e) {
                return 6 === e._filterweight
            })),
            w = o.filter((function(e) {
                return 7 === e._filterweight
            }));
        o.filter((function(e) {
            return 8 === e._filterweight
        }));
        var M = [ut.HYBRIDSEARCH.CHAT, ut.HYBRIDSEARCH.CONTACT, ut.HYBRIDSEARCH.BOT, ut.HYBRIDSEARCH.ORGCONTACT, ut.HYBRIDSEARCH.CHANNEL],
            I = {};

        function T(e, t) {
            if (e._filtertype === t._filtertype) {
                if (!(e._filtertype !== ut.HYBRIDSEARCH.CONTACT && e._filtertype !== ut.HYBRIDSEARCH.ORGCONTACT || t._filtertype !== ut.HYBRIDSEARCH.CONTACT && t._filtertype !== ut.HYBRIDSEARCH.ORGCONTACT)) return +t.UC - +e.UC;
                if (e._filtertype === ut.HYBRIDSEARCH.CHAT && t._filtertype === ut.HYBRIDSEARCH.CHAT) return +t.LMTIME - +e.LMTIME;
                var s = e[I[e._filtertype]].toLowerCase(),
                    i = t[I[t._filtertype]].toLowerCase();
                return s < i ? -1 : s > i ? 1 : 0
            }
            return M.indexOf(e._filtertype) - M.indexOf(t._filtertype)
        }
        return I[ut.HYBRIDSEARCH.ORGCONTACT] = "DNAME", I[ut.HYBRIDSEARCH.BOT] = "DNAME", I[ut.HYBRIDSEARCH.GROUP] = "NAME", I[ut.HYBRIDSEARCH.CHANNEL] = "cn", a ? b.sort(T).concat(S.sort(T)) : b.sort(T).concat(W.sort(T), S.sort(T), y.sort(T), _.sort(T), w.sort(T))
    }

    function Nr(e) {
        var t = Ir("TITLE", e, rr(e), 10);
        return t.sort(tn("LMTIME", !0)), t.map((function(e) {
            return e._filtertype = ut.HYBRIDSEARCH.CHAT, e
        }))
    }

    function xr(e, t, s) {
        if (s = s || {}, t) {
            var i = In(Or("searchresultdiv").querySelectorAll("[data-type='" + ut.HYBRIDSEARCH.CHAT + "'],[data-type='" + ut.HYBRIDSEARCH.CONTACT + "'],[data-type='" + ut.HYBRIDSEARCH.ORGCONTACT + "'],[data-type='" + ut.HYBRIDSEARCH.BOT + "']")),
                n = 0,
                a = "";
            if (i.length)
                for (n = 0; n < i.length; n++) s[a = i[n].getAttribute("data-type") == ut.HYBRIDSEARCH.CHAT ? "CHATID" : "USERID"] = s[a] || [], s[a].push(i[n].getAttribute("data-id"))
        }
        var o = Ir("TITLE", e, So(), 10, s);
        return oe.get("iscontacts_listing_disabled") && 0 != o.length && (o = o.filter((function(e) {
            if (1 != e.CTYPE) return !0
        }))), o.sort(tn("LMTIME", !0)), o.map((function(e) {
            return e._filtertype = ut.HYBRIDSEARCH.CHAT, e
        }))
    }

    function Or(e, t) {
        var s, i = {
            mainUI: "wms-hysearch",
            inputcontainer: "wms-hysearch-inpcontainer",
            inputdiv: "wms-hysearch-actualinp",
            defaultresultdiv: "wms-hysearch-defrescont",
            freqcontactsdiv: "wms-hysearch-fcontacts",
            infomsgdiv: "wms-hysearch-infomsg",
            loadingstatus: "wms-hysearch-loadstatus",
            recentchatsdiv: "wms-hysearch-rchats",
            resultcontainer: "wms-hysearch-rescont",
            searchresultdiv: "wms-hysearch-searchres",
            thirdcolumn: "wms-hysearch-thirdcol",
            thirdcolumnheading: "wms-hysearch-thirdcolheading",
            fakeinput: "wms-fakeinput"
        };
        return s = (t = t || Rr()) === ut.HYBRIDSEARCH.modules.SMARTCHAT ? i : t === ut.HYBRIDSEARCH.modules.CONTACTMENU ? {
            inputdiv: "wms_menu_search",
            resultcontainer: "wms_menu_contactlist",
            defaultresultdiv: "wms_menu_contactlist_def",
            searchresultdiv: "wms_menu_contactlist_searchres",
            inputcontainer: "wms_menu_search",
            loadingstatus: "wms-contact-loadstatus"
        } : t === ut.HYBRIDSEARCH.modules.GROUPMENU ? {
            inputdiv: "wms_menu_search",
            resultcontainer: "wms_menu_grouplist",
            defaultresultdiv: "wms_menu_grouplist_def",
            searchresultdiv: "wms_menu_grouplist_searchres",
            inputcontainer: "wms_menu_search",
            loadingstatus: "wms-channel-loadstatus"
        } : t === ut.HYBRIDSEARCH.modules.CHATMENU ? {
            inputdiv: "wms_menu_search",
            resultcontainer: "wms_menu_chatlist",
            defaultresultdiv: "wms_menu_chatlist_def",
            searchresultdiv: "wms_menu_chatlist_searchres",
            recentchatdiv: "wms_menu_chatlist_def",
            recentchatsdiv: "wms_menu_chatlist_recentchats",
            inputcontainer: "wms_menu_search",
            loadingstatus: "wms-chat-loadstatus",
            recentchatswelcomemsg: "wms_welcome_recentchatsmsg"
        } : t === ut.HYBRIDSEARCH.modules.CUSTOMCONTACTMENU ? {
            inputdiv: "wms_menu_search",
            resultcontainer: "wms_menu_customcontactlist",
            defaultresultdiv: "wms_menu_customcontactlist_def",
            searchresultdiv: "wms_menu_customcontactlist_searchres",
            inputcontainer: "wms_menu_search",
            loadingstatus: "wms-customcontact-loadstatus"
        } : t === ut.HYBRIDSEARCH.modules.FILEFWD ? {
            searchresultdiv: "wms-filefrwrdautocomplete",
            inputcontainer: "wms-filefrwrdrecipant",
            inputdiv: "wms-filefrwrdrecipant",
            loadingstatus: "wms-filefwd-loadstatus"
        } : i, document.getElementById(s[e])
    }

    function Rr() {
        var e = document.getElementById("wms-hysearch"),
            t = document.getElementById("wms-filefrwrdautocomplete");
        if (e) return ut.HYBRIDSEARCH.modules.SMARTCHAT;
        if (t) return ut.HYBRIDSEARCH.modules.FILEFWD;
        var s = document.getElementById("wms_menu_listcontainer");
        if (s) {
            var i = s.querySelector("[data-selected=true]");
            if (i) {
                var n = i.getAttribute("data-menuname");
                if ("contact" === n) return ut.HYBRIDSEARCH.modules.CONTACTMENU;
                if ("channel" === n) return ut.HYBRIDSEARCH.modules.GROUPMENU;
                if ("chat" === n) return ut.HYBRIDSEARCH.modules.CHATMENU;
                if ("customcontact" === n) return ut.HYBRIDSEARCH.modules.CUSTOMCONTACTMENU
            }
        }
    }

    function Dr(e, t, s, i) {
        var n, a, o = [];
        s = s || {
            USERID: []
        };
        var r = 0;
        if (t) {
            var l = xs();
            for (r = 0; r < l.length; r++) {
                s.USERID.push(l[r]);
                var d = Rs(l[r]);
                d && o.push(d)
            }
            n = Ir("DNAME", "", Rs(), null, s, "EMAILID"), a = Ir("DNAME", "", bs(!0), null, s, "EMAILID")
        } else {
            var c = Or("inputcontainer") && Or("inputcontainer").querySelectorAll("[data-type='user']");
            if (c && c.length)
                for (r = 0; r < c.length; r++) s.USERID.push(c[r].getAttribute("data-id"));
            n = Ir("DNAME", e, Rs(), 10, s, "EMAILID"), a = Ir("DNAME", e, bs(!0), 10, s, "EMAILID")
        }
        return n = o.concat(n), i && -1 === i.indexOf(ut.HYBRIDSEARCH.BOT) || (n = n.concat(a)), n.map((function(e) {
            return e.ISBOT ? e._filtertype = ut.HYBRIDSEARCH.BOT : e._filtertype = ut.HYBRIDSEARCH.CONTACT, e
        }))
    }

    function $r(e, t, s, i) {
        return Dr(e, t, s, i).filter((function(e) {
            if (!e.ISBOT) return !0
        }))
    }

    function Hr(e, t) {
        return []
    }

    function Lr(e, t, s, i) {
        if (!e && !i) return [];
        if ((s = s || {
                USERID: []
            }).USERID.push(oe.get("zuid")), t) {
            var n = In(Or("inputcontainer").querySelectorAll("[data-type='user']")),
                a = 0;
            if ((n = n.concat(In(Or("searchresultdiv").querySelectorAll("[data-type='" + ut.HYBRIDSEARCH.CONTACT + "'],[data-type='" + ut.HYBRIDSEARCH.ORGCONTACT + "'],[data-userid]")))).length)
                for (a = 0; a < n.length; a++) n[a].getAttribute("data-userid") ? s.USERID.push(n[a].getAttribute("data-userid")) : s.USERID.push(n[a].getAttribute("data-id"))
        }
        return Ir("DNAME", e, ft(), 10, s, "EMAILID").map((function(e) {
            return e._filtertype = ut.HYBRIDSEARCH.ORGCONTACT, e
        }))
    }
    var Pr, Fr = (Pr = Mn((function(e) {
        for (var t = [], s = 0; s < e.length; s++) null == ei(e[s].USERID) && t.push(e[s].USERID);
        if (0 !== t.length && null != _WMSAPPACCOUNTID) {
            var i = "company/" + _WMSAPPACCOUNTID + "/v2/presence",
                n = "user_ids=" + t.toString();
            null != oe.get("presence_keys") && Xe(i, n, (function(e) {
                var t = JSON.parse(e).data;
                for (var s in t)
                    if (ft(s)) {
                        var i = t[s].scode,
                            n = t[s].stype,
                            a = t[s].smsg;
                        ft(s).expiry_time = (new Date).getTime() + 12e4, si(s, i, n, a)
                    }
            }))
        }
    }), null, 500), function(e) {
        for (var t = [], s = (new Date).getTime(), i = 0; i < e.length; i++)
            if (ft(e[i].USERID)) {
                var n = ft(e[i].USERID).expiry_time;
                null != n ? n <= s && t.push(e[i]) : t.push(e[i])
            }
        0 !== t.length && Pr(t)
    });

    function Br(e, t, s, i) {
        i = i || {
            chid: []
        };
        var n, a = [],
            o = s ? null : 10,
            r = zr();
        if (r && (r.startsWith("@") ? n = "@" : r.startsWith("#") && (n = "#"), r.indexOf("@") > -1 && r.indexOf("#") > -1 && (n = "@#")), t) {
            var l = In(Or("searchresultdiv").querySelectorAll("[data-type='" + ut.HYBRIDSEARCH.CHANNEL + "'],[data-type='" + ut.HYBRIDSEARCH.CHAT + "']")),
                d = 0;
            if (l.length)
                for (d = 0; d < l.length; d++) i.chid.push(l[d].getAttribute("data-id"))
        }
        if (s) a = Dl(e, !0);
        else if ("@" === n) a = $l(e);
        else if ("#" === n) a = Hl(e);
        else if ("@#" === n) {
            var c, u, m = e.split(/@|#/);
            r.startsWith("@") ? (c = m[0], u = m[1]) : r.startsWith("#") && (c = m[1], u = m[0]), a = Ll(c, u), e = void 0 !== u ? u : ""
        } else a = Dl(e);
        return Ir("cn", e, a, o, i, "_teamname", "lmtime").map((function(e) {
            return e._filtertype = ut.HYBRIDSEARCH.CHANNEL, e
        }))
    }
    var jr = function() {
        var e = [ut.HYBRIDSEARCH.ORGCONTACT, ut.HYBRIDSEARCH.CHANNEL, ut.HYBRIDSEARCH.CHAT],
            t = [ut.HYBRIDSEARCH.ORGCONTACT, ut.HYBRIDSEARCH.CHAT],
            s = {};

        function i(e, t) {
            return !!(s[e] && void 0 !== s[e].seqno && s[e].seqno < t.length)
        }

        function n(e, t) {
            return !s[e] || void 0 === s[e].seqno || s[e].seqno >= t.length
        }
        return function(a, o, r, l, d, c, u, m, h) {
            r = r || (new Date).getTime(), d = d || "updateui";
            var g = e,
                p = void 0 !== WebMessanger && WebMessanger.isNetworkUser();
            if ((oe.get("isOrgUser")() || p) && "disable" != oe.get("channels") && ds("channels") || (g = t), oe.get("isOrgUser")() || p || -1 == g.indexOf(ut.HYBRIDSEARCH.ORGCONTACT) || g.splice(g.indexOf(ut.HYBRIDSEARCH.ORGCONTACT), 1), s[r]) void 0 !== s[r].sequence && (g = s[r].sequence), void 0 !== s[r].seqno ? (o = g[s[r].seqno], "update" === a && i(r, g) && s[r].seqno++) : o = s[r].type;
            else if (s[r] = {}, s[r].sequence = u || g, s[r].updateCallback = m, g = s[r].sequence, l && (o ? s[r].seqno = g.indexOf(o) : (s[r].seqno = 0, o = g[0])), s[r].type = o, Object.keys(s).length > 50) {
                var f = (new Date).getTime() - 18e5;
                Object.keys(s).forEach((function(e) {
                    e < f && delete s[e]
                }))
            }
            if ("fetch" === a) o === ut.HYBRIDSEARCH.JOINEDCHANNEL ? Dl(c.searchtext, !0).length > 10 ? jr("update", o, r, l, d, c, u, m) : jr("fetch", ut.HYBRIDSEARCH.CHANNEL, null, !1, d, c, [ut.HYBRIDSEARCH.JOINEDCHANNEL, ut.HYBRIDSEARCH.CHANNEL], s[r] && s[r].updateCallback) : !1 === Jr(o, r, c) && "updateui" == d && (o !== ut.HYBRIDSEARCH.ORGCONTACT || oe.get("isOrgUser")() ? Qr(Or("searchresultdiv"), ut.REQSTATUS.LOADING, "search") : Yr() ? Qr(Or("searchresultdiv"), ut.REQSTATUS.SUCCESS, "search") : Or("searchresultdiv") && 0 === Or("searchresultdiv").children.length && zr() && Qr(Or("searchresultdiv"), ut.REQSTATUS.NORESULTS, "search"));
            else if ("update" === a) {
                if ("updateui" == d) {
                    var v, C = qr(o);
                    if (C && C.length) {
                        if (h && 0 != h.length) {
                            var b = [];
                            h.filter((function(e) {
                                b.push(e.USERID)
                            })), C = Ir("DNAME", zr(), C, null, {
                                USERID: b
                            }, "EMAILID", "UC", !1)
                        }
                        Qr(Or("searchresultdiv"), ut.REQSTATUS.SUCCESS, "search"), v = el(C), Or("searchresultdiv").insertAdjacentHTML("beforeend", v), void 0 !== WmsMainUI && Nn(Or("searchresultdiv", Rr())), !Or("searchresultdiv").getElementsByClassName("wms-hysearch-result-select").length && Or("searchresultdiv").querySelector("[data-type]") && Kr(Or("searchresultdiv").querySelector("[data-type]"))
                    } else Yr();
                    n(r, g) && (Qr(Or("searchresultdiv"), ut.REQSTATUS.SUCCESS, "search"), Or("searchresultdiv") && 0 === Or("searchresultdiv").children.length && zr() && Qr(Or("searchresultdiv"), ut.REQSTATUS.NORESULTS, "search")), i(r, g) && Or("searchresultdiv") && Or("searchresultdiv").children.length < 10 && jr("fetch", null, r)
                } else if ("searchlist" == d) {
                    rl(c, n(r, g), s[r].updateCallback, s[r].sequence) && i(r, g) && jr("fetch", null, r, !0, d, c)
                }
            } else "failureupdate" === a && zr() && (Yr() ? Qr(Or("searchresultdiv"), ut.REQSTATUS.SUCCESS, "search") : (Qr(Or("searchresultdiv"), ut.REQSTATUS.FAILED, "search", Zr), Or("loadingstatus").setAttribute("data-reqid", r)))
        }
    }();

    function zr() {
        var e = Or("inputdiv");
        return e && (e.value && e.value.trim() || e.textContent.trim()) || ""
    }
    var Gr, qr = ((Gr = {})[ut.HYBRIDSEARCH.ORGCONTACT] = Lr, Gr[ut.HYBRIDSEARCH.CHAT] = xr, Gr[ut.HYBRIDSEARCH.CHANNEL] = Br, function(e) {
        var t, s = Vr();
        if (1 == e && document.getElementById("wms-fileupldwin") && (t = !0), "" !== s && e) return Gr[e](s, !0, t)
    });

    function Vr() {
        var e = zr();
        return e = e && (e.startsWith("@") || e.startsWith("#")) ? e.slice(1) : e
    }

    function Yr() {
        var e = zr(),
            t = Rr(),
            s = "";
        if (Be.check("emailid", e, !0) && (t === ut.HYBRIDSEARCH.modules.CONTACTMENU || t === ut.HYBRIDSEARCH.modules.SMARTCHAT) && "disable" != oe.get("other_orguser_chat")) return An(Or("searchresultdiv").querySelector('[data-operation="addcontact"]')), s = yi(s = t === ut.HYBRIDSEARCH.modules.CONTACTMENU ? '<div class="wms_menu_item wms_menu_addcontact" data-operation="addcontact" data-dname="{{searchtext}}" data-type="3">' + tl("", ut.HYBRIDSEARCH.CONTACT) + '<div class="wms_menu_item_name wms-truncate-ellipsis" title="{{searchtext}}">{{searchtext}}</div><div class="wms_menu_item_msg wms-truncate-ellipsis">' + re("contact.invite") + '</div><span data-addcontact="true" class="wms_menu_addicon wms-valign-mid-block"></span></div>' : '<div class="wms_hysearch_invite" data-operation="addcontact" data-email="{{searchtext}}">' + sl("", e, re("contact.invite"), null, null, ut.HYBRIDSEARCH.ADDCONTACT, null, null, null, ut.HYBRIDSEARCH.modules.SMARTCHAT) + '<div class="wms_hysearch_addicon wms-valign-mid-block" data-addcontact="true" data-type="' + ut.HYBRIDSEARCH.ADDCONTACT + '"></div></div>', {
            searchtext: e
        }), Or("searchresultdiv").insertAdjacentHTML("beforeend", s), !0
    }

    function Zr() {
        jr("fetch", null, Or("loadingstatus").getAttribute("data-reqid"))
    }

    function Kr(e) {
        e.getAttribute("data-type") && (Xr(), kn(e, "data-select", !0), En(e, "wms-hysearch-result-select"))
    }

    function Xr() {
        var e, t = Or("resultcontainer");
        (e = Or("searchresultdiv") && "block" === getComputedStyle(Or("searchresultdiv")).display ? Or("searchresultdiv").getElementsByClassName("wms-hysearch-result-select")[0] : t && t.getElementsByClassName("wms-hysearch-result-select")[0]) && (Un(e, "wms-hysearch-result-select"), e.removeAttribute("data-select"))
    }
    var Jr = function() {
        var e = Mn((function(e, t, s) {
            s = s || Vr(), e === ut.HYBRIDSEARCH.ORGCONTACT ? Wt(s, t) : e === ut.HYBRIDSEARCH.CHAT ? Ao(s, t) : e === ut.HYBRIDSEARCH.CHANNEL && Bl(s, t)
        }), this, 300);
        return function(t, s, i) {
            return i = i || {
                searchtext: Vr()
            }, e(t, s, i), t === ut.HYBRIDSEARCH.ORGCONTACT ? St(i) : t === ut.HYBRIDSEARCH.CHAT ? Io(i) : t === ut.HYBRIDSEARCH.CHANNEL ? Pl(i) : void 0
        }
    }();

    function Qr(e, t, s, i, n) {
        var a = {
            chat: {},
            search: {}
        };
        a.search[ut.REQSTATUS.NORESULTS] = re("search.noresult"), a.search[ut.REQSTATUS.FAILED] = re("search.failed"), a.chat[ut.REQSTATUS.NORESULTS] = re("chat.noresult"), a.chat[ut.REQSTATUS.FAILED] = re("chat.retrievefailed");
        var o = e ? e.getElementsByClassName("wms-hysearch-loadstatus")[0] : "";
        o && (o.onclick = null);
        var r = "",
            l = "",
            d = "wms-hysearch-loadstatus";
        if ((n = n || Rr()) === ut.HYBRIDSEARCH.modules.FILEFWD ? d = "wms-filefwd-loadstatus" : n === ut.HYBRIDSEARCH.modules.CHATMENU ? d = "wms-chat-loadstatus" : n === ut.HYBRIDSEARCH.modules.CONTACTMENU ? d = "wms-contact-loadstatus" : n === ut.HYBRIDSEARCH.modules.GROUPMENU ? d = "wms-channel-loadstatus" : n === ut.HYBRIDSEARCH.modules.CUSTOMCONTACTMENU && (d = "wms-customcontact-loadstatus"), t !== ut.REQSTATUS.SUCCESS) {
            if (t === ut.REQSTATUS.NORESULTS) "chat" === s && n === ut.HYBRIDSEARCH.modules.CHATMENU ? Xo() && Xo().length || Yo() ? r = '<div class="wms-hysearch-infotxt wms-hvalign">' + a[s][ut.REQSTATUS.NORESULTS] + "</div>" : (An(Or("recentchatswelcomemsg", n)), l = '<div id="wms_welcome_recentchatsmsg"><div class="wms-welcome-img wms-welcome-recentchatsimg wms-halign"></div><div class="wms-welcome-msg wms-halign">' + re("recentchats.welcomemessage", ['<span data-menuredirect="contact">' + re("chat.contact") + "</span>", '<span data-menuredirect="channel">' + re("chat.channel") + "</span>"]) + "</div></div></div>") : !o && e && "wms-hysearch-rchats" === e.id && n === ut.HYBRIDSEARCH.modules.SMARTCHAT && "chat" === s ? (e.getElementsByClassName("wms-hysearch-infotxt")[0] && An(e.getElementsByClassName("wms-hysearch-infotxt")[0]), l = '<span id="' + d + '" class="wms-hysearch-infotxt">' + a[s][ut.REQSTATUS.NORESULTS] + "</span>") : r = '<div class="wms-hysearch-error-info wms-hvalign"><img class="wms-hysearch-error-img" src="' + $WC.Config.get("staticserverpath") + '/images/bar/a9c2d1f2_search_empty.svg"><div class="wms-hysearch-infotxt"><div class="wms-hysearch-infotext-1">' + re("search.noresult") + '</div><div class="wms-hysearch-infotext-2">' + re("search.again") + "</div></div>";
            else if (t === ut.REQSTATUS.LOADING) r = '<div class="wms_loading_container wms-hvalign"><div></div><div></div><div></div></div>';
            else if (t === ut.REQSTATUS.FAILED) {
                if ("chat" == s && !rr().length && n === ut.HYBRIDSEARCH.modules.CHATMENU) An(Or("recentchatswelcomemsg", n));
                l = '<div id="' + d + '" class="wms-hysearch-loadstatus" data-retry="true" data-type="' + ut.REQSTATUS.FAILED + '"><div class="wms-hysearch-infotxt wms-hvalign">' + a[s][ut.REQSTATUS.FAILED] + '<span class="wms-hysearch-retry-text"> ' + re("suggestions.retry") + "</span></div></div>"
            }
            l = l || '<div id="' + d + '" class="wms-hysearch-loadstatus wms-nonselectable" data-type="' + t + '">' + r + "</div>", o ? o.outerHTML = l : e && (n !== ut.HYBRIDSEARCH.modules.CHATMENU || Xo() && Xo().length || Yo() || e.children.length ? e.insertAdjacentHTML("beforeend", l) : e.innerHTML = l), t === ut.REQSTATUS.FAILED && (Or("loadingstatus").onclick = i)
        } else An(o)
    }

    function el(e, t) {
        for (var s, i, n = "", a = Or("inputcontainer") && Or("inputcontainer").querySelector("[data-type='topic']"), o = 0; o < e.length; o++)
            if (i = nl((s = e[o])._filtertype, a), s._filtertype === ut.HYBRIDSEARCH.BOT) n += sl(s.USERID, s.DNAME, Zi(Ki(s.STATUSMSG)), Ws(s.USERID), i, ut.HYBRIDSEARCH.BOT, null, null, s, t);
            else if (s._filtertype === ut.HYBRIDSEARCH.CONTACT) s.id ? n += sl(s.id, s.name, Zi(Ki(s.statusMsg)), s.photo, null, ut.HYBRIDSEARCH.CONTACT, null, null, s, t) : n += sl(s.USERID, s.DNAME, Zi(Ki(al(s))), null, i, ut.HYBRIDSEARCH.CONTACT, null, null, null, t);
        else if (s._filtertype === ut.HYBRIDSEARCH.ORGCONTACT) n += sl(s.USERID, s.DNAME, s.EMAILID, null, i, ut.HYBRIDSEARCH.ORGCONTACT, null, null, null, t);
        else if (s._filtertype === ut.HYBRIDSEARCH.GROUP) n += sl(s.ID, s.NAME, s.DESC, null, i, ut.HYBRIDSEARCH.GROUP, null, null, null, t);
        else if (s._filtertype === ut.HYBRIDSEARCH.CHANNEL) i = zl(s.chid) ? nl(ut.HYBRIDSEARCH.CHAT, a) : i, n += sl(s.chid, Gl(s.chid), Zi(s.cd), jl(s.chid), i, ut.HYBRIDSEARCH.CHANNEL, null, null, null, t, s.oc_id);
        else if (s._filtertype === ut.HYBRIDSEARCH.CHAT) {
            var r = s.TITLE;
            Wn(s.CHATID) && (r = Gl(s.CHATID) || r), n += sl(s.CHATID, r, Ur(s), ol(s), i, ut.HYBRIDSEARCH.CHAT, s.LMTIME, "", s, t)
        }
        return n
    }

    function tl(e, t, s, i) {
        var n, a = t,
            o = "",
            r = "none";
        if (s && (s.CUSTOMGROUP || "true" == s.CUSTOMGROUP) && "false" != s.CUSTOMGROUP && (i = !0), a === ut.HYBRIDSEARCH.CHAT && !s.SALESIQCHAT)
            if (!Wn(e) || wn(e) || s.FEEDSID)
                if (wn(e)) {
                    var l = Ss(s.CHATID);
                    a = ut.HYBRIDSEARCH.BOT, e = l, o = '<img data-zcprofileid="b-' + l + '" src="' + Ws(l) + '">'
                } else Sn(e) ? a = ut.HYBRIDSEARCH.THREAD : !i && s && s.PARTICIPANTS && 2 == s.PARTICIPANTS.length && 10 !== s.CTYPE && (e = s.PARTICIPANTS[0].zuid === oe.get("zuid") ? s.PARTICIPANTS[1].zuid : s.PARTICIPANTS[0].zuid, a = ut.HYBRIDSEARCH.ORGCONTACT, void 0 !== WmsMainUI && WmsMainUI.setZuidForPrivateChat(s.CHATID, e));
        else a = ut.HYBRIDSEARCH.CHANNEL;
        if (a === ut.HYBRIDSEARCH.CONTACT || a === ut.HYBRIDSEARCH.ORGCONTACT || a === ut.HYBRIDSEARCH.BOT) n = a === ut.HYBRIDSEARCH.BOT ? e ? Ws(e) : "" : e ? oi(e) : "", o = On(e) ? '<img data-zcprofileid="' + e + '" src="' + n + '">' : '<div class="wms_menu_item_img wms_contacticon" data-imgid="' + e + '" data-originalsrc="' + n + '"></div>', r = Qs(e);
        else {
            if (a === ut.HYBRIDSEARCH.CHANNEL) return jl(e);
            a === ut.HYBRIDSEARCH.THREAD ? (o = '<span class="wms_badge_letter">' + Tr(s.TITLE) + "</span>", r = Qs(e)) : s && s.FEEDSID ? o = '<span class="wms_badge_letter"><span class="wms_notifyicon"></span></span>' : "string" == typeof s.TITLE && s.TITLE.length && (o = '<span class="wms_badge_letter">' + Tr(s.TITLE) + "</span>")
        }
        return '<span class="wms_badge_imgwrapper wms_badge_statusicon_' + r + '">' + o + '<span class="wms_badge_statusicon_' + r + '_cutout wms_badge_img_cutout" data-cutouticon="true"></span></span>'
    }

    function sl(e, t, s, i, n, a, o, r, l, d, c) {
        d = d || Rr(), a === ut.HYBRIDSEARCH.CHAT && Wn(e) && !wn(e) ? i = jl(e) : (a === ut.HYBRIDSEARCH.BOT && l && (i = Wr(e, Ws(l.USERID))), i = i || Wr(e)), Be.check("emailid", s) && void 0 !== WmsSettings && WmsSettings.isEmailIDHidden() && (s = ""), a === ut.HYBRIDSEARCH.CHANNEL && (s = s || re("channel.nodescription")), t = Ki(t);
        var u = n ? '<span class="wms-hysearch-deschint">' + Zi(n) + "</span>" : "",
            m = e ? "data-id={{id}} " : "";
        if (m += c ? "data-oc_id={{oc_id}}" : "", a === ut.HYBRIDSEARCH.TITLEHINT) return yi('<div class="wms-hysearch-result" data-type="{{type}}"' + m + ">" + i + '<div class="wms-hysearch-result-hint wms-truncate-ellipsis">' + fl(t) + "</div></div>", {
            id: e,
            type: a
        });
        if (a === ut.HYBRIDSEARCH.MESSAGEHINT) return yi('<div class="wms-hysearch-result"  data-type="{{type}}"' + m + ">" + i + '<div class="wms-hysearch-result-hint wms-truncate-ellipsis">' + re("hint.openchatandsendmessage", "<span>" + Zi(t) + "</span>") + "</div></div>", {
            id: e,
            type: a,
            name: t
        });
        if (d === ut.HYBRIDSEARCH.modules.SMARTCHAT) {
            var h = "";
            if (a === ut.HYBRIDSEARCH.CHAT && void 0 !== WmsMainUI) {
                var g = WmsMainUI.getUnreadCount(e);
                if (Wn(e) && (g = WmsMainUI.getUnreadCount(e, null, null, !0)), Sn(e) && (g = WmsMainUI.getUnreadCount(ra(e), null, e)), g) h = '<span style="display:flex" class="wms_menu_item_count" data-unreadcount=true title="' + g + '">' + (g > 99 ? "99+" : g) + "</span>";
                else h = '<span class="wms_menu_item_count" data-unreadcount=true></span>';
                WmsMainUI.getMuteStatus(e) && (m += ' data-muted="true" ')
            }
            var p = '<div class="wms-hysearch-result-desc wms-truncate-ellipsis">' + s + "</div>",
                f = "";
            return "" === s && (p = "", f = " wms-valign-center"), yi('<div class="wms-hysearch-result"  data-type="{{type}}"' + m + ">" + i + '<div class="wms-hysearch-result-name wms-truncate-ellipsis' + f + '">{{name}}</div>' + p + h + u + "</div>", {
                id: e,
                name: Ki(t || Ji(e, t)),
                type: a,
                oc_id: c
            })
        }
        return il(e, t, s, i, a, o, r, l)
    }

    function il(e, t, s, i, n, a, o, r) {
        var l, d, c, u = "wms_menu_item",
            m = "",
            h = "",
            g = "",
            p = "",
            f = "",
            v = "",
            C = "",
            b = "";
        if (a) {
            var y = Ue(a, (new Date).getTime()) ? Te(a) : ke(a);
            m = '<span class="wms_menu_item_time" title="' + Ae(a) + '">' + y + "</span>"
        }
        var _ = "";
        if ("" === s && (_ = " wms-valign-mid-block"), b = '<div class="wms_menu_item_name wms-truncate-ellipsis' + _ + '" title="{{dname}}">{{dname}}</div>', !e && r && r.FEEDSID && (e = r.FEEDSID, b = '<div class="wms_menu_item_name" title="{{dname}}">{{dname}}</div>'), l = tl(e, n, r), n === ut.HYBRIDSEARCH.CHAT && void 0 !== WmsMainUI) {
            var W = WmsMainUI.getUnreadCount(e);
            if (Wn(e) && (W = WmsMainUI.getUnreadCount(e, null, null, !0)), Sn(e) && (W = WmsMainUI.getUnreadCount(ra(e), null, e)), W) h = '<span style="display:flex" class="wms_menu_item_count" data-unreadcount=true title="' + W + '">' + (W > 99 ? "99+" : W) + "</span>";
            else h = '<span class="wms_menu_item_count" data-unreadcount=true></span>'
        }(void 0 !== WmsMainUI && (c = WmsMainUI.getMuteStatus(e)), c && (g = ' data-muted="true" '), n === ut.HYBRIDSEARCH.CHAT && void 0 !== WmsMainUI && WmsMainUI.getZuidForPrivateChat(e) && (p = WmsMainUI.getZuidForPrivateChat(e)), n === ut.HYBRIDSEARCH.CHAT ? f = '<div class="wms_menu_item_msg wms-truncate-ellipsis">' + s + "</div>" : n === ut.HYBRIDSEARCH.CONTACT ? (ri(e) && (s = ai(e), u = Hs(e) ? "wms_menu_item" : "wms_menu_item_invitations"), f = '<div class="wms_menu_item_msg wms-truncate-ellipsis" data-smsg="true" title="' + s + '">' + s + "</div>") : f = '<div class="wms_menu_item_msg wms-truncate-ellipsis" title="' + s + '">' + s + "</div>", (n !== ut.HYBRIDSEARCH.CONTACT || ri(e) && Hs(e)) && n !== ut.HYBRIDSEARCH.ORGCONTACT || "disable" !== oe.get("profile_info") && (v = '<div class="wms_menu_item_profile_icon wms-valign-mid-block" data-zcprofileid="' + e + '"></div>'), n === ut.HYBRIDSEARCH.CONTACT && ri(e)) && (Hs(e) ? C += '<div class="' + (Mr.contact_operation_loader + " wms-valign-mid-block " + ko.loader) + '"></div>' : C += '<div class="wms_menu_inv" data-id="{{id}}" data-dname="{{dname}}"><span data-operation="accept" title="' + re("common.accept") + '" class="wms_menu_invaccept">' + re("common.accept") + '</span><span>  |  </span><span title="' + re("remind.later") + '" data-operation="reject" class="wms_menu_invreject">' + re("remind.later") + "</span></div>");
        return d = '<div class="' + u + '" data-id="{{id}}" {{useridforprivatechat}} data-dname="{{dname}}" ' + g + ' data-type="{{type}}">' + l + b + m + f + C + h + v + "</div>", n === ut.HYBRIDSEARCH.CHAT && p && (p = "data-userid=" + p), yi(d, {
            id: e,
            type: n,
            dname: Ki(Ji(e, t)),
            useridforprivatechat: p
        })
    }

    function nl(e, t) {
        return e === ut.HYBRIDSEARCH.CONTACT || e === ut.HYBRIDSEARCH.ORGCONTACT ? t ? re("topic.adduser") : zr().startsWith("@") ? re("topic.addusertocreate") : re("chat.user") : e === ut.HYBRIDSEARCH.GROUP ? re("chat.group") : e === ut.HYBRIDSEARCH.CHANNEL ? re("channel.join") : e === ut.HYBRIDSEARCH.CHAT ? re("chat.continue") : void 0
    }

    function al(e) {
        if (e.USERID) {
            var t = ei(e.USERID);
            return t && "-2" != t.STATUS && "-3" != t.STATUS && "-4" != t.STATUS && "-5" != t.STATUS && "-6" != t.STATUS ? Ks(e.USERID) : e.EMAILID
        }
        return ""
    }

    function ol(e) {
        for (var t, s = "", i = [], n = 0; n < e.PARTICIPANTS.length; n++) e.PARTICIPANTS[n].zuid !== oe.get("zuid") && i.push(e.PARTICIPANTS[n].zuid);
        e.CHATID && wn(e.CHATID) ? s = '<img class="wms-imgcollbot" src="' + Ws(Ss(e.CHATID)) + '"><div class="wms-img-badge wms-pos-bot"></div>' : 1 !== i.length || e.CUSTOMGROUP && "false" != e.CUSTOMGROUP ? e.PARTICIPANTSCOUNT > 5 ? s = '<img class="wms-imgcoll1" src="' + oi(i[0]) + '"><img class="wms-imgcoll2" src="' + oi(i[1]) + '"><img class="wms-imgcoll3" src="' + oi(i[2]) + '"><span class="wms-numcoll">+' + (e.PARTICIPANTSCOUNT - 4) + "</span>" : 2 === i.length ? s = '<img class="wms-imgcoll1" src="' + oi(i[0]) + '"><img class="wms-imgcoll4" src="' + oi(i[1]) + '">' : 3 === i.length ? s = '<img class="wms-imgcoll1" src="' + oi(i[0]) + '"><img class="wms-imgcoll3" src="' + oi(i[1]) + '"><img class="wms-imgcoll4" src="' + oi(i[2]) + '">' : 4 === i.length ? s = '<img class="wms-imgcoll1" src="' + oi(i[0]) + '"><img class="wms-imgcoll2" src="' + oi(i[1]) + '"><img class="wms-imgcoll3" src="' + oi(i[2]) + '"><img class="wms-imgcoll4" src="' + oi(i[3]) + '">' : "string" == typeof e.TITLE && e.TITLE.length && (s = '<div class="wms-lettercoll"><span>' + Tr(e.TITLE) + "</span></div>") : e.PHOTO ? s = '<img class="wms-imgcoll1" src="' + e.PHOTO + '">' : t = Wr(i[0]);
        return t || '<div class="wms-imgcollage">' + s + "</div>"
    }

    function rl(e, t, s, i) {
        var n = e.searchtext;
        e.chid;
        var a, o = kr(unescape(n), null, !1, i),
            r = {},
            l = 0;
        o.forEach((function(e) {
            (a = vr(e)).counter = l++, r[a.id] = a
        }));
        var d = o.length < 10;
        return "function" == typeof s && s(r, !0, t, n, i), d
    }

    function ll(e, t) {
        var s = "",
            i = !0,
            n = (t = t || ut.HYBRIDSEARCH.modules.CHATMENU) === ut.HYBRIDSEARCH.modules.CHATMENU ? "defaultresultdiv" : "recentchatsdiv",
            a = cr(),
            o = Or("recentchatsdiv", t) || Or("defaultresultdiv", t);
        if (e === ut.REQSTATUS.FAILED || e === ut.REQSTATUS.NORESULTS) Qr(o, e, "chat", lr, t);
        else if (a && a.length) {
            if (t === ut.HYBRIDSEARCH.modules.CHATMENU) s += dl(Ko(), "pinnedchats") + dl(a, "recentchats"), void 0 !== WmsMainUI && WmsMainUI.bindRecentChatEvents();
            else a.sort(tn("LMTIME", !0)), s += hl(a, t)
        } else Qr(o, ut.REQSTATUS.NORESULTS, "chat", null, t);
        t !== ut.HYBRIDSEARCH.modules.SMARTCHAT && parseInt(Yo()) && (i = !!s, s = hl(Zo()) + s);
        var r, l = Or(n, t);
        if (l && s) {
            var d = l.querySelector("[data-select]");
            r = cl(), l.innerHTML = s, Nn(l);
            var c = d ? l.querySelector('[data-id="' + d.getAttribute("data-id") + '"]') : "";
            c && Kr(c)
        }
        "" != s && i && a.length > 6 && Qr(Or("recentchatsdiv", t), ut.REQSTATUS.LOADING, "chat", null, t), r && void 0 !== WmsMainUI && WmsMainUI.filterUnreadChats(), void 0 !== WmsMainUI && WmsMainUI.updateUnreadChatsCount(), void 0 !== WmsMainUI && WmsMainUI.updateCountDependentUI()
    }

    function dl(e, t) {
        var s = "";
        if (e.length > 0) {
            var i, n = "",
                a = "",
                o = "";
            if (e.sort(tn("LMTIME", !0)), "pinnedchats" == t) {
                o = ul();
                var r = Ko().length,
                    l = 6;
                if (void 0 !== WmsMainUI && WmsMainUI.defaultchatlist && WmsMainUI.defaultchatlist.querySelector('[data-menu="pinnedchats"]') && (l = Math.floor((WmsMainUI.defaultchatlist.querySelector('[data-menu="pinnedchats"]').lastChild.getBoundingClientRect().width - 16) / 40)), r <= l) i = "";
                else if (ml()) i = " data-expanded=true", n = 'style="' + ("height: " + 50 * Math.ceil(Ko().length / l) + "px") + '"', a = ".expanded.filtertitle";
                else i = " data-expanded=false", a = ".shrinked.filtertitle"
            } else o = hl(e, ut.HYBRIDSEARCH.modules.CHATMENU), a = ".filtertitle";
            s = '<div id="wms_menu_' + t + '" class="wms_menu_' + t + '" data-menu="' + t + '"' + i + '><div id="wms_menu_heading_' + t + '" class="wms_menu_subheading" data-heading="' + t + '"><span>' + re(t + ".title") + '</span><div class="wms_menu_filter_icon" title="' + re(t + a) + '"></div></div><div id="wms_menu_chatlist_' + t + '" class="wms_menu_chatlist_' + t + '" ' + n + ">" + o + "</div></div>"
        }
        return s
    }

    function cl() {
        return void 0 !== WmsMainUI && !!WmsMainUI.defaultchatlist.querySelector('[data-heading="unreadchats"]')
    }

    function ul() {
        var e = "";
        return Ko().sort(tn("order_position", !1)).forEach((function(t) {
            var s = tl(t.CHATID, ut.HYBRIDSEARCH.CHAT, t),
                i = "";
            void 0 !== WmsMainUI && WmsMainUI.getZuidForPrivateChat(t.CHATID) && (i = " data-userid=" + WmsMainUI.getZuidForPrivateChat(t.CHATID));
            var n = '<div data-pc="true" data-type="{{chattype}}" data-id=' + t.CHATID + i + ' class="wms_menu_pinnedchats_fragment" title="{{title}}">' + s + "</div>",
                a = t.TITLE;
            Wn(t.CHATID) && (a = Gl(t.CHATID) || a);
            var o = ut.HYBRIDSEARCH.CHAT;
            Sn(t.CHATID) && (o = ut.HYBRIDSEARCH.THREAD), e += yi(n, {
                title: Ki(a),
                chattype: o
            })
        })), e
    }

    function ml() {
        return void 0 !== WmsMainUI && !!WmsMainUI.defaultchatlist.querySelector('#wms_menu_pinnedchats[data-expanded="true"]')
    }

    function hl(e, t) {
        var s, i = "",
            n = "";
        s = e && e.length ? e : Nr();
        for (var a = 0; a < s.length; a++) {
            var o = s[a].TITLE;
            if (Wn(s[a].CHATID) && (o = Gl(s[a].CHATID) || o), Sn(s[a].CHATID)) {
                var r = s[a].THREAD_PARENT_CHID || ra(s[a].CHATID);
                if (zl(r) && void 0 !== Gl(r)) o = o + " - " + Gl(r);
                else if (s[a].THREAD_PARENT_TITLE) {
                    var l = Al(r);
                    l && 1 != l.joined || (o = o + " - " + s[a].THREAD_PARENT_TITLE)
                }
            }
            i += sl(s[a].CHATID, o, Ur(s[a]), ol(s[a]), null, ut.HYBRIDSEARCH.CHAT, s[a].LMTIME, n, s[a], t), n = s[a].LMTIME
        }
        return i
    }

    function gl() {
        return Or("inputcontainer").querySelectorAll("[data-type='user']")
    }

    function pl() {
        return In(gl()).map((function(e) {
            return Dn(e).slice(1)
        }))
    }

    function fl(e) {
        e = Zi(e);
        var t = pl().map((function(e) {
                return Zi(e)
            })),
            s = t.pop(),
            i = t.join(", ");
        return s ? 0 === t.length ? re("chat.topic.singlemember", ["<span>" + e + "</span>", "<span>" + s + "</span>"]) : re("chat.topic.multiplemember", ["<span>" + e + "</span>", "<span>" + i + "</span>", "<span>" + s + "</span>"]) : 0 === t.length ? re("chat.topic.set", "<span>" + e + "</span>") : void 0
    }
    var vl = Object.freeze({
            __proto__: null,
            changeHover: Kr,
            createImageCollageHtml: ol,
            createLastMsgInfoHtml: Ur,
            createResultFragment: sl,
            fetchFromServer: Jr,
            filter: Ir,
            generateChannelResults: Br,
            generateChatMenuHtml: dl,
            generateChatResults: xr,
            generateChatsListWithSearch: function(e, t, s) {
                var i;
                if (e) {
                    e = Ki(e);
                    var n = [ut.HYBRIDSEARCH.ORGCONTACT, ut.HYBRIDSEARCH.JOINEDCHANNEL, ut.HYBRIDSEARCH.CHAT];
                    i = function(e) {
                        var t = {},
                            s = 0;
                        return e.forEach((function(e) {
                            var i = vr(e);
                            i.counter = s++, t[i.id] = i
                        })), t
                    }(i = kr(e, null, null, n)), Object.keys(i).length < 10 && jr("fetch", null, null, !0, "searchlist", {
                        topicname: "searchlist",
                        searchtext: e
                    }, n, (function(e, s, i, n) {
                        n && (n = decodeURIComponent(n)), t(a(e), i, n), i && c()
                    }))
                } else i = br();

                function a(e) {
                    return e = (e = Tn(e)).sort(tn("counter"), !1)
                }

                function o(e, t) {
                    t.stat == ut.REQSTATUS.FAILED && ("function" == typeof s && s(), c())
                }
                t(a(i), !1, e);
                var r = an.subscribe("/orgcontacts/searchlist", o),
                    l = an.subscribe("/channels/updateui", o),
                    d = an.subscribe("/chatlist/updateui", o);

                function c() {
                    an.unsubscribe(r), an.unsubscribe(l), an.unsubscribe(d)
                }
            },
            generateContactHtml: il,
            generateContactResults: Dr,
            generateContactResultsWithoutBots: $r,
            generateHtml: el,
            generateImageHtml: tl,
            generateOrgContactResults: Lr,
            generatePinnedChatMenuHtml: ul,
            generateRecentChatResults: Nr,
            generateRecentChatResultsHTML: hl,
            generateSearchResults: kr,
            generateUnsubscribedBotResults: Hr,
            getBadgeLetters: Tr,
            getChosenUsers: gl,
            getChosenUsersName: pl,
            getCurrentModule: Rr,
            getDescription: al,
            getNode: Or,
            getPlainSearchText: Vr,
            getPrivateChatDetails: Ar,
            getResultInfo: nl,
            getResultSet: qr,
            getSearchText: zr,
            getTitleHint: fl,
            getZuidForPrivateChat: Er,
            invokeRetry: Zr,
            isPinnedChatsExpanded: ml,
            isUnreadFilterOpen: cl,
            populateRecentChats: ll,
            resetHover: Xr,
            showContactInvite: Yr,
            updateListAndCheckIfIncomplete: rl,
            updateLoadingStatus: Qr,
            updateManager: jr,
            updateStatusContainer: Fr
        }),
        Cl = {},
        bl = [],
        yl = null,
        _l = {},
        Wl = !1,
        Sl = !1,
        wl = null,
        Ml = {
            1: "org_channels",
            2: "team_channels",
            3: "private_channels",
            4: "external_channels"
        };

    function Il(e) {
        wl = e
    }

    function Tl() {
        return wl
    }

    function Al(e) {
        return e ? Cl[e] : Cl
    }

    function El() {
        return Ml
    }

    function Ul(e) {
        var t = Al(e);
        return !(!t || t.sc !== ut.CHANNELS.TEAM)
    }

    function kl() {
        if (null === yl || Tl()) {
            void 0 !== WmsMainUI && WmsMainUI.updateLoadingForPinnedChats(!0);
            var e = "pageload=true&mode=joined&limit=50";
            Tl() && (e += "&next_token=" + Tl()), Xe("getchannels.do", e, Xl, Rl)
        } else(Wl || yl + 216e5 < (new Date).getTime()) && Vl()
    }
    var Nl = Mn((function() {
        nn(Cl) && null !== yl && !Wl || kl()
    }), null, 1e3, !0);

    function xl(e, t, s) {
        void 0 === Cl[e] && (Cl[e] = {}), Cl[e][t] = s
    }

    function Ol(e) {
        Sl = !1;
        var t = e.data;
        (t && t.allowed && t.allowed.forEach((function(e) {
            "1" === e.st && (Cl[e.chid] = e, 1 == e.scid.length && (Cl[e.chid]._teamname = e.scid_name[e.scid[0]]))
        })), t && t.joined || t && !t.allowed) && (t.joined && t.joined.length ? t.joined : [t]).forEach((function(e) {
            if ("1" === e.st && (Cl[e.chid] = e, 1 == e.scid.length && (Cl[e.chid]._teamname = e.scid_name[e.scid[0]]), Cl[e.chid].read && Cl[e.chid].totmsg && "-1" != Cl[e.chid].read && (Cl[e.chid].unreadmsgs = Cl[e.chid].totmsg - Cl[e.chid].read), void 0 !== WindowHandler)) {
                var t = WindowHandler.getWinObjById(e.chid);
                t && (t.setTitle(Gl(e.chid)), "-1" !== e.muted_interval && t.updateMuteInfo(e.muted_interval))
            }
        }));
        void 0 !== WindowHandler && WindowHandler.updateChannelProperties(), setTimeout(function() {
            an.publish("/channels/updatelist", on(e.data))
        }.bind(this), 1), void 0 !== WmsMainUI && WmsMainUI.joinScheduledChannels(), void 0 !== WebMessanger && nr(WebMessanger.unreadthreadmap)
    }

    function Rl() {
        var e = this.opts.callbackargs && this.opts.callbackargs.reqid;
        an.publish("/channels/updateui", {
            reqid: e,
            stat: ut.REQSTATUS.FAILED
        })
    }

    function Dl(e, t, s) {
        var i = Ir(s || "cn", e, Cl, null, null, "_teamname");
        return i = i.filter((function(e) {
            if (ds(Ml[e.sc]) && (t && e.joined || !t)) return !0
        }))
    }

    function $l(e) {
        return Dl(e, !1, "_teamname")
    }

    function Hl(e) {
        return Dl(e, !1, "cn")
    }

    function Ll(e, t) {
        return Ir("cn", t, $l(e))
    }

    function Pl(e) {
        return -1 !== bl.indexOf(Fl(e))
    }

    function Fl(e) {
        return "limit=20&search=" + encodeURIComponent(e)
    }

    function Bl(e, t) {
        var s = e.searchtext,
            i = Fl(s),
            n = e.topicname,
            a = e.silentload,
            o = e.chid;
        s && -1 === bl.indexOf(i) ? Xe("getchannels.do", i, Xl, Rl, {
            reqid: t,
            params: i,
            topicname: n,
            chid: o,
            silentload: a,
            searchtext: s
        }) : n ? an.publish("/channels/" + n, {
            callbackargs: e
        }) : an.publish("/channels/updateui", {
            reqid: t
        })
    }

    function jl(e, t) {
        var s = "object" === n(e) ? e : Al(e);
        if (s) {
            var i = "";
            if (s.photoid) {
                var a = void 0 !== WebMessanger && WebMessanger.isNetworkUser() ? encodeURIComponent('{"x-cliq-resource-module":"photos","screen_name":"' + WebMessanger.network_info.screen_name + '","type":"channel"}') : encodeURIComponent('{"x-cliq-resource-module":"photos","type":"channel"}');
                i = On(e) || t ? oe.get("isUDSDownloadEnabled")() ? '<img data-channelid="' + e + '" src="' + _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + s.photoid + "&x-cli-msg=" + a + '">' : '<img data-channelid="' + e + '" src="/' + oe.get("CHATCONT") + "/channel/" + s.photoid + '/photo.do"></img>' : oe.get("isUDSDownloadEnabled")() ? '<div data-channelimgid="' + e + '" data-originalsrc="' + _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + s.photoid + "&x-cli-msg=" + a + '"></div>' : '<div data-channelimgid="' + e + '" data-originalsrc="/' + oe.get("CHATCONT") + "/channel/" + s.photoid + '/photo.do"></div>'
            }
            var o, r = s.sc;
            "1" === r ? o = "orgchannel" : "2" === r ? o = "orggroup" : "3" === r ? o = "privatechannel" : "4" === r && (o = "shared-channel");
            var l = t ? '-large">' : '-small">';
            return i ? '<span class="wms_badge_imgwrapper wms_channelimg_badge wms-' + o + l + i + "</span>" : '<span class="wms_badge_imgwrapper wms_channelimg wms-' + o + l + i + "</span>"
        }
        var d = "";
        return (s = Xo(e)) && s.TITLE && (d = s.TITLE), '<span class="wms_badge_imgwrapper"><span class="wms_badge_letter">' + Tr(d) + "</span></span>"
    }

    function zl(e) {
        var t = Al(e);
        return !(!t || !t.joined || 1 != t.joined)
    }

    function Gl(e) {
        var t = Al(e);
        if (t) {
            var s = t.dn;
            return s || (s = t.cn, t._teamname && (s = s + "@" + t._teamname)), s
        }
    }

    function ql() {
        yl = (new Date).getTime(), Sl = !1, Wl = !1;
        var e = JSON.parse(this.response)[0].objString;
        if (this.getResponseHeader("x-zcoperation") && (yl = this.getResponseHeader("x-zcoperation")), "clearchanneldb" === this.getResponseHeader("x-zcoperation")) yl = null, kl();
        else if (e.leftchanneluids || e.deletedchanneluids) {
            var t = e.leftchanneluids || e.deletedchanneluids;
            for (var s in t) {
                var i = Yl(s)[0],
                    n = i && i.chid;
                delete Cl[n]
            }
        } else {
            if (e.newjoinedchannels) {
                var a = e.newjoinedchannels;
                for (var o in a) {
                    var r = a[o].chid;
                    Cl[r] = a[o]
                }
            }
            if (e.groupsnamemodified) {
                var l = e.groupsnamemodified,
                    d = Ir("sc", ut.CHANNELS.TEAM, Cl),
                    c = function(e) {
                        d.forEach((function(t) {
                            if (-1 !== t.scid.indexOf(e)) {
                                var s = l[e];
                                t._teamname && (t._teamname = s), t.scid_name[e] = s
                            }
                        }))
                    };
                for (var u in l) c(u)
            }
            if (e.channelidvsdatamodified) {
                var m = e.channelidvsdatamodified;
                for (var h in m) {
                    var g = Yl(h)[0];
                    if (g) {
                        var p = m[h];
                        for (var f in p) g[f] = p[f]
                    }
                }
            }
        }
        an.publish("/channels/updateui", {})
    }

    function Vl() {
        Xe("synchannels.do", "lastsynctime=" + yl, ql)
    }

    function Yl(e) {
        return Ir("oc_id", e, Cl)
    }

    function Zl(e) {
        var t;
        return !WmsSettings.adminsettings.features || ("true" == WmsSettings.adminsettings.features.thread_allowed_teams ? t = !0 : (t = !0, Ul(e) ? Al(e).scid.forEach((function(e) {
            -1 == WmsSettings.adminsettings.features.thread_allowed_teams.split(",").indexOf(e) && (t = !1)
        })) : t = !1), WmsSettings.adminsettings.features.chat_thread_feature && t)
    }

    function Kl(e) {
        if (e.channelData) {
            var t = "object" === n(e.channelData) ? e.channelData : JSON.parse(e.channelData);
            t.pc = e.pcount, Cl[t.chid] = t, void 0 !== WmsMainUI && (WmsMainUI.menu && "block" !== WmsMainUI.menu.style.display ? (WmsMainUI.updateUnreadChatsCount(), WmsMainUI.updateCountDependentUI()) : an.publish("/channels/updateui", {}))
        }
    }

    function Xl(e) {
        if (yl = (new Date).getTime(), Ol(e), this.opts) {
            this.opts.callbackargs && this.opts.callbackargs.params && bl.push(this.opts.callbackargs.params);
            var t = this.opts.callbackargs && this.opts.callbackargs.reqid,
                s = this.opts.callbackargs && this.opts.callbackargs.topicname;
            Il(e.meta && e.meta.next_token ? e.meta.next_token : null), s ? an.publish("/channels/" + s, {
                callbackargs: this.opts.callbackargs,
                reqid: t
            }) : an.publish("/channels/updateui", {
                callbackargs: this.opts && this.opts.callbackargs,
                reqid: t
            })
        }
    }

    function Jl(e) {
        var t = e.title,
            s = e.chid,
            i = e.pcount,
            n = e.addinfo.split(":"),
            a = -1 !== n.indexOf("CHANNEL_SCOPE") ? n[n.indexOf("CHANNEL_SCOPE") + 1] : "",
            o = -1 !== n.indexOf("GN") ? n[n.indexOf("GN") + 1] : "",
            r = -1 !== n.indexOf("CHANNELUID") ? n[n.indexOf("CHANNELUID") + 1] : "",
            l = -1 !== n.indexOf("PHOTO_ID") ? n[n.indexOf("PHOTO_ID") + 1] : "",
            d = e.channelData,
            c = d && d.cn ? d.cn : t,
            u = {
                st: "1",
                chid: s,
                dn: d && d.dn ? d.dn : o ? t + " : @" + o : t,
                cn: c,
                pc: i,
                joined: 1,
                scid: [],
                scid_name: {},
                addinfo: e.addinfo,
                cd: ""
            };
        "" !== a && (u.sc = a), "" !== l && (u.photoid = l), "" !== r && (u.channeluid = r), "" !== o && (u._teamname = o);
        var m = {
            data: u
        };
        s && m && Ol(m)
    }
    var Ql = Object.freeze({
        __proto__: null,
        _constructParams: Fl,
        fetchFromServer: Bl,
        fetchNextResultSet: function() {
            kl()
        },
        get: Al,
        getChannelByOC_id: Yl,
        getChannelImageHTML: jl,
        getChannelName: Gl,
        getChannelTypes: El,
        getChannels: Nl,
        getChannelsIfFocussed: function() {
            return Sl
        },
        getChannelsSync: function() {
            return Wl
        },
        getJoinedChannels: function(e) {
            var t = [];
            for (var s in Cl) {
                var i = Cl[s];
                i.joined && ds(Ml[i.sc]) && t.push(Cl[s])
            }
            return t.sort(tn("lmtime", !0)), t.slice(0, e)
        },
        getLastFetchedTime: function() {
            return yl
        },
        getList: Dl,
        getListByChannelName: Hl,
        getListByTeamName: $l,
        getListByTeam_ChannelName: Ll,
        getListByUniqueName: function(e) {
            return Dl(e, !1, "un")
        },
        getNextToken: Tl,
        getTeamChannelMembers: function(e) {
            var t = Al(e),
                s = {};
            return t.scid.forEach((function(e) {
                if (_l[e]) {
                    var t = _l[e];
                    for (var i in t) s[i] = t[i]
                }
            })), s
        },
        getTeamMembersList: function(e) {
            return e ? _l[e] : _l
        },
        handleFailure: Rl,
        initChannels: kl,
        insertTeamMemberslist: function(e, t) {
            _l[e] || (_l[e] = t)
        },
        isBothReplyActionAllowed: function(e) {
            var t = Al(e);
            if (t && t.config) return "both" === t.config.reply_mode
        },
        isCachedRequest: Pl,
        isDefaultChannel: function(e) {
            var t = Al(e);
            return !(!t || "true" != t.is_def)
        },
        isJoinedChannel: zl,
        isReplyActionAllowed: function(e) {
            var t = Al(e);
            return t && WmsSettings.getAdminSetting("moduleconfig") && "false" === WmsSettings.getAdminSetting("moduleconfig")[El()[t.sc]].configs.allow_override ? "threads" !== WmsSettings.getAdminSetting("moduleconfig")[El()[t.sc]].configs.reply_mode : !t || !t.config || "threads" !== t.config.reply_mode
        },
        isSharedChannel: function(e) {
            var t = Al(e);
            return !(!t || t.sc !== ut.CHANNELS.SHARED)
        },
        isTeamChannel: Ul,
        isThreadFeatureEnabled: Zl,
        isThreadReplyAllowed: function(e) {
            if (Zl(e)) {
                var t = Al(e);
                return t && WmsSettings.getAdminSetting("moduleconfig") && "false" === WmsSettings.getAdminSetting("moduleconfig")[El()[t.sc]].configs.allow_override ? "normal_reply" !== WmsSettings.getAdminSetting("moduleconfig")[El()[t.sc]].configs.reply_mode : !t || !t.config || "normal_reply" !== t.config.reply_mode
            }
            return !1
        },
        isUserHasPermission: function(e, t) {
            var s = Al(e);
            if (s && !Gi(s) && s.permissions) {
                var i = s.currole,
                    n = s.permissions;
                return i == ut.USERROLES.SUPER_ADMIN || (i == ut.USERROLES.ADMIN && 0 != (n.adminp & 1 << t) || (i == ut.USERROLES.CREATOR && 0 != (n.crp & 1 << t) || (i == ut.USERROLES.MODERATOR && 0 != (n.modp & 1 << t) || 1 == s.joined && 0 != (n.partp & 1 << t))))
            }
            return !0
        },
        isUserHasPermissionToChangeRole: function(e, t, s) {
            var i = Al(e);
            if (i && !Gi(i)) {
                var n = i.currole;
                return n !== ut.USERROLES.PARTICIPANT && n < s && (n == ut.USERROLES.SUPER_ADMIN || (n == ut.USERROLES.ADMIN && t !== ut.USERROLES.SUPER_ADMIN || n == ut.USERROLES.MODERATOR && (t !== ut.USERROLES.SUPER_ADMIN || t !== ut.USERROLES.ADMIN)))
            }
        },
        refreshChannelList: function() {
            yl = null, kl()
        },
        setChannelInfoFromMsgObj: Jl,
        setChannelsFocussed: function() {
            Sl = !0
        },
        setChannelsSync: function() {
            Wl = !0
        },
        setNextToken: Il,
        syncChannels: Vl,
        updateAddinfoData: function(e, t) {
            var s = Al(e);
            s && (s.addinfo = s.addinfo ? s.addinfo + ":" + t : t)
        },
        updateChannel: xl,
        updateChannelMetaData: Kl,
        updateConfig: function(e, t) {
            var s = Yl(e);
            s.length && (s[0].config = t)
        },
        updateList: Ol,
        updateListWithLastFetchedTime: Xl,
        updateModifiedData: ql,
        updateTitle: function(e, t) {
            var s = Al(e);
            s && (Ul(e) ? s.dn = t + ": @" + s.scid_name[s.scid] : s.dn = t), an.publish("/recentchats/updateui", ut.REQSTATUS.SUCCESS)
        }
    });
    var ed = {
        wms_callbutton_wrapper: "mc00c08e4a_wms_callbutton_wrapper",
        wms_audiocall: "mc00c08e4a_wms_audiocall",
        wms_videocall: "mc00c08e4a_wms_videocall",
        wms_screenshare: "mc00c08e4a_wms_screenshare",
        wms_callinfo: "mc00c08e4a_wms_callinfo",
        inftxt: "mc00c08e4a_inftxt",
        wms_infotext: "mc00c08e4a_wms_infotext",
        wms_callduration: "mc00c08e4a_wms_callduration",
        "wms-msgsenderhl": "wms-msgsenderhl",
        wms_profileinfo_text: "mc00c08e4a_wms_profileinfo_text",
        "wms-msgsender": "wms-msgsender",
        "wms-msginfo": "wms-msginfo"
    };

    function td(e, t) {
        var s = e.msg.type;
        s = -1 != s.indexOf("screen") ? "screen" : s;
        var i = e.msg.caller || e.opruser,
            n = un(i.zuid),
            a = e.msg.calleduser || e.msg.callee,
            o = "",
            r = "",
            l = function(e, t, s) {
                var i = "audio" === s ? ed.wms_audiocall : "video" === s ? ed.wms_videocall : ed.wms_screenshare,
                    n = "audio" === s ? "triggerAudioCall" : "video" === s ? "triggerVideoCall" : "triggerScreenShare",
                    a = -1 != s.indexOf("screen") ? "chat.screen.share" : t ? "info.call.again" : "info.call.back";
                return '<div class="' + ed.wms_callbutton_wrapper + '"><span data-infocallbtn="' + n + '" class="' + i + '" data-calleezuid="' + e + '"></span> <span data-infocallbtn="' + n + '" class="' + ed.wms_callinfo + '" data-calleezuid="' + e + '">' + re(a) + "</span></div>"
            };
        switch (e.msg.event || e.msg.status) {
            case "completed":
            case "CALL_END":
                var d, c = 0,
                    u = 0,
                    m = 0;
                "string" == typeof e.msg.duration && -1 != e.msg.duration.indexOf(":") ? (d = e.msg.duration.split(":"), c = parseInt(d[0]), u = parseInt(d[1]), m = parseInt(d[2])) : ((d = parseInt(e.msg.duration / 1e3)) >= 3600 && (c = parseInt(d / 3600), d %= 3600), d >= 60 && (u = parseInt(d / 60), d %= 60), d < 60 && (m = d));
                var h = 0 !== c ? " " + c + " " + (c > 1 ? "hrs" : "hr") : "",
                    g = 0 !== u ? " " + u + " " + (u > 1 ? "mins" : "min") : "",
                    p = 0 !== m ? " " + m + " " + (m > 1 ? "secs" : "sec") : "";
                r = "audio" === s ? "videochat.audiocall" : "video" === s ? "videochat.videocall" : "media.screenshare.session", o = t ? re("info.call.completed", [re(r)]) : '<span class="' + ed.inftxt + '"><span class="' + ed.wms_infotext + '">' + re("info.call.completed", [re(r)]) + '</span> <span class="' + ed.wms_callduration + '">' + (h + g + p) + "</span>" + l(n ? a.zuid : i.zuid, !0, s) + "</span>";
                break;
            case "cancelled":
            case "CALL_CANCELED":
                o = t ? n ? re("info.call.cancelled.caller", [re("info.call." + s)]) : re("info.call.cancelled.callee", [Ji(i.zuid, e.opruser.nname, !0), re("info.call." + s)]) : n ? '<span class="' + ed.inftxt + '"><span class="' + ed.wms_infotext + '">' + re("info.call.cancelled.caller", [re("info.call." + s)]) + "</span>" + l(a.zuid, n, s) + "</span>" : '<span class="' + ed.inftxt + '"><span class="' + ed.wms_infotext + '">' + re("info.call.cancelled.callee", ['<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + i.zuid + ">" + Ji(i.zuid, e.opruser.nname, !0) + "</span>", re("info.call." + s)]) + "</span>" + l(i.zuid, n, s) + "</span>";
                break;
            case "noresponse":
            case "CALL_MISSED":
                r = n ? "info.call." + s + "call" : "info.call." + s, o = t ? n ? re("info.call.noresponse.caller", [Ji(a.zuid, a.nname, !0), re(r)]) : re("info.call.noresponse.callee", [re(r)]) : n ? '<span class="' + ed.inftxt + '"><span class="' + ed.wms_infotext + '">' + re("info.call.noresponse.caller", ['<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>", re(r)]) + "</span>" + l(a.zuid, n, s) + "</span>" : '<span class="' + ed.inftxt + '"><span class="' + ed.wms_infotext + '">' + re("info.call.noresponse.callee", [re(r)]) + "</span>" + l(i.zuid, n, s) + "</span>";
                break;
            case "busy_on_another_call":
            case "CALL_MISSED_ON_BUSY":
                var f = "";
                f = un(e.opruser.zuid) ? "screen" === s ? "info.call.busy.callee.screen" : "info.call.busy.callee.av" : "screen" === s ? "info.call.busy.caller.screen" : "info.call.busy.caller.av";
                var v = un(e.opruser.zuid) ? e.msg.caller.zuid : e.opruser.zuid,
                    C = un(e.opruser.zuid) ? e.msg.caller.nname : e.opruser.nname,
                    b = re(f, ['<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + v + ">" + Ji(v, C, !0) + "</span>"]);
                o = t ? re(f, [Ji(v, C, !0)]) : '<span class="' + ed.inftxt + '"><span class="' + ed.wms_infotext + '">' + b + "</span>" + l(v, n, s) + "</span>";
                break;
            case "rejected":
            case "CALL_DECLINED":
                o = t ? n ? re("info.call.rejected.caller", [Ji(a.zuid, a.nname, !0), re("info.call." + s + "call")]) : re("info.call.rejected.callee", [re("info.call." + s), Ji(i.zuid, i.nname, !0)]) : n ? '<span class="' + ed.inftxt + '"><span class="' + ed.wms_infotext + '">' + re("info.call.rejected.caller", ['<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>", re("info.call." + s + "call")]) + "</span>" + l(a.zuid, n, s) + "</span>" : '<span class="' + ed.inftxt + '"><span class="' + ed.wms_infotext + '">' + re("info.call.rejected.callee", [re("info.call." + s), Ji(i.zuid, i.nname, !0)]) + "</span>" + l(i.zuid, n, s) + "</span>"
        }
        return o
    }

    function sd(e, t) {
        var s, i = e.mode,
            n = e.msg,
            a = e.opruser,
            o = new Array,
            r = e.userslist;
        switch (i) {
            case "THREAD_CLOSED":
                var l = n.closed_by;
                a = un(l.zuid) ? re("You") : l.display_name, n = re("thread.state.closed", [a]);
                break;
            case "THREAD_REOPENED":
                a = un(e.opruser.zuid) ? re("You") : e.opruser.nname, n = re("thread.state.reopened", [a]);
                break;
            case "GUEST ENTERED":
                n = re("Guest") + " " + e.nname + " " + re("entered_the_chat");
                break;
            case "USER ADDED":
                if (r[(a = e.opruser).zuid]) {
                    n = re("chat.member.joined", '<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>");
                    break
                }
                for (var d in r) o.push('<span class="' + ed.wms_profileinfo_text + '"  data-zcprofileid=' + d + ">" + Ji(d, r[d], !0) + "</span>");
                n = re(s = "chat.member.add", ['<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>", o.join(", ")]);
                break;
            case "GUEST LEFT":
                n = re("Guest") + " " + e.nname + " " + re("left_the_chat");
                break;
            case "USER DELETED":
                if (o = new Array, r = e.userslist, a = e.opruser) {
                    if (r[a.zuid]) {
                        n = re("chat.member.left", '<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>");
                        break
                    }
                    for (d in r) o.push('<span class="' + ed.wms_profileinfo_text + '"  data-zcprofileid=' + d + ">" + Ji(d, r[d], !0) + "</span>");
                    n = re(s = "chat.member.delete", ['<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>", o.join(", ")])
                } else n = re("chat.participant.remove");
                break;
            case "GUEST ACCESS":
                n = Ji((a = e.opruser).zuid, a.nname, !0) + " " + re("turned") + " " + ("on" == e.access ? re("on") : re("off")) + " " + re("guest_access");
                break;
            case "TITLE CHANGE":
                s = un((a = e.opruser).zuid) ? "chat.rename.self" : "chat.rename", n = e.title ? re(s, ['<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>", Zi(e.title)]) : re("chat.title.clear", ['<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>"]);
                break;
            case "CALL STARTED":
                n = re("chat.call.start");
                break;
            case "CALL ENDED":
                n = re("chat.call.end");
                break;
            case "BROADCAST STARTED":
                n = re("chat.broadcast.live", [Ji((a = e.opruser).zuid, a.nname, !0)]);
                break;
            case "BROADCAST STOPPED":
                n = re("chat.broadcast.stop");
                break;
            case "CALLNOTIFICATION":
            case "CALL_INFO":
                n = td(e);
                break;
            case "MESSAGE EDITED":
                a = e.opruser;
                var c = t && !li(a.zuid) ? '<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.dname, !0) + "</span>" : Ji(a.zuid, a.dname, !0),
                    u = un(a.zuid) ? re("You") : c;
                n = re("chat.edit.infomsg", [u, '<span data-replymsgtime="' + e.info.ref_msg_time + '">' + re("common.message") + "</span>"]);
                break;
            case "CHANNEL_MENTION":
                u = un((a = e.opruser).zuid) ? re("common.you.have") : '<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>";
                n = re("channel.mention.infomsg", [u, e.msg.channelname]);
                break;
            case "CHANNEL_VISIBILITY_CHANGE":
                u = un((a = e.opruser).zuid) ? re("common.you.have") : '<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>";
                if ("1" === e.msg.level) "true" === e.msg.open_to_all ? n = re("channel.org.opentoall.infomsg", [u]) : "false" === e.msg.open_to_all && (n = re("channel.org.inviteonly.infomsg", [u]));
                else if ("2" === e.msg.level) {
                    var m = Al(e.chid),
                        h = m ? m.scid_name[m.scid[0]] : "";
                    "true" === e.msg.open_to_all ? n = re("channel.team.opentoall.infomsg", [u, h]) : "false" === e.msg.open_to_all && (n = re("channel.team.inviteonly.infomsg", [u, h]))
                }
                break;
            case "MESSAGE_PINNED":
                var g = e.msg.msguid.split("%")[0],
                    p = e.opruser.zuid,
                    f = Ji(e.opruser.zuid, e.opruser.nname, !0),
                    v = '<span data-pinned-msgtime="' + g + '" data-pinned-user="' + p + '" class="wms_pinmsg_infomsg">' + re("common.message") + "</span>";
                n = un(p) ? re("pinmsg.infomsg.you", [v]) : re("pinmsg.infomsg", [f, v]);
                break;
            case "EVENTNOTIFICATION":
                n = function(e) {
                    var t = e.msg.type;
                    if ("EVENT_EDITED" == t) {
                        var s = e.msg.event_details.old_data,
                            i = e.msg.event_details.new_data,
                            n = Zi(Ki(i.title)),
                            a = Zi(Ki(s.title)),
                            o = i.startdate,
                            r = i.enddate,
                            l = i.location ? Zi(Ki(i.location)) : null,
                            d = s.location ? Zi(Ki(s.location)) : null,
                            c = !1,
                            u = void 0,
                            m = Ji(e.opruser.zuid, e.opruser.nname, !0),
                            h = "",
                            g = [];
                        if (n !== a) {
                            var p = Ee(o);
                            h = dn(l) ? "event.edit.title.location" : "event.edit.title", g = [m, n, p, l], c = !0
                        }
                        if (dn(d)) {
                            if (!dn(l))
                                if (u = "add", c) h = "event.edit.title.location.add", g = [n, l];
                                else {
                                    p = Ee(o);
                                    h = "event.edit.location.add", g = [l, p]
                                }
                        } else dn(l) ? (u = "remove", c ? (h = "event.edit.title.location.remove", g = [n, m, d]) : (h = "event.edit.location.remove", g = [m, d])) : l !== d && (u = "change", c ? (h = "event.edit.title.location.change", g = [n, l, d]) : (h = "event.edit.location.change", g = [l, d]));
                        var f = s.startdate,
                            v = s.enddate;
                        if (o != f || r != v) {
                            var C = Ae(o),
                                b = Ae(f),
                                y = Ae(r),
                                _ = Ae(v),
                                W = "";
                            if (o != f && r == v ? W = ".start" : o == f && r != v && (W = ".end"), c)
                                if (void 0 !== u) switch (h = "event.edit.title.location." + u + ".reschedule" + W, u) {
                                    case "add":
                                        g = [n, l, C];
                                        break;
                                    case "remove":
                                        g = [n, C, m, d];
                                        break;
                                    case "change":
                                        g = [n, C, l]
                                } else h = "event.edit.title.reschedule", g = [n, C, b];
                                else if (void 0 !== u) {
                                switch (h = "event.edit.location." + u + ".reschedule" + W, u) {
                                    case "add":
                                        g = [l, C, b];
                                        break;
                                    case "remove":
                                        g = [C, b, m, d];
                                        break;
                                    case "change":
                                        g = [l, C, y]
                                }
                                ".end" == W && "change" == u && (g = [l, y, _])
                            } else o != f && r == v ? (h = "event.edit.reschedule.start", g = [C, b]) : r != v && o == f ? (h = "event.edit.reschedule.end", g = [y, _]) : (h = "event.edit.reschedule", g = [C, b, y, _])
                        }
                        return void 0 !== h ? re(h, g) : re("event.edited.infomsg", [n])
                    }
                    if ("EVENT_REMINDER" == t) {
                        var S = e.msg,
                            w = S.reminder_value,
                            M = Zi(Ki(S.title)),
                            I = S.location ? Zi(Ki(S.location)) : null,
                            T = "";
                        return -1 === w ? T = "event.end.infomsg" : (T = "event.reminder", T = 5 === w ? T + ".five.minutes" : T + ".one.hour", T = I ? T + ".venue" : T), re(T, [M, I])
                    }
                    if ("EVENT_DELETED" == t) return re("event.info.deleted", [Ji(e.opruser.zuid, e.opruser.nname, !0)]);
                    if ("START" == t) return re("event.start.infomsg", [Zi(Ki(e.msg.title))]);
                    if ("EVENTS_CONFERENCE" == t) {
                        var A = 0 === e.msg.reminder_value,
                            E = Zi(Ki(e.msg.title));
                        return A ? re("conference.quick.desc", [E]) : re("conference.desc", [E, 15])
                    }
                    if ("LIVE_EVENT" === t) {
                        var U = Zi(Ki(e.msg.title)),
                            k = e.msg.reminder_value;
                        return 0 == k ? re("event.start.infomsg2", [U]) : -1 == k ? re("liveevent.quick.desc", [U]) : re("event.reminder.n.minutes", [U, k])
                    }
                }(e);
                break;
            case "SHOWTIMENOTIFICATION":
                n = re("event.showtime.infomsg", [u = Ji(e.opruser.zuid, e.opruser.nname, !0), e.msg.presenterurl]);
                break;
            case "CHANNEL_CONFIG_CHANGE":
                "reply_mode" === e.msg.name ? "normal_reply" === e.msg.value ? n = re("threads.replymode.normal") : "threads" === e.msg.value ? n = re("threads.replymode.thread") : "both" === e.msg.value && (n = re("threads.replymode.both")) : "leave_join_info" === e.msg.name ? "enable" === e.msg.value ? n = re("chat.leavejoininfo.enabled") : "disable" === e.msg.value && (n = re("chat.leavejoininfo.disabled")) : "add_remove_info" === e.msg.name && ("enable" === e.msg.value ? n = re("chat.addremoveinfo.enabled") : "disable" === e.msg.value && (n = re("chat.addremoveinfo.disabled")));
                break;
            case "CLEAR_MESSAGE":
                n = un((a = e.opruser).zuid) ? re("channel.cleared.message.self") : re("channel.cleared.message", ['<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>"]);
                break;
            case "CHANNEL_SCOPE_CHANGE":
                var C = "",
                    b = "";
                n.old_level && n.new_level && (C = "channel.scope." + n.old_level, b = "channel.scope." + n.new_level), n = un(a.zuid) ? re(s = "channel.scope.changed.self", [re(C), re(b)]) : re(s = "channel.scope.changed", ['<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + Ji(a.zuid, a.nname, !0) + "</span>", re(C), re(b)]);
                break;
            case "BOT ADDED":
            case "BOT REMOVED":
                a = e.opruser;
                var y = e.botlist,
                    _ = "";
                if (y.forEach((function(e, t, s) {
                        var i = ws(e) ? ws(e) : "";
                        i && ("" !== _ && (s.length >= 2 && t == s.length - 1 ? _ += " & " : _ += ", "), _ += '<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + e + ">" + Zi(Ki(i)) + "</span>")
                    })), un(a.zuid)) n = re("BOT ADDED" == i ? "bots.addedtochannel.infomsg.localuser" : "bots.removedfromchannel.infomsg.localuser", [_]);
                else {
                    var W = a.zuid == a.nname ? e.dname : a.nname,
                        S = Ji(a.zuid, W, !0),
                        w = '<span class="' + ed.wms_profileinfo_text + '" data-zcprofileid=' + a.zuid + ">" + S + "</span>";
                    n = re("BOT ADDED" == i ? "bots.addedtochannel.infomsg" : "bots.removedfromchannel.infomsg", [w, _])
                }
                break;
            case "AV_AI_NOTIFICATION":
                var M = e.msg && e.msg.title ? Zi(Ki(e.msg.title)) : "";
                e.msg && "SUMMARY_AND_ACTION_ITEMS_READY" === e.msg.event && (n = e.msg.action_items ? re("event.avainotif.summary.actionitems", [M]) : re("event.avainotif.summary", [M]))
        }
        return "string" == typeof n ? n : ""
    }
    var id = Object.freeze({
        __proto__: null,
        getCallNotificationMessage: td,
        getInfoMsgString: sd
    });
    var nd, ad, od, rd, ld = {
        urlpreviewparent: "mcfb690f8a_urlpreviewparent",
        imagecontainer: "mcfb690f8a_imagecontainer",
        previewcontent: "mcfb690f8a_previewcontent",
        image: "mcfb690f8a_image",
        previewdetails: "mcfb690f8a_previewdetails",
        title: "mcfb690f8a_title",
        url: "mcfb690f8a_url",
        providername: "mcfb690f8a_providername",
        preview: "mcfb690f8a_preview",
        dynamicclass: "mcfb690f8a_dynamicclass",
        description: "mcfb690f8a_description",
        closeicon: "mcfb690f8a_closeicon",
        previewfooter: "mcfb690f8a_previewfooter",
        previewheader: "mcfb690f8a_previewheader",
        favicon: "mcfb690f8a_favicon",
        domaindetails: "mcfb690f8a_domaindetails",
        fieldscontainer: "mcfb690f8a_fieldscontainer",
        field: "mcfb690f8a_field",
        label: "mcfb690f8a_label",
        value: "mcfb690f8a_value",
        actionscontainer: "mcfb690f8a_actionscontainer",
        circle: "mcfb690f8a_circle",
        notification_settings_icon: "mcfb690f8a_notification_settings_icon",
        zmNightMode: "zmNightMode"
    };

    function dd(e) {
        return e = Be.replacer(Be.getRegexToGetAttrValueInHtmlTag("iframe", "src"), null, e, (function(e, t, s, i, n, a) {
            var o = t + (-1 === n.indexOf("autoplay") ? n + (-1 === n.indexOf("?") ? "?" : "&") + "autoplay=true" : n) + a;
            return -1 == o.indexOf("sandbox") && (o = o.replace(s, s + " sandbox='allow-scripts allow-same-origin'")), o
        }))
    }

    function cd(e) {
        for (var t = ["width", "height"], s = 0; s < t.length; s++) e = Be.replacer(Be.getRegexToGetAttrValueInHtmlTag("iframe", t[s]), null, e, (function(e, t, s, i, n, a) {
            var o = t + "100%" + a;
            return -1 == o.indexOf("sandbox") && (o = o.replace(s, s + " sandbox='allow-scripts allow-same-origin'")), o
        }));
        return e
    }

    function ud(e, t) {
        return -1 != ["application/msword", "application/vnd.oasis.opendocument.text", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/rtf", "application/ooxml", "application/vnd.ms-excel", "application/vnd.oasis.opendocument.spreadsheet", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.sun.xml.calc", "text/csv"].indexOf(e) || "application/zip" === e && -1 != ["docx", "sxc"].indexOf(t) || "text/plain" === e && -1 != ["csv", "tsv"].indexOf(t)
    }

    function md(e) {
        return new RegExp("(https?://)?(www.)?" + e + "/(file|folder)/([a-z0-9]{37})", "g")
    }

    function hd(e, t) {
        var s = t,
            i = new URL(t).search,
            n = new URLSearchParams(i);
        if (n.has("authId")) {
            var a, o = n.get("authId");
            "'" == (o = decodeURIComponent(o)).charAt(o.length - 1) && (o = o.slice(0, -1));
            try {
                a = JSON.parse(o)
            } catch (e) {}
            a && a.entity_id != e.chid && (a.entity_id = e.chid, n.set("authId", encodeURIComponent(JSON.stringify(a))), s = t.split("?")[0] + "?" + n.toString())
        } else {
            var r = {
                entity_id: e.chid,
                module: "Chats"
            };
            s = t + (-1 != t.indexOf("?") ? "&" : "?") + "authId=" + encodeURIComponent(JSON.stringify(r))
        }
        return s
    }

    function gd(e, t) {
        switch (e) {
            case "workdrive_permalink":
                return new RegExp("(https?://)?(www.)?" + t + "/(file|folder)/([a-z0-9]{37})", "g");
            case "workdrive_previewlink":
                return new RegExp("(https?://)?(www.)?" + t + "/(preview)/([a-z0-9]{37})", "g");
            case "writer_permalink":
                return new RegExp("(https?://)?(www.)?" + t + "/(writer/open)/([a-z0-9]{37})", "g");
            case "sheet_permalink":
                return new RegExp("(https?://)?(www.)?" + t + "/(sheet/open)/([a-z0-9]{37})", "g");
            case "show_permalink":
                return new RegExp("(https?://)?(www.)?" + t + "/(show/open)/([a-z0-9]{37})", "g")
        }
    }

    function pd(e) {
        return e.replace(/https?:\/\//g, "")
    }

    function fd(e) {
        return gd("workdrive_permalink", pd(nd)).test(e)
    }

    function vd(e) {
        return gd("workdrive_previewlink", pd(nd)).test(e)
    }

    function Cd(e) {
        return gd("writer_permalink", pd(ad)).test(e)
    }

    function bd(e) {
        return gd("sheet_permalink", pd(od)).test(e)
    }

    function yd(e) {
        return gd("show_permalink", pd(rd)).test(e)
    }

    function _d(e) {
        return wd(), fd(e) || vd(e) || Cd(e) || bd(e) || yd(e)
    }

    function Wd(e) {
        wd();
        var t = "";
        return fd(e) && (t = "workdrive_permalink"), vd(e) && (t = "workdrive_previewlink"), Cd(e) && (t = "writer_permalink"), bd(e) && (t = "sheet_permalink"), yd(e) && (t = "show_permalink"), t
    }

    function Sd(e) {
        switch (Wd(e)) {
            case "workdrive_permalink":
            case "workdrive_previewlink":
                return nd;
            case "writer_permalink":
                return ad;
            case "sheet_permalink":
                return od;
            case "show_permalink":
                return rd
        }
    }

    function wd() {
        nd = window.location.protocol + "//workdrive.zoho." + oa(), ad = window.location.protocol + "//writer.zoho." + oa(), od = window.location.protocol + "//sheet.zoho." + oa(), rd = window.location.protocol + "//show.zoho." + oa()
    }
    var Md = Object.freeze({
            __proto__: null,
            constructAudioLinkFragment: function(e) {
                var t = e.meta.linkdetails;
                if (t.html) {
                    t.html;
                    var s = cd(t.html)
                } else if (t.iframe_url) {
                    var i = '<iframe sandbox="allow-scripts allow-same-origin" width="480" height="270" src=' + t.iframe_url + ' frameborder="0" allow="accelerometer; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>';
                    s = cd(i)
                }
                return yi("<div class='wms-urlinfoouterdiv'><div class='wms-urlinfo'><img src=\"{{urlproviderurl}}\"><a href='{{urlproviderurl}}' target='_blank'>{{urlprovider}}</a></div><div class='wms-urlinfolink'><a href='{{urllink}}' target='_blank'>{{urltitlelink}}</a></div></div><div class='wms-media' data-playable='true' iframe='{{iframe}}'>{{audioframe}}</div>", {
                    thumbnailurl: t.thumbnailurl,
                    iframe: i,
                    audioframe: s,
                    urllink: t.url,
                    urltitlelink: t.title,
                    urlauthorurl: t.authorurl,
                    urlproviderurl: t.faviconlink || t.providerurl + "/favicon.ico",
                    urlauthor: t.authorname,
                    urlprovider: t.providername
                }, "InSecureHTML")
            },
            constructFileFragment: function(e) {
                var t = "";
                e.thumb && (t = '<div class="wms-filethumb wms-imgmsgcontainer" data-filethumbnail="true" data-previewable="true" > <img style="width:' + e.dim.width + "px;height:" + e.dim.height + 'px;max-height:100%;pointer-events:none;" src="' + e.thumbnailurl + '" > </div>');
                var s, i = "",
                    n = "false",
                    a = e.content,
                    o = e.fName.split(".")[1],
                    r = "",
                    l = "",
                    d = "",
                    c = "",
                    u = "",
                    m = null,
                    h = !1,
                    g = !0,
                    p = !0,
                    f = e.chid,
                    v = WindowHandler.getWinObjById(f);
                if (v && (v.restrictFileForward && (g = !1), v.restrictFileDownload && (p = !1)), function(e, t) {
                        var s = -1 !== e.indexOf("text/") || -1 !== e.indexOf("application/pdf") && !Xn() || -1 !== e.indexOf("application/xml");
                        return s = s && "svg" != t || ud(e, t)
                    }(a, o) && (s = e.size, !(parseFloat(s) > 200 && s.match("MB") || s.match("GB")))) {
                    if (e.isv1local) i = '<div data-localattachment="true" class="wms-attachmentpreviewloading">{{previewloading}}</div>';
                    else {
                        var C = e.previewurl;
                        if (WebMessanger.isNetworkUser() && WebMessanger.isUDSDownloadEnabled()) {
                            var b = {
                                screen_name: WebMessanger.network_info.screen_name
                            };
                            C = da(C, b), e.constructeddownloadurl = da(e.constructeddownloadurl, b)
                        }
                        p || "application/pdf" !== a || (C += "#toolbar=0", "chrome" !== $WC.$CUtil.getBrowserName() && (h = !0)), r = '<iframe src="' + C + '"></iframe>', i = '<div class="wms-attachmentpreview" data-attachment="true" data-previewable="{{previewable}}" src="{{iframehtml}}" data-fname="{{filename}}" data-furl="{{url}}" data-fsize="{{filesize}}" data-fcomment="{{comment}}" data-fsrc="{{url}}" data-fcontent="{{type}}" data-dname="{{dname}}" data-fsender="{{sender}}" data-fdate="{{date}}" data-isv1="{{isv1}}"  data-ftime="{{time}}" data-filefwd="{{forward}}" {{msguid}} data-timestamp="{{timestamp}}" data-chid="{{chid}}" data-zhshare-src-meta="{{zhshare_metaobj}}" data-disablepreview="{{disablepreview}}">{{preview}}</div>'
                    }
                    n = "true"
                }
                e.isFileForwardSupported && g && !oe.get("isViewTranscriptUI") && (l = '<div class="wms-fileforward" data-isv1="{{isv1}}" data-filefrwrd="{{forward}}" data-furl="{{url}}" data-fcontent="{{type}}" src="{{src}}" data-fname="{{filename}}" data-fsize="{{filesize}}" data-fcomment="{{comment}}" data-fsrc="{{url}}" href={{src}} title="{{forwardtitle}}" data-infected="{{isinfected}}"></div>');
                var y = "";
                p || (y = 'style="display: none"');
                var _ = '<a class="wms-filedownloadicon-container" href="{{src}}" download="{{filename}}" data-documentclick="attdownload" data-infected="{{isinfected}}" ' + y + '><span class="wms-filedownload" title="{{filesize}}" data-documentclick="attdownload"></span></a>';
                if ((_ || l) && (d = '<div class="wms-attachmenticon-container">' + _ + l + "</div>"), "pdf" == o && WebMessanger.isGuestUser() && -1 !== e.constructeddownloadurl.indexOf("/thumbnail") && (e.constructeddownloadurl = e.constructeddownloadurl.replace("/thumbnail", "")), WebMessanger.isUDSDownloadEnabled() && WebMessanger.isNetworkUser() && -1 === e.constructeddownloadurl.indexOf("screen_name") && (e.constructeddownloadurl = da(e.constructeddownloadurl, {
                        screen_name: WebMessanger.network_info.screen_name
                    })), void 0 !== WebMessanger && "WP" == WebMessanger.prd && void 0 !== WMSUI && null != WMSUI.zhShareInstance) {
                    c = "zhshare-src";
                    var W = !!e.thumb;
                    m = JSON.stringify({
                        id: e.url || e.fileurl,
                        chatId: e.chid,
                        size: e.dim.size,
                        name: e.fName,
                        contentType: e.content,
                        preview: W
                    }), u = $WC.template.replace('data-zhshare-src-meta="{{metaobj}}" data-zhshare-src-fname="{{fname}}"', {
                        metaobj: m,
                        fname: e.fName
                    })
                }
                var S = '<div class="wms-filefragcontainer ' + c + '" ' + u + ">" + t + '<div class="wms-filemsgcontainer" data-previewable="{{previewable}}" data-filedesc="true" data-furl="{{url}}"><div class="wms-filemsgimg"></div><div class="wms-filedesc wms-truncate-ellipsis"><div class="wms-filetitle wms-truncate-ellipsis" title="{{filename}}">{{filename}}</div><div class="wms-filesize">{{filesize}}' + i + "</div></div>" + d;
                return yi(S += "</div></div>", {
                    previewable: n,
                    iframehtml: r,
                    disablepreview: h,
                    src: e.constructeddownloadurl || e.url,
                    filename: e.fName,
                    type: e.content || e.contenttype,
                    filesize: e.size || "",
                    url: e.url || e.fileurl,
                    comment: e.commentmsg,
                    isv1: !!e.isv1,
                    $preview: "chat.clickpreview",
                    dname: e.dname,
                    sender: e.sender,
                    date: Ee(e.time),
                    time: Te(e.time),
                    timestamp: e.time,
                    msguid: e.msguid,
                    chid: e.chid,
                    $forwardtitle: "message.actions.forward",
                    forward: !!e.isFileForwardSupported,
                    $previewloading: "chat.previewloading",
                    isinfected: e.isInfected || !1,
                    zhshare_metaobj: m
                })
            },
            constructImageLinkFragment: function(e) {
                var t = $WC.CMsgUtil.getTimeFromMsgObj(e);
                return yi('<div class="wms-imgmetamsgcontainer"><img data-previewable="true" data-dname="{{dname}}" data-fsender="{{sender}}" data-fdate="{{date}}" data-ftime="{{time}}" data-src="{{url}}" src="{{url}}" data-chid="{{chid}}" data-timestamp="{{timestamp}}" data-fwidth="{{width}}" data-fheight="{{height}}"></img></div>', {
                    url: e.meta.linkdetails.imgurl || e.meta.linkdetails.url,
                    dname: e.dname,
                    sender: e.sender,
                    date: Ee(t),
                    time: Te(t),
                    chid: e.chid,
                    timestamp: t,
                    width: e.meta.linkdetails.width || 400,
                    height: e.meta.linkdetails.height || 300
                })
            },
            constructVideoLinkFragment: function(e) {
                var t = e.meta.linkdetails;
                if (t.html) var s = yi('<p class="wms-videowrapper">{{iframehtml}}</p>', {
                    iframehtml: dd(t.html)
                });
                else if (t.iframe_url) s = '<p class="wms-videowrapper">' + dd('<iframe sandbox="allow-scripts allow-same-origin"  width="480" height="270" src=' + t.iframe_url + ' frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>') + "</p>";
                var i = "<div id='wms-urlvideo-play' class='wms-urlvideo-play wms-hvalign'></div><div class='wms_default_thumbnail'></div>";
                t.thumbnailurl && (i = "<div id='wms-urlvideo-play' class='wms-urlvideo-play wms-hvalign'></div><div class='wms_default_thumbnail'><img data-urlfavicon='true' src='" + Zi(Ki(t.thumbnailurl)) + "' /></div>");
                var n = '<img src="' + Zi(Ki(t.thumbnailurl)) + '" />',
                    a = Zi(Ki(t.providername));
                if (!a) {
                    a = t.url.match(/:\/\/(.[^/]+)/)[1].replace("www.", "")
                }
                return yi("<div class='wms-urlinfoouterdiv'><div class='wms-urlinfo'><img src=\"{{urlproviderurl}}\"><a href='{{urlproviderurl}}' target='_blank'>{{urlprovider}}</a></div><div class='wms-urlinfolink'><a href='{{urllink}}' target='_blank'>{{urltitlelink}}</a></div></div><div class='wms-media'  data-playable='true' thumbnailimg='{{videoimg}}' iframe='{{iframe}}'>{{thumbnailimg}}</div>", {
                    thumbnailimg: i,
                    videoimg: n,
                    iframe: s,
                    urllink: Zi(Ki(t.url)),
                    urltitlelink: Zi(Ki(t.title)),
                    urlproviderurl: Zi(Ki(t.faviconlink)) || Zi(Ki(t.providerurl)) + "/favicon.ico",
                    urlprovider: a
                }, "InSecureHTML")
            },
            findFirstZOSDomain: Sd,
            getDomainFromUrl: pd,
            getPermalinkRegex: gd,
            getSuitableZOSRegexKey: Wd,
            getWDPermalinkRegex: md,
            getWorkDriveRedirectURL: hd,
            isFileSupportedByCliq: ud,
            isSheetUrl: bd,
            isShowUrl: yd,
            isWorkDrivePermalink: fd,
            isWorkDrivePreviewlink: vd,
            isWorkDriveURL: function(e) {
                return wd(), md(nd).test(e)
            },
            isWriterUrl: Cd,
            isZohoOfficeSuiteUrl: _d,
            populate: function(e, t, s, i, n) {
                var a = e.providername,
                    o = e.providerurl || "www." + a + ".com",
                    r = "",
                    l = "",
                    d = "",
                    c = e.title || "",
                    u = "",
                    m = "",
                    h = "",
                    g = "",
                    p = "",
                    f = "",
                    v = "",
                    C = ld.previewfooter,
                    b = "",
                    y = e.chid;
                s && (m = s.date, h = s.time, g = s.sender, p = s.dname, b = s.timestamp), i && (u = ld.closeicon);
                var _ = '<div class="{{descriptionclass}}" title="{{description}}">{{description}}</div>';
                if (e.cliq_message && e.description) {
                    var W = Rt(e.description);
                    e.cliq_message.meta && e.cliq_message.meta.mentions && (e.cliq_message.msg = W, W = Qi(e.cliq_message)), _ = yi('<div class="{{descriptionclass}}">' + (W = Qi(W)) + "</div>", {
                        descriptionclass: ld.description
                    })
                } else _ = yi(_, {
                    description: e.description || e.url,
                    descriptionclass: ld.description
                });
                if (!a) {
                    if (e.url.startsWith("https://") || e.url.startsWith("http://")) {
                        a = e.url.match(/:\/\/(.[^/]+)/)[1]
                    } else a = e.url;
                    o = "//" + a
                }
                if (e.thumbnailurl || e.mimetype.indexOf("image/") > -1) {
                    var S = !1,
                        w = e.thumbnailurl,
                        M = !1;
                    n && (S = !0), e.mimetype.indexOf("image/") > -1 && (w = e.url), "svg" == w.split(".")[w.split(".").length - 1] && (M = !0), d = yi(d = '<div class="{{imagecontainerclass}}">' + (i ? '<img data-urlpreviewimg="true" class="{{imageclass}}" src="{{imageurl}}" data-svgthumb="{{svgthumb}}" data-previewable="true" data-src="{{imageurl}}" data-fdate="{{date}}" data-ftime="{{time}}" data-fname="{{name}}" data-fsize data-fcontent data-fsender="{{sender}}" data-dname="{{dname}}" data-rich="{{richformat}}" data-chid="{{chid}}" data-timestamp="{{timestamp}}"/>' : '<img data-urlpreviewimg="true" class="{{imageclass}}" data-originalsrc="{{imageurl}}" data-svgthumb="{{svgthumb}}" data-previewable="true" data-src="{{imageurl}}" data-fdate="{{date}}" data-ftime="{{time}}" data-fname="{{name}}" data-fsize data-fcontent data-fsender="{{sender}}" data-dname="{{dname}}" data-rich="{{richformat}} data-chid="{{chid}}" data-timestamp="{{timestamp}}"></img>') + "</div>", {
                        imagecontainerclass: ld.imagecontainer,
                        imageclass: ld.image,
                        imageurl: w,
                        name: a,
                        date: m,
                        time: h,
                        sender: g,
                        dname: p,
                        richformat: S,
                        svgthumb: M,
                        timestamp: b,
                        chid: y
                    })
                }
                if (n && (r = yi(r = '<div data-previewable="true" data-ftime="{{time}}" data-fsender="{{sender}}" data-fdate="{{date}}" data-dname="{{dname}}" data-fname="{{name}}" data-unfurl="true" src="{{src}}" class="{{previewclass}}" data-chid="{{chid}}" data-timestamp="{{timestamp}}">{{preview}}</div>', {
                        previewclass: ld.preview,
                        src: e.html || e.iframe_url,
                        name: a,
                        date: m,
                        time: h,
                        sender: g,
                        dname: p,
                        timestamp: b,
                        chid: y,
                        $preview: "chat.preview"
                    })), e.btnindexvsdetails) {
                    var I = e.btnindexvsdetails;
                    for (var T in I)
                        if (!(e.notification_configs && Rn(e.notification_configs) && e.notification_configs.indexOf(I[T].index) > -1)) {
                            var A = '<div class="{{circle}}"></div><div class="{{dynamicclass}}" data-fname={{fname}} data-urlactions="true" btnindex={{btnindex}} data-url="{{url}}" title="{{label}}">{{label}}</div>';
                            "open.url" == I[T].action.type && (A = '<div class="{{circle}}"></div><div class="{{dynamicclass}}" data-fname={{fname}} btnindex={{btnindex}} data-url="{{url}}" title="{{label}}"><a href="{{url}}" target="_blank">{{label}}</a></div>'), v += yi(A, {
                                dynamicclass: ld.dynamicclass,
                                url: e.url,
                                circle: ld.circle,
                                label: I[T].label,
                                fname: I[T].action.data.name,
                                btnindex: I[T].index
                            })
                        }
                    e.notification_configs && e.notification_configs.length > 0 && (v += yi('<div class="{{settingsicon}}" data-urlnotification="true"></div>', {
                        settingsicon: ld.notification_settings_icon
                    }))
                }
                if (n && e.dynamic_actions) {
                    var E = "";
                    e.dynamic_action_params && e.dynamic_action_params.length > 0 && (E = e.dynamic_action_params[0]), l = yi('<div class="{{circle}}"></div><div class="{{dynamicclass}}" data-dynamicactions="true" data-url="{{url}}" title="{{more}}" data-dactionsparam={{dynamicactionsparam}}>{{more}}</div>', {
                        dynamicclass: ld.dynamicclass,
                        url: e.url,
                        dynamicactionsparam: E || "false",
                        circle: ld.circle,
                        $more: "more"
                    })
                }
                e.faviconlink && (f = yi(f = '<img class="{{faviconclass}}" data-urlfavicon="true" src="{{faviconlink}}"/>', {
                    faviconclass: ld.favicon,
                    faviconlink: e.faviconlink
                }));
                var U = "";
                if (e.fields && !e.unfurldata_cache_id) {
                    for (var k = e.fields.data, N = "", x = 0; x < k.length; x++) {
                        N += yi("<div class={{field}}><div class={{labelclass}} title='{{label}}'>{{label}}</div><div class={{valueclass}} title='{{titlevalue}}'>" + Qi(Zi(Ki(k[x].value))) + " </div></div>", {
                            label: k[x].label,
                            titlevalue: Qi(k[x].value, !0),
                            valueclass: ld.value,
                            labelclass: ld.label,
                            field: ld.field
                        })
                    }
                    U = yi("<div class={{fieldscontainer}}>" + N + "</div>", {
                        fieldscontainer: ld.fieldscontainer
                    })
                }
                var O = e.url;
                if (_d(O) && !i && aa()) {
                    var R = gd(Wd(O), pd(Sd(O))),
                        D = O.match(R)[0];
                    O = D.replaceAll(D, hd(e, D))
                }
                var $ = '<div class={{previewheader}}><a target="_blank" rel="noopener" href="{{url}}" class="{{titleclass}}" tabindex="-1" title="{{title}}"> {{title}} </a><div class="{{closeicon}}" data-urlpreviewclose="true"/></div></div><div class="{{previewcontent}}">' + d + _ + "</div>" + U + '<div class="{{previewfooter}}"><div class="{{domaindetails}}">' + f + "<div class=\"{{providernameclass}}\" title={{providername}}>{{providername}}</div></div><div class='{{actionscontainer}}'>" + r + v + l + "</div></div>";
                return $ = yi($, {
                    previewheader: ld.previewheader,
                    url: O,
                    titleclass: ld.title,
                    title: c,
                    closeicon: u,
                    previewcontent: ld.previewcontent,
                    urlclass: ld.url,
                    previewfooter: C,
                    domainname: o,
                    domaindetails: ld.domaindetails,
                    providernameclass: ld.providername,
                    providername: a,
                    winindex: t,
                    actionscontainer: ld.actionscontainer
                }), yi('<div class="{{urlpreviewparent}}" data-urlpreview="true">' + $ + "</div>", {
                    urlpreviewparent: ld.urlpreviewparent
                })
            },
            get sheetdomain() {
                return od
            },
            showLoadingPreview: function() {
                return '<div class=wms-previewcardloader><span id="wms_contactdetails_loadingdiv" class="wms-hvalign wms_loading_div wms-fadeOut"></span></div>'
            },
            get showdomain() {
                return rd
            },
            get workdrivedomain() {
                return nd
            },
            get writerdomain() {
                return ad
            }
        }),
        Id = {},
        Td = !0,
        Ad = !1,
        Ed = !1,
        Ud = !1;

    function kd(e) {
        Ut.setItem("wms_draft_lmtime", e)
    }

    function Nd(e) {
        return Id[e]
    }

    function xd() {
        return Ut.getItem($WC.Config.get("zuid") + "_wms_drafts")
    }

    function Od() {
        var e = xd();
        if (!Td && Gi(Id) && e && (Id = e), Ad && !Ud && (Td || !e)) {
            Xe("v1/chats", "drafts=true&joined=true", (function(e) {
                for (var t = JSON.parse(e).data, s = t && t.chats, i = {}, n = 0; n < s.length; n++) {
                    var a = s[n].draftmsginfo && JSON.parse(s[n].draftmsginfo);
                    i[s[n].chatid] = a, Rd(s[n].chatid, a)
                }
                Dd(i, !0), Ed = !1, Td = !1, Ud = !1, an.publish("drafts/updateui")
            }), (function() {
                Ud = !1
            })), Ud = !0
        }
    }

    function Rd(e, t) {
        Id[e] = {
            msg: t.msg,
            meta: t.meta,
            mtype: t.mtype,
            time: t.time
        }, t.replied_to && (Id[e].replied_to = t.replied_to)
    }

    function Dd(e, t) {
        var s = {};
        if (t) s = e;
        else {
            var i = xd();
            if (i) {
                if (i[e.chid] && i[e.chid].time == e.time) return;
                i[e.chid] = e, s = i
            } else s[e.chid] = e;
            kd(e.time)
        }
        Ut.setItem($WC.Config.get("zuid") + "_wms_drafts", s)
    }

    function $d(e) {
        delete Id[e],
            function(e) {
                var t = xd();
                t && t[e] && (delete t[e], Dd(t, !0))
            }(e)
    }
    var Hd = Object.freeze({
            __proto__: null,
            checkAndUpdateLMTime: function(e) {
                Ad = !0;
                var t = Ut.getItem("wms_draft_lmtime");
                Td = "-1" != e && e != t, kd(e)
            },
            deleteDraft: $d,
            deleteDraftInServer: function(e) {
                if (Nd(e)) {
                    var t = {
                        "Content-Type": "application/json",
                        "X-XHR-exception": "true",
                        "X-ZCSRF-TOKEN": Yi()
                    };
                    et("v2/chats/" + e + "/draft", null, (function() {
                        $d(e)
                    }), null, null, null, t)
                }
            },
            get: Nd,
            getFromServer: Od,
            getFromServerAfterFocus: function() {
                Ed = !0
            },
            getFromServerIfFocussed: function() {
                Ed && Od()
            },
            update: Rd,
            updateBeforeUnload: function(e) {
                var t = Nd(e.objId);
                if (!t || t.msg !== e.composer.value) {
                    var s = new FormData,
                        i = {
                            message: e.composer.value,
                            nocache: (new Date).getTime()
                        },
                        n = e.getReplyMessageId();
                    n && (i.replied_to = n);
                    var a = Yi();
                    i[(a = a.split("="))[0]] = a[1];
                    var o = "/" + oe.get("CHATCONT") + "/v2/chats/" + e.objId + "/draft";
                    for (var r in i) s.append(r, i[r]);
                    navigator.sendBeacon(o, s)
                }
            },
            updateInLocalStorage: Dd,
            updateInServer: function(e, t) {
                if (Ad) {
                    var s = "message=" + encodeURIComponent(t.msg);
                    t.replied_to && (s += "&replied_to=" + t.replied_to);
                    Je("v2/chats/" + e + "/draft", s, (function() {
                        var e = this.opts.callbackargs;
                        Rd(e.chid, e)
                    }), null, t)
                }
            }
        }),
        Ld = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    showvalidationerror: !1
                }, i.validateError = i.validateError.bind(h(i)), i.getActions = i.getActions.bind(h(i)), i
            }
            return r(s, [{
                key: "validateError",
                value: function(e) {
                    e.target.value.match(Be.regexes.emailid) ? this.setState({
                        showvalidationerror: !1
                    }) : this.setState({
                        showvalidationerror: !0
                    })
                }
            }, {
                key: "getActions",
                value: function() {
                    return this.state.showvalidationerror ? this.props.dialogoptions.errorCallbackActions : this.props.dialogoptions.actions
                }
            }, {
                key: "render",
                value: function() {
                    var e = this.props.dialogoptions,
                        t = e.customimgiconclass ? e.customimgiconclass : kt.wms_dialog_img,
                        s = N("div", {
                            class: kt.wms_dialog_imgouter
                        }, N("div", {
                            class: kt.wms_dialog_imginner
                        }, N("div", {
                            class: t
                        }))),
                        i = e.headerimgsrc ? N("img", {
                            key: e.headerimgsrc,
                            src: e.headerimgsrc
                        }) : s,
                        n = e.customimg ? N("div", {
                            class: e.customimg
                        }, N("div", null, Hn(e.customheadercontent[0], e.customheadercontent[1]))) : i,
                        a = kt.wms_dialog_txtcont;
                    e.customStyles && e.customStyles.headerTextStyle && (a = e.customStyles.headerTextStyle);
                    var o = N("div", null, N("div", {
                            class: kt.wms_dialogtext
                        }, n, N("div", {
                            class: a
                        }, Hn(e.heading[0], e.heading[1])), e.headercontent)),
                        r = e.content ? e.content.map((function(e) {
                            return N("div", {
                                class: kt.wms_dialog_content
                            }, " ", e, " ")
                        })) : null,
                        l = kt.wms_dialog_txttitle;
                    e.customStyles && e.customStyles.bodyTextStyle && (l = e.customStyles.bodyTextStyle);
                    var d = e.bodytitle ? N("div", {
                            class: l
                        }, e.bodytitle) : null,
                        c = this.getActions(),
                        u = e.customStyles && e.customStyles.containerWrapperStyle ? e.customStyles.containerWrapperStyle : kt.wms_dialog_container,
                        m = e.customStyles && e.customStyles.customButtonWrapperStyle ? e.customStyles.customButtonWrapperStyle : kt.buttonwrapper,
                        h = {
                            customContainerStyle: u,
                            customHeaderStyle: kt.wms_dialog_header,
                            customFooterStyle: kt.wms_dialog_footer,
                            customButtonWrapperStyle: m
                        };
                    (d || r) && (h.customWrapperStyle = kt.wms_dialog_contentwrapper), e.customStyles && (e.customStyles.customFooterStyle && (h.customFooterStyle = e.customStyles.customFooterStyle), e.customStyles.customHeaderStyle && (h.customHeaderStyle = e.customStyles.customHeaderStyle), e.customStyles.customButtonStyle && (h.customButtonStyle = e.customStyles.customButtonStyle), e.customStyles.customWrapperStyle && (h.customWrapperStyle = e.customStyles.customWrapperStyle));
                    var g = "";
                    if (e.inputcontent || e.userInfoUnavailable) {
                        var p = "";
                        e.inputcontent ? p = re("contact.invite.mailid", ['"' + e.inputcontent + '"']) : e.userInfoUnavailable && (p = re("contact.invite.mailid.externaluser"));
                        var f = null;
                        this.state.showvalidationerror && (f = N("div", {
                            class: kt.showmandatoryerror
                        }, re("forms.invalidemail"))), g = N("div", {
                            class: kt.inputcontentwrapper
                        }, N("div", null, Hn(p, e.inputcontent)), N("input", {
                            id: "wms_contact_mailid",
                            type: "text",
                            placeholder: re("placeholder.contact.mailid"),
                            onchange: this.validateError
                        }), f)
                    }
                    return N(xt, {
                        heading: o,
                        actions: c,
                        customDialogStyles: h,
                        callbackOnClose: this.props.removeComponent,
                        keydownListener: e.keydownListener,
                        footerinfoprefix: g
                    }, d, r)
                }
            }]), s
        }(R),
        Pd = function() {
            function e() {
                a(this, e)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(Ld, {
                        removeComponent: this.removeParentNode.bind(this),
                        dialogoptions: e
                    }), this.node)
                }
            }, {
                key: "removeParentNode",
                value: function() {
                    this.node.parentElement.removeChild(this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node)
                }
            }]), e
        }();
    var Fd = {
            container: "mc2c3bb351_container",
            header: "mc2c3bb351_header",
            readuserlist_container: "mc2c3bb351_readuserlist_container",
            msg_readtime_container: "mc2c3bb351_msg_readtime_container",
            error_info: "mc2c3bb351_error_info",
            zmNightMode: "zmNightMode"
        },
        Bd = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).zm = new Pi({
                    default_size: "24",
                    animation: {
                        default_size: "24"
                    },
                    customemoji_size: "small",
                    preLoadCustomEmoji: !0
                }), i.handleSearch = i.handleSearch.bind(h(i)), i.onClickMoreActions = i.onClickMoreActions.bind(h(i)), i.storeMoreActionsList = i.storeMoreActionsList.bind(h(i)), i.getHoverDetailsContainer = i.getHoverDetailsContainer.bind(h(i)), i.allactions = e.moreactionslist, i.state = {
                    moreactionslist: e.moreactionslist ? i.getAllowedActions(e.moreactionslist) : [],
                    selectedactionindex: 0,
                    searchval: ""
                }, i
            }
            return r(s, [{
                key: "componentDidUpdate",
                value: function(e, t) {
                    t.selectedactionindex != this.state.selectedactionindex && this.selecteditemnode && Pn(this.selecteditemnode)
                }
            }, {
                key: "handleSearch",
                value: function(e, t) {
                    var s = this.state.moreactionslist;
                    void 0 !== e && (s = Ir("name", e, s, null, null, "hint"));
                    var i = s.map((function(e) {
                        return e.id
                    }));
                    return this.setState({
                        searchval: e
                    }, this.storeMoreActionsList), i
                }
            }, {
                key: "getAllowedActions",
                value: function(e) {
                    for (var t = [], s = {
                            TEXTMSG: "text",
                            IMGATT: "attachment",
                            FILEATT: "attachment",
                            AUDIOATT: "attachment",
                            VIDEOATT: "attachment",
                            LOCATT: "attachment",
                            CONTACTATT: "attachment",
                            EVENTATT: "attachment",
                            CUSTOMMSG: "text",
                            VIDEOLINK: "link",
                            AUDIOLINK: "link",
                            IMGLINK: "link",
                            BOTMSG: "text",
                            REPLYMSG: "text",
                            EDITEDMSG: "text"
                        }[this.props.datatype], i = 0; i < e.length; i++) - 1 != e[i].allowed_message_types.indexOf(s) && t.push(e[i]);
                    return t.sort(tn("name"))
                }
            }, {
                key: "storeMoreActionsList",
                value: function(e) {
                    var t = e || this.allactions;
                    this.setState({
                        moreactionslist: this.getAllowedActions(t)
                    })
                }
            }, {
                key: "toggleMessageActionLoader",
                value: function(e, t) {
                    for (var s = this.getAllowedActions(this.allactions), i = 0; i < s.length; i++) e.id == s[i].id && (s[i].loading = "add" == t);
                    this.storeMoreActionsList(s)
                }
            }, {
                key: "getHeader",
                value: function() {
                    var e = "";
                    e = un(this.props.senderid) ? re("chat.you") : ti(this.props.senderid) ? ti(this.props.senderid) : this.props.sendername;
                    var t = this.props.msg;
                    return Be.check("customemoji", t) && (t = this.zm.replaceCustomEmoji(t)), N("div", {
                        class: Fd.header_wrapper
                    }, N("div", {
                        class: Mr.heading
                    }, re("message.actions.moremsgactions")), N("div", {
                        class: Mr.msg_wrapper
                    }, N("div", {
                        class: Mr.msg
                    }, N("div", {
                        class: Mr.msg_details
                    }, N("div", {
                        class: Mr.msgdetails_sender
                    }, e), N("div", {
                        class: Mr.msgdetails_time
                    }, Ae(this.props.msg_time))), N("div", {
                        class: Mr.msg_content,
                        dangerouslySetInnerHTML: {
                            __html: t
                        }
                    }))))
                }
            }, {
                key: "getHoverDetailsContainer",
                value: function(e) {
                    var t = e.extentionprovider;
                    if (t) return N("div", {
                        class: Fd.msg_readtime_container
                    }, re("messageaction.extension.info", [t]))
                }
            }, {
                key: "onClickMoreActions",
                value: function(e) {
                    var t = this.props.chid,
                        s = {
                            chid: t,
                            ids: [this.props.msguid]
                        },
                        i = {
                            "Content-Type": "application/json",
                            "x-consents-version": "1",
                            "X-XHR-exception": !0,
                            "X-SID": WebMessanger.getSid(),
                            "X-ZCSRF-TOKEN": Yi()
                        },
                        n = this;
                    Je("v1/messageactions/" + e.id + "/executeaction", s, (function(s) {
                        n.props.dreFunctionCallBack(t, e.name, JSON.parse(s).data.dreResponse), n.toggleMessageActionLoader(e, "remove"), n.props.removeComponent()
                    }), (function() {
                        n.toggleMessageActionLoader(e, "remove"), Gn(re("event.status.update.error"))
                    }), null, null, i), this.toggleMessageActionLoader(e, "add")
                }
            }, {
                key: "getMoreMessageActionsList",
                value: function() {
                    var e = this,
                        t = this.state.moreactionslist,
                        s = {};
                    return t.forEach((function(t) {
                        var i;
                        t.extension && t.extension.photo_id && (i = oe.get("isUDSDownloadEnabled")() ? _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + t.extension.photo_id + "&x-cli-msg=" + encodeURIComponent('{"x-cliq-resource-module":"photos","type":"appimg"}') : "/_chat/appimg/" + t.extension.photo_id + "/photo.do"), s[t.id] = {
                            imgsrc: i,
                            title: Hn(t.name, e.state.searchval),
                            desc: Hn(Ki(t.hint), e.state.searchval),
                            id: t.id,
                            name: t.name,
                            empty_img: !i,
                            fonticon_class: i ? "" : ko.moreActionsDefaultIcon,
                            classname: i ? "" : ko.moreActionsDefaultIcon,
                            isloading: !!t.loading,
                            extentionprovider: t.extension && t.extension.name
                        }
                    })), s
                }
            }, {
                key: "render",
                value: function() {
                    var e = this.getHeader(),
                        t = this.getMoreMessageActionsList(),
                        s = 0 == this.state.moreactionslist.length,
                        i = tn("name"),
                        n = {
                            customHeaderStyle: Fd.header,
                            customContainerStyle: Fd.container,
                            customButtonStyle: Mr.close_button,
                            customWrapperStyle: Fd.readuserlist_container
                        };
                    return N(Po, {
                        title: e,
                        list: t,
                        searchplaceholder: re("Search"),
                        iscompletelist: !0,
                        customlistitemstyles: {
                            containerWrapperStyle: Fd.readuserlist_container
                        },
                        onListItemClicked: this.onClickMoreActions,
                        loadingstate: !1,
                        defaultsearch: !1,
                        onSearch: this.handleSearch,
                        sortonsearch: !0,
                        searchtext: this.state.searchval,
                        handlecustomemptysearch: !0,
                        disablesearchcontainer: s,
                        sortComparator: i,
                        updateinitiallist: !0,
                        customlistitemprops: {
                            listitemhoverdetails: !0,
                            gethoverdetailscontainer: this.getHoverDetailsContainer
                        },
                        dialogview: !0,
                        customDialogStyles: n,
                        callbackOnClose: this.props.removeComponent
                    })
                }
            }]), s
        }(R),
        jd = function() {
            function e() {
                a(this, e)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(Bd, {
                        removeComponent: this.unmountComponent.bind(this),
                        moreactionslist: e.moreactionslist,
                        msg_time: e.msg_time,
                        msg: e.msg,
                        senderid: e.senderid,
                        sendername: e.sendername,
                        chid: e.chid,
                        msguid: e.msguid,
                        datatype: e.datatype,
                        dreFunctionCallBack: e.dreFunctionCallBack
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), An(this.node), this.node = null
                }
            }]), e
        }(),
        zd = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).closeComponent = i.closeComponent.bind(h(i)), i.onClickMoreActions = i.onClickMoreActions.bind(h(i)), i.openMoreMessageDialog = i.openMoreMessageDialog.bind(h(i)), i.searchMessageAction = i.searchMessageAction.bind(h(i)), i.storeMoreActionSearchNode = i.storeMoreActionSearchNode.bind(h(i)), i.storeMoreActionsList = i.storeMoreActionsList.bind(h(i)), i.storeSelectedItemNode = i.storeSelectedItemNode.bind(h(i)), i.state = {
                    moreactionslist: Yd.data.length ? i.getAllowedActions(Yd.data) : [],
                    defaultactionslist: i.getDefaultAllowedActions(),
                    searchactionsval: "",
                    selectedactionindex: -1,
                    defaultheightofcontainer: i.getDefaultHeightOfMsgActions()
                }, i
            }
            return r(s, [{
                key: "componentDidMount",
                value: function() {
                    if (this.props.actionsconfig.show_as_popup || this.searchnode && this.searchnode.focus(), !Yd.isinitialized && oe.get("isCliqUser")()) {
                        if (this.props.actionsconfig && this.props.actionsconfig.hide_more_msg_actions) return;
                        e = this.storeMoreActionsList, Xe("v2/messageactions", "limit=100", (function(t) {
                            Yd.data = JSON.parse(t).data, Yd.isinitialized = !0, e()
                        }))
                    }
                    var e
                }
            }, {
                key: "componentDidUpdate",
                value: function(e, t) {
                    t.selectedactionindex != this.state.selectedactionindex && this.selecteditemnode && Pn(this.selecteditemnode)
                }
            }, {
                key: "storeSelectedItemNode",
                value: function(e) {
                    e && (this.selecteditemnode = e.base)
                }
            }, {
                key: "storeMoreActionSearchNode",
                value: function(e) {
                    this.searchnode = e
                }
            }, {
                key: "getDefaultHeightOfMsgActions",
                value: function() {
                    var e = this.getDefaultAllowedActions().length;
                    if (this.props.actionsconfig.show_as_popup) {
                        if (!this.props.actionsconfig.hide_more_msg_actions && Yd.isinitialized) 0 !== this.getAllowedActions(Yd.data).length && (e += 1);
                        return {
                            height: 40 * e + "px"
                        }
                    }
                    return Yd.isinitialized && this.props.actionsconfig && !this.props.actionsconfig.hide_more_msg_actions && (e += this.getAllowedActions(Yd.data).length), e <= 9 ? {
                        height: 40 * e + "px"
                    } : {
                        height: "380px"
                    }
                }
            }, {
                key: "closeComponent",
                value: function(e) {
                    27 === e.keyCode && this.props.closeComponent && this.props.closeComponent()
                }
            }, {
                key: "getDefaultAllowedActions",
                value: function() {
                    var e = this.props.allowedactions,
                        t = [{
                            name: "react",
                            label: re("message.actions.react")
                        }, {
                            name: "reply",
                            label: re("message.actions.reply")
                        }, {
                            name: "thread_reply",
                            label: re("message.actions.thread_reply")
                        }, {
                            name: "copy",
                            label: re("message.actions.copy")
                        }, {
                            name: "copyfile",
                            label: re("message.actions.copyfile")
                        }, {
                            name: "edit",
                            label: re("message.actions.edit")
                        }, {
                            name: "forward",
                            label: re("message.actions.forward")
                        }, {
                            name: "private_reply",
                            label: re("message.actions.private_reply")
                        }, {
                            name: "markasunread",
                            label: re("message.actions.markasunread")
                        }, {
                            name: "setreminder",
                            label: re("message.actions.setreminder")
                        }, {
                            name: "pinmsg",
                            label: re("message.actions.pinmsg")
                        }, {
                            name: "unpinmsg",
                            label: re("message.actions.unpinmsg")
                        }, {
                            name: "fork",
                            label: re("message.actions.fork")
                        }, {
                            name: "messagelink",
                            label: re("message.actions.messagelink")
                        }, {
                            name: "viewreaction",
                            label: re("message.actions.viewreaction")
                        }, {
                            name: "delete",
                            label: re("common.delete")
                        }],
                        s = [];
                    if (e.include_all) s = t;
                    else
                        for (var i = 0; i < t.length; i++) e[t[i].name] && s.push(t[i]);
                    return s
                }
            }, {
                key: "getAllowedActions",
                value: function(e) {
                    for (var t = [], s = {
                            TEXTMSG: "text",
                            IMGATT: "attachment",
                            FILEATT: "attachment",
                            AUDIOATT: "attachment",
                            VIDEOATT: "attachment",
                            LOCATT: "attachment",
                            CONTACTATT: "attachment",
                            EVENTATT: "attachment",
                            CUSTOMMSG: "text",
                            VIDEOLINK: "link",
                            AUDIOLINK: "link",
                            IMGLINK: "link",
                            BOTMSG: "text",
                            REPLYMSG: "text",
                            EDITEDMSG: "text"
                        }[this.props.datatype], i = 0; i < e.length; i++) - 1 != e[i].allowed_message_types.indexOf(s) && t.push(e[i]);
                    return t.sort(tn("name"))
                }
            }, {
                key: "storeMoreActionsList",
                value: function() {
                    var e = Yd.data;
                    this.setState({
                        moreactionslist: this.getAllowedActions(e),
                        defaultheightofcontainer: this.getDefaultHeightOfMsgActions()
                    })
                }
            }, {
                key: "handleKeyNavigation",
                value: function(e) {
                    var t = this.state.moreactionslist.length + this.state.defaultactionslist.length - 1,
                        s = this.state.selectedactionindex;
                    e.keyCode == ut.KEYCODES.UP && s--, e.keyCode == ut.KEYCODES.DOWN && s++, s = (s = s < 0 ? 0 : s) > t ? t : s, this.setState({
                        selectedactionindex: s
                    })
                }
            }, {
                key: "searchMessageAction",
                value: function(e) {
                    if ("click" == e.type) return e.stopPropagation(), void e.preventDefault();
                    if ("keydown" == e.type)
                        if (e.keyCode == ut.KEYCODES.UP || e.keyCode == ut.KEYCODES.DOWN) this.handleKeyNavigation(e);
                        else if (e.keyCode == ut.KEYCODES.ENTER) {
                        var t = this.state.defaultactionslist.concat(this.state.moreactionslist)[this.state.selectedactionindex];
                        t.label ? this.props.messageActionsCallBack(this.props.msgnode, t.name) : this.onClickMoreActions(t), e.stopPropagation(), e.preventDefault()
                    } else if (e.keyCode == ut.KEYCODES.ESCAPE && this.state.searchactionsval) {
                        e.stopPropagation(), e.preventDefault(), e.target.value = "";
                        var s = Yd.data;
                        this.setState({
                            moreactionslist: this.getAllowedActions(s),
                            defaultactionslist: this.getDefaultAllowedActions(),
                            searchactionsval: "",
                            selectedactionindex: -1
                        })
                    }
                    if ("input" == e.type) {
                        var i = Yd.data;
                        i = this.getAllowedActions(i);
                        var n = this.getDefaultAllowedActions(),
                            a = e.target.value;
                        this.setState({
                            moreactionslist: Yn(i, a, "name"),
                            defaultactionslist: Yn(n, a, "label"),
                            searchactionsval: a,
                            selectedactionindex: 0
                        })
                    }
                }
            }, {
                key: "toggleMessageActionLoader",
                value: function(e, t) {
                    for (var s = this.state.moreactionslist, i = 0; i < s.length; i++) e.id == s[i].id && (s[i].loading = "add" == t);
                    this.setState({
                        moreactionslist: s
                    })
                }
            }, {
                key: "onClickMoreActions",
                value: function(e) {
                    var t = this.props.chid,
                        s = {
                            chid: t,
                            ids: [this.props.msgnode.dataset.msguid]
                        },
                        i = {
                            "Content-Type": "application/json",
                            "x-consents-version": "1",
                            "X-XHR-exception": !0,
                            "X-SID": WebMessanger.getSid(),
                            "X-ZCSRF-TOKEN": Yi()
                        },
                        n = this;
                    Je("v1/messageactions/" + e.id + "/executeaction", s, (function(s) {
                        n.props.dreFunctionCallBack(t, e.name, JSON.parse(s).data.dreResponse), n.toggleMessageActionLoader(e, "remove"), n.props.closeComponent()
                    }), (function() {
                        n.toggleMessageActionLoader(e, "remove"), Gn(re("event.status.update.error"))
                    }), null, null, i), this.toggleMessageActionLoader(e, "add")
                }
            }, {
                key: "openMoreMessageDialog",
                value: function() {
                    var e = {
                        moreactionslist: this.state.moreactionslist,
                        msg_time: this.props.msgnode.dataset.msgtime,
                        msg: void 0 !== Message ? Message.getReferenceContent(this.props.chid, this.props.msgnode) : "",
                        chid: this.props.chid,
                        msguid: this.props.msgnode.dataset.msguid,
                        senderid: this.props.msgnode.dataset.sender,
                        sendername: this.props.msgnode.dataset.sendername,
                        datatype: this.props.datatype,
                        dreFunctionCallBack: this.props.dreFunctionCallBack
                    };
                    (new jd).mountComponent(e), this.props.unmountComponent()
                }
            }, {
                key: "getMoreMessageActionsList",
                value: function() {
                    if (!this.props.actionsconfig || !this.props.actionsconfig.hide_more_msg_actions) {
                        var e = this.state.moreactionslist,
                            t = this.state.defaultactionslist.length,
                            s = [];
                        if (e.length && this.props.actionsconfig && this.props.actionsconfig.show_as_popup) {
                            var i = this.state.selectedactionindex == t + 1;
                            return s.push(N(qd, {
                                itemselected: i,
                                storeSelectedItemNode: this.storeSelectedItemNode,
                                openmoremessagedialog: !0,
                                searchterm: this.state.searchactionsval,
                                messageActionCallBack: this.openMoreMessageDialog
                            })), s
                        }
                        s = e.length ? [N("div", {
                            class: ko.moreactionslabel
                        }, re("message.actions.moremsgactions"))] : [];
                        for (var n = 0; n < e.length; n++) {
                            var a = this.state.selectedactionindex == t + n;
                            s.push(N(qd, {
                                itemselected: a,
                                storeSelectedItemNode: this.storeSelectedItemNode,
                                item: e[n],
                                searchterm: this.state.searchactionsval,
                                messageActionCallBack: this.onClickMoreActions
                            }))
                        }
                        return s
                    }
                }
            }, {
                key: "getMessageActionsList",
                value: function() {
                    for (var e = {
                            reply: "e659",
                            copy: "e921",
                            copyfile: "e948",
                            react: "e9f8",
                            fork: "e922",
                            setreminder: "e9a2",
                            markasunread: "e9b3",
                            messagelink: "e991",
                            edit: "e620",
                            delete: "e633",
                            forward: "e659",
                            pinmsg: "ea1a",
                            unpinmsg: "ea1a",
                            viewreaction: "e61d",
                            thread_reply: "e9d9",
                            private_reply: "e659"
                        }, t = this.state.defaultactionslist, s = [], i = 0; i < t.length; i++) {
                        var n = this.state.selectedactionindex == i;
                        t[i] && ("react" != t[i].name || this.props.actionsconfig.show_as_popup ? s.push(N(Gd, {
                            itemselected: n,
                            storeSelectedItemNode: this.storeSelectedItemNode,
                            actionname: t[i].name,
                            actionvalue: e[t[i].name],
                            msgnode: this.props.msgnode,
                            label: t[i].label,
                            searchterm: this.state.searchactionsval,
                            messageActionCallBack: this.props.messageActionsCallBack
                        })) : s.push(N(Vd, {
                            itemselected: n,
                            actionvalue: e[t[i].name],
                            storeSelectedItemNode: this.storeSelectedItemNode,
                            actionname: t[i].name,
                            msgnode: this.props.msgnode,
                            quickReact: this.props.quickReact,
                            messageActionCallBack: this.props.messageActionsCallBack,
                            hidezomoji: this.props.actionsconfig.hidezomoji,
                            defaultemojis: this.props.actionsconfig.defaultemojis
                        })))
                    }
                    return s.concat(this.getMoreMessageActionsList())
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = this.getMessageActionsList(),
                        i = s.length ? "" : ko.emptyresult,
                        n = !0;
                    e.actionsconfig && ("disable" == e.actionsconfig.search || e.actionsconfig.show_as_popup) && (n = !1);
                    var a = e.actionsconfig.show_as_popup ? ko.msgactions_container + " " + ko.popupcontainerstyle : ko.msgactions_container,
                        o = e.actionsconfig.show_as_popup ? ko.defaultpopupcontainer : "";
                    s = s.length ? s : Oo({
                        customstyles: {
                            errorimg: ko.errorimg,
                            infotext: ko.errorinfotext
                        }
                    });
                    var r = n ? N("div", {
                            class: ko.searchcontainer
                        }, N("input", {
                            ref: this.storeMoreActionSearchNode,
                            onclick: this.searchMessageAction,
                            onkeydown: this.searchMessageAction,
                            oninput: this.searchMessageAction,
                            type: "text",
                            "data-purpose": "messageaction_search",
                            placeholder: re("Search")
                        })) : null,
                        l = e.actionsconfig.rtlmode ? "rtl" : "ltr";
                    return N("div", {
                        tabindex: "0",
                        class: a,
                        onkeydown: this.closeComponent,
                        dir: l,
                        "data-msgoperations": !0
                    }, r, N("div", {
                        style: this.state.defaultheightofcontainer,
                        class: ko.defaultmsgactions_container + " " + i + " " + o
                    }, s))
                }
            }]), s
        }(R),
        Gd = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                var e;
                return a(this, s), (e = t.call(this)).messageActionsCallBack = e.messageActionsCallBack.bind(h(e)), e
            }
            return r(s, [{
                key: "messageActionsCallBack",
                value: function(e) {
                    this.props.messageActionCallBack(this.props.msgnode, this.props.actionname), e.preventDefault(), e.stopPropagation()
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = e.actionname,
                        s = ko.actioncontainer;
                    "delete" == t && (s = ko.actioncontainer + " " + ko.deleteaction);
                    var i = ko.msgactionicon;
                    "reply" != t && "private_reply" != t || (i = ko.msgactionicon + " " + ko.iconreply);
                    var n = e.itemselected ? ko.itemselected : "",
                        a = e.itemselected ? e.storeSelectedItemNode : null,
                        o = e.actionvalue ? N(se, {
                            classname: i,
                            type: "icon",
                            tabindex: "-1",
                            content: e.actionvalue
                        }) : null,
                        r = e.loading ? N("div", {
                            class: ko.loader + " " + ko.loadermargin
                        }) : null;
                    return N(se, {
                        ref: a,
                        classname: s + " " + n,
                        onclick: this.messageActionsCallBack
                    }, o, N("span", {
                        class: ko.actionname
                    }, Hn(e.label, e.searchterm)), r)
                }
            }]), s
        }(R),
        qd = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                var e;
                return a(this, s), (e = t.call(this)).messageActionsCallBack = e.messageActionsCallBack.bind(h(e)), e
            }
            return r(s, [{
                key: "messageActionsCallBack",
                value: function(e) {
                    this.props.messageActionCallBack(this.props.item), e.stopPropagation(), e.preventDefault()
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = e.item,
                        s = e.itemselected ? ko.itemselected : "",
                        i = e.itemselected ? e.storeSelectedItemNode : null;
                    if (e.openmoremessagedialog) return N(se, {
                        ref: i,
                        classname: ko.actioncontainer + " " + s,
                        onclick: this.messageActionsCallBack
                    }, N(se, {
                        classname: ko.moreactionicon + " " + ko.popupicon,
                        type: "icon",
                        content: "e960",
                        tabindex: "-1"
                    }), N("span", {
                        class: ko.moreactionname,
                        title: !0
                    }, re("message.actions.moremsgactions")));
                    var n = N(se, {
                        classname: ko.moreactionicon,
                        type: "icon",
                        content: "e960",
                        tabindex: "-1"
                    });
                    if (t.extension) {
                        var a = oe.get("isUDSDownloadEnabled")() ? _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + t.extension.photo_id + "&x-cli-msg=" + encodeURIComponent('{"x-cliq-resource-module":"photos","type":"appimg"}') : "/_chat/appimg/" + t.extension.photo_id + "/photo.do";
                        n = N("img", {
                            class: ko.actionimg,
                            src: a
                        })
                    }
                    var o = t.loading ? N("div", {
                        class: ko.loader
                    }) : null;
                    return N(se, {
                        ref: i,
                        classname: ko.actioncontainer + " " + s,
                        title: t.hint,
                        onclick: this.messageActionsCallBack
                    }, n, N("span", {
                        class: ko.moreactionname,
                        title: !0
                    }, Hn(t.name, e.searchterm)), o)
                }
            }]), s
        }(R),
        Vd = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                var e;
                a(this, s);
                return (e = t.call(this)).zm = new Pi({
                    default_size: "24",
                    animation: {
                        default_size: "24"
                    }
                }), e.messageActionsCallBack = e.messageActionsCallBack.bind(h(e)), e
            }
            return r(s, [{
                key: "updateQuickReaction",
                value: function(e, t) {
                    this.props.hidezomoji && (e = this.zm.getUnicode(e));
                    var s = t.target.getAttribute("title") || t.target.firstChild && t.target.firstChild.getAttribute("title");
                    this.zm.updateFrequentSmileysList(this.zm.removeTonePrefFromCode(e), s), this.props.quickReact(this.props.msgnode, e)
                }
            }, {
                key: "messageActionsCallBack",
                value: function(e) {
                    this.props.messageActionCallBack(this.props.msgnode, this.props.actionname), e.preventDefault(), e.stopPropagation()
                }
            }, {
                key: "getQuickReactions",
                value: function() {
                    var e = [N("div", {
                            class: ko.quickreaction,
                            onclick: this.messageActionsCallBack
                        }, N(se, {
                            classname: ko.reacticon,
                            type: "icon",
                            tabindex: "0",
                            content: this.props.actionvalue
                        }))],
                        t = this.zm.replaceFrequentSmileySkinTone(this.zm.getFrequentSmileys()),
                        s = "work";
                    this.props.hidezomoji && (s = "emoji");
                    var i = t[s].slice(0, 5);
                    return this.props.defaultemojis && (i = (i = v(this.props.defaultemojis).slice(0, 5)).map(function(e) {
                        return this.zm.checkAndReplaceTonePrefCode(e)
                    }.bind(this))), i.forEach(function(t) {
                        var i = this.zm.getSmiley(t);
                        "emoji" == s && (i = this.zm.getEmoji(t)), e.push(N("div", {
                            class: ko.quickreaction,
                            onclick: this.updateQuickReaction.bind(this, t)
                        }, i))
                    }.bind(this)), e
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = this.getQuickReactions(),
                        s = e.itemselected ? " " + ko.itemselected : "";
                    return N(se, {
                        classname: ko.quickreactionscontainer + s
                    }, t)
                }
            }]), s
        }(R),
        Yd = {
            data: [],
            isinitialized: !1
        };
    var Zd = function() {
        function e() {
            a(this, e), this.unmountComponent = this.unmountComponent.bind(this)
        }
        return r(e, [{
            key: "mountComponent",
            value: function(e) {
                this.node = e.node, ee(N(zd, {
                    msgnode: e.msgnode,
                    allowedactions: e.allowed_actions,
                    messageActionsCallBack: e.messageactionscallback,
                    closeComponent: e.closeComponent,
                    dreFunctionCallBack: e.dreFunctionCallBack,
                    chid: e.chid,
                    datatype: e.datatype,
                    actionsconfig: e.actionsconfig,
                    quickReact: e.quickReact,
                    unmountComponent: this.unmountComponent
                }), e.node)
            }
        }, {
            key: "unmountComponent",
            value: function() {
                ee("", this.node)
            }
        }]), e
    }();
    var Kd = {
            formparent: "mc9fea9169_formparent",
            footer: "mc9fea9169_footer",
            cancelbutton: "mc9fea9169_cancelbutton",
            submitbutton: "mc9fea9169_submitbutton",
            hideclose: "mc9fea9169_hideclose",
            header: "mc9fea9169_header",
            formcontent: "mc9fea9169_formcontent",
            footerprefix: "mc9fea9169_footerprefix",
            hint: "mc9fea9169_hint",
            singleselectvalue: "mc9fea9169_singleselectvalue",
            placeholderstyle: "mc9fea9169_placeholderstyle",
            options: "mc9fea9169_options",
            formitem: "mc9fea9169_formitem",
            inputfield: "mc9fea9169_inputfield",
            singleselect: "mc9fea9169_singleselect",
            inputtextarea: "mc9fea9169_inputtextarea",
            multiselectparent: "mc9fea9169_multiselectparent",
            multiselectparentfocus: "mc9fea9169_multiselectparentfocus",
            groupedinput: "mc9fea9169_groupedinput",
            searchstyle: "mc9fea9169_searchstyle",
            closeicon: "mc9fea9169_closeicon",
            singleselectclose: "mc9fea9169_singleselectclose",
            labelcontainer: "mc9fea9169_labelcontainer",
            label: "mc9fea9169_label",
            mandatory: "mc9fea9169_mandatory",
            formhint: "mc9fea9169_formhint",
            botimage: "mc9fea9169_botimage",
            botname: "mc9fea9169_botname",
            selectedelements_container: "mc9fea9169_selectedelements_container",
            selectedoption: "mc9fea9169_selectedoption",
            closeiconcontainer: "mc9fea9169_closeiconcontainer",
            form_error: "mc9fea9169_form_error",
            opendropdown: "mc9fea9169_opendropdown",
            badge_letter: "mc9fea9169_badge_letter",
            textfieldicon: "mc9fea9169_textfieldicon",
            numberstep: "mc9fea9169_numberstep",
            passwordfieldicon: "mc9fea9169_passwordfieldicon",
            hv_align: "mc9fea9169_hv_align",
            selectedtext: "mc9fea9169_selectedtext",
            textellipse: "mc9fea9169_textellipse",
            dropdowncontainer: "mc9fea9169_dropdowncontainer",
            dropdownoptions: "mc9fea9169_dropdownoptions",
            dropdownmin: "mc9fea9169_dropdownmin",
            listwrapperstyle: "mc9fea9169_listwrapperstyle",
            wrapperwithsearch: "mc9fea9169_wrapperwithsearch",
            listwrappernative1: "mc9fea9169_listwrappernative1",
            dropdownitemstyle: "mc9fea9169_dropdownitemstyle",
            groupeditem: "mc9fea9169_groupeditem",
            customitem: "mc9fea9169_customitem",
            grouped_item_sel: "mc9fea9169_grouped_item_sel",
            dropdownnoimg: "mc9fea9169_dropdownnoimg",
            dropdownitemwithdesc: "mc9fea9169_dropdownitemwithdesc",
            nativeitem: "mc9fea9169_nativeitem",
            showmandatoryerror: "mc9fea9169_showmandatoryerror",
            errorcontainer: "mc9fea9169_errorcontainer",
            itemloading: "mc9fea9169_itemloading",
            dotone: "mc9fea9169_dotone",
            dottwo: "mc9fea9169_dottwo",
            dotthree: "mc9fea9169_dotthree",
            disable: "mc9fea9169_disable",
            mountedfixed: "mc9fea9169_mountedfixed",
            containerwrapperstyle: "mc9fea9169_containerwrapperstyle",
            form_errordescription: "mc9fea9169_form_errordescription",
            multiselectlist_search: "mc9fea9169_multiselectlist_search",
            emptysearch: "mc9fea9169_emptysearch",
            removescroll: "mc9fea9169_removescroll",
            mountedtop: "mc9fea9169_mountedtop",
            searchcontainerstyle: "mc9fea9169_searchcontainerstyle",
            groupeditemtitle: "mc9fea9169_groupeditemtitle",
            textoverflowstyle: "mc9fea9169_textoverflowstyle",
            groupeditemcontainer: "mc9fea9169_groupeditemcontainer",
            emptysearchcontainer: "mc9fea9169_emptysearchcontainer",
            contactimg: "mc9fea9169_contactimg",
            icontext: "mc9fea9169_icontext",
            groupeditemslistcontainer: "mc9fea9169_groupeditemslistcontainer",
            loader: "mc9fea9169_loader",
            dropdownimg: "mc9fea9169_dropdownimg",
            empty_img: "mc9fea9169_empty_img",
            small: "mc9fea9169_small",
            listinfodesc: "mc9fea9169_listinfodesc",
            togglecheckbox: "mc9fea9169_togglecheckbox",
            togglebutton: "mc9fea9169_togglebutton",
            toggleinput: "mc9fea9169_toggleinput",
            zmNightMode: "zmNightMode"
        },
        Xd = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                var e;
                return a(this, s), (e = t.call(this)).storeDropDownNode = e.storeDropDownNode.bind(h(e)), e.addValueToSelectedList = e.addValueToSelectedList.bind(h(e)), e.removeDataFromSelectedList = e.removeDataFromSelectedList.bind(h(e)), e.selected_options = [], e.toggleDropDown = e.toggleDropDown.bind(h(e)), e.hideDropDown = e.hideDropDown.bind(h(e)), e.onMultiSelectSearch = e.onMultiSelectSearch.bind(h(e)), e.storeSearchNode = e.storeSearchNode.bind(h(e)), e.focusInputContainer = e.focusInputContainer.bind(h(e)), e.getGroupedDropDown = e.getGroupedDropDown.bind(h(e)), e.storeGroupedSearchInputNode = e.storeGroupedSearchInputNode.bind(h(e)), e.storeSelectedItemNode = e.storeSelectedItemNode.bind(h(e)), e.storeSingleselectNode = e.storeSingleselectNode.bind(h(e)), e.handleSingleSelectKeyNav = e.handleSingleSelectKeyNav.bind(h(e)), e.onSearch = e.onSearch.bind(h(e)), e.state = {
                    dropdownvisible: !1,
                    searchterm: "",
                    focusinputcontainer: !1,
                    groupeditem_selectedindex: -1,
                    navigation_keycode: ""
                }, e
            }
            return r(s, [{
                key: "componentDidUpdate",
                value: function() {
                    this.groupedsearchnode && this.groupedsearchnode.focus(), this.selecteditemnode && !ln(this.selecteditemnode, this.selecteditemnode.parentElement) && (this.selecteditemnode.offsetTop > 167 ? this.selecteditemnode.parentElement.scrollTop += 2 * this.selecteditemnode.scrollHeight : this.selecteditemnode.parentElement.scrollTop -= 2 * this.selecteditemnode.scrollHeight)
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    this.props.setfocus && this.searchnode && "disable" != this.props.list.status && this.searchnode.focus()
                }
            }, {
                key: "storeSingleselectNode",
                value: function(e) {
                    this.singleselectnode = e
                }
            }, {
                key: "focusInputContainer",
                value: function(e) {
                    "focus" != e.type || this.state.dropdownvisible ? this.setState({
                        focusinputcontainer: !1
                    }) : ("dynamic_select" != this.props.list.type || this.props.list.options || this.props.onTriggerInput(this.props.list.name), this.setState({
                        focusinputcontainer: !0
                    }))
                }
            }, {
                key: "storeSearchNode",
                value: function(e) {
                    this.searchnode = e
                }
            }, {
                key: "storeDropDownNode",
                value: function(e) {
                    this.dropdownnode = e
                }
            }, {
                key: "storeGroupedSearchInputNode",
                value: function(e) {
                    this.groupedsearchnode = e
                }
            }, {
                key: "storeSelectedItemNode",
                value: function(e) {
                    this.selecteditemnode = e
                }
            }, {
                key: "onMultiSelectSearch",
                value: function(e) {
                    if (this.props.list.options.length < 2 && (e.preventDefault(), e.stopPropagation()), "keydown" == e.type) {
                        if (e.keyCode == ut.KEYCODES.BACKSPACE && "" == e.target.value) return void this.removeDataFromSelectedList(this.selected_options[this.selected_options.length - 1], e);
                        if (e.keyCode == ut.KEYCODES.ESCAPE && this.state.dropdownvisible) return e.stopPropagation(), e.preventDefault(), void this.hideDropDown();
                        if (e.keyCode == ut.KEYCODES.TAB) return void this.hideDropDown();
                        if (e.keyCode == ut.KEYCODES.ENTER) {
                            if (this.isgroupeddropdown && this.state.dropdownvisible) return this.addValueToSelectedList(this.getItemBasedOnIndex(this.state.groupeditem_selectedindex)), void(this.props.multiple || this.hideDropDown());
                            if (this.searchnode) return void this.setState({
                                navigation_keycode: e.keyCode
                            })
                        } else if (e.keyCode == ut.KEYCODES.DOWN || e.keyCode == ut.KEYCODES.UP) {
                            if (this.isgroupeddropdown) return void this.navigateGroupedItems(e);
                            if (this.searchnode) return void this.setState({
                                navigation_keycode: e.keyCode
                            })
                        }
                    }
                    "dynamic_select" == this.props.list.type && this.props.onTriggerInput(this.props.list.name, e.target.value.toLowerCase(), this.props.list.multiple), this.setState({
                        searchterm: e.target.value.toLowerCase(),
                        dropdownvisible: !0,
                        navigation_keycode: "",
                        groupeditem_selectedindex: 0
                    })
                }
            }, {
                key: "getItemBasedOnIndex",
                value: function(e) {
                    var t = this.props.multiple ? this.removeSelectedItemFromGroupedList(this.props.list.options) : this.props.list.options;
                    t = this.state.searchterm ? this.filterGroupedList(t) : t;
                    for (var s = 0, i = 0; i < t.length; i++)
                        if (t[i].options)
                            for (var n = 0; n < t[i].options.length; n++) {
                                if (s == e) return t[i].options[n];
                                s++
                            } else {
                                if (s == e) return t[i];
                                s++
                            }
                }
            }, {
                key: "countTotalGroupedItems",
                value: function() {
                    for (var e = this.state.searchterm ? this.filterGroupedList(this.props.list.options) : this.props.list.options, t = e.length, s = 0; s < e.length; s++) e[s].options && (t += e[s].options.length - 1);
                    return t - 1
                }
            }, {
                key: "navigateGroupedItems",
                value: function(e) {
                    var t = e.keyCode,
                        s = this.state.groupeditem_selectedindex,
                        i = this.countTotalGroupedItems();
                    t == ut.KEYCODES.DOWN && s++, t == ut.KEYCODES.UP && s--, s < 0 && (s = 0), s > i && (s = i), this.setState({
                        groupeditem_selectedindex: s
                    })
                }
            }, {
                key: "toggleDropDown",
                value: function(e) {
                    if ("groupedsearch" != e.target.getAttribute("data-purpose") && ("search" != e.target.getAttribute("data-purpose") && !e.target.getAttribute("data-groupedtitle") || ("keydown" != e.type || e.keyCode == ut.KEYCODES.ENTER) && "click" != e.type) && !(this.searchnode && "keydown" == e.type && e.keyCode === ut.KEYCODES.ENTER && this.state.dropdownvisible || ("keydown" !== e.type || e.keyCode !== ut.KEYCODES.ENTER && (e.keyCode != ut.KEYCODES.SPACE || this.props.multiple)) && "click" != e.type)) {
                        this.handleDynamicDropDownClose(), this.searchnode && this.searchnode.focus();
                        var t = "keydown" == e.type ? 0 : -1;
                        this.setState({
                            dropdownvisible: !this.state.dropdownvisible,
                            groupeditem_selectedindex: t,
                            navigation_keycode: e.keyCode,
                            searchterm: ""
                        })
                    }
                }
            }, {
                key: "handleDynamicDropDownClose",
                value: function() {
                    "dynamic_select" == this.props.list.type && (this.state.dropdownvisible || this.props.list.options || this.props.onTriggerInput(this.props.list.name))
                }
            }, {
                key: "hideDropDown",
                value: function() {
                    this.state.dropdownvisible && (this.handleDynamicDropDownClose(), this.setState({
                        dropdownvisible: !1,
                        searchterm: ""
                    }))
                }
            }, {
                key: "handleSingleSelectKeyNav",
                value: function(e) {
                    e.keyCode == ut.KEYCODES.DOWN || e.keyCode == ut.KEYCODES.UP ? (this.setState({
                        navigation_keycode: e.keyCode
                    }), e.preventDefault(), e.stopPropagation()) : e.keyCode == ut.KEYCODES.ENTER && this.state.dropdownvisible ? this.setState({
                        navigation_keycode: e.keyCode
                    }) : this.toggleDropDown(e)
                }
            }, {
                key: "onSearch",
                value: function(e, t) {
                    return "dynamic_select" == this.props.list.type && (this.props.onTriggerInput(this.props.list.name, e), this.setState({
                        searchterm: e.toLowerCase()
                    })), Ir("title", e, t, null, null, "desc").map((function(e) {
                        return e.id
                    }))
                }
            }, {
                key: "addValueToSelectedList",
                value: function(e, t, s) {
                    if (this.props.multiple && this.props.list.value && "native_select" == this.props.list.type) {
                        var i = this.props.list.value;
                        if (this.props.list.max_selections && i.length == this.props.list.max_selections) return
                    }
                    this.props.onItemSelection(this.props.list.name, e), this.props.list.trigger_on_change && this.props.triggerOnChange(this.props.list.name), this.props.multiple && s && (s.stopPropagation(), s.preventDefault()), this.searchnode && this.searchnode.focus(), !this.singleselectnode || (this.singleselectnode.focus(), this.props.searchable || s) ? this.setState({
                        searchterm: "",
                        navigation_keycode: ""
                    }) : this.setState({
                        searchterm: "",
                        navigation_keycode: "",
                        dropdownvisible: !1
                    })
                }
            }, {
                key: "removeDataFromSelectedList",
                value: function(e, t) {
                    t.stopPropagation(), t.preventDefault(), this.singleselectnode && this.singleselectnode.focus(), e && this.props.removeDataFromList(this.props.list.name, e)
                }
            }, {
                key: "removeSelectedItemFromGroupedList",
                value: function(e) {
                    if (!this.props.list.value) return e;
                    for (var t = [], s = this.props.list.value.split(","), i = 0; i < e.length; i++)
                        if (e[i].options) {
                            for (var n = e[i].options, a = [], o = 0; o < n.length; o++) - 1 == s.indexOf(n[o].value) && a.push(n[o]);
                            t.push({
                                label: e[i].label,
                                options: a
                            })
                        } else -1 == s.indexOf(e[i].value) && t.push(e[i]);
                    return t
                }
            }, {
                key: "filterGroupedList",
                value: function(e) {
                    for (var t = [], s = [], i = [], n = this.state.searchterm.trim(), a = 0; a < e.length; a++)
                        if (e[a].options) {
                            for (var o = e[a].options, r = [], l = [], d = 0; d < o.length; d++) o[d].label.toLowerCase().startsWith(n) ? r.push(o[d]) : o[d].label.toLowerCase().indexOf(n) > -1 && l.push(o[d]);
                            t.push({
                                options: r.concat(l),
                                label: e[a].label
                            })
                        } else e[a].label.toLowerCase().startsWith(n) ? s.push(e[a]) : e[a].label.toLowerCase().indexOf(n) > -1 && i.push(e[a]);
                    return s.concat(i).concat(t)
                }
            }, {
                key: "getGroupedDropDown",
                value: function(e) {
                    this.isgroupeddropdown = !0;
                    var t = [];
                    e = this.props.multiple ? this.removeSelectedItemFromGroupedList(e) : e, this.state.searchterm.trim() && (e = this.filterGroupedList(e));
                    for (var s = 0, i = 0; i < e.length; i++)
                        if (e[i].options) {
                            var n = e[i].options;
                            if (!n.length) continue;
                            t.push(N("div", {
                                class: Kd.groupeditemtitle,
                                "data-groupedtitle": !0,
                                title: e[i].label
                            }, e[i].label));
                            for (var a = 0; a < n.length; a++) {
                                var o = "",
                                    r = null;
                                this.state.groupeditem_selectedindex == s && (o = Kd.grouped_item_sel, r = this.storeSelectedItemNode), s++;
                                var l = null,
                                    d = null,
                                    c = n[a].label,
                                    u = null;
                                if (this.props.showimage) {
                                    var m = this.props.showdescription ? "" : " " + Kd.small;
                                    l = n[a].thumbnail ? N("img", {
                                        class: Kd.dropdownimg + m,
                                        "data-value": n[a].value,
                                        src: n[a].thumbnail
                                    }) : N("div", {
                                        class: Kd.empty_img + m
                                    }, Tr(n[a].label))
                                }
                                this.props.showdescription && n[a].description && (d = N("div", {
                                    class: Kd.listinfodesc,
                                    title: n[a].description
                                }, n[a].description), u = c, c = null), t.push(N("div", {
                                    ref: r,
                                    class: Kd.groupeditem + " " + o,
                                    onclick: this.addValueToSelectedList.bind(this, n[a]),
                                    title: c
                                }, l, N("div", {
                                    class: Kd.textoverflowstyle,
                                    title: u
                                }, Hn(n[a].label, this.state.searchterm.trim()), d)))
                            }
                        } else {
                            var h = "",
                                g = null;
                            this.state.groupeditem_selectedindex == s && (h = Kd.grouped_item_sel, g = this.storeSelectedItemNode);
                            var p = null,
                                f = null,
                                v = e[i].label,
                                C = null;
                            if (this.props.showimage) {
                                var b = this.props.showdescription ? "" : " " + Kd.small;
                                p = e[i].thumbnail ? N("img", {
                                    class: Kd.dropdownimg + b,
                                    "data-value": e[i].value,
                                    src: e[i].thumbnail
                                }) : N("div", {
                                    class: Kd.empty_img + b
                                }, Tr(e[i].label))
                            }
                            this.props.showdescription && e[i].description && (f = N("div", {
                                class: Kd.listinfodesc,
                                title: e[i].description
                            }, e[i].description), C = v, v = null), t.push(N("div", {
                                ref: g,
                                onclick: this.addValueToSelectedList.bind(this, e[i]),
                                class: Kd.customitem + " " + h,
                                title: v
                            }, p, N("div", {
                                class: Kd.textoverflowstyle,
                                title: C
                            }, Hn(e[i].label, this.state.searchterm), f))), s++
                        }
                    t = t.length ? t : N("div", {
                        class: Kd.emptysearchcontainer
                    }, Oo());
                    var y = this.props.multiple ? null : N("input", {
                            ref: this.storeGroupedSearchInputNode,
                            onkeydown: this.onMultiSelectSearch,
                            placeholder: re("Search"),
                            oninput: this.onMultiSelectSearch,
                            class: Kd.groupedinput,
                            "data-purpose": "groupedsearch"
                        }),
                        _ = !t.length || this.props.list.isloading ? Kd.dropdownmin : "";
                    return t = this.props.list.isloading ? N("div", {
                        class: Kd.loader + " " + Kd.hv_align
                    }) : t, N("div", {
                        class: Kd.groupeditemcontainer + " " + _
                    }, y, N("div", {
                        class: Kd.groupeditemslistcontainer
                    }, t))
                }
            }, {
                key: "getDropDownContainer",
                value: function(e) {
                    var t = {},
                        s = {},
                        i = [],
                        n = Kd.dropdownitemstyle;
                    (this.props.showdescription || this.props.showimage) && (n += " " + Kd.dropdownitemwithdesc);
                    for (var a = 0; a < e.length; a++) {
                        if (e[a].options) return this.getGroupedDropDown(In(e));
                        i[a] = on(e[a]), i[a].title = i[a].label, i[a].desc = "native_select" == this.props.list.type ? i[a].desc : this.props.showdescription && i[a].description ? i[a].description : "", this.props.showimage ? i[a].thumbnail ? i[a].imgsrc = i[a].thumbnail : (i[a].badge_img = !0, i[a].badge_letter = Tr(i[a].label)) : 0 != i[a].empty_img && (i[a].empty_img = !0, i[a].classname || (i[a].classname = Kd.dropdownnoimg));
                        var o = i[a].id || i[a].value;
                        if (i[a].id = o, s[o] = i[a], this.props.multiple)
                            for (var r = 0; r < this.selected_options.length; r++) "native_select" == this.props.list.type ? this.selected_options[r].id == s[o].id && (t[o] = s[o]) : this.selected_options[r].value == s[o].value && (t[o] = s[o])
                    }
                    if (0 == Object.keys(s).length && "dynamic_select" != this.props.list.type) return this.hideDropDown(), null;
                    var l = !1,
                        d = !1,
                        c = tn("counter", !1),
                        u = 30,
                        m = "",
                        h = Kd.listwrapperstyle,
                        g = !1;
                    return "native_select" == this.props.list.type && (l = !0, c = tn("UC"), u = 55, m = Kd.nativeitem, h += " " + Kd.listwrappernative1), "dynamic_select" == this.props.list.type && (g = !0, this.props.list.isloading && (d = !0)), (this.props.showdescription || this.props.showimage) && (u = 44), this.props.searchable ? ("select" != this.props.list.type && "dynamic_select" != this.props.list.type || this.props.multiple || (h += " " + Kd.wrapperwithsearch), N(Po, {
                        listid: "1",
                        list: s,
                        searchplaceholder: re("Search"),
                        container: this.dropdownnode,
                        fetchImageSource: !1,
                        iscompletelist: !d,
                        multiselect: this.props.multiple,
                        onSearch: this.onSearch,
                        sortComparator: c,
                        excluded_list: t,
                        customlistitemstyles: {
                            customContainerStyles: n + " " + m,
                            containerWrapperStyle: Kd.containerwrapperstyle,
                            customListWrapper: h,
                            rowHeight: u,
                            customsearchstyle: {
                                searchinputstyle: Kd.searchstyle,
                                searchcontainerstyle: Kd.searchcontainerstyle
                            }
                        },
                        handlecustomemptysearch: g,
                        onListItemClicked: this.addValueToSelectedList,
                        searchsequence: this.props.searchsequence,
                        defaultsearch: l,
                        loadingstate: d,
                        searchtext: this.state.searchterm,
                        customsearch: this.props.multiple,
                        sortonsearch: !0,
                        navigation_keycode: this.state.navigation_keycode
                    })) : N(xo, {
                        completelist: !0,
                        list: i,
                        container: this.dropdownnode,
                        customlistitemstyles: {
                            customContainerStyles: Kd.dropdownitemstyle + " " + m,
                            containerWrapperStyle: Kd.containerwrapperstyle,
                            rowHeight: u,
                            customListWrapper: h
                        },
                        onListItemClicked: this.addValueToSelectedList,
                        iscompletelist: !0,
                        loadingstate: d,
                        navigation_keycode: this.state.navigation_keycode
                    })
                }
            }, {
                key: "populateDropDown",
                value: function() {
                    var e = this.props.list;
                    this.selected_options = [];
                    var t = "",
                        s = "",
                        i = "native_select" != e.type && e.options && 0 != e.options.length ? "" : Kd.dropdownmin;
                    if (this.dropdownnode) {
                        var n = $n(this.dropdownnode, "[data-dialogwrapper=true]");
                        this.dropdownnode.offsetParent.offsetTop - n.scrollTop + n.offsetTop + this.dropdownnode.offsetParent.offsetHeight + 200 > n.offsetHeight && (t = this.dropdownnode.offsetHeight, 0 == n.scrollTop && this.dropdownnode.offsetParent.offsetTop < 200 && (t = ""), n.scrollHeight < 490 && "" == t && (s = Kd.mountedfixed, t = ""))
                    }
                    var a = t ? Kd.mountedtop : "";
                    if (this.props.multiple) {
                        if (e.value)
                            if ("string" != typeof e.value) this.selected_options = e.value;
                            else if (e.value.split)
                            for (var o = "" != e.value.split(",") ? e.value.split(",") : [], r = 0; r < o.length; r++)
                                for (var l = 0; l < e.options.length; l++)
                                    if (e.options[l].value == o[r]) this.selected_options.push(e.options[l]);
                                    else if (e.options[l].options)
                            for (var d = e.options[l].options, c = 0; c < d.length; c++) d[c].value == o[r] && this.selected_options.push(d[c]);
                        var u = [],
                            m = null,
                            h = "disable" == this.props.list.status ? "-1" : "0";
                        if (this.selected_options.length)
                            for (var g = 0; g < this.selected_options.length; g++) {
                                var p = this.selected_options[g].label || this.selected_options[g].title || this.selected_options[g];
                                if ("native_select" == e.type) {
                                    this.selected_options[g].id = this.selected_options[g].id ? this.selected_options[g].id : this.selected_options[g].value;
                                    var f = Cr(this.selected_options[g].id),
                                        v = f.imgsrc ? f.imgsrc : "";
                                    m = N("img", {
                                        class: Kd.contactimg + " " + f.classname,
                                        src: v
                                    }), f.badge_letter && (m = N("div", {
                                        class: Kd.contactimg + " " + Kd.badge_letter
                                    }, f.badge_letter))
                                }
                                u.push(N("div", {
                                    class: Kd.selectedoption
                                }, N("div", {
                                    class: Kd.closeiconcontainer
                                }, m, N(se, {
                                    classname: Kd.closeicon,
                                    type: "icon",
                                    content: "e9ee",
                                    tabindex: h,
                                    onclick: this.removeDataFromSelectedList.bind(this, this.selected_options[g])
                                })), N("span", {
                                    class: Kd.selectedtext
                                }, p)))
                            }
                        var C = e.options ? e.options : [];
                        "dynamic_select" == this.props.list.type && this.state.searchterm && (C = this.filterGroupedList(C));
                        var b = u.length ? "" : Kd.emptysearch,
                            y = u.length ? " " : e.placeholder || re("forms.select"),
                            _ = this.state.dropdownvisible ? N("div", {
                                style: {
                                    bottom: t
                                },
                                class: Kd.dropdowncontainer + " " + s + " " + i + " " + a,
                                key: "dropdowncontainer"
                            }, this.getDropDownContainer(C)) : null,
                            W = this.state.focusinputcontainer ? Kd.multiselectparentfocus : "";
                        return N("div", {
                            class: Kd.multiselectparent + " " + W,
                            onclick: this.toggleDropDown,
                            onkeydown: this.toggleDropDown
                        }, N("div", {
                            class: Kd.selectedelements_container
                        }, u, N("input", {
                            tabindex: h,
                            placeholder: y,
                            onfocus: this.focusInputContainer,
                            onblur: this.focusInputContainer,
                            ref: this.storeSearchNode,
                            value: this.state.searchterm,
                            class: Kd.multiselectlist_search + " " + b,
                            onkeydown: this.onMultiSelectSearch,
                            oninput: this.onMultiSelectSearch
                        })), N(se, {
                            classname: Kd.opendropdown,
                            type: "icon",
                            content: "e632",
                            tabindex: "-1"
                        }), _)
                    }
                    var S = e.options ? e.options : [];
                    "dynamic_select" == this.props.list.type && this.state.searchterm && (S = this.filterGroupedList(S));
                    var w = null,
                        M = this.state.dropdownvisible ? N("div", {
                            style: {
                                bottom: t
                            },
                            class: Kd.dropdowncontainer + " " + s + " " + i + " " + a
                        }, this.getDropDownContainer(S)) : null,
                        I = e.placeholder || re("forms.select"),
                        T = Kd.placeholderstyle,
                        A = "disable" == this.props.list.status ? "-1" : "0";
                    if (e.value && "" != e.value) {
                        for (var E = 0; E < e.options.length; E++)
                            if (e.options[E].options)
                                for (var U = e.options[E].options, k = 0; k < U.length; k++) U[k].value == e.value && (I = U[k].label);
                            else e.options[E].value == e.value && (I = e.options[E].label);
                        "native_select" == e.type && (I = e.value.length ? e.value[0].title || e.value[0].label : e.value.title || e.value.label), I != e.placeholder && (w = N(se, {
                            onclick: this.removeDataFromSelectedList.bind(this, e),
                            tabindex: A,
                            classname: Kd.singleselectclose,
                            type: "icon",
                            content: "e634"
                        }), T = Kd.singleselectvalue), "native_select" == e.type && 0 == e.value.length && (w = null)
                    }
                    var x = this.props.searchable ? this.toggleDropDown : this.handleSingleSelectKeyNav;
                    return N("div", {
                        ref: this.storeSingleselectNode,
                        class: Kd.singleselect,
                        tabindex: A,
                        "data-field": "singleselect",
                        onkeydown: x,
                        onclick: this.toggleDropDown
                    }, N("div", {
                        class: T
                    }, N("span", {
                        class: Kd.textellipse
                    }, I)), w, N(se, {
                        classname: Kd.opendropdown,
                        type: "icon",
                        content: "e632",
                        tabindex: "-1"
                    }), M)
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = null;
                    return e.list.isloading && (t = N(Jd, null)), N("div", {
                        class: Kd.options,
                        ref: this.storeDropDownNode
                    }, N(we, {
                        onClickOutside: this.hideDropDown
                    }, this.populateDropDown()), t)
                }
            }]), s
        }(R);

    function Jd() {
        return N("div", {
            class: Kd.itemloading
        }, N("span", {
            class: Kd.dotone
        }), N("span", {
            class: Kd.dottwo
        }), N("span", {
            class: Kd.dotthree
        }))
    }
    var Qd = "mc070469d7_pickerparent",
        ec = "mc070469d7_pickerdropdown",
        tc = "mc070469d7_calendarparent",
        sc = "mc070469d7_calendarcontainer",
        ic = "mc070469d7_timeinput",
        nc = "mc070469d7_pickertoggler",
        ac = "mc070469d7_timezonecontainer",
        oc = "mc070469d7_cancelbutton",
        rc = "mc070469d7_setdate",
        lc = "mc070469d7_invalidDateTime",
        dc = "mc070469d7_actionscontainer",
        cc = "mc070469d7_selectedval",
        uc = "mc070469d7_calendaricon",
        mc = "mc070469d7_placeholder",
        hc = "mc070469d7_value",
        gc = "mc070469d7_closeicon",
        pc = "mc070469d7_zonepicker",
        fc = "mc070469d7_timeinputparent",
        vc = "mc070469d7_timetxt",
        Cc = "mc070469d7_itemfontsize",
        bc = "mc070469d7_mountedtop",
        yc = "mc070469d7_mountedbottom",
        _c = "mc070469d7_labelcontainerbottom",
        Wc = "mc070469d7_labelcontainertop",
        Sc = "mc070469d7_listwrapperstyle",
        wc = "mc070469d7_searchstyle",
        Mc = "mc070469d7_searchcontainerstyle",
        Ic = "mc070469d7_listinfocontainer",
        Tc = null,
        Ac = !1,
        Ec = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                if (a(this, s), i = t.call(this, e), Tc || Ac || (Ac = !0, Xe("v2/timezones", "version=0", (function(e) {
                        var t = JSON.parse(e).data;
                        Tc = {};
                        for (var s = 0; s < t.length; s++) {
                            var i = t[s].id;
                            Tc[i] = {
                                title: "(" + t[s].offset + ") " + t[s].label,
                                empty_img: !0,
                                label: t[s].label,
                                offset: t[s].offset,
                                id: t[s].id,
                                index: s
                            }
                        }
                    }))), i.togglePicker = i.togglePicker.bind(h(i)), i.storePickerNode = i.storePickerNode.bind(h(i)), i.onTimeChange = i.onTimeChange.bind(h(i)), i.hidePicker = i.hidePicker.bind(h(i)), i.submitDateTime = i.submitDateTime.bind(h(i)), i.onSelectTimeZone = i.onSelectTimeZone.bind(h(i)), i.onDateSelection = i.onDateSelection.bind(h(i)), i.clearValues = i.clearValues.bind(h(i)), i.toggleZonePicker = i.toggleZonePicker.bind(h(i)), i.selecteddate = new Date, e.presetdate)
                    if (e.mountedviaforms) {
                        var n = e.presetdate.split("T")[0],
                            o = e.presetdate.split("T")[1];
                        i.selecteddate = new Date(n), i.selecteddate = new Date(i.selecteddate.setHours(o.split(":")[0])), i.selecteddate = new Date(i.selecteddate.setMinutes(o.split(":")[1]))
                    } else i.selecteddate = new Date(e.presetdate);
                var r = e.placeholder;
                return i.time = [Te(i.selecteddate.getTime()), xe(i.selecteddate.getTime())], i.timezone = e.disable_time_zone_picker ? null : Intl.DateTimeFormat().resolvedOptions().timeZone, e.value && e.value.time_zone_id && (i.timezone = e.value.time_zone_id), (e.presetdate && e.mountedviaforms && Oe(e.presetdate.split("T")[0]) || e.presetdate) && (r = ke(i.selecteddate) + ", " + Te(i.selecteddate.getTime()), i.timezone && (r += ", " + i.timezone), i.props.onDateSelection(i.selecteddate, i.time[1], i.timezone)), i.state = {
                    pickervisible: !1,
                    value: r,
                    zonepickervisible: !1
                }, i
            }
            return r(s, [{
                key: "clearValues",
                value: function(e) {
                    this.setState({
                        value: this.props.placeholder
                    }), this.props.onDateSelection(null, null, null), e.stopPropagation(), e.preventDefault()
                }
            }, {
                key: "onSelectTimeZone",
                value: function(e, t, s) {
                    this.timezone = e, this.toggleZonePicker(s)
                }
            }, {
                key: "submitDateTime",
                value: function() {
                    if ("Invalid" != this.time) {
                        this.props.onDateSelection(this.selecteddate, this.time[1], this.timezone && this.timezone.id ? this.timezone.id : this.timezone);
                        var e = ke(this.selecteddate) + ", " + this.time[0];
                        this.timezone && (e += ", " + (this.timezone.id ? this.timezone.id : this.timezone)), this.setState({
                            value: e
                        }), this.hidePicker()
                    }
                }
            }, {
                key: "onDateSelection",
                value: function(e) {
                    this.selecteddate = e, this.validateDateTimeSelection()
                }
            }, {
                key: "onTimeChange",
                value: function(e, t, s, i) {
                    if (s || i) this.time = "Invalid";
                    else {
                        var n = parseInt(t.split(":")[0]);
                        this.time = [e, n < 10 && 0 != n ? "0" + t + ":00" : t + ":00"]
                    }
                    this.validateDateTimeSelection()
                }
            }, {
                key: "validateDateTimeSelection",
                value: function() {
                    if (this.props.filter && "Invalid" != this.time) {
                        var e = this.props.filter.from ? new Date(this.props.filter.from) : null,
                            t = this.props.filter.to ? new Date(this.props.filter.to) : null,
                            s = !1,
                            i = new Date(this.selecteddate.getTime()),
                            n = f(this.time[1].split(":"), 3),
                            a = n[0],
                            o = n[1],
                            r = n[2];
                        i.setHours(a, o, r), Ue(e, this.selecteddate) ? i < e && (s = !0) : Ue(t, this.selecteddate) && i > t && (s = !0), this.setState({
                            invalidDateTime: s
                        })
                    }
                }
            }, {
                key: "storePickerNode",
                value: function(e) {
                    this.pickernode = e
                }
            }, {
                key: "hidePicker",
                value: function(e) {
                    e && e.target.getAttribute("data-id") || this.setState({
                        pickervisible: !1
                    })
                }
            }, {
                key: "onSearchTimeZone",
                value: function(e, t) {
                    return Ir("title", e, t, null, null, "desc").map((function(e) {
                        return e.id
                    }))
                }
            }, {
                key: "togglePicker",
                value: function(e) {
                    if ("keydown" == e.type && 13 == e.keyCode || "click" == e.type) {
                        var t = !1;
                        if (this.pickernode.getBoundingClientRect().bottom + 340 > window.innerHeight) t = !0;
                        else if (this.props.mountedviaforms && this.pickernode) {
                            var s = $n(this.pickernode, "[data-dialogwrapper=true]"),
                                i = this.pickernode.offsetParent.offsetParent.offsetTop,
                                n = i - s.scrollTop + s.offsetTop + this.pickernode.offsetParent.offsetParent.offsetHeight;
                            n + 200 > s.offsetHeight && n + 200 < i && 0 != s.scrollTop && (t = !0)
                        }
                        this.setState({
                            pickervisible: !this.state.pickervisible,
                            mountedtop: t,
                            zonepickervisible: !1
                        })
                    } else e && "keydown" == e.type && 27 == e.keyCode && this.state.pickervisible && (e.preventDefault(), e.stopPropagation(), this.setState({
                        pickervisible: !1
                    }))
                }
            }, {
                key: "toggleZonePicker",
                value: function(e) {
                    (e && "click" == e.type || e && "keydown" == e.type && (e.keyCode == ut.KEYCODES.ENTER || e.keyCode == ut.KEYCODES.SPACE)) && (e.stopPropagation(), e.preventDefault()), this.setState({
                        zonepickervisible: !this.state.zonepickervisible
                    })
                }
            }, {
                key: "getDateTimePickerContainer",
                value: function() {
                    var e = null;
                    this.timezone && this.timezone.offset ? e = this.timezone.offset : Tc && Tc[this.timezone] ? (e = Tc[this.timezone].offset, this.timezone = Tc[this.timezone]) : e = this.selecteddate.toTimeString().split(" ")[1].replace("+", " +");
                    var t = this.time[1].split(":");
                    t = new Date(this.selecteddate).setHours(t[0], t[1]);
                    var s = this.state.zonepickervisible ? N(we, {
                            onClickOutside: this.toggleZonePicker
                        }, N("div", {
                            class: pc
                        }, N(Po, {
                            listid: "1",
                            list: on(Tc),
                            searchplaceholder: re("Search"),
                            iscompletelist: !0,
                            onSearch: this.onSearchTimeZone,
                            excluded_list: this.timezone,
                            onListItemClicked: this.onSelectTimeZone,
                            searchsequence: this.props.searchsequence,
                            sortComparator: tn("index"),
                            sortonsearch: !0,
                            onKeyPress: function(e) {
                                e.keyCode !== ut.KEYCODES.TAB && e.keyCode !== ut.KEYCODES.ESCAPE || (e.preventDefault(), e.stopPropagation(), this.setState({
                                    zonepickervisible: !1
                                }))
                            }.bind(this),
                            customlistitemstyles: {
                                customContainerStyles: Kd.dropdownitemstyle + " " + Cc,
                                containerWrapperStyle: Kd.containerwrapperstyle,
                                customListWrapper: Sc,
                                listinfoContainerStyle: Ic,
                                rowHeight: 30,
                                customsearchstyle: {
                                    searchinputstyle: wc,
                                    searchcontainerstyle: Mc
                                }
                            }
                        }))) : "",
                        i = this.state.mountedtop ? bc : yc,
                        n = this.props.disable_time_zone_picker ? null : N("div", {
                            class: ac
                        }, N("div", {
                            tabindex: "0",
                            class: cc,
                            onkeydown: this.toggleZonePicker,
                            onclick: this.toggleZonePicker
                        }, e), s),
                        a = "";
                    return this.state.invalidDateTime && (a = lc), N("div", {
                        class: ec + " " + i
                    }, N("div", {
                        class: tc
                    }, N(ce, {
                        onDateSelection: this.onDateSelection,
                        selecteddate: this.selecteddate,
                        customclass: {
                            calendarcontainer: sc
                        },
                        filter: this.props.filter
                    })), N("div", {
                        class: fc + " " + a
                    }, N("div", {
                        class: ic
                    }, N("span", {
                        class: vc
                    }, re("pinmsg.time.heading")), N(Ga, {
                        onTimeChange: this.onTimeChange,
                        time: t,
                        filter: this.props.filter
                    })), n), N("div", {
                        class: dc
                    }, N(se, {
                        classname: oc,
                        type: "button",
                        content: re("common.cancel"),
                        onclick: this.hidePicker
                    }), N(se, {
                        classname: rc + " " + a,
                        type: "button",
                        content: re("datetime.setdatetime"),
                        onclick: this.submitDateTime
                    })))
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = null,
                        i = "disable" == this.props.status ? "-1" : "0",
                        n = e.value && e.value.date_time ? hc : mc,
                        a = e.value && e.value.date_time && !e.ignoreclose ? N(se, {
                            tabindex: i,
                            classname: gc,
                            type: "icon",
                            content: "e9ee",
                            onclick: this.clearValues
                        }) : null,
                        o = "";
                    return t.pickervisible && (o = t.mountedtop ? Wc : _c, s = this.getDateTimePickerContainer()), N(we, {
                        onClickOutside: this.hidePicker
                    }, N("div", {
                        ref: this.storePickerNode,
                        class: Qd
                    }, N("div", {
                        tabindex: i,
                        class: nc + " " + o,
                        onclick: this.togglePicker,
                        onkeydown: this.togglePicker
                    }, N("div", {
                        class: n
                    }, t.value), a, N(se, {
                        classname: uc,
                        type: "icon",
                        content: "e9e6",
                        tabindex: "-1"
                    })), s))
                }
            }]), s
        }(R);
    var Uc = "mcfceb2bb4_filesharecontainer",
        kc = "mcfceb2bb4_fileinput",
        Nc = "mcfceb2bb4_descriptioncontainer",
        xc = "mcfceb2bb4_fileiconcontainer",
        Oc = "mcfceb2bb4_addiconcontainer",
        Rc = "mcfceb2bb4_uploadicon",
        Dc = "mcfceb2bb4_fileshareinputfocus",
        $c = "mcfceb2bb4_fileitem",
        Hc = "mcfceb2bb4_fileitemcontainer",
        Lc = "mcfceb2bb4_filedetails",
        Pc = "mcfceb2bb4_filename",
        Fc = "mcfceb2bb4_itemclose",
        Bc = "mcfceb2bb4_filesize",
        jc = "mcfceb2bb4_addicon",
        zc = "mcfceb2bb4_fileicon",
        Gc = "mcfceb2bb4_progressbarcontainer",
        qc = "mcfceb2bb4_progressbar",
        Vc = "mcfceb2bb4_progressbarinvisible",
        Yc = "mcfceb2bb4_imgthumb",
        Zc = "mcfceb2bb4_placeholdertext",
        Kc = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    filelist: {},
                    inputfocused: !1
                }, i.onUploadFile = i.onUploadFile.bind(h(i)), i.constructFileItem = i.constructFileItem.bind(h(i)), i.clearFileItem = i.clearFileItem.bind(h(i)), i.uploadToCliq = i.uploadToCliq.bind(h(i)), i.storeInputNode = i.storeInputNode.bind(h(i)), i.toggleInputBgColor = i.toggleInputBgColor.bind(h(i)), i.handleInputClick = i.handleInputClick.bind(h(i)), i
            }
            return r(s, [{
                key: "componentDidMount",
                value: function() {
                    this.props.setfocus && this.inputnode && this.inputnode.focus()
                }
            }, {
                key: "componentDidUpdate",
                value: function(e, t) {
                    null != this.props.item.value && this.props.item.value.length != Object.keys(this.state.filelist).length && "" == this.props.item.value && this.setState({
                        filelist: {}
                    })
                }
            }, {
                key: "storeInputNode",
                value: function(e) {
                    this.inputnode = e
                }
            }, {
                key: "toggleInputBgColor",
                value: function() {
                    this.setState({
                        inputfocused: !this.state.inputfocused
                    })
                }
            }, {
                key: "convertToFilesArray",
                value: function(e) {
                    var t = [];
                    for (var s in e) t.push(e[s]);
                    return 0 == t.length && (t = ""), t
                }
            }, {
                key: "uploadToCliq",
                value: function(e) {
                    var t = "v2/forms/" + this.props.formid + "/files",
                        s = function(e, t) {
                            var s = JSON.parse(t),
                                i = this.state.filelist;
                            i[e.name] && "inprogress" == i[e.name].status && (i[e.name].status = "completed", i[e.name].id = s.id), this.props.addFilesToList(this.props.item.name, this.convertToFilesArray(i)), this.setState({
                                fileslist: i
                            })
                        }.bind(this, e),
                        i = function(e, t) {
                            var s = this.state.filelist;
                            s[e.name] && (s[e.name].loaded = t.loaded, s[e.name].total = t.total, this.setState({
                                fileslist: s
                            }))
                        }.bind(this, e),
                        n = new FormData;
                    n.append("zchat_csrparam", Le(oe.get("CHATCFCOOKIENAME"))), n.append("files", e), Je(t, n, s, null, null, null, {
                        "X-SID": WebMessanger.getSid()
                    }, {
                        usedefaultcontenttype: !0
                    }, {
                        progress: i
                    })
                }
            }, {
                key: "onUploadFile",
                value: function(e) {
                    for (var t = e.target.files, s = this.state.filelist ? this.state.filelist : {}, i = this.props.item.max_selections ? this.props.item.max_selections : this.props.item.multiple ? 10 : 1, n = 0; n < t.length; n++)
                        if (!s[t[n].name]) {
                            if (Object.keys(s).length == i) break;
                            if (jn(t[n]) && !Bn([t[n]], 52428800)) {
                                if (t[n].status = "inprogress", s[t[n].name] = t[n], t[n].type.indexOf("image") > -1) {
                                    var a = new FileReader;
                                    a.readAsDataURL(t[n]), a.onloadend = function(e, t) {
                                        var s = this.state.filelist;
                                        s[e.name].imgsrc = t.target.result, this.setState({
                                            filelist: s
                                        })
                                    }.bind(this, t[n])
                                }
                                this.uploadToCliq(t[n])
                            }
                        }
                    e.target.value = null, this.props.addFilesToList(this.props.item.name, this.convertToFilesArray(s)), this.setState({
                        filelist: s
                    })
                }
            }, {
                key: "clearFileItem",
                value: function(e, t) {
                    var s = this.state.filelist;
                    delete s[e.name], this.props.addFilesToList(this.props.item.name, this.convertToFilesArray(s)), t.stopPropagation(), t.preventDefault(), this.setState({
                        filelist: s
                    })
                }
            }, {
                key: "constructFileItem",
                value: function() {
                    var e = [],
                        t = this.state.filelist;
                    for (var s in t) {
                        var i = "";
                        "completed" != t[s].status && t[s].status || (i = Vc);
                        var n = t[s].loaded / t[s].total || 0,
                            a = N("div", {
                                class: Gc + " " + i
                            }, N("div", {
                                class: qc,
                                style: {
                                    transform: "scaleX( " + n + " ) "
                                }
                            })),
                            o = N(se, {
                                classname: zc,
                                type: "icon",
                                tabindex: "-1",
                                content: "e9b1"
                            });
                        t[s].type.indexOf("image") > -1 && t[s].imgsrc && (o = N("img", {
                            class: Yc,
                            src: t[s].imgsrc
                        })), e.push(N("div", {
                            class: $c,
                            key: t[s].name
                        }, N("div", {
                            class: xc
                        }, o), N("div", {
                            class: Lc
                        }, N("div", {
                            class: Pc
                        }, t[s].name), N("div", {
                            class: Bc
                        }, Fn(t[s].size))), N("div", {
                            class: Fc,
                            onclick: this.clearFileItem.bind(this, t[s])
                        }, N(se, {
                            type: "icon",
                            tabindex: "-1",
                            content: "e634"
                        })), a))
                    }
                    var r = this.props.item.max_selections ? this.props.item.max_selections : this.props.item.multiple ? 10 : 1;
                    return e.length && r != Object.keys(this.state.filelist).length && e.push(N("div", {
                        class: Oc
                    }, N(se, {
                        classname: jc,
                        type: "icon",
                        tabindex: "-1",
                        content: "e636"
                    }))), N("div", {
                        class: Hc
                    }, " ", e, " ")
                }
            }, {
                key: "handleInputClick",
                value: function(e) {
                    this.inputnode && this.inputnode.click()
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = e.item.max_selections ? e.item.max_selections : e.item.multiple ? 10 : 1,
                        i = e.item.placeholder || re("forms.filesharedescription1"),
                        n = re(1 == s ? "forms.filesharedescription3" : "forms.filesharedescription2", [s]),
                        a = N("div", {
                            class: Nc
                        }, N(se, {
                            type: "icon",
                            tabindex: "-1",
                            content: "e911",
                            classname: Rc
                        }), N("div", {
                            class: Zc
                        }, i), N("div", {
                            class: Zc
                        }, n)),
                        o = Gi(t.filelist) ? a : this.constructFileItem(),
                        r = N("input", {
                            ref: this.storeInputNode,
                            onfocus: this.toggleInputBgColor,
                            onblur: this.toggleInputBgColor,
                            class: kc,
                            onchange: this.onUploadFile,
                            type: "file",
                            multiple: !0
                        });
                    s == Object.keys(t.filelist).length && (r = null);
                    var l = this.state.inputfocused ? Dc : "";
                    return N("div", {
                        class: Uc + " " + l,
                        onclick: this.handleInputClick
                    }, r, o)
                }
            }]), s
        }(R),
        Xc = !1;

    function Jc() {
        Xc = !0
    }
    var Qc = Object.freeze({
        __proto__: null,
        default: Kc,
        getLastUploadStatus: function() {
            return Xc
        },
        resetLastUploadStatus: function() {
            Xc = !1
        },
        setLastUploadStatus: Jc
    });
    var eu = "mcdd4a006e_locinpcontainer",
        tu = "mcdd4a006e_descriptioncontainer",
        su = "mcdd4a006e_mapdialogcontainer",
        iu = "mcdd4a006e_overlay",
        nu = "mcdd4a006e_topbar",
        au = "mcdd4a006e_closeicon",
        ou = "mcdd4a006e_dropdowncontainer",
        ru = "mcdd4a006e_selectloc",
        lu = "mcdd4a006e_dropdownborder",
        du = "mcdd4a006e_listwrapperstyle",
        cu = "mcdd4a006e_searchstyle",
        uu = "mcdd4a006e_searchcontainerstyle",
        mu = "mcdd4a006e_itemfontsize",
        hu = "mcdd4a006e_addresslist",
        gu = "mcdd4a006e_zohomapcontainer",
        pu = "mcdd4a006e_markericon",
        fu = "mcdd4a006e_addressval",
        vu = "mcdd4a006e_description",
        Cu = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                a(this, s), (i = t.call(this, e)).showMap = i.showMap.bind(h(i)), i.hideMap = i.hideMap.bind(h(i)), i.getMapDialog = i.getMapDialog.bind(h(i)), i.toggleAddressSelector = i.toggleAddressSelector.bind(h(i)), i.storeMapElemNode = i.storeMapElemNode.bind(h(i)), i.hideAddressSelector = i.hideAddressSelector.bind(h(i)), i.handleMapClickEvent = i.handleMapClickEvent.bind(h(i)), i.handleCurrentLocationClick = i.handleCurrentLocationClick.bind(h(i)), i.getLocationListFromCliq = Mn(i.getLocationListFromCliq.bind(h(i)), h(i), 500), i.onSearch = i.onSearch.bind(h(i)), i.selectLocation = i.selectLocation.bind(h(i)), i.onSelectAddress = i.onSelectAddress.bind(h(i)), i.storeDropDownContainer = i.storeDropDownContainer.bind(h(i)), i.mountMapData = i.mountMapData.bind(h(i));
                var n = "",
                    o = "",
                    r = "",
                    l = {},
                    d = {};
                return e.item.boundary && (n = e.item.boundary.latitude, o = e.item.boundary.longitude, r = e.item.boundary.radius || ""), i.config = {
                    navigationControl: e.navigationControl || !0,
                    currentLocation: e.currentLocation || !0,
                    marker: e.marker || !0,
                    radius: 1e3 * r,
                    latitude: n,
                    longitude: o
                }, e.item.value && e.item.value.latitude && e.item.value.longitude && e.item.value.full_address && (n = e.item.value.latitude, o = e.item.value.longitude, l = {
                    full_address: e.item.value.full_address,
                    lat: n,
                    lon: o
                }, d = {
                    latitude: n,
                    longitude: o
                }), Gi(d) && e.item.boundary && (d = e.item.boundary), i.state = {
                    mapvisible: !1,
                    locationdetail: d,
                    address_details: l,
                    addresslist: {},
                    address_selector_visible: !1,
                    searchterm: "",
                    listloading: !1,
                    isselectloading: !1
                }, i
            }
            return r(s, [{
                key: "storeDropDownContainer",
                value: function(e) {
                    this.dropdowncontainer = e
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    _u()
                }
            }, {
                key: "componentDidUpdate",
                value: function(e, t) {
                    t.mapvisible != this.state.mapvisible && this.state.mapvisible && (this.dropdowncontainer && this.dropdowncontainer.focus(), bu && bu ? this.mountMapData() : _u(this.mountMapData))
                }
            }, {
                key: "handleMapClickEvent",
                value: function(e) {
                    var t = e.lngLat.lat,
                        s = e.lngLat.lng;
                    if (this.config.radius && this.isOutOfRadius(t, s)) Gn(re("location.boundary"));
                    else {
                        if (this.state.isselectloading) return e.preventDefault(), void e.stopPropagation();
                        this.getCurrentAddressFromCliq(t, s), this.mapmarker.setLngLat({
                            lat: t,
                            lng: s
                        }), this.setState({
                            locationdetail: {
                                latitude: t,
                                longitude: s
                            }
                        })
                    }
                }
            }, {
                key: "setMarker",
                value: function(e, t) {
                    var s = {
                            anchor: "center",
                            draggable: !0,
                            element: vn("span", "wms_markelem", pu),
                            offset: [-0, -12]
                        },
                        i = e || this.state.locationdetail.latitude || 0,
                        n = t || this.state.locationdetail.longitude || 0;
                    this.mapmarker = new mapboxgl.Marker(s).setLngLat({
                        lat: i,
                        lng: n
                    }).addTo(this.mapobj)
                }
            }, {
                key: "isOutOfRadius",
                value: function(e, t) {
                    var s = function(e) {
                            return e * Math.PI / 180
                        },
                        i = parseFloat(this.config.latitude),
                        n = parseFloat(this.config.longitude),
                        a = s(i),
                        o = s(e),
                        r = s(e - i),
                        l = s(t - n),
                        d = Math.sin(r / 2) * Math.sin(r / 2) + Math.cos(a) * Math.cos(o) * Math.sin(l / 2) * Math.sin(l / 2);
                    return 6378137 * (2 * Math.atan2(Math.sqrt(d), Math.sqrt(1 - d))) > this.config.radius
                }
            }, {
                key: "setRadiusCircle",
                value: function() {
                    var e = this.props.item.boundary.latitude,
                        t = this.props.item.boundary.longitude;
                    this.mapobj.addSource("radius_source", {
                        type: "geojson",
                        data: {
                            type: "FeatureCollection",
                            features: [{
                                type: "Feature",
                                geometry: {
                                    type: "Point",
                                    coordinates: [parseFloat(t), parseFloat(e)]
                                }
                            }]
                        }
                    }), this.mapobj.addLayer({
                        type: "circle",
                        id: "radius",
                        source: "radius_source",
                        layout: {
                            visibility: "visible"
                        },
                        paint: {
                            "circle-radius": {
                                stops: [
                                    [0, 0],
                                    [20, this.config.radius / .075 / Math.cos(parseFloat(e) * Math.PI / 180)]
                                ],
                                base: 2
                            },
                            "circle-color": "rgba(0, 102, 204, 0.2)",
                            "circle-opacity": 1
                        }
                    })
                }
            }, {
                key: "mountMapData",
                value: function() {
                    var e = oe.get("photoserver").split(".");
                    e = e[1] + "." + e[2];
                    var t = {
                        container: this.mapelemnode,
                        zoom: 12,
                        center: [this.state.locationdetail.longitude || 0, this.state.locationdetail.latitude || 0],
                        style: "https://maps." + e + "/vector/styles/bright.json"
                    };
                    if (this.mapobj = new mapboxgl.Map(t), this.config.marker && this.setMarker(), this.config.navigationControl && this.mapobj.addControl(new mapboxgl.NavigationControl, "bottom-right"), this.config.currentLocation) {
                        var s = new mapboxgl.GeolocateControl({
                            positionOptions: {
                                enableHighAccuracy: !0
                            }
                        });
                        this.mapobj.addControl(s), s._geolocateButton && (s._geolocateButton.onclick = this.handleCurrentLocationClick)
                    }
                    this.config.radius && this.mapobj.on("style.load", function() {
                        this.setRadiusCircle()
                    }.bind(this)), this.mapobj.on("mousedown", this.handleMapClickEvent)
                }
            }, {
                key: "handleCurrentLocationClick",
                value: function(e) {
                    var t = function(e) {
                        var t = e.coords.latitude,
                            s = e.coords.longitude;
                        this.config.radius && this.isOutOfRadius(t, s) ? Gn(re("location.boundary")) : (this.mapmarker.setLngLat({
                            lat: t,
                            lng: s
                        }), this.getCurrentAddressFromCliq(t, s), this.setState({
                            locationdetail: {
                                latitude: t,
                                longitude: s
                            }
                        }))
                    }.bind(this);
                    if (this.state.isselectloading) return e.preventDefault(), void e.stopPropagation();
                    navigator.geolocation.getCurrentPosition(t, (function() {
                        Gn(re("location.current.notfound"))
                    })), e.stopPropagation(), e.preventDefault()
                }
            }, {
                key: "storeMapElemNode",
                value: function(e) {
                    this.mapelemnode = e
                }
            }, {
                key: "toggleAddressSelector",
                value: function(e) {
                    if ("keydown" == e.type && e.keyCode == ut.KEYCODES.ENTER || "click" == e.type) {
                        if ("search" == e.target.getAttribute("data-purpose")) return;
                        this.setState({
                            address_selector_visible: !this.state.address_selector_visible,
                            searchterm: ""
                        }), e.stopPropagation(), e.preventDefault()
                    }
                }
            }, {
                key: "hideAddressSelector",
                value: function(e) {
                    this.setState({
                        address_selector_visible: !1,
                        searchterm: ""
                    }), e.stopPropagation(), e.preventDefault()
                }
            }, {
                key: "getCurrentAddressFromCliq",
                value: function(e, t, s) {
                    Xe("v2/geolocations/" + e + "," + t, null, function(s, i) {
                        var n = JSON.parse(i).data,
                            a = this.state.isselectloading;
                        if (this.config.radius && this.isOutOfRadius(e, t)) return Gn(re("location.boundary")), void this.setState({
                            isselectloading: !s && a
                        });
                        var o = !s;
                        s && (this.props.onLocationSelect(this.props.item.name, n), a = !1), this.setState({
                            address_details: n,
                            mapvisible: o,
                            isselectloading: a
                        })
                    }.bind(this, s), function(e) {
                        Gn(re("location.invalid")), e && this.setState({
                            isselectloading: !1
                        })
                    }.bind(this, s))
                }
            }, {
                key: "populateMap",
                value: function() {
                    var e = oe.get("LOCATION_INFO").CACHED.coords.latitude,
                        t = oe.get("LOCATION_INFO").CACHED.coords.longitude;
                    this.getCurrentAddressFromCliq(e, t), this.setState({
                        mapvisible: !0,
                        locationdetail: {
                            latitude: e,
                            longitude: t
                        }
                    })
                }
            }, {
                key: "populateEmptyMap",
                value: function() {
                    this.config.latitude = .1, this.config.longitude = .1, this.setState({
                        mapvisible: !0
                    })
                }
            }, {
                key: "getLocation",
                value: function() {
                    var e = {
                            enableHighAccuracy: !0,
                            timeout: 5e3
                        },
                        t = function(e) {
                            navigator.permissions && navigator.permissions.query({
                                name: "geolocation"
                            }).then(function(e) {
                                oe.get("LOCATION_INFO").PERMISSIONSTATE = e.state
                            }.bind(this)), oe.get("LOCATION_INFO").CACHED = e, this.populateMap()
                        }.bind(this),
                        s = function() {
                            oe.get("LOCATION_INFO").PERMISSIONSTATE = "denied", Gn(re("location.current.notfound")), this.populateEmptyMap()
                        }.bind(this);
                    "granted" == oe.get("LOCATION_INFO").PERMISSIONSTATE ? oe.get("LOCATION_INFO").CACHED ? this.populateMap() : navigator.geolocation.getCurrentPosition(t, s, e) : this.config.latitude || this.config.longitude ? this.populateEmptyMap() : navigator.geolocation.getCurrentPosition(t, s, e)
                }
            }, {
                key: "showMap",
                value: function(e) {
                    ("keydown" == e.type && e.keyCode == ut.KEYCODES.ENTER || "click" == e.type) && (Gi(this.state.locationdetail) ? this.getLocation() : this.setState({
                        mapvisible: !0
                    }))
                }
            }, {
                key: "hideMap",
                value: function(e) {
                    ("keydown" == e.type && e.keyCode == ut.KEYCODES.ENTER || "click" == e.type) && (this.setState({
                        mapvisible: !1,
                        addresslist: {},
                        searchterm: ""
                    }), e.stopPropagation(), e.preventDefault())
                }
            }, {
                key: "getLocationListFromCliq",
                value: function(e, t) {
                    var s = this;
                    Xe("v2/geolocations", "query=" + e.toLowerCase() + "&limit=10&lat=" + this.state.locationdetail.latitude + "&lon=" + this.state.locationdetail.longitude, (function(e) {
                        var t = JSON.parse(e).data,
                            i = {};
                        if (t.length) {
                            t = Yn(t, s.state.searchterm.toLowerCase(), "full_address");
                            for (var n = 0; n < t.length; n++) i[n] = t[n], i[n].title = i[n].full_address, i[n].empty_img = !0, i[n].id = n;
                            s.setState({
                                addresslist: i,
                                listloading: !1
                            })
                        } else s.setState({
                            listloading: !1
                        })
                    }))
                }
            }, {
                key: "onSearch",
                value: function(e, t) {
                    return e.trim() != this.state.searchterm.trim() && (this.getLocationListFromCliq(e, t), this.setState({
                        searchterm: e.trim(),
                        listloading: !0
                    })), Ir("title", e, t, null, null, "desc").map((function(e) {
                        return e.id
                    }))
                }
            }, {
                key: "onSelectAddress",
                value: function(e, t, s) {
                    this.config.radius && this.isOutOfRadius(e.lat, e.lon) ? Gn(re("location.boundary")) : (this.mapmarker.setLngLat({
                        lat: e.lat,
                        lng: e.lon
                    }), this.mapobj.flyTo({
                        center: [e.lon, e.lat],
                        zoom: 12
                    }), s.stopPropagation(), s.preventDefault(), this.setState({
                        address_details: e,
                        locationdetail: {
                            latitude: e.lat,
                            longitude: e.lon
                        },
                        address_selector_visible: !1
                    }))
                }
            }, {
                key: "selectLocation",
                value: function(e) {
                    ("keydown" == e.type && e.keyCode == ut.KEYCODES.ENTER || "click" == e.type) && (this.getCurrentAddressFromCliq(this.state.locationdetail.latitude, this.state.locationdetail.longitude, !0), this.setState({
                        isselectloading: !0
                    }))
                }
            }, {
                key: "getDropDownContainer",
                value: function() {
                    var e = this.state.addresslist || {},
                        t = Gi(this.state.address) ? "" : this.state.address_details.full_address,
                        s = this.state.address_selector_visible ? N("div", {
                            class: hu
                        }, N(Po, {
                            listid: "1",
                            list: e,
                            searchplaceholder: re("Search"),
                            iscompletelist: !this.state.listloading,
                            loadingstate: this.state.listloading,
                            onSearch: this.onSearch,
                            sortonsearch: !0,
                            sortComparator: tn("id"),
                            onListItemClicked: this.onSelectAddress,
                            customlistitemstyles: {
                                customContainerStyles: Kd.dropdownitemstyle + " " + mu,
                                containerWrapperStyle: Kd.containerwrapperstyle,
                                customListWrapper: du,
                                rowHeight: 30,
                                customsearchstyle: {
                                    searchinputstyle: cu,
                                    searchcontainerstyle: uu
                                }
                            }
                        })) : "",
                        i = this.state.address_selector_visible ? lu : "",
                        n = this.state.listloading ? N(Jd, null) : null;
                    return N("div", {
                        ref: this.storeDropDownContainer,
                        class: ou + " " + i,
                        tabindex: "0",
                        onkeydown: this.toggleAddressSelector,
                        onclick: this.toggleAddressSelector
                    }, N("div", {
                        class: fu
                    }, t || $WC.I18N("Search")), N(we, {
                        onClickOutside: this.hideAddressSelector
                    }, N(se, {
                        classname: Kd.opendropdown,
                        type: "icon",
                        content: "e632",
                        tabindex: "-1"
                    }), s), n)
                }
            }, {
                key: "getMapDialog",
                value: function() {
                    var e = this.state.isselectloading ? " " + Kd.loader : "",
                        t = this.state.isselectloading ? "" : re("location.selectlocation");
                    return N("div", {
                        class: su
                    }, N("div", {
                        class: nu
                    }, this.getDropDownContainer(), N(se, {
                        type: "button",
                        tabindex: "0",
                        content: t,
                        onclick: this.selectLocation,
                        classname: ru + e
                    }), N(se, {
                        tabindex: "0",
                        type: "icon",
                        classname: au,
                        content: "e9ee",
                        onclick: this.hideMap
                    })), N("div", {
                        class: gu,
                        ref: this.storeMapElemNode
                    }))
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = this.state.address_details.full_address;
                    Gi(this.state.address_details) && (s = this.props.item.placeholder || re("location.description"));
                    var i = "",
                        n = "";
                    return this.state.mapvisible && (i = this.getMapDialog(), n = N("div", {
                        class: iu
                    })), N("div", {
                        class: eu,
                        tabindex: "0",
                        onkeydown: this.showMap,
                        onclick: this.showMap
                    }, N("div", {
                        class: tu
                    }, N(se, {
                        tabindex: "-1",
                        type: "icon",
                        content: "e90e"
                    }), N("div", {
                        class: vu
                    }, s)), n, i)
                }
            }]), s
        }(R),
        bu = !1,
        yu = !1;

    function _u(e) {
        if (!bu) {
            var t = {
                src: $WC.Config.get("staticserverpath") + "/js/8a9d5d34_zohomaps.js"
            };
            oe.get("clientsrivalues") && oe.get("clientsrivalues")["zohomaps.js"] && (t.crossOrigin = "anonymous", t.integrity = oe.get("clientsrivalues")["zohomaps.js"]);
            var s = vn("script", null, null, t);
            document.head.appendChild(s), s.onload = function() {
                bu = !0, yu && e && e()
            }
        }
        if (!yu) {
            var i = {
                rel: "stylesheet",
                href: "/ichat/css/d88fa1ab_zohomaps.css"
            };
            oe.get("clientsrivalues") && oe.get("clientsrivalues")["zohomaps.css"] && (i.crossOrigin = "anonymous", i.integrity = oe.get("clientsrivalues")["zohomaps.css"]);
            var n = vn("link", null, null, i);
            document.head.appendChild(n), n.onload = function() {
                yu = !0, bu && e && e()
            }
        }
    }
    var Wu = "mc313f4674_radioitem",
        Su = "mc313f4674_radioitemscontainer",
        wu = "mc313f4674_customradiobtncontainer",
        Mu = "mc313f4674_checkboxcontainer",
        Iu = "mc313f4674_radioinput",
        Tu = "mc313f4674_checkboxinput",
        Au = "mc313f4674_label",
        Eu = "mc313f4674_selected",
        Uu = "mc313f4674_checkbox",
        ku = "mc313f4674_checkboxsel",
        Nu = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).storeSelectParentNode = i.storeSelectParentNode.bind(h(i)), i.getRadioField = i.getRadioField.bind(h(i)), i.handleRadioButtonSelection = i.handleRadioButtonSelection.bind(h(i)), i.handleCheckBoxSelection = i.handleCheckBoxSelection.bind(h(i)), i.state = {
                    values: i.constructValuesObj()
                }, i
            }
            return r(s, [{
                key: "constructValuesObj",
                value: function() {
                    for (var e = {}, t = this.props.item.value ? this.props.item.value.split(",") : "", s = this.props.item.options, i = 0; i < s.length; i++) e[s[i].value] = !1, t.indexOf(s[i].value) > -1 && (e[s[i].value] = !0);
                    return e
                }
            }, {
                key: "componentDidUpdate",
                value: function(e) {
                    JSON.stringify(e.item.options) != JSON.stringify(this.props.item.options) && this.setState({
                        values: this.constructValuesObj()
                    })
                }
            }, {
                key: "storeSelectParentNode",
                value: function(e) {
                    this.selectparentnode = e
                }
            }, {
                key: "handleRadioButtonSelection",
                value: function(e) {
                    var t = e.target,
                        s = this.state.values;
                    for (var i in s) s[i] = !1, t.value == i && (s[i] = !0);
                    s[t.value] = !0, this.props.onItemSelection(this.props.item.name, t.value), this.props.item.trigger_on_change && this.props.triggerOnChange(this.props.item.name, t.value), this.setState({
                        values: s
                    })
                }
            }, {
                key: "handleCheckBoxSelection",
                value: function(e) {
                    var t = this.state.values,
                        s = e.target;
                    t[s.value] = s.checked;
                    var i = "";
                    for (var n in t) t[n] && (i = i.length > 0 ? i + "," + n : n);
                    this.props.onItemSelection(this.props.item.name, i), this.props.item.trigger_on_change && this.props.triggerOnChange(this.props.item.name, i), this.setState({
                        values: t
                    })
                }
            }, {
                key: "getRadioField",
                value: function() {
                    for (var e = [], t = this.props.item.options, s = this.props.item.name, i = "disable" == this.props.item.status ? "-1" : "0", n = 0; n < t.length; n++) {
                        var a = this.state.values[t[n].value] ? Eu : "";
                        e.push(N("div", {
                            class: Wu
                        }, N("div", {
                            class: wu
                        }, N("div", {
                            class: a
                        })), N("input", {
                            tabindex: i,
                            class: Iu,
                            type: "radio",
                            name: "formradio" + s,
                            value: t[n].value,
                            onchange: this.handleRadioButtonSelection,
                            id: "formradio" + s + n
                        }), N("label", {
                            class: Au,
                            title: t[n].label,
                            for: "formradio" + s + n
                        }, t[n].label)))
                    }
                    return N("div", {
                        ref: this.storeSelectParentNode,
                        class: Su
                    }, e)
                }
            }, {
                key: "getCheckBoxField",
                value: function() {
                    for (var e = [], t = this.props.item.options, s = this.props.item.name, i = "disable" == this.props.item.status ? "-1" : "0", n = 0; n < t.length; n++) {
                        var a = this.state.values[t[n].value] ? ku : Uu;
                        e.push(N("div", {
                            class: Mu
                        }, N("div", {
                            class: a
                        }, " "), N("input", {
                            tabindex: i,
                            class: Tu,
                            onChange: this.handleCheckBoxSelection,
                            type: "checkbox",
                            checked: this.state.values[t[n].value],
                            name: "formchkbx" + s + n,
                            id: "formchkbx" + s + n,
                            value: t[n].value
                        }), N("label", {
                            class: Au,
                            title: t[n].label,
                            for: "formchkbx" + s + n
                        }, t[n].label)))
                    }
                    return N("div", {
                        ref: this.storeSelectParentNode
                    }, e, " ")
                }
            }, {
                key: "render",
                value: function(e) {
                    return N("div", null, "radio" == e.type ? this.getRadioField() : this.getCheckBoxField(), " ")
                }
            }]), s
        }(R);
    var xu = "mc800af117_formcatalogue",
        Ou = "mc800af117_container",
        Ru = "mc800af117_searchcontainer",
        Du = "mc800af117_catalogue_items",
        $u = "mc800af117_cartitem",
        Hu = "mc800af117_cartitem_details",
        Lu = "mc800af117_itemname",
        Pu = "mc800af117_itemdescription",
        Fu = "mc800af117_cartitem_action",
        Bu = "mc800af117_cartitem_image",
        ju = "mc800af117_empty_image",
        zu = "mc800af117_broken_image",
        Gu = "mc800af117_checkmark",
        qu = "mc800af117_removeicon",
        Vu = "mc800af117_subtractItemCount",
        Yu = "mc800af117_addItemCount",
        Zu = "mc800af117_selectedcontainer",
        Ku = "mc800af117_dash",
        Xu = "mc800af117_addButton",
        Ju = "mc800af117_addedButton",
        Qu = "mc800af117_stepcounter",
        em = "mc800af117_selectedItem",
        tm = "mc800af117_selecteditemname",
        sm = "mc800af117_deleteitem",
        im = "mc800af117_textcenter",
        nm = "mc800af117_itemCounterInput",
        am = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).allitems = e.item.options, i.formitemname = e.item.name, i.max_selections = e.item.max_selections || 10, i.mandatory = e.item.mandatory, i.handleSearch = i.handleSearch.bind(h(i)), i.onItemSelect = i.onItemSelect.bind(h(i)), i.handleItemCountChange = i.handleItemCountChange.bind(h(i)), i.addDataToList = i.addDataToList.bind(h(i)), i.state = {
                    catalogueItems: e.item.options,
                    searchvalue: "",
                    selecteditems: [],
                    error_images: []
                }, i
            }
            return r(s, [{
                key: "componentWillMount",
                value: function() {
                    if (this.props.item.value) {
                        var e = this.props.item.value.split(","),
                            t = this.state.catalogueItems.map((function(t) {
                                return -1 !== e.indexOf(t.value) && (t.selected = !0, t.counter && (t.counter.count = t.counter.value || t.counter.min || 1)), t
                            }));
                        this.addDataToList(e), this.setState({
                            catalogueItems: t,
                            selecteditems: e
                        })
                    }
                }
            }, {
                key: "handleSearch",
                value: function(e) {
                    var t = e.target.value || "",
                        s = Ir("label", t, this.allitems, null, null, "description");
                    this.setState({
                        searchvalue: t,
                        catalogueItems: s
                    })
                }
            }, {
                key: "onItemSelect",
                value: function(e, t) {
                    var s = v(this.allitems),
                        i = v(this.state.selecteditems);
                    if (this.props.updateSelectionError(this.formitemname, t ? i.length + 1 : i.length - 1), !t || i.length !== this.max_selections) {
                        for (var n = 0; n < s.length; n++)
                            if (s[n].value === e.value) {
                                s[n].selected = t, t ? -1 === i.indexOf(s[n].value) && i.push(s[n].value) : (-1 !== i.indexOf(s[n].value) && i.splice(i.indexOf(s[n].value), 1), s[n].counter && (s[n].counter.count = s[n].counter.value || s[n].counter.min || 1));
                                break
                            }
                        this.addDataToList(i), this.setState({
                            searchvalue: "",
                            catalogueItems: s,
                            selecteditems: i
                        })
                    }
                }
            }, {
                key: "handleItemCountChange",
                value: function(e, t) {
                    for (var s = v(this.allitems), i = v(this.state.selecteditems), n = 0; n < s.length; n++)
                        if (s[n].value === e.value) {
                            var a = e.counter.count || e.counter.value || e.counter.step_value || e.counter.min || 1,
                                o = e.counter.step_value || 1;
                            t ? a += o : a -= o, "number" == typeof e.counter.max && a > e.counter.max && (a = e.counter.max), s[n].counter.count = a, ("number" == typeof e.counter.min && e.counter.count < e.counter.min || e.counter.count <= 0) && (e.counter.count = e.counter.value || e.counter.step_value || e.counter.min || 0, delete s[n].selected, i.splice(i.indexOf(s[n].value), 1));
                            break
                        }
                    this.addDataToList(i), this.setState({
                        catalogueItems: s,
                        selecteditems: i,
                        searchval: ""
                    })
                }
            }, {
                key: "addDataToList",
                value: function(e) {
                    var t = {};
                    this.allitems.forEach((function(s) {
                        if (-1 !== e.indexOf(s.value)) {
                            var i = 1;
                            s.counter && (s.counter.count ? i = s.counter.count : s.counter.value ? i = s.counter.value : s.counter.min && (i = s.counter.min)), t[s.value] = i
                        }
                    })), this.props.onItemSelection(this.formitemname, t)
                }
            }, {
                key: "getCatalogItems",
                value: function() {
                    return this.state.catalogueItems.map(function(e) {
                        var t = e.thumbnail ? N("img", {
                            src: e.thumbnail,
                            class: Bu,
                            onerror: function() {
                                var t = v(this.state.error_images);
                                t.push(e.thumbnail), this.setState({
                                    error_images: t
                                })
                            }.bind(this)
                        }) : N("div", {
                            class: ju
                        }); - 1 !== this.state.error_images.indexOf(e.thumbnail) && (t = N("div", {
                            class: zu
                        }));
                        var s, i = e.description ? N("div", {
                            class: Pu
                        }, e.description) : null;
                        return s = e.selected ? e.counter ? N("div", {
                            class: Ju + " " + Qu
                        }, N("div", {
                            class: Vu,
                            onclick: function(t) {
                                this.handleItemCountChange(e, !1), t.stopPropagation()
                            }.bind(this)
                        }), N("input", {
                            type: "text",
                            class: nm,
                            value: e.counter.count || e.counter.value || e.counter.step_value || e.counter.min || 1,
                            onkeydown: function(t) {
                                t.keyCode == ut.KEYCODES.UP ? this.handleItemCountChange(e, !0) : t.keyCode == ut.KEYCODES.DOWN && this.handleItemCountChange(e, !1), t.preventDefault(), t.stopPropagation()
                            }.bind(this)
                        }), N("div", {
                            class: Yu,
                            onclick: function(t) {
                                this.handleItemCountChange(e, !0)
                            }.bind(this)
                        })) : N("div", {
                            class: Ju,
                            onclick: function(t) {
                                this.onItemSelect(e, !1)
                            }.bind(this)
                        }, N("span", {
                            class: Gu
                        }), re("forms.catalogue.added")) : N("div", {
                            class: Xu,
                            onclick: function(t) {
                                this.onItemSelect(e, !0)
                            }.bind(this)
                        }, re("Add")), N("div", {
                            key: e.value,
                            class: $u,
                            "data-value": e.value
                        }, N("div", {
                            class: Hu
                        }, N("div", {
                            class: Lu
                        }, e.label), i), N("div", {
                            class: Fu
                        }, t, s))
                    }.bind(this))
                }
            }, {
                key: "getSelectedItems",
                value: function() {
                    var e = [];
                    return this.allitems.forEach(function(t) {
                        if (-1 !== this.state.selecteditems.indexOf(t.value)) {
                            var s = t.counter && (t.counter.count || t.counter.value || t.counter.step_value || t.counter.min) || 1;
                            e.push(N("div", {
                                key: t.value,
                                class: em
                            }, N("div", {
                                class: sm,
                                onclick: function(e) {
                                    this.onItemSelect(t, !1)
                                }.bind(this)
                            }, N("span", {
                                class: qu
                            })), N("span", {
                                class: tm,
                                title: t.label
                            }, t.label), N("span", {
                                class: Ku
                            }, "-"), N("span", {
                                "data-count": s
                            }, s)))
                        }
                    }.bind(this)), 0 == e.length ? null : N("div", {
                        class: Zu
                    }, e)
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = this.getCatalogItems(),
                        i = this.getSelectedItems();
                    return 0 === s.length && (s = N("div", {
                        class: Pu + " " + im
                    }, re("search.noresult"))), N("div", {
                        class: xu
                    }, N("div", {
                        class: Ou
                    }, N("div", {
                        class: Ru
                    }, N(Do, {
                        searchplaceholder: re("Search"),
                        searchvalue: this.state.searchvalue,
                        handleChange: this.handleSearch
                    })), N("div", {
                        class: Du
                    }, s)), i)
                }
            }]), s
        }(R);
    var om = "mc76ad5c7d_options",
        rm = "mc76ad5c7d_phoneinputgroup",
        lm = "mc76ad5c7d_countrycodeparent",
        dm = "mc76ad5c7d_focused",
        cm = "mc76ad5c7d_countrycodeinput",
        um = "mc76ad5c7d_dropdownarrow",
        mm = "mc76ad5c7d_phonenumberinput",
        hm = "mc76ad5c7d_searchinput",
        gm = "mc76ad5c7d_dropdown",
        pm = "mc76ad5c7d_dropdownlistcontainer",
        fm = "mc76ad5c7d_dropdownitems",
        vm = "mc76ad5c7d_dialcode",
        Cm = "mc76ad5c7d_countryname",
        bm = "mc76ad5c7d_noresultitem",
        ym = "mc76ad5c7d_emptySearchResultImage",
        _m = "mc76ad5c7d_emptySearchResultInfo",
        Wm = "mc76ad5c7d_emptySearchResultSubtext",
        Sm = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                a(this, s), (i = t.call(this, e)).getCountryCodeDropdown = i.getCountryCodeDropdown.bind(h(i)), i.setCountryDialCode = i.setCountryDialCode.bind(h(i)), i.storePhoneNumberInput = i.storePhoneNumberInput.bind(h(i)), i.storeCountryListSearchNode = i.storeCountryListSearchNode.bind(h(i)), i.searchCountryDialCode = i.searchCountryDialCode.bind(h(i)), i.initCountryDialCode = i.initCountryDialCode.bind(h(i)), i.updateValues = i.updateValues.bind(h(i)), i.storeDropdownListNode = i.storeDropdownListNode.bind(h(i)), i.storeFocusedDropdownItem = i.storeFocusedDropdownItem.bind(h(i));
                var n = i.props.item.value;
                return i.state = {
                    country_code: n && n.country_code || "ind",
                    phone_number: n && n.phone_number || "",
                    dial_code: "",
                    dropdownopen: !1,
                    focusedDropdownItem: -1,
                    countryList: []
                }, i
            }
            return r(s, [{
                key: "componentWillMount",
                value: function() {
                    0 == wm.length ? function(e) {
                        if (Im.push(e), Mm) return;
                        Mm = !0, Xe("v2/countries", null, (function(e) {
                            e = JSON.parse(e), wm = e.data, Mm = !1, Im.forEach((function(e) {
                                "function" == typeof e && e(wm)
                            })), Im = []
                        }), (function() {
                            Mm = !1, Im = []
                        }), null, null, {
                            "X-ZCSRF-TOKEN": Yi()
                        })
                    }(function(e) {
                        this.initCountryDialCode()
                    }.bind(this)) : this.initCountryDialCode()
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    this.props.setfocus && this.inputnode && this.inputnode.focus()
                }
            }, {
                key: "componentDidUpdate",
                value: function(e, t) {
                    this.state.dropdownopen && this.countrysearchnode && this.countrysearchnode.focus(), this.dropdownlistnode && this.focussedcountynode && !ln(this.focussedcountynode, this.dropdownlistnode, !1) && yn(this.focussedcountynode, {
                        block: "center"
                    }, this.dropdownlistnode)
                }
            }, {
                key: "storePhoneNumberInput",
                value: function(e) {
                    this.inputnode = e
                }
            }, {
                key: "storeCountryListSearchNode",
                value: function(e) {
                    this.countrysearchnode = e
                }
            }, {
                key: "storeFocusedDropdownItem",
                value: function(e) {
                    this.focussedcountynode = e
                }
            }, {
                key: "storeDropdownListNode",
                value: function(e) {
                    this.dropdownlistnode = e
                }
            }, {
                key: "initCountryDialCode",
                value: function() {
                    var e = wm,
                        t = e.find(function(e) {
                            return e.iso3_code == this.state.country_code
                        }.bind(this));
                    this.props.filter && this.props.filter.country_code && (e = e.filter(function(e) {
                        return -1 !== this.props.filter.country_code.indexOf(e.iso3_code)
                    }.bind(this))), this.allAllowedCountries = e, this.setState({
                        dial_code: t && t.dial_code ? "+" + t.dial_code : "",
                        country_code: t && t.iso3_code ? t.iso3_code : "",
                        countryList: e
                    })
                }
            }, {
                key: "searchCountryDialCode",
                value: function(e) {
                    var t = e.target.value,
                        s = this.allAllowedCountries.filter((function(e) {
                            return !t || !t.trim() || (t = t.trim().toLowerCase(), e.name.toLowerCase().includes(t) || ("+" + e.dial_code).includes(t))
                        }));
                    this.setState({
                        countryList: s,
                        focusedDropdownItem: s.length > 0 ? 0 : -1
                    })
                }
            }, {
                key: "setCountryDialCode",
                value: function(e) {
                    e && (this.setState({
                        dial_code: "+" + e.dial_code,
                        country_code: e.iso3_code,
                        countryList: this.allAllowedCountries,
                        dropdownopen: !1,
                        focusedDropdownItem: -1
                    }, this.updateValues), this.inputnode.focus())
                }
            }, {
                key: "getCountryCodeDropdown",
                value: function() {
                    var e = this.state.countryList;
                    return 0 == (e = e.map(function(e, t) {
                        var s = fm,
                            i = null;
                        return t == this.state.focusedDropdownItem && (s += " " + dm, i = this.storeFocusedDropdownItem), N("div", {
                            class: s,
                            key: e.iso3_code,
                            onclick: this.setCountryDialCode.bind(this, e),
                            ref: i,
                            title: e.name
                        }, N("div", {
                            class: vm
                        }, " +", e.dial_code, " "), N("div", {
                            class: Cm
                        }, " ", e.name, " "))
                    }.bind(this))).length && (e = N("div", {
                        class: bm
                    }, N("img", {
                        src: $WC.Config.get("staticserverpath") + "/images/bar/a9c2d1f2_search_empty.svg",
                        class: ym
                    }), N("div", {
                        class: _m
                    }, re("search.noresult")), N("div", {
                        class: Wm
                    }, re("search.another")))), N("div", {
                        class: gm,
                        onclick: function(e) {
                            e.stopPropagation(), e.preventDefault()
                        }
                    }, N("div", {
                        class: hm
                    }, N("input", {
                        type: "text",
                        placeholder: re("Search"),
                        onInput: this.searchCountryDialCode,
                        ref: this.storeCountryListSearchNode,
                        onKeyDown: function(e) {
                            var t = this.state.focusedDropdownItem;
                            return e.keyCode == ut.KEYCODES.ENTER ? (e.preventDefault(), e.stopPropagation(), void this.setCountryDialCode(this.state.countryList[t > -1 ? t : 0])) : e.keyCode == ut.KEYCODES.ESCAPE || e.keyCode == ut.KEYCODES.TAB && !e.shiftKey ? (e.keyCode == ut.KEYCODES.ESCAPE && (e.preventDefault(), e.stopPropagation()), void this.setState({
                                dropdownopen: !1,
                                countryList: this.allAllowedCountries,
                                focusedDropdownItem: -1
                            })) : (e.keyCode == ut.KEYCODES.DOWN && t < this.state.countryList.length - 1 ? (e.preventDefault(), e.stopPropagation(), t += 1) : e.keyCode == ut.KEYCODES.UP && t > 0 && (e.preventDefault(), e.stopPropagation(), t -= 1), void this.setState({
                                focusedDropdownItem: t
                            }))
                        }.bind(this)
                    })), N("div", {
                        class: pm,
                        ref: this.storeDropdownListNode
                    }, e))
                }
            }, {
                key: "updateValues",
                value: function() {
                    this.props.addDataToList(this.props.item.name, {
                        country_code: this.state.country_code,
                        phone_number: this.state.phone_number
                    })
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = lm,
                        i = null;
                    t.dropdownopen && (s += " " + dm, i = this.getCountryCodeDropdown());
                    var n = function(e) {
                        e.stopPropagation(), e.preventDefault(), this.setState({
                            dropdownopen: !t.dropdownopen,
                            countryList: this.allAllowedCountries,
                            focusedDropdownItem: -1
                        })
                    }.bind(this);
                    return N("div", {
                        class: om
                    }, N("div", {
                        class: rm
                    }, N(we, {
                        onClickOutside: function(e) {
                            this.setState({
                                dropdownopen: !1,
                                countryList: this.allAllowedCountries,
                                focusedDropdownItem: -1
                            })
                        }.bind(this)
                    }, N("div", {
                        class: s
                    }, N("input", {
                        type: "text",
                        value: t.dial_code,
                        class: cm,
                        "tab-index": 1,
                        onfocus: n,
                        readonly: !0
                    }), N("span", {
                        class: um,
                        onclick: n
                    }), i)), N("input", {
                        type: "text",
                        "tab-index": 1,
                        onInput: function(e) {
                            this.setState({
                                phone_number: e.target.value
                            })
                        }.bind(this),
                        onChange: function(e) {
                            this.updateValues()
                        }.bind(this),
                        class: mm,
                        ref: this.storePhoneNumberInput,
                        value: t.phone_number,
                        placeholder: e.item.placeholder
                    })))
                }
            }]), s
        }(R),
        wm = [],
        Mm = !1,
        Im = [];
    var Tm = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).setLabelInputValue = i.setLabelInputValue.bind(h(i)), i.setDateInputValue = i.setDateInputValue.bind(h(i)), i.setDateTimeValue = i.setDateTimeValue.bind(h(i)), i.storeFormItemNode = i.storeFormItemNode.bind(h(i)), i.storeItemNode = i.storeItemNode.bind(h(i)), i.storeErrorContainerNode = i.storeErrorContainerNode.bind(h(i)), i
            }
            return r(s, [{
                key: "componentWillReceiveProps",
                value: function(e) {
                    ((e.inputfield.showmandatoryerror || e.inputfield.max_length_error || e.inputfield.max_selection_error || e.inputfield.validationerror) && e.scroll_to_error || e.inputfield.form_error_msg) && this.scrollIntoView()
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    this.props.setfocus && this.itemnode && "disable" != this.props.inputfield.status && this.itemnode.focus(), "location" == this.props.inputfield.type ? this.props.addDataToList(this.props.inputfield.name, this.props.inputfield.value || {}) : "toggle" == this.props.inputfield.type && this.props.addDataToList(this.props.inputfield.name, !!this.props.inputfield.value && this.props.inputfield.value)
                }
            }, {
                key: "storeItemNode",
                value: function(e) {
                    this.itemnode = e
                }
            }, {
                key: "storeFormItemNode",
                value: function(e) {
                    this.formitemnode = e
                }
            }, {
                key: "storeErrorContainerNode",
                value: function(e) {
                    this.errorContainerNode = e
                }
            }, {
                key: "setLabelInputValue",
                value: function(e) {
                    var t = this.props.inputfield;
                    t.showmandatoryerror && (t.showmandatoryerror = !1), this.props.updateValidationError(t.name, e.target.value), this.props.addDataToList(t.name, e.target.value)
                }
            }, {
                key: "setDateInputValue",
                value: function(e) {
                    var t = "";
                    if (e) {
                        var s = e.getDate() < 10 ? "0" + e.getDate() : e.getDate(),
                            i = e.getMonth() + 1;
                        i = i < 10 ? "0" + i : i, "date" == this.props.inputfield.type && (t = e.getFullYear() + "-" + i + "-" + s)
                    }
                    this.props.addDataToList(this.props.inputfield.name, t)
                }
            }, {
                key: "setDateTimeValue",
                value: function(e, t, s) {
                    var i = "";
                    if (e && t && s) {
                        var n = e.getDate() < 10 ? "0" + e.getDate() : e.getDate(),
                            a = e.getMonth() + 1;
                        a = a < 10 ? "0" + a : a, i = {
                            date_time: e.getFullYear() + "-" + a + "-" + n + "T" + t,
                            time_zone_id: s
                        }
                    }
                    this.props.addDataToList(this.props.inputfield.name, i)
                }
            }, {
                key: "scrollIntoView",
                value: function() {
                    var e = this.formitemnode;
                    this.formitemnode.offsetHeight + 20 > this.formitemnode.parentElement.offsetHeight && (e = this.errorContainerNode), yn(e)
                }
            }, {
                key: "constructOptionsDetails",
                value: function(e) {
                    var t = {},
                        s = [];
                    if ("contacts" == e && (t = Dr("", !0).concat(Lr(""))).length)
                        for (var i = 0; i < t.length; i++)
                            if (!t[i].ISBOT) {
                                var n = vr(t[i]);
                                s.push({
                                    label: t[i].DNAME,
                                    value: t[i].DNAME,
                                    desc: t[i].EMAILID,
                                    imgsrc: n.imgsrc,
                                    classname: n.classname,
                                    empty_img: !1,
                                    id: t[i].USERID,
                                    UC: t[i].UC,
                                    counter: i
                                })
                            }
                    if ("conversations" == e && (t = Nr("")).length)
                        for (var a = 0; a < t.length; a++) {
                            var o = vr(t[a]),
                                r = !!o.badge_img,
                                l = !!o.badge_letter && o.badge_letter,
                                d = !o.imgsrc && !r,
                                c = 2 == t[a].PARTICIPANTS.length ? Cr(t[a].CHATID).classname : o.classname;
                            s.push({
                                label: t[a].TITLE,
                                value: t[a].TITLE,
                                imgsrc: o.imgsrc,
                                classname: c,
                                empty_img: d,
                                id: t[a].CHATID,
                                UC: t[a].UC,
                                badge_img: r,
                                badge_letter: l,
                                fonticon_class: o.fonticon_class
                            })
                        }
                    if ("channels" == e && (t = Br("", null, !0)).length)
                        for (var u = 0; u < t.length; u++) {
                            var m = vr(t[u]),
                                h = !m.imgsrc;
                            s.push({
                                label: t[u].dn,
                                value: t[u].dn,
                                imgsrc: m.imgsrc,
                                classname: m.classname,
                                empty_img: h,
                                id: t[u].chid,
                                UC: t[u].unreadmsgs,
                                fonticon_class: m.fonticon_class,
                                oc_id: t[u].oc_id
                            })
                        }
                    return s
                }
            }, {
                key: "constructFormItem",
                value: function() {
                    var e = [],
                        t = on(this.props.inputfield),
                        s = Kd.label,
                        i = null,
                        n = "disable" == t.status ? "-1" : "0";
                    t.mandatory && (s = s + " " + Kd.mandatory), t.hint && (i = N("span", {
                        class: Kd.hint,
                        title: t.hint
                    }, "- ", t.hint)), e.push(N("div", {
                        class: Kd.labelcontainer
                    }, N("div", {
                        class: s
                    }, t.label), i));
                    var a = null;
                    t.isloading && (a = N("div", {
                        class: Kd.itemloading
                    }, N("span", {
                        class: Kd.dotone
                    }), N("span", {
                        class: Kd.dottwo
                    }), N("span", {
                        class: Kd.dotthree
                    })));
                    var o = null;
                    if (t.step_value && (o = function(e) {
                            t.showmandatoryerror && (t.showmandatoryerror = !1);
                            var s = t.value || t.min || 0;
                            if (e ? s += t.step_value : s -= t.step_value, t.step_value != Math.floor(t.step_value))
                                if ("integer" == t.format) s = Math.floor(s);
                                else if ("float" == t.format) {
                                var i = t.step_value.toString().split(".")[1].length;
                                s = parseFloat(parseFloat(s).toFixed(i))
                            }
                            "number" == typeof t.min && s <= t.min ? s = t.min : "number" == typeof t.max && s >= t.max && (s = t.max), this.props.updateValidationError(t.name, s), this.props.addDataToList(t.name, s)
                        }.bind(this)), "text" == t.type || "number" == t.type) {
                        var r = null,
                            l = "text",
                            d = null;
                        if ("number" == t.type && (t.step_value ? (r = N("div", null, N(se, {
                                classname: Kd.numberstep,
                                type: "icon",
                                tabindex: "0",
                                onclick: function(e) {
                                    o(!1), e.preventDefault()
                                }.bind(this),
                                content: "e903"
                            }), N(se, {
                                classname: Kd.numberstep,
                                type: "icon",
                                tabindex: "0",
                                onclick: function(e) {
                                    o(!0), e.preventDefault()
                                }.bind(this),
                                content: "e636"
                            })), d = function(e) {
                                e.keyCode == ut.KEYCODES.UP ? o(!0) : e.keyCode == ut.KEYCODES.DOWN && o(!1)
                            }.bind(this)) : r = N(se, {
                                classname: Kd.textfieldicon + " " + Kd.icontext,
                                type: "icon",
                                tabindex: "-1"
                            }, 123)), t.format && "password" == t.format) {
                            l = t.visible ? "text" : "password";
                            var c = t.visible ? "e947" : "e946",
                                u = function(e) {
                                    e.preventDefault(), this.props.togglePasswordVisibility(t.name)
                                }.bind(this);
                            r = N(se, {
                                classname: Kd.passwordfieldicon,
                                type: "icon",
                                content: c,
                                tabindex: "-1",
                                onclick: u
                            })
                        }
                        t.format && "tel" == t.format && (r = N(se, {
                            classname: Kd.textfieldicon,
                            type: "icon",
                            content: "e9fe",
                            tabindex: "-1"
                        })), t.format && "email" == t.format && (r = N(se, {
                            classname: Kd.textfieldicon,
                            type: "icon",
                            content: "e669",
                            tabindex: "-1"
                        })), t.format && "url" == t.format && (r = N(se, {
                            classname: Kd.textfieldicon,
                            type: "icon",
                            content: "e991",
                            tabindex: "-1"
                        })), e.push(N("div", {
                            class: Kd.options
                        }, a, N("input", {
                            ref: this.storeItemNode,
                            tabindex: n,
                            class: Kd.inputfield,
                            type: l,
                            maxlength: t.max_length,
                            placeholder: t.placeholder,
                            onchange: this.setLabelInputValue,
                            value: t.value,
                            onkeydown: d
                        }), r))
                    }
                    if ("textarea" == t.type && e.push(N("div", {
                            class: Kd.options
                        }, a, N("textarea", {
                            ref: this.storeItemNode,
                            tabindex: n,
                            class: Kd.inputtextarea,
                            type: "text",
                            maxlength: t.max_length,
                            placeholder: t.placeholder,
                            onchange: this.setLabelInputValue,
                            value: t.value
                        }))), "date" == t.type) {
                        var m = t.value ? t.value : "";
                        e.push(N("div", {
                            class: Kd.options
                        }, a, N(ua, {
                            key: m,
                            placeholder: t.placeholder,
                            mountedviaforms: !0,
                            presetdate: m,
                            status: t.status,
                            onDateSelection: this.setDateInputValue,
                            filter: t.filter
                        })))
                    }
                    if ("datetime" == t.type) {
                        var h = t.value ? t.value.date_time : "";
                        e.push(N("div", {
                            class: Kd.options
                        }, a, N(Ec, {
                            key: h,
                            onDateSelection: this.setDateTimeValue,
                            placeholder: t.placeholder,
                            value: t.value,
                            presetdate: h,
                            mountedviaforms: !0,
                            status: t.status,
                            filter: t.filter
                        })))
                    }
                    if ("native_select" == t.type) {
                        var g = !!t.multiple,
                            p = [];
                        "contacts" == t.data_source ? (t.options = this.constructOptionsDetails(t.data_source), p = (t.filter && t.filter[0], [ut.HYBRIDSEARCH.ORGCONTACT])) : "channels" == t.data_source ? (t.options = this.constructOptionsDetails(t.data_source), p = [ut.HYBRIDSEARCH.JOINEDCHANNEL], t.filter && "organization" == t.filter && (p = [ut.HYBRIDSEARCH.CHANNEL])) : "conversations" == t.data_source && (t.options = this.constructOptionsDetails(t.data_source), p = [ut.HYBRIDSEARCH.CHAT]), e.push(N(Xd, {
                            setfocus: this.props.setfocus,
                            list: t,
                            searchable: !0,
                            multiple: g,
                            searchsequence: p,
                            triggerOnChange: this.props.triggerOnChange,
                            onTriggerInput: this.props.onTriggerInput,
                            onItemSelection: this.props.addDataToList,
                            removeDataFromList: this.props.removeDataFromList
                        }))
                    }
                    if ("select" == t.type || "dynamic_select" == t.type) {
                        var f = !!t.multiple,
                            v = !!(f || t.options && t.options.length > 4);
                        "dynamic_select" == t.type && (v = !0), t || (t = []);
                        var C = !1,
                            b = !1;
                        t.options ? (t.options.length && t.options[0].description && (b = !0), t.options.length && t.options[0].thumbnail && (C = !0)) : (t.description && (b = !0), t.thumbnail && (C = !0)), e.push(N(Xd, {
                            setfocus: this.props.setfocus,
                            list: t,
                            searchable: v,
                            multiple: f,
                            triggerOnChange: this.props.triggerOnChange,
                            onTriggerInput: this.props.onTriggerInput,
                            onItemSelection: this.props.addDataToList,
                            removeDataFromList: this.props.removeDataFromList,
                            showimage: C,
                            showdescription: b
                        }))
                    }
                    if ("file" == t.type && e.push(N(Kc, {
                            item: t,
                            formid: this.props.formid,
                            addFilesToList: this.props.addFilesToList,
                            setfocus: this.props.setfocus
                        })), "radio" != t.type && "checkbox" != t.type || e.push(N(Nu, {
                            key: t.value,
                            type: t.type,
                            item: t,
                            triggerOnChange: this.props.triggerOnChange,
                            onItemSelection: this.props.addDataToList
                        })), "location" == t.type && e.push(N(Cu, {
                            key: t.value,
                            item: t,
                            formid: this.props.formid,
                            setfocus: this.props.setfocus,
                            onLocationSelect: this.props.addDataToList
                        })), "catalogue" == t.type && e.push(N(am, {
                            key: t.name,
                            item: t,
                            formid: this.props.formid,
                            setfocus: this.props.setfocus,
                            onItemSelection: this.props.addDataToList,
                            updateValidationError: this.props.updateValidationError,
                            updateSelectionError: this.props.updateSelectionError
                        })), "toggle" == t.type) {
                        var y = Kd.togglebutton,
                            _ = !!t.value,
                            W = N("div", null, N("input", {
                                type: "checkbox",
                                class: Kd.togglecheckbox,
                                checked: _
                            }), N("label", {
                                key: t.name,
                                class: y,
                                onclick: function(e) {
                                    e.preventDefault(), e.stopPropagation(), this.props.addDataToList(t.name, !_), t.trigger_on_change && this.props.triggerOnChange(t.name)
                                }.bind(this)
                            }));
                        e = N("div", null, N("div", {
                            class: Kd.labelcontainer + " " + Kd.toggleinput
                        }, N("div", {
                            class: s
                        }, t.label), W), N("div", {
                            class: Kd.hint,
                            title: t.hint
                        }, t.hint))
                    }
                    return "phone_number" == t.type && e.push(N(Sm, {
                        key: t.name,
                        item: t,
                        formid: this.props.formid,
                        filter: t.filter,
                        setfocus: this.props.setfocus,
                        addDataToList: this.props.addDataToList
                    })), e
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = null,
                        i = null,
                        n = null,
                        a = null;
                    if (e.inputfield.form_error_msg && (n = N("div", {
                            class: Kd.showmandatoryerror,
                            title: e.inputfield.form_error_msg
                        }, e.inputfield.form_error_msg)), e.inputfield.showmandatoryerror && e.inputfield.mandatory && (s = N("div", {
                            class: Kd.showmandatoryerror
                        }, re("forms.mandatory"))), e.inputfield.max_length_error) {
                        var o = "number" != e.inputfield.type ? "forms.maxlengtherror" : "forms.maxvalueerror";
                        a = N("div", {
                            class: Kd.showmandatoryerror
                        }, re(o, [e.inputfield.max_length || e.inputfield.max]))
                    }
                    if (e.inputfield.min_length_error) {
                        var r = "number" != e.inputfield.type ? "forms.minlengtherror" : "forms.minvaluerror";
                        a = N("div", {
                            class: Kd.showmandatoryerror
                        }, re(r, [e.inputfield.min_length || e.inputfield.min]))
                    }
                    e.inputfield.max_selection_error && (a = N("div", {
                        class: Kd.showmandatoryerror
                    }, re("forms.maxselectionerror", [e.inputfield.max_selections]))), e.inputfield.min_selection_error && (a = N("div", {
                        class: Kd.showmandatoryerror
                    }, re("forms.minselectionerror", [e.inputfield.min_selections]))), "invalidemail" == e.inputfield.validationerror && (i = N("div", {
                        class: Kd.showmandatoryerror
                    }, re("forms.invalidemail"))), "invalidurl" == e.inputfield.validationerror && (i = N("div", {
                        class: Kd.showmandatoryerror
                    }, re("forms.invalidurl"))), "invalidtel" == e.inputfield.validationerror && (i = N("div", {
                        class: Kd.showmandatoryerror
                    }, re("forms.invalidtel"))), e.inputfield.uploadprogresserror && (i = N("div", {
                        class: Kd.showmandatoryerror
                    }, re("forms.uploadprogresserror"))), "invalidnum" == e.inputfield.validationerror && (i = N("div", {
                        class: Kd.showmandatoryerror
                    }, re("forms.invalidnum")));
                    var l = "";
                    return ("disable" == e.inputfield.status || e.inputfield.disabled) && (l = Kd.disable), i && (n = null, a = null), s && (n = null, a = null, i = null), N("div", {
                        class: Kd.formitem + " " + l,
                        ref: this.storeFormItemNode
                    }, this.constructFormItem(), N("div", {
                        class: Kd.errorcontainer,
                        ref: this.storeErrorContainerNode
                    }, s, i, n, a))
                }
            }]), s
        }(R),
        Am = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    list: on(e.params.output, !0).inputs,
                    global_form_error: null,
                    removescroll: !1,
                    submitloader: !1
                }, i.scroll_to_error = !1, i.submitForm = i.submitForm.bind(h(i)), i.cancelForm = i.cancelForm.bind(h(i)), i.triggerOnChange = i.triggerOnChange.bind(h(i)), i.handleTriggerOnChange = i.handleTriggerOnChange.bind(h(i)), i.handleFormInput = i.handleFormInput.bind(h(i)), i.changeLoadingStatus = i.changeLoadingStatus.bind(h(i)), i.onTriggerInput = i.onTriggerInput.bind(h(i)), i.addDataToList = i.addDataToList.bind(h(i)), i.updateValidationError = i.updateValidationError.bind(h(i)), i.removeDataFromList = i.removeDataFromList.bind(h(i)), i.disableScrollToMandatory = i.disableScrollToMandatory.bind(h(i)), i.handleFormSubmit = i.handleFormSubmit.bind(h(i)), i.removeFormError = i.removeFormError.bind(h(i)), i.addFilesToList = i.addFilesToList.bind(h(i)), i.handleEscapeListener = i.handleEscapeListener.bind(h(i)), i.updateSelectionError = i.updateSelectionError.bind(h(i)), i.togglePasswordVisibility = i.togglePasswordVisibility.bind(h(i)), document.addEventListener("keydown", i.handleEscapeListener), i
            }
            return r(s, [{
                key: "componentDidMount",
                value: function() {
                    this.updateScroll(), this.updateLimits()
                }
            }, {
                key: "checkScrollStatus",
                value: function() {
                    var e = this.props.parentnode.querySelector("[data-dialogwrapper=true]");
                    return e && e.scrollHeight < 490
                }
            }, {
                key: "updateScroll",
                value: function() {
                    this.setState({
                        removescroll: this.checkScrollStatus()
                    })
                }
            }, {
                key: "updateLimits",
                value: function() {
                    var e = this.state.list.map((function(e) {
                        return "catalogue" !== e.type || e.max_selections || (e.max_selections = 10), e
                    }));
                    this.setState({
                        list: e
                    })
                }
            }, {
                key: "componentDidUpdate",
                value: function(e, t) {
                    t.removescroll != this.checkScrollStatus() && this.updateScroll()
                }
            }, {
                key: "handleEscapeListener",
                value: function(e) {
                    e && 27 == e.keyCode && this.cancelForm(e)
                }
            }, {
                key: "disableScrollToMandatory",
                value: function() {
                    this.scroll_to_error = !1
                }
            }, {
                key: "removeFormError",
                value: function() {
                    this.setState({
                        global_form_error: null
                    })
                }
            }, {
                key: "addFilesToList",
                value: function(e, t) {
                    for (var s = this.state.list, i = 0; i < s.length; i++) s[i].name == e && (s[i].value = t, s[i].form_error_msg && (s[i].form_error_msg = null), s[i].showmandatoryerror && (s[i].showmandatoryerror = !1));
                    this.setState({
                        list: s
                    })
                }
            }, {
                key: "validateTextInput",
                value: function(e, t) {
                    var s = !1;
                    return ("" != t || e.mandatory) && ("email" != e.format || t.match(Be.regexes.emailid) || (s = "invalidemail"), "url" != e.format || t.match(Be.regexes.link) || (s = "invalidurl"), "tel" != e.format || t.match(Be.regexes.phonenumber) || (s = "invalidtel"), "number" == e.type && isNaN(t) && (s = "invalidnum")), s
                }
            }, {
                key: "updateValidationError",
                value: function(e, t) {
                    for (var s = this.state.list, i = 0; i < s.length; i++)
                        if (s[i].name == e) {
                            var n = this.validateTextInput(s[i], t);
                            s[i].validationerror = n
                        }
                    this.setState({
                        list: s
                    })
                }
            }, {
                key: "updateSelectionError",
                value: function(e, t) {
                    for (var s = this.state.list, i = 0; i < s.length; i++)
                        if (s[i].name == e) {
                            t && (s[i] = this.checkAndAssignErrors(s[i], t, ["max_selections", "min_selections"], ["max_selection_error", "min_selection_error"]));
                            break
                        }
                    this.setState({
                        list: s
                    })
                }
            }, {
                key: "addDataToList",
                value: function(e, t) {
                    for (var s = this.state.list, i = "", n = this.state.global_form_error, a = 0; a < s.length; a++)
                        if (s[a].name == e) {
                            i = s[a].value, n && (n = null), s[a].form_error_msg && (s[a].form_error_msg = null), s[a].multiple ? "native_select" == s[a].type ? i ? i.push(t) : i = [t] : i = i ? i + "," + t.value : t.value : "native_select" == s[a].type ? (i || (i = {}), i = [t]) : i = "location" == s[a].type ? {
                                latitude: t.lat || t.latitude,
                                longitude: t.lon || t.longitude,
                                full_address: t.full_address
                            } : t.value || t, s[a].value = i, ("" == i && !s[a].mandatory || s[a].showmandatoryerror) && (s[a].max_selection_error ? s[a].max_selection_error = !1 : s[a].min_selection_error ? s[a].min_selection_error = !1 : s[a].min_length_error ? s[a].min_length_error = !1 : s[a].max_length_error && (s[a].max_length_error = !1)), s[a].showmandatoryerror && i && (s[a].showmandatoryerror = !1);
                            break
                        }
                    this.setState({
                        list: s,
                        global_form_error: n
                    })
                }
            }, {
                key: "removeDataFromList",
                value: function(e, t) {
                    for (var s = this.state.list, i = "", n = 0; n < s.length; n++)
                        if (s[n].name == e) {
                            var a = s[n];
                            if (i = a.value, "native_select" == a.type)
                                if (a.multiple) {
                                    for (var o = 0; o < i.length; o++)
                                        if (t.id == i[o].id) {
                                            i.splice(o, 1);
                                            break
                                        }
                                } else i = "";
                            else a.multiple ? (i = i.split(","), s[n].options, i.splice(i.indexOf(t.value), 1), i = i.toString()) : i = "";
                            "" != i || s[n].mandatory || (s[n].max_selection_error ? s[n].max_selection_error = !1 : s[n].min_selection_error && (s[n].min_selection_error = !1)), s[n].value = i
                        }
                    this.setState({
                        list: s
                    })
                }
            }, {
                key: "onTriggerInput",
                value: function(e, t, s) {
                    var i = {};
                    i.values = this.constructFormData(), i.target = {
                        name: e,
                        query: t || ""
                    }, this.current_input_query = t, Em(i, this.props.params.output.id, this.handleFormInput.bind(this, t, e)), this.changeLoadingStatus(e, !0)
                }
            }, {
                key: "getConcatenatedList",
                value: function(e, t) {
                    for (var s = 0; s < t.length; s++) {
                        for (var i = !0, n = 0; n < e.length; n++) t[s].value == e[n].value && (i = !1);
                        i && (e = e.concat(t[s]))
                    }
                    return e
                }
            }, {
                key: "handleFormInput",
                value: function(e, t, s) {
                    var i = "";
                    i = s ? JSON.parse(s) : {
                        output: {
                            target: t,
                            options: []
                        }
                    };
                    var n = this.state.list;
                    if ("Consent" == i.status) {
                        (new os).mountComponent(i.chid, i, function(e, t) {
                            this.handleFormInput(JSON.stringify(t.data.dreResponse))
                        }.bind(this))
                    } else {
                        for (var a = 0; a < n.length; a++) n[a].name == i.output.target && this.current_input_query == e && (this.changeLoadingStatus(n[a].name, !1), i.output.options.length && (n[a].options = this.getConcatenatedList(n[a].options || [], i.output.options)));
                        this.setState({
                            list: n
                        })
                    }
                }
            }, {
                key: "checkAndAssignErrors",
                value: function(e, t, s, i) {
                    for (var n = 0; n < s.length; n++) {
                        var a = s[n],
                            o = i[n];
                        a.indexOf("max") > -1 && t > e[a] ? e[o] = !0 : a.indexOf("min") > -1 && t < e[a] ? e[o] = !0 : e[o] && (e[o] = !1)
                    }
                    return e
                }
            }, {
                key: "checkFormValuesLength",
                value: function(e) {
                    for (var t = 0; t < e.length; t++)
                        if ((e[t].max_length || e[t].max_selections || e[t].min_selections || e[t].min_length || e[t].max || e[t].min) && e[t].value) {
                            var s = ["max_selection_error", "min_selection_error"],
                                i = ["max_length_error", "min_length_error"];
                            if (e[t].multiple) {
                                var n = null;
                                (n = "native_select" == e[t].type ? e[t].value.length : e[t].value.split && e[t].value.split(",").length) && (e[t] = this.checkAndAssignErrors(e[t], n, ["max_selections", "min_selections"], s))
                            } else if ("checkbox" == e[t].type) {
                                var a = e[t].value.split(",");
                                e[t] = this.checkAndAssignErrors(e[t], a.length, ["max_selections", "min_selections"], s)
                            } else if ("number" != e[t].type || e[t].validationerror)
                                if ("catalogue" == e[t].type) {
                                    var o = Object.keys(e[t].value).length;
                                    o && (e[t] = this.checkAndAssignErrors(e[t], o, ["max_selections", "min_selections"], s))
                                } else e[t] = this.checkAndAssignErrors(e[t], e[t].value.length, ["max_length", "min_length"], i);
                            else {
                                var r = parseInt(e[t].value);
                                this.checkAndAssignErrors(e[t], r, ["max", "min"], i)
                            }
                        }
                    return e
                }
            }, {
                key: "setScrollError",
                value: function(e) {
                    this.scroll_to_error = !1;
                    for (var t = 0; t < e.length; t++)
                        if (e[t].max_selection_error || e[t].min_selection_error || e[t].max_length_error || e[t].min_length_error || e[t].showmandatoryerror || e[t].uploadprogresserror || e[t].validationerror) {
                            this.scroll_to_error = !0;
                            break
                        }
                }
            }, {
                key: "checkMandatoryFields",
                value: function(e) {
                    for (var t = this.state.list, s = 0; s < t.length; s++) {
                        if ("file" == t[s].type)
                            if (t[s].value && t[s].value.length) {
                                for (var i = t[s].value, n = 0; n < i.length; n++)
                                    if (t[s].showmandatoryerror = !1, t[s].uploadprogresserror = !1, "inprogress" == i[n].status) {
                                        if (1 != i.length || !t[s].mandatory) {
                                            t[s].uploadprogresserror = !0;
                                            break
                                        }
                                        t[s].showmandatoryerror = !0
                                    }
                            } else t[s].uploadprogresserror && (t[s].uploadprogresserror = !1), t[s].mandatory && (t[s].showmandatoryerror = !0);
                        else !t[s].mandatory || ("location" != t[s].type || t[s].value.latitude && t[s].value.longitude) && t[s].value && "" != t[s].value || (t[s].showmandatoryerror = !0);
                        "disable" == t[s].status && t[s].showmandatoryerror && (t[s].showmandatoryerror = !1)
                    }
                    t = this.checkFormValuesLength(t), t = this.validateAllInputs(t), this.setScrollError(t), this.setState({
                        list: t
                    })
                }
            }, {
                key: "validateAllInputs",
                value: function(e) {
                    for (var t = 0; t < e.length; t++) "text" != e[t].type && "number" != e[t].type || !e[t].value || (e[t].validationerror = this.validateTextInput(e[t], e[t].value));
                    return e
                }
            }, {
                key: "submitForm",
                value: function() {
                    var e = this.constructFormData();
                    if (this.checkMandatoryFields(e), !this.scroll_to_error) {
                        for (var t, s, i, n, a, o = this.state.list, r = 0; r < o.length; r++) "file" == o[r].type && Jc();
                        t = {
                            values: e
                        }, s = this.props.params.output.id, i = this.props.submitCallBack, n = this.handleFormSubmit, a = {
                            "Content-Type": "application/json",
                            "X-New-Date-API": !0,
                            "x-consents-version": "1",
                            "X-XHR-exception": !0,
                            "X-ZCSRF-TOKEN": Yi()
                        }, Je("v2/forms/" + s + "/actions/submit", t, (function(e) {
                            var t = JSON.parse(e);
                            if (("Success" == t.status || "success" == t.status) && "form_error" != t.output.type || "Failure" == t.status && !t.data)
                                if (!t.output && t.resumeUrl)(new os).mountComponent(t.chid, t);
                                else if (t.output.isTempResponse = !0, t.output) {
                                var s = t.chid || t.output.data && t.output.data.message.chid,
                                    a = t.output.meta && t.output.meta.message_source && t.output.meta.message_source.id || t.output.data && t.output.data.id;
                                i(s, a, t)
                            }
                            n(t)
                        }), null, null, null, a), this.setState({
                            submitloader: !0
                        })
                    }
                }
            }, {
                key: "cancelForm",
                value: function(e) {
                    var t, s;
                    this.props.params.output.trigger_on_cancel && (t = this.props.params.output.id, s = this.props.submitCallBack, Je("v2/forms/" + t + "/actions/cancel", null, (function(e) {
                        var t = JSON.parse(e);
                        "Success" == t.status && (t.output.isTempResponse = !0, s(t.chid, t.output.meta.message_source.id, t))
                    }), null, null, null)), this.props.closeCallBack(), e.stopPropagation(), e.preventDefault(), document.removeEventListener("keydown", this.handleEscapeListener), this.props.unmountComponent()
                }
            }, {
                key: "handleFormClose",
                value: function() {
                    this.props.closeCallBack(), document.removeEventListener("keydown", this.handleEscapeListener), this.props.unmountComponent()
                }
            }, {
                key: "handleFormSubmit",
                value: function(e) {
                    if (e.output && "form_error" == e.output.type)
                        if (e.output.text || e.output.inputs) {
                            var t = this.state.list;
                            if (e.output.inputs)
                                for (var s = e.output.inputs, i = 0; i < t.length; i++)
                                    for (var n in s) n == t[i].name && (t[i].form_error_msg = s[n]);
                            this.setState({
                                list: t,
                                global_form_error: e.output.text,
                                submitloader: !1
                            })
                        } else Gn(re("event.status.update.error")), this.handleFormClose();
                    else if ("Consent" == e.status) {
                        (new os).mountComponent(e.chid, e, function(e, t) {
                            var s = t.data.dreResponse.message_source ? t.data.dreResponse.message_source.id : t.data.dreResponse.output.meta.message_source.id;
                            this.props.submitCallBack(e, s, t.data.dreResponse), this.handleFormClose()
                        }.bind(this))
                    } else {
                        if ("Failure" == e.status && e.data)(new os).mountComponent(e.chid, e);
                        this.handleFormClose()
                    }
                }
            }, {
                key: "triggerOnChange",
                value: function(e) {
                    var t, s, i, n, a, o = {};
                    o.values = this.constructFormData(), o.target = {
                        name: e
                    }, this.changeLoadingStatus(e, !0), t = o, s = this.props.params.output.id, i = this.handleTriggerOnChange, n = this.changeLoadingStatus, a = {
                        "Content-Type": "application/json",
                        "X-New-Date-API": !0,
                        "x-consents-version": "1",
                        "X-XHR-exception": !0,
                        "X-ZCSRF-TOKEN": Yi()
                    }, Je("v2/forms/" + s + "/actions/change", t, (function(e) {
                        var t = JSON.parse(e);
                        "Success" == t.status || "success" == t.status ? i(t) : "Consent" == t.status && (new os).mountComponent(t.chid, t, (function(e, t) {
                            i(t.data.dreResponse)
                        }))
                    }), (function() {
                        n(null, !1)
                    }), null, null, a)
                }
            }, {
                key: "handleTriggerOnChange",
                value: function(e) {
                    for (var t = e.output.actions, s = v(this.state.list), i = 0; i < t.length; i++)
                        for (var n = 0; n < s.length; n++)
                            if (s[n].name == t[i].name) {
                                if ("remove" == t[i].type) {
                                    s.splice(n, 1);
                                    break
                                }
                                if ("add_after" == t[i].type) {
                                    s.splice(n + 1, 0, t[i].input);
                                    break
                                }
                                if ("add_before" == t[i].type) {
                                    s.splice(n, 0, t[i].input);
                                    break
                                }
                                if ("update" == t[i].type) {
                                    s = this.updateFormItem(t[i].input, s, t[i].name);
                                    break
                                }
                                if ("disable" == t[i].type) {
                                    this.changeFormItemStatus(t[i].type, t[i].name, s);
                                    break
                                }
                                if ("enable" == t[i].type) {
                                    s = this.changeFormItemStatus(t[i].type, t[i].name, s);
                                    break
                                }
                                "clear" == t[i].type && (s[n].value = "")
                            }
                    this.changeLoadingStatus(null, !1), this.setState({
                        list: s
                    })
                }
            }, {
                key: "changeFormItemStatus",
                value: function(e, t, s) {
                    for (var i = 0; i < s.length; i++) s[i].name == t && (s[i].status = e);
                    return s
                }
            }, {
                key: "updateFormItem",
                value: function(e, t, s) {
                    for (var i = 0; i < t.length; i++) t[i].name == s && (t[i] = e);
                    return t
                }
            }, {
                key: "constructFormData",
                value: function() {
                    for (var e = this.state.list || {}, t = {}, s = 0; s < e.length; s++) {
                        var i = e[s].name;
                        if ("native_select" == e[s].type) {
                            var n = e[s].data_source;
                            if (t[i] = {}, t[i][n] = [], e[s].value && e[s].value.length > 0)
                                for (var a = e[s].value, o = 0; o < a.length; o++) {
                                    var r = a[o].id;
                                    "channels" == n && (r = a[o].oc_id ? a[o].oc_id : Al(a[o].id).oc_id), t[i][n].push(r)
                                } else e[s].value && e[s].value.value && t[i][n].push(e[s].value.value)
                        } else if ("file" == e[s].type && e[s].value && e[s].value.length) {
                            for (var l = [], d = 0; d < e[s].value.length; d++) e[s].value[d].id && l.push(e[s].value[d].id);
                            t[i] = l.join(",")
                        } else "location" == e[s].type ? t[i] = {
                            latitude: e[s].value.latitude,
                            longitude: e[s].value.longitude
                        } : void 0 !== e[s].value && "" !== e[s].value && (t[i] = e[s].value)
                    }
                    return t
                }
            }, {
                key: "changeLoadingStatus",
                value: function(e, t) {
                    for (var s = this.state.list, i = 0; i < s.length; i++) {
                        if (s[i].name == e) {
                            s[i].isloading = t;
                            break
                        }
                        if (!t && !e && s[i].isloading) {
                            s[i].isloading = t;
                            break
                        }
                    }
                    this.setState({
                        list: s
                    })
                }
            }, {
                key: "togglePasswordVisibility",
                value: function(e) {
                    for (var t = this.state.list, s = 0; s < t.length; s++)
                        if (t[s].name == e) {
                            t[s].visible = !t[s].visible;
                            break
                        }
                    this.setState({
                        list: t
                    })
                }
            }, {
                key: "getFormDialog",
                value: function() {
                    var e = this.props.params.output,
                        t = e.title,
                        s = [];
                    this.state.global_form_error || s.push({
                        text: re("common.cancel"),
                        buttonstyle: Kd.cancelbutton,
                        onclick: this.cancelForm
                    }), (e.actions && e.actions.submit || e.action) && !this.state.global_form_error && (this.state.submitloader ? s.push({
                        buttonstyle: Kd.submitbutton + " " + Kd.loader
                    }) : s.push({
                        text: e.button_label || re("forms.submit"),
                        buttonstyle: Kd.submitbutton,
                        onclick: this.submitForm
                    }));
                    var i = this.state.removescroll ? Kd.removescroll : "",
                        n = {
                            customFooterStyle: Kd.footer,
                            customContainerStyle: Kd.formparent,
                            customHeaderStyle: Kd.header,
                            customWrapperStyle: Kd.formcontent + " " + i,
                            customButtonStyle: Kd.hideclose
                        },
                        a = this.state.list,
                        o = [],
                        r = null;
                    e.hint && (r = N("div", {
                        class: Kd.formhint,
                        title: e.hint
                    }, e.hint));
                    for (var l = 0; l < a.length; l++) {
                        a[l].value || "native_select" != a[l].type || (a[l].value = []);
                        var d = !1;
                        0 == l && (d = !0), o.push(N(Tm, {
                            key: a[l].name,
                            inputfield: a[l],
                            triggerOnChange: this.triggerOnChange,
                            onTriggerInput: this.onTriggerInput,
                            addDataToList: this.addDataToList,
                            removeDataFromList: this.removeDataFromList,
                            scroll_to_error: this.scroll_to_error,
                            setfocus: d,
                            formid: this.props.params.output.id,
                            addFilesToList: this.addFilesToList,
                            updateValidationError: this.updateValidationError,
                            updateSelectionError: this.updateSelectionError,
                            togglePasswordVisibility: this.togglePasswordVisibility
                        })), this.scroll_to_error && (a[l].showmandatoryerror || a[l].max_length_error || a[l].validationerror) && this.disableScrollToMandatory()
                    }
                    var c = [];
                    if (this.props.params.message_source) {
                        var u = this.props.params.message_source,
                            m = null,
                            h = null;
                        if (u.name && "function" !== u.type && "bot" !== u.type) {
                            var g = u.store_appname ? u.store_appname : "/" + u.name;
                            m = N("div", {
                                class: Kd.botname
                            }, g)
                        }
                        if (u.photo_id || u.store_app_photoid) {
                            var p = u.photo_id || u.store_app_photoid,
                                f = oe.get("isUDSDownloadEnabled")() ? _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + p + "&x-cli-msg=" + encodeURIComponent('{"x-cliq-resource-module":"photos","type":"botimg"}') : "/_chat/botimg/" + p + "/photo.do";
                            "command" == u.type && (f = oe.get("isUDSDownloadEnabled")() ? _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + p + "&x-cli-msg=" + encodeURIComponent('{"x-cliq-resource-module":"photos","type":"commandimg"}') : "/_chat/commandimg/" + p + "/photo.do"), "messageaction" == u.type && (f = oe.get("isUDSDownloadEnabled")() ? _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + p + "&x-cli-msg=" + encodeURIComponent('{"x-cliq-resource-module":"photos","type":"appimg"}') : "/_chat/appimg/" + p + "/photo.do");
                            var v = void 0 !== WebMessanger && WebMessanger.crossoriginisolation ? "use-credentials" : null;
                            h = N("img", {
                                class: Kd.botimage,
                                src: f,
                                crossorigin: v
                            })
                        }
                        c = [N("div", {
                            class: Kd.footerprefix
                        }, h, m)]
                    }
                    return this.state.global_form_error && (c = [N("div", {
                        class: Kd.form_error
                    }, N("div", {
                        class: Kd.form_errordescription
                    }, this.state.global_form_error), N(se, {
                        classname: Kd.closeicon,
                        type: "icon",
                        content: "e9ee",
                        onclick: this.removeFormError
                    }))]), N(xt, {
                        heading: t,
                        headerinfosuffix: r,
                        actions: s,
                        footerinfoprefix: c,
                        customDialogStyles: n,
                        ignoreFocusOnMount: !0,
                        movable: !1
                    }, o)
                }
            }, {
                key: "render",
                value: function() {
                    return N("div", null, this.getFormDialog(), " ")
                }
            }]), s
        }(R);
    var Em = Mn(function(e, t, s) {
            Je("v2/forms/" + t + "/actions/input", e, s, s, null, null, {
                "Content-Type": "application/json",
                "x-consents-version": "1",
                "X-XHR-exception": !0,
                "X-ZCSRF-TOKEN": Yi()
            })
        }.bind(void 0), void 0, 500),
        Um = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(Am, {
                        params: e,
                        unmountComponent: this.unmountComponent,
                        submitCallBack: t,
                        parentnode: this.node,
                        closeCallBack: s
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), this.node.parentElement && this.node.parentElement.removeChild(this.node)
                }
            }]), e
        }();
    var km = "mc1e6ad615_consentparent",
        Nm = "mc1e6ad615_linkicon",
        xm = "mc1e6ad615_headercontainer",
        Om = "mc1e6ad615_headercontent",
        Rm = "mc1e6ad615_footer",
        Dm = "mc1e6ad615_footerprefix",
        $m = "mc1e6ad615_texthint",
        Hm = "mc1e6ad615_hideclose",
        Lm = "mc1e6ad615_headerdescription",
        Pm = "mc1e6ad615_bodycontainer",
        Fm = "mc1e6ad615_text",
        Bm = "mc1e6ad615_restrict",
        jm = "mc1e6ad615_allow",
        zm = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    remember: !1
                }, i.rememberTheChoice = i.rememberTheChoice.bind(h(i)), i.allowPermission = i.allowPermission.bind(h(i)), i.restrictPermission = i.restrictPermission.bind(h(i)), i.dialogCloseCallBack = i.dialogCloseCallBack.bind(h(i)), i
            }
            return r(s, [{
                key: "dialogCloseCallBack",
                value: function() {
                    this.props.onResponse(!0, !1)
                }
            }, {
                key: "updateLinkPreviewSettings",
                value: function(e) {
                    qm(e, function(e) {
                        1 == e.authentication_consent ? (this.props.onResponse(!0, !0), this.props.unmountComponent()) : -1 == e.authentication_consent && (this.props.onResponse(!1, !0), this.props.unmountComponent())
                    }.bind(this))
                }
            }, {
                key: "rememberTheChoice",
                value: function() {
                    this.setState({
                        remember: !this.state.remember
                    })
                }
            }, {
                key: "allowPermission",
                value: function() {
                    this.state.remember ? this.updateLinkPreviewSettings(1) : (this.props.onResponse(!0, !0), this.props.unmountComponent())
                }
            }, {
                key: "restrictPermission",
                value: function() {
                    this.state.remember ? this.updateLinkPreviewSettings(-1) : (this.props.onResponse(!1, !0), this.props.unmountComponent())
                }
            }, {
                key: "render",
                value: function() {
                    var e = N("div", {
                            class: Om
                        }, N(se, {
                            classname: Nm,
                            type: "icon",
                            content: "e991"
                        }), N("div", {
                            class: Lm
                        }, re("urlconsent.zoholinkpreview"))),
                        t = N("div", null, N("div", {
                            class: Fm
                        }, re("urlconsent.description1")), N("div", {
                            class: Fm
                        }, re("urlconsent.description2")), N("div", {
                            class: Fm
                        }, " ", re("urlconsent.description3")), N("div", {
                            class: Fm + " " + $m
                        }, N("span", null, re("urlconsent.description4", re("urlconsent.zoholinkprivacy"))))),
                        s = {
                            customFooterStyle: Rm,
                            customContainerStyle: km,
                            customHeaderStyle: xm,
                            customWrapperStyle: Pm,
                            customButtonStyle: Hm
                        },
                        i = [{
                            text: re("urlconsent.restrict"),
                            buttonstyle: Bm,
                            onclick: this.restrictPermission
                        }, {
                            text: re("urlconsent.allow"),
                            buttonstyle: jm,
                            onclick: this.allowPermission
                        }],
                        n = [N("div", {
                            class: Dm
                        }, N("input", {
                            id: "rememberme",
                            type: "checkbox",
                            oninput: this.rememberTheChoice
                        }), N("label", {
                            for: "rememberme"
                        }, re("urlconsent.remember")))];
                    return N("div", {
                        class: km
                    }, N(xt, {
                        customDialogStyles: s,
                        actions: i,
                        callbackOnClose: this.dialogCloseCallBack,
                        footerinfoprefix: n,
                        heading: e
                    }, t))
                }
            }]), s
        }(R),
        Gm = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(zm, {
                        onResponse: e,
                        unmountComponent: this.unmountComponent
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), this.node.parentElement.removeChild(this.node)
                }
            }]), e
        }();

    function qm(e, t, s) {
        Je("updatelinkpreviewsettings.do", "authentication_consent=" + e, t, s)
    }
    var Vm = "mc2e590262_calendar_wrapper",
        Ym = "mc2e590262_calendarcontainer_custom",
        Zm = "mc2e590262_timecontainer_custom",
        Km = "mc2e590262_duration_item_style",
        Xm = "mc2e590262_custom_listinfocontainer",
        Jm = "mc2e590262_duration_list_wrapper",
        Qm = "mc2e590262_custom_duration_listwrapper",
        eh = "mc2e590262_duration_selector_wrapper",
        th = "mc2e590262_duration_wrapper_expanded",
        sh = "mc2e590262_duration_footer_wrapper",
        ih = "mc2e590262_duration_text",
        nh = "mc2e590262_duration_text_invalid",
        ah = "mc2e590262_duration_apply_button",
        oh = "mc2e590262_duration_apply_invalid",
        rh = "mc2e590262_time_space",
        lh = "mc2e590262_timecnt_custom",
        dh = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    display_customcalendar: !1,
                    display_duration_selector: !0,
                    selected_date: Date.now(),
                    selected_time: (new Date).getHours() + ":" + ((new Date).getMinutes() + 1),
                    duration_list: [{
                        id: "3600000",
                        title: re("chat.hour", [1]),
                        empty_img: !0
                    }, {
                        id: "28800000",
                        title: re("chat.hours", [8]),
                        empty_img: !0
                    }, {
                        id: "86400000",
                        title: re("chat.day", [1]),
                        empty_img: !0
                    }, {
                        id: "604800000",
                        title: re("chat.week", [1]),
                        empty_img: !0
                    }, {
                        id: "-1",
                        title: re("chat.forever"),
                        empty_img: !0
                    }, {
                        id: "custom",
                        title: re("pinmsg.duration.custom"),
                        empty_img: !0
                    }]
                }, i.onListItemClicked = i.onListItemClicked.bind(h(i)), i.onDateChange = i.onDateChange.bind(h(i)), i.onTimeChange = i.onTimeChange.bind(h(i)), i.onDurationSelect = i.onDurationSelect.bind(h(i)), i.storeSelectorRef = i.storeSelectorRef.bind(h(i)), i
            }
            return r(s, [{
                key: "componentDidUpdate",
                value: function(e, t) {
                    t.display_customcalendar && !this.state.display_customcalendar && (this.selectorNodePosition = null)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    this.selectorNodePosition = null
                }
            }, {
                key: "storeSelectorRef",
                value: function(e) {
                    this.selectorNode = e
                }
            }, {
                key: "onDurationSelect",
                value: function(e, t, s) {
                    t = t || this.combineDateAndTimeAsEpoch(), s = s || re("pinmsg.duration.customtime", Ae(t)), this.setState({
                        display_duration_selector: !1
                    }), this.props.onDurationSelect(t, s)
                }
            }, {
                key: "onListItemClicked",
                value: function(e, t, s) {
                    var i = "-1" === e.id ? "-1" : (new Date).getTime() + parseInt(e.id);
                    "custom" === e.id ? this.setState({
                        display_customcalendar: !this.state.display_customcalendar
                    }) : this.onDurationSelect(null, i, e.title), s.stopPropagation()
                }
            }, {
                key: "constructDurationList",
                value: function() {
                    var e = {
                        customContainerStyles: Km,
                        rowHeight: 30,
                        customListWrapper: Qm,
                        listinfoContainerStyle: Xm
                    };
                    return N("div", {
                        class: Jm
                    }, N(xo, {
                        list: this.state.duration_list,
                        onListItemClicked: this.onListItemClicked,
                        iscompletelist: !0,
                        customlistitemstyles: e
                    }))
                }
            }, {
                key: "onDateChange",
                value: function(e) {
                    e = new Date(e).getTime(), this.setState({
                        selected_date: e
                    })
                }
            }, {
                key: "onTimeChange",
                value: function(e, t) {
                    this.setState({
                        selected_time: t
                    })
                }
            }, {
                key: "combineDateAndTimeAsEpoch",
                value: function() {
                    var e = Ee(this.state.selected_date),
                        t = new Date(this.state.selected_date).getFullYear(); - 1 === e.indexOf(t) && (e += " " + t);
                    var s = e + " " + this.state.selected_time;
                    return new Date(s).getTime()
                }
            }, {
                key: "constructCalendarAndTimeComp",
                value: function() {
                    var e = ih,
                        t = ah,
                        s = re("pinmsg.duration.till") + " " + Ae(this.combineDateAndTimeAsEpoch());
                    Date.now() > this.combineDateAndTimeAsEpoch() && (e += " " + nh, t += " " + oh, s = re("pinmsg.duration.invalid"));
                    var i = {
                            calendarcontainer: Ym
                        },
                        n = {
                            timecontainer: Zm,
                            timecnt: lh
                        };
                    if (this.selectorNode) {
                        var a = {},
                            o = this.selectorNode.getBoundingClientRect();
                        a.top = o.top, this.props.selectorWrapperCustomStyle && this.props.selectorWrapperCustomStyle.selector_wrapper && -1 !== this.props.selectorWrapperCustomStyle.selector_wrapper.indexOf("right") ? a.left = o.right - 380 : a.left = o.left, a.position = "fixed", this.selectorNodePosition = a
                    }
                    return N("div", {
                        class: Vm
                    }, N("div", null, N(ce, {
                        onDateSelection: this.onDateChange,
                        selecteddate: this.state.selected_date,
                        customclass: i
                    }), N("div", {
                        class: rh
                    }, re("pinmsg.time.heading"), N(Ga, {
                        time: this.combineDateAndTimeAsEpoch(),
                        onTimeChange: this.onTimeChange,
                        customclass: n
                    })), N("div", {
                        class: sh
                    }, N("span", {
                        class: e
                    }, s), N(se, {
                        type: "button",
                        key: "apply",
                        content: re("pinmsg.custom.apply"),
                        classname: t,
                        onclick: this.onDurationSelect
                    }))))
                }
            }, {
                key: "render",
                value: function() {
                    if (!this.state.display_duration_selector) return null;
                    var e = null,
                        t = eh + " ";
                    t += this.props.selectorWrapperCustomStyle && this.props.selectorWrapperCustomStyle.selector_wrapper || "";
                    var s = this.props.selectorWrapperCustomStyle && this.props.selectorWrapperCustomStyle.selector_wrapper_expanded || th;
                    return this.state.display_customcalendar && (e = this.constructCalendarAndTimeComp(), t += " " + s), N("div", {
                        class: t,
                        ref: this.storeSelectorRef,
                        style: this.selectorNodePosition
                    }, this.constructDurationList(), e)
                }
            }]), s
        }(R),
        ch = function() {
            function e() {
                a(this, e)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s) {
                    this.node = e, ee(N(dh, {
                        node: e,
                        onDurationSelect: t,
                        selectorWrapperCustomStyle: s
                    }), e)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node)
                }
            }]), e
        }();
    var uh = {
            allownotification_checkbox: "mc541d7947_allownotification_checkbox",
            allownotification_checkboxsel: "mc541d7947_allownotification_checkboxsel",
            allownotification_text: "mc541d7947_allownotification_text",
            pinheader: "mc541d7947_pinheader",
            pinheader_wrapper: "mc541d7947_pinheader_wrapper",
            pinmsg_wrapper: "mc541d7947_pinmsg_wrapper",
            pinicon: "mc541d7947_pinicon",
            pinmsg: "mc541d7947_pinmsg",
            content_wrapper: "mc541d7947_content_wrapper",
            duration_label: "mc541d7947_duration_label",
            duration_dropdown_wrapper: "mc541d7947_duration_dropdown_wrapper",
            duration_selector_wrapper: "mc541d7947_duration_selector_wrapper",
            duration_selector_text: "mc541d7947_duration_selector_text",
            pinnote: "mc541d7947_pinnote",
            button_style: "mc541d7947_button_style",
            container: "mc541d7947_container",
            header: "mc541d7947_header",
            notificationwrapper: "mc541d7947_notificationwrapper",
            footer: "mc541d7947_footer",
            button_pin: "mc541d7947_button_pin",
            button_cancel: "mc541d7947_button_cancel",
            duration_selector_position: "mc541d7947_duration_selector_position",
            duration_wrapper_expanded: "mc541d7947_duration_wrapper_expanded",
            zmNightMode: "zmNightMode"
        },
        mh = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    allow_notification: !1,
                    show_duration_dropdown: !1,
                    duration_text: re("chat.forever")
                }, i.duration_time = "-1", i.setDurationSelectorNode = i.setDurationSelectorNode.bind(h(i)), i.duration_selector_node = null, i.onPinAction = i.onPinAction.bind(h(i)), i.onDurationSelect = i.onDurationSelect.bind(h(i)), i.onDurationWrapperClick = i.onDurationWrapperClick.bind(h(i)), i.onClickOutsideList = i.onClickOutsideList.bind(h(i)), i.toggleNotificationConsents = i.toggleNotificationConsents.bind(h(i)), i
            }
            return r(s, [{
                key: "setDurationSelectorNode",
                value: function(e) {
                    this.duration_selector_node = e
                }
            }, {
                key: "getHeader",
                value: function() {
                    return N("div", {
                        class: uh.pinheader_wrapper
                    }, N("div", {
                        class: uh.pinheader
                    }, re("pin.this.msg")), N("div", {
                        class: uh.header_highlighter
                    }), N("div", {
                        class: uh.pinmsg_wrapper
                    }, N("div", {
                        class: uh.pinicon
                    }), N("div", {
                        class: uh.pinmsg,
                        dangerouslySetInnerHTML: {
                            __html: this.props.msgtopin
                        }
                    })))
                }
            }, {
                key: "toggleNotificationConsents",
                value: function(e) {
                    this.setState({
                        allow_notification: !this.state.allow_notification
                    }), e.stopPropagation()
                }
            }, {
                key: "onPinAction",
                value: function() {
                    this.props.pinactionCallback(this.duration_time, this.state.allow_notification), this.props.removeComponent()
                }
            }, {
                key: "onDurationSelect",
                value: function(e, t) {
                    this.setState({
                        duration_text: t,
                        show_duration_dropdown: !1
                    }), this.duration_time = e
                }
            }, {
                key: "onDurationWrapperClick",
                value: function(e) {
                    e.target === this.duration_selector_node && (this.setState({
                        show_duration_dropdown: !this.state.show_duration_dropdown
                    }), e.stopPropagation())
                }
            }, {
                key: "onClickOutsideList",
                value: function() {
                    this.setState({
                        show_duration_dropdown: !1
                    })
                }
            }, {
                key: "render",
                value: function() {
                    var e = this.state.allow_notification ? uh.allownotification_checkboxsel : uh.allownotification_checkbox,
                        t = [{
                            text: re("common.cancel"),
                            onclick: this.props.removeComponent,
                            buttonstyle: uh.button_cancel
                        }, {
                            text: re("pinmsg.pin"),
                            onclick: this.onPinAction,
                            buttonstyle: uh.button_pin
                        }],
                        s = re("channel.deluge.note"),
                        i = this.props.show_pin_note ? N("div", {
                            class: uh.pinnote
                        }, N("strong", null, s), " " + re("pinmsg.existing.note")) : "",
                        n = {
                            selector_wrapper: uh.duration_selector_position,
                            selector_wrapper_expanded: uh.duration_wrapper_expanded
                        },
                        a = this.state.show_duration_dropdown ? N(we, {
                            onClickOutside: this.onClickOutsideList
                        }, N(dh, {
                            onDurationSelect: this.onDurationSelect,
                            selectorWrapperCustomStyle: n
                        })) : "",
                        o = N("div", {
                            class: uh.content_wrapper
                        }, N("div", {
                            class: uh.duration_dropdown_wrapper
                        }, N("div", {
                            class: uh.duration_label
                        }, re("pinmsg.duration.label")), N("div", {
                            class: uh.duration_selector_wrapper,
                            "data-pin-dropdown": !0,
                            ref: this.setDurationSelectorNode,
                            onclick: this.onDurationWrapperClick
                        }, this.state.duration_text, a)), i),
                        r = N("div", {
                            class: uh.notificationwrapper,
                            onclick: this.toggleNotificationConsents
                        }, N("span", {
                            class: e
                        }), N("input", {
                            type: "checkbox"
                        }), N("label", {
                            class: uh.allownotification_text
                        }, re("pinmsg.notify"))),
                        l = {
                            customButtonStyle: uh.button_style,
                            customContainerStyle: uh.container,
                            customHeaderStyle: uh.header,
                            customFooterStyle: uh.footer
                        };
                    return N(xt, {
                        heading: this.getHeader(),
                        actions: t,
                        footerinfoprefix: r,
                        customDialogStyles: l,
                        callbackOnClose: this.props.removeComponent
                    }, o)
                }
            }]), s
        }(R),
        hh = function() {
            function e() {
                a(this, e)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(mh, {
                        pinactionCallback: e,
                        msgtopin: t,
                        removeComponent: this.unmountComponent.bind(this),
                        show_pin_note: s
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), An(this.node)
                }
            }]), e
        }();
    var gh = {
            fork_title_wrapper: "mc8f31fab0_fork_title_wrapper",
            fork_chattitle: "mc8f31fab0_fork_chattitle",
            invalidinput: "mc8f31fab0_invalidinput",
            fork_includeall: "mc8f31fab0_fork_includeall",
            participants_checkboxsel: "mc8f31fab0_participants_checkboxsel",
            participants_checkbox: "mc8f31fab0_participants_checkbox",
            fork_dialog_footer: "mc8f31fab0_fork_dialog_footer",
            zmNightMode: "zmNightMode",
            listlabel: "mc8f31fab0_listlabel",
            labelbutton: "mc8f31fab0_labelbutton",
            faded: "mc8f31fab0_faded",
            dialogtitle: "mc8f31fab0_dialogtitle",
            disable_buttons: "mc8f31fab0_disable_buttons",
            spacer: "mc8f31fab0_spacer",
            footerInfoStyle: "mc8f31fab0_footerInfoStyle",
            footerInfoStyle_noneSelected: "mc8f31fab0_footerInfoStyle_noneSelected",
            customFooterStyle: "mc8f31fab0_customFooterStyle",
            groupCallTitleInput: "mc8f31fab0_groupCallTitleInput"
        },
        ph = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    include_all_participants: !Wn(i.props.listid),
                    chat_title: i.props.chattitle,
                    loadingstate: !1
                }, i.toggleParticipantsInclusion = i.toggleParticipantsInclusion.bind(h(i)), i.handleTitleChange = i.handleTitleChange.bind(h(i)), i
            }
            return r(s, [{
                key: "componentWillMount",
                value: function() {
                    if (this.props.addToCall) {
                        this.setState({
                            disable_buttons: !0
                        });
                        var e, t = this.props.chattitle.trim();
                        e = $WC.Util.isEmpty(t) || $WC.Matcher.check("invalid_textpattern_chars", t) || t.length > 30, this.setState({
                            invalidtitle: e
                        }), void 0 !== WebMessanger && WebMessanger.isChatPaused() && !Zs() && 0 == Object.keys(ft()).length && (_t("", function() {
                            this.setState({
                                loadingstate: !1
                            })
                        }.bind(this)), this.setState({
                            loadingstate: !0
                        }))
                    }
                }
            }, {
                key: "toggleParticipantsInclusion",
                value: function() {
                    this.setState({
                        include_all_participants: !this.state.include_all_participants
                    })
                }
            }, {
                key: "handleTitleChange",
                value: function(e) {
                    var t = mn(e),
                        s = !1;
                    if (this.props.addToCall) {
                        var i = t.value.trim();
                        s = $WC.Util.isEmpty(i) || $WC.Matcher.check("invalid_textpattern_chars", i) || i.length > 30
                    }
                    this.setState({
                        chat_title: t.value,
                        invalidtitle: s
                    })
                }
            }, {
                key: "getHeader",
                value: function() {
                    return N("div", {
                        class: Mr.header_wrapper
                    }, N("div", {
                        class: Mr.heading
                    }, re("fork.chat.heading")), N("div", {
                        class: Mr.msg_wrapper
                    }, N("div", {
                        class: Mr.msg
                    }, N("div", {
                        class: Mr.msg_details
                    }, N("div", {
                        class: Mr.msgdetails_sender
                    }, this.props.msgdetails.sender), N("div", {
                        class: Mr.msgdetails_time
                    }, this.props.msgdetails.time)), N("div", {
                        class: Mr.msg_content,
                        dangerouslySetInnerHTML: {
                            __html: this.props.msgdetails.msg
                        }
                    }))))
                }
            }, {
                key: "render",
                value: function() {
                    var e;
                    e = this.props.addToCall ? this.props.calleeName ? re("mediacall.dialog.title", [this.props.calleeName]) : re("mediacall.dialog.defaulttitle") : this.getHeader();
                    var t = [{
                            text: re("Create"),
                            buttonstyle: "confirmation_button",
                            onclick: function(e) {
                                if (Vi(this.state.chat_title)) this.props.failureCallback(re("fork.title.empty"));
                                else {
                                    var t = {
                                            includeparticipants: this.state.include_all_participants,
                                            msguid: this.props.msgid,
                                            sid: oe.get("sid"),
                                            title: this.state.chat_title,
                                            userids: e.toString()
                                        },
                                        s = {
                                            "Content-Type": "application/json",
                                            "X-XHR-exception": "true",
                                            "X-ZCSRF-TOKEN": Yi()
                                        },
                                        i = function() {
                                            this.props.failureCallback(re("fork.chat.failed"))
                                        }.bind(this);
                                    Je("v1/chats/" + this.props.listid + "/fork", t, null, i, null, null, s), this.props.unmountComponent()
                                }
                            }.bind(this)
                        }],
                        s = this.state.include_all_participants ? gh.participants_checkboxsel : gh.participants_checkbox,
                        i = {},
                        n = null,
                        a = null,
                        o = void 0,
                        r = null,
                        l = N("div", {
                            class: gh.fork_includeall,
                            onclick: this.toggleParticipantsInclusion
                        }, N("span", {
                            class: s
                        }), N("input", {
                            type: "checkbox"
                        }), N("label", {
                            class: gh.checkbox_label
                        }, re("fork.chat.includeall"))),
                        d = "";
                    this.props.addToCall && (l = N("div", {
                        class: gh.spacer
                    }), this.props.participantslist.forEach((function(e) {
                        i[e] = {
                            id: "" + e
                        }
                    })), t = [{
                        text: re("mediacall.ring.all"),
                        buttonstyle: "confirmation_button",
                        onclick: function(e) {
                            this.state.invalidtitle || this.state.disable_buttons || (this.props.unmountComponent(), this.props.addToCallCallback(e, this.state.chat_title))
                        }.bind(this)
                    }], n = function(e, t, s) {
                        this.state.disable_buttons && this.setState({
                            disable_buttons: !1
                        })
                    }.bind(this), a = function(e) {
                        var t = [];
                        for (var s in e) i.hasOwnProperty(s) || t.push(s);
                        0 == t.length && this.setState({
                            disable_buttons: !0
                        })
                    }.bind(this), o = 18, r = function() {
                        Gn($WC.I18N("mediacall.selection.limit", [o]))
                    }, d = gh.groupCallTitleInput), this.state.invalidtitle && (d += " " + gh.invalidinput);
                    var c = this.props.addToCall ? re("mediacall.title.prompt") : re("fork.chat.title"),
                        u = this.props.addToCall ? re("mediacall.title.empty") : re("fork.title.enter"),
                        m = N("div", {
                            class: gh.fork_header_wrapper
                        }, N("div", {
                            class: gh.fork_title_wrapper
                        }, N("div", {
                            class: gh.fork_chattitle
                        }, c), N("input", {
                            type: "text",
                            class: d,
                            onChange: this.handleTitleChange,
                            placeholder: u,
                            value: this.state.chat_title,
                            onKeyDown: function(e) {
                                e.keyCode == ut.KEYCODES.ESCAPE && (e.stopPropagation(), e.preventDefault())
                            }
                        })), l),
                        h = this.state.include_all_participants && this.props.participantslist ? {
                            USERID: this.props.participantslist
                        } : "",
                        g = [ut.HYBRIDSEARCH.ORGCONTACT],
                        p = this.props.addToCall ? null : 10,
                        f = Ir("DNAME", "", $r("", !0, null, null), p, h, "EMAILID");
                    Zs() || (f = Ir("DNAME", "", ft(), p, h, "EMAILID", "UC")).forEach((function(e) {
                        e._filtertype = ut.HYBRIDSEARCH.ORGCONTACT
                    }));
                    var v = {},
                        C = 0;
                    f.forEach((function(e) {
                        var t = vr(e);
                        t.counter = C++, v[e.USERID] = t
                    }));
                    var b = {};
                    h.USERID && h.USERID.forEach((function(e) {
                        var t = {
                            id: e
                        };
                        b[e] = t
                    }));
                    var y = {
                        footerWrapper: this.state.invalidtitle || this.state.disable_buttons ? gh.fork_dialog_footer + " " + gh.disable_buttons : gh.fork_dialog_footer
                    };
                    return N(Po, {
                        listid: this.props.listid,
                        title: e,
                        list: v,
                        searchplaceholder: re("users.name.search"),
                        fetchImageSource: Cr,
                        multiselect: !0,
                        dialogview: !0,
                        searchsequence: g,
                        defaultsearch: !0,
                        actions: t,
                        callbackOnClose: this.props.unmountComponent,
                        footerprefix: m,
                        customDialogStyles: y,
                        invisible_excluded_list: b,
                        updateinitiallist: !0,
                        sortonsearch: !0,
                        sortComparator: tn("UC"),
                        preselectedlist: i,
                        onListItemClicked: n,
                        onSelectedItemRemoval: a,
                        selection_limit: o,
                        onSelectionLimitExceed: r,
                        fetchImageTitle: function(e) {
                            return Ji(e)
                        },
                        handleEscOnSearchInput: !0,
                        loadingstate: this.state.loadingstate
                    })
                }
            }]), s
        }(R),
        fh = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s, i, n, a, o, r, l, d) {
                    this.node = document.createElement("div"), this.closeCallback = d, document.body.appendChild(this.node), ee(N(ph, {
                        listid: e,
                        chattitle: t,
                        msgid: s,
                        msgdetails: i,
                        participantslist: n,
                        addToCall: o,
                        calleeName: r,
                        addToCallCallback: l,
                        failureCallback: a,
                        unmountComponent: this.unmountComponent
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), An(this.node), "function" == typeof this.closeCallback && this.closeCallback()
                }
            }]), e
        }(),
        vh = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    forward_info: i.props.forwardinfo
                }, i.toggleForwardInfo = i.toggleForwardInfo.bind(h(i)), i
            }
            return r(s, [{
                key: "toggleForwardInfo",
                value: function() {
                    this.setState({
                        forward_info: !this.state.forward_info
                    })
                }
            }, {
                key: "render",
                value: function() {
                    var e = this.state.forward_info ? gh.participants_checkboxsel : gh.participants_checkbox,
                        t = [ut.HYBRIDSEARCH.ORGCONTACT, ut.HYBRIDSEARCH.JOINEDCHANNEL, ut.HYBRIDSEARCH.CHAT],
                        s = N("div", {
                            class: gh.fork_includeall,
                            onclick: this.toggleForwardInfo
                        }, N("span", {
                            class: e
                        }), N("input", {
                            type: "checkbox"
                        }), N("label", {
                            class: gh.participants_label
                        }, re("forward.show.info")));
                    this.props.hideSenderInfoCheckbox && (s = null);
                    var i = br(),
                        n = this.props.actions[0].onclick,
                        a = this.state.forward_info,
                        o = this.props.unmountComponent,
                        r = [{
                            text: re("common.send"),
                            buttonstyle: "confirmation_button",
                            onclick: function(e) {
                                n(e, a), o()
                            }
                        }],
                        l = {
                            footerWrapper: gh.fork_dialog_footer
                        };
                    return N(Po, {
                        listid: this.props.listid,
                        list: i,
                        title: this.props.listtitle,
                        searchplaceholder: this.props.placeholder,
                        sortonsearch: !0,
                        actions: r,
                        multiselect: !0,
                        fetchImageSource: Cr,
                        dialogview: !0,
                        defaultsearch: !0,
                        searchsequence: t,
                        footerprefix: s,
                        callbackOnClose: this.props.unmountComponent,
                        customDialogStyles: l
                    })
                }
            }]), s
        }(R),
        Ch = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s, i, n, a) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(vh, {
                        listid: e,
                        listtitle: t,
                        placeholder: s,
                        actions: i,
                        forwardinfo: n,
                        hideSenderInfoCheckbox: a,
                        unmountComponent: this.unmountComponent
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), An(this.node)
                }
            }]), e
        }();
    var bh = "mcb7ff3862_container",
        yh = "mcb7ff3862_wrapper",
        _h = "mcb7ff3862_headerlist",
        Wh = "mcb7ff3862_allitem",
        Sh = "mcb7ff3862_otherreactionitem",
        wh = "mcb7ff3862_listcontainer",
        Mh = "mcb7ff3862_emojicount",
        Ih = "mcb7ff3862_selected",
        Th = "mcb7ff3862_reactedusercontainer",
        Ah = "mcb7ff3862_hoverdetailscontainer",
        Eh = "mcb7ff3862_hovertime",
        Uh = "mcb7ff3862_remainingreactions",
        kh = "mcb7ff3862_reactioncount",
        Nh = "mcb7ff3862_textemoji",
        xh = "mcb7ff3862_containerWrapperStyle",
        Oh = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                a(this, s), (i = t.call(this, e)).zm = new Pi({
                    default_size: "24",
                    animation: {
                        default_size: "24"
                    },
                    customemoji_size: "small",
                    preLoadCustomEmoji: !0
                }), i.default_list = {
                    data: e.params.reactionlist.data,
                    list: e.params.reactionlist.list
                }, i.partinfo = on(e.params.partinfo), i.onHeaderElemClick = i.onHeaderElemClick.bind(h(i)), i.checkAndReturnSmileyElem = i.checkAndReturnSmileyElem.bind(h(i)), i.handleSearch = i.handleSearch.bind(h(i)), i.updateParticipantsData = i.updateParticipantsData.bind(h(i)), i.getHoverDetailsContainer = i.getHoverDetailsContainer.bind(h(i)), i.participantinfoupdated = !1;
                var n = i.filterList("all");
                return i.state = {
                    selectedheader: "all",
                    currentlist: n,
                    totalcount: Object.keys(n).length
                }, i
            }
            return r(s, [{
                key: "updateParticipantsData",
                value: function(e) {
                    for (var t in this.participantinfoupdated = !0, e) e[t].email || ai(t) || (e[t].notinorg = !0);
                    this.partinfo = e, this.setState({
                        currentlist: this.filterList(this.state.selectedheader)
                    })
                }
            }, {
                key: "checkAndReturnSmileyElem",
                value: function(e) {
                    return e.match(this.zm.smiley_regex) ? this.zm.getSmiley(e) : Be.check("customemoji", e) ? this.getCustomEmojiElem(e) : e
                }
            }, {
                key: "constructReactionData",
                value: function(e, t) {
                    var s = e.split(":"),
                        i = s[1],
                        n = ai(i) || this.partinfo[i] && this.partinfo[i].email || "loading";
                    this.partinfo[i] && this.partinfo[i].notinorg && (n = re("chat.participant.nonorg"));
                    var a = ti(s[1]) || s[2];
                    return oe.get("zuid") == i && (oe.get("email") && (n = oe.get("email")), a = re("chat.you")), ("loading" == n && this.participantinfoupdated || "disable" == this.props.params.config.userdescinfo) && (n = ""), {
                        reactedtime: s[0],
                        zuid: i,
                        dname: a,
                        email: n,
                        reactionname: t,
                        numberofreactions: [t],
                        title: a,
                        desc: n,
                        imgsrc: oe.get("photoserver") + "/file?ID=" + i + "&t=user&exp=6000&fs=thumb",
                        id: i
                    }
                }
            }, {
                key: "getAllReactorsObj",
                value: function() {
                    var e = {},
                        t = this.default_list.data;
                    for (var s in t)
                        for (var i = t[s], n = 0; n < i.length; n++) {
                            var a = i[n].split(":")[1];
                            e[a] ? e[a].numberofreactions.push(s) : e[a] = this.constructReactionData(i[n], s)
                        }
                    return e
                }
            }, {
                key: "filterList",
                value: function(e) {
                    var t = {};
                    if ("all" == e) t = this.getAllReactorsObj();
                    else
                        for (var s = this.default_list.data[e], i = 0; i < s.length; i++) {
                            t[s[i].split(":")[1]] = this.constructReactionData(s[i], e)
                        }
                    return t
                }
            }, {
                key: "onHeaderElemClick",
                value: function(e) {
                    this.setState({
                        selectedheader: e,
                        currentlist: this.filterList(e)
                    })
                }
            }, {
                key: "handleSearch",
                value: function(e) {
                    var t = this.filterList(this.state.selectedheader);
                    return "" != e && (t = Ir("dname", e, t, null, null, "email")), t.map((function(e) {
                        return e.id
                    }))
                }
            }, {
                key: "getCustomEmojiElem",
                value: function(e) {
                    return N("div", {
                        style: "margin-top: 2px",
                        dangerouslySetInnerHTML: {
                            __html: this.zm.replaceCustomEmoji(e)
                        }
                    })
                }
            }, {
                key: "getHoverDetailsContainer",
                value: function(e) {
                    var t = Ae(e.reactedtime),
                        s = [];
                    if ("all" == this.state.selectedheader) {
                        for (var i = e.numberofreactions.length > 4 ? e.numberofreactions.length - 3 : null, n = 0; n < e.numberofreactions.length && 3 != n; n++) {
                            var a = this.checkAndReturnSmileyElem(e.numberofreactions[n]);
                            "string" == typeof a && (a = N("div", {
                                class: Nh
                            }, a)), s.push(a)
                        }
                        i && s.push(N("div", {
                            class: kh
                        }, "+" + i))
                    }
                    return N("div", {
                        class: Ah
                    }, N("div", {
                        class: Eh
                    }, t), N("div", {
                        class: Uh
                    }, s))
                }
            }, {
                key: "getReactorList",
                value: function() {
                    var e = this.state.currentlist;
                    return N("div", {
                        class: Th
                    }, N(Po, {
                        key: this.state.selectedheader,
                        listid: this.state.selectedheader,
                        list: e,
                        searchplaceholder: re("users.name.search"),
                        iscompletelist: !0,
                        onSearch: this.handleSearch,
                        onListItemClicked: this.props.params.onListItemClick,
                        customlistitemstyles: {
                            containerWrapperStyle: xh
                        },
                        customlistitemprops: {
                            listitemhoverdetails: !0,
                            gethoverdetailscontainer: this.getHoverDetailsContainer
                        },
                        loadingstate: !this.participantinfoupdated,
                        sortonsearch: !0,
                        sortComparator: tn("reactedtime", !0),
                        updateinitiallist: !0
                    }))
                }
            }, {
                key: "getHeaderList",
                value: function() {
                    for (var e = this.default_list.data, t = [], s = 0; s < this.default_list.list.length; s++) {
                        var i = this.default_list.list[s],
                            n = this.state.selectedheader == i;
                        t.push(N(Rh, {
                            name: i,
                            item: e,
                            onHeaderElemClick: this.onHeaderElemClick,
                            selectedheader: n,
                            checkAndReturnSmileyElem: this.checkAndReturnSmileyElem
                        }))
                    }
                    var a = "all" == this.state.selectedheader ? Ih : "";
                    return N("div", {
                        class: _h
                    }, N("div", {
                        class: Wh + " " + a,
                        onclick: this.onHeaderElemClick.bind(this, "all")
                    }, re("All") + " " + this.state.totalcount), N("div", {
                        class: wh
                    }, t, " "))
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = this.getHeaderList(),
                        s = this.getReactorList(),
                        i = {
                            customContainerStyle: bh,
                            customWrapperStyle: yh
                        },
                        n = [t, s];
                    return N(xt, {
                        callbackOnClose: e.unmountComponent,
                        customDialogStyles: i
                    }, n)
                }
            }]), s
        }(R),
        Rh = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                var e;
                return a(this, s), (e = t.call(this)).onHeaderElemClick = e.onHeaderElemClick.bind(h(e)), e
            }
            return r(s, [{
                key: "onHeaderElemClick",
                value: function() {
                    this.props.onHeaderElemClick(this.props.name)
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = N("div", {
                            class: Mh
                        }, e.item[e.name].length),
                        s = N("div", {
                            class: Mh
                        }, e.checkAndReturnSmileyElem(e.name)),
                        i = e.selectedheader ? Ih : "";
                    return N("div", {
                        class: Sh + " " + i,
                        onclick: this.onHeaderElemClick
                    }, s, " ", t)
                }
            }]), s
        }(R),
        Dh = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this), this.updateParticipantsData = this.updateParticipantsData.bind(this)
            }
            return r(e, [{
                key: "updateParticipantsData",
                value: function(e) {
                    this.instance.updateParticipantsData(e)
                }
            }, {
                key: "mountComponent",
                value: function(e) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(Oh, {
                        ref: function(e) {
                            this.instance = e
                        }.bind(this),
                        params: e,
                        unmountComponent: this.unmountComponent
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), this.node.parentElement && this.node.parentElement.removeChild(this.node)
                }
            }]), e
        }(),
        $h = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).toggleAddParticipantsList = i.toggleAddParticipantsList.bind(h(i)), i.updateParticipantsList = i.updateParticipantsList.bind(h(i)), i.onSearch = i.onSearch.bind(h(i)), i.state = {
                    participantslist: hr(i.props.listid, i.props.participantslist, i.props.memberOptions),
                    showAddParticipantList: !1,
                    forceupdateinitiallist: !1,
                    searchtext: "",
                    participantsToAdd: {},
                    listid: null
                }, i.next_token = "", i.searchtoken = "", i.reqcache = {
                    result: [],
                    noresult: [],
                    token_mapping: {}
                }, i.addparticipant_reqcache = {
                    result: [],
                    noresult: [],
                    token_mapping: {}
                }, i
            }
            return r(s, [{
                key: "isCachedRequest",
                value: function(e) {
                    for (var t = 0; t < this.reqcache.result.length; t++)
                        if (-1 !== e.indexOf(this.reqcache.result[t]) && !this.reqcache.token_mapping[this.reqcache.result[t].split("=")[2]]) return !0;
                    return !1
                }
            }, {
                key: "isCachedParticipantRequest",
                value: function(e) {
                    for (var t = 0; t < this.addparticipant_reqcache.result.length; t++)
                        if (-1 !== e.indexOf(this.addparticipant_reqcache.result[t]) && !this.addparticipant_reqcache.token_mapping[this.addparticipant_reqcache.result[t].split("=")[2]]) return !0;
                    return !1
                }
            }, {
                key: "isEmptyResultParticipantCachedRequest",
                value: function(e) {
                    for (var t = 0; t < this.addparticipant_reqcache.noresult.length; t++)
                        if (-1 !== e.indexOf(this.addparticipant_reqcache.noresult[t])) return !0;
                    return !1
                }
            }, {
                key: "toggleAddParticipantsList",
                value: function() {
                    this.setState({
                        showAddParticipantList: !this.state.showAddParticipantList,
                        searchtext: "",
                        forceupdateinitiallist: !this.state.forceupdateinitiallist
                    })
                }
            }, {
                key: "updateParticipantsList",
                value: function(e, t) {
                    var s = t.getAttribute("data-operation");
                    if ("remove" === s) {
                        var i = function() {
                            var t = this.state.participantslist;
                            delete t[e.id], this.setState({
                                participantslist: t,
                                forceupdateinitiallist: !1
                            })
                        }.bind(this, e);
                        this.props.onListItemClicked(e, t, i)
                    } else if ("assignadmin" == s || "assignmoderator" == s || "assignmember" == s) {
                        var n = function() {
                            this.fetchParticipants();
                            var e = this.state.participantslist;
                            this.setState({
                                participantslist: e,
                                forceupdateinitiallist: !1
                            })
                        }.bind(this, e);
                        this.props.onListItemClicked(e, t, n)
                    } else this.props.onListItemClicked(e, t)
                }
            }, {
                key: "fetchParticipants",
                value: function(e) {
                    if (!1 !== this.state.newUsersAddedToList || !this.props.threaddetails || !this.props.threaddetails.parentid) {
                        var t = this.props.listid,
                            s = this.props.memberOptions,
                            i = function(i) {
                                var n = JSON.parse(i),
                                    a = n.data.users,
                                    o = n.data;
                                if (o && o.guest_users) {
                                    var r = o.guest_users.map((function(e) {
                                        return {
                                            dname: e.name,
                                            email: "",
                                            status: e.status,
                                            uname: e.user_id,
                                            zuid: e.user_id,
                                            guest: !0
                                        }
                                    }));
                                    a = a.concat(r)
                                }
                                var l = i ? a || o : "";
                                if (a ? (e ? this.reqcache.token_mapping[e] = o.next_token : this.next_token = o.next_token ? o.next_token : "", this.props.fetchAndStoreParticipantsList(t, l)) : this.props.threaddetails.fetchAndStoreFollowersList(t, l), this.props.threaddetails && this.props.threaddetails.parentid && !a || !this.props.threaddetails.parentid && a) {
                                    var d = hr(t, l, s);
                                    e && nn(d) ? this.reqcache.result.push("&search=" + e) : e && !nn(d) && this.reqcache.noresult.push("&search=" + e), d = Object.assign({}, this.state.participantslist, d);
                                    var c = !1;
                                    for (var u in d) this.state.participantslist[u] || (c = !0);
                                    this.setState({
                                        participantslist: d,
                                        searchtext: e,
                                        forceupdateinitiallist: !0,
                                        newUsersAddedToList: c
                                    })
                                }
                            }.bind(this),
                            n = {
                                "X-XHR-exception": "true",
                                "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
                            };
                        if (this.props.threaddetails && this.props.threaddetails.parentid) {
                            var a = oe.get("presence_keys") ? "fields=presence" : null;
                            Xe("v2/threads/" + this.props.listid + "/followers", a, i, null, null, null, n)
                        }
                        var o = this.props.threaddetails && this.props.threaddetails.parentid ? this.props.threaddetails.parentid : this.props.listid,
                            r = oe.get("presence_keys") ? "fields=presence" : null;
                        if (e) {
                            var l = oe.get("presence_keys") ? "fields=presence&search=" : "&search=";
                            r = e ? l + e : null
                        }
                        if (!this.isCachedRequest(r) && (!e || this.next_token)) Mn((function() {
                            Xe("v1/chats/" + o + "/participants", r, i)
                        }), null, 300)()
                    }
                }
            }, {
                key: "addMemberToChat",
                value: function(e) {
                    var t = function() {
                        2005 == JSON.parse(this.response)[0].objString.ERRCODE && Gn(re("useradd.not.groupadmin"))
                    };
                    if (Wn(this.props.listid)) {
                        Je("v1/channels/" + Al(this.props.listid).oc_id + "/invite", "ulist=" + encodeURIComponent(e), null, t)
                    } else {
                        var s = this.props.threaddetails && this.props.threaddetails.parentid ? {
                            user_ids: e
                        } : "chid=" + this.props.listid + "&ulist=" + encodeURIComponent(e);
                        this.props.entityid && (s += "&entity_id=" + this.props.entityid);
                        var i = {
                            "X-XHR-exception": "true"
                        };
                        this.props.threaddetails && this.props.threaddetails.parentid && (i["Content-Type"] = "application/json");
                        var n = function() {
                            this.props.threaddetails && this.props.threaddetails.showInfoMsg && this.props.threaddetails.showInfoMsg(re("thread.followers.add"))
                        }.bind(this);
                        Je(this.props.threaddetails && this.props.threaddetails.parentid ? "v2/threads/" + this.props.listid + "/followers" : "addmember.do", s, n, t, null, null, i)
                    }
                }
            }, {
                key: "getParticipantsListToAdd",
                value: function(e) {
                    var t = this.props.threaddetails && this.props.threaddetails.parentid ? this.props.threaddetails.parentid : this.props.listid,
                        s = this,
                        i = function() {
                            var i = JSON.parse(this.response).data,
                                n = i.users ? i.users : i.length ? i : [],
                                a = 0 == n.length,
                                o = hr(t, n);
                            e ? s.addparticipant_reqcache.token_mapping[e] = i.next_token : s.searchtoken = i.next_token ? i.next_token : "";
                            var r = "";
                            if (s.props.threaddetails && s.props.threaddetails.parentid) r = oe.get("presence_keys") ? "fields=presence&search=" : "&search=";
                            else if (s.props.entityid && s.props.is_chatlet_cb_modify_enabled) {
                                r = "entity_id=" + encodeURIComponent(s.props.entityid) + "&limit=200&search=", Object.keys(s.state.participantslist).filter((function(e) {
                                    o[e] && delete o[e]
                                })), a = !!Gi(o)
                            } else r = oe.get("presence_keys") ? "mode=allowed&fields=presence&search=" : "mode=allowed&search=";
                            e && nn(o) ? s.addparticipant_reqcache.result.push(r + e) : nn(o) || s.addparticipant_reqcache.noresult.push(r + e), o = s.props.threaddetails && s.props.threaddetails.parentid ? hr(s.props.listid, n) : Object.assign({}, s.state.participantsToAdd, o), s.setState({
                                participantsToAdd: o,
                                searchtext: e,
                                data_response_empty: a
                            })
                        },
                        n = oe.get("presence_keys") ? "mode=allowed&fields=presence" : "mode=allowed";
                    if (e && (n += "&search=" + e), this.isEmptyResultParticipantCachedRequest(n)) this.setState({
                        participantsToAdd: {},
                        searchtext: e
                    });
                    else if (this.props.threaddetails.parentid) {
                        var a = {},
                            o = hr(this.props.threaddetails.parentid, this.props.threaddetails.fetchParentParticipants()),
                            r = this.state.participantslist,
                            l = !1;
                        for (var d in o) r[d] || (a[d] = o[d], l = !0);
                        if (Gi(a) && !l) this.setState({
                            allParticipantsPresent: !0,
                            searchtext: ""
                        });
                        else if (e) {
                            var c = oe.get("presence_keys") ? "fields=presence&search=" : "&search=";
                            if (c = e ? c + e : null, !this.isCachedParticipantRequest(c)) Mn((function() {
                                Xe("v1/chats/" + t + "/participants", c, i)
                            }), null, 300)()
                        } else this.setState({
                            participantsToAdd: a,
                            searchtext: e
                        })
                    } else if (!this.isCachedParticipantRequest(n) && Wn(t)) {
                        Mn((function() {
                            Xe("v1/chats/" + t + "/participants", n, i)
                        }), null, 300)()
                    } else if (this.props.entityid && this.props.is_chatlet_cb_modify_enabled) {
                        n = "entity_id=" + encodeURIComponent(this.props.entityid) + "&limit=200", e && (n += "&search=" + e), Mn((function() {
                            Xe("v2/users", n, i)
                        }), null, 300)()
                    } else {
                        var u = {
                                USERID: Object.keys(this.state.participantslist)
                            },
                            m = Ir("DNAME", "", di(), 10, u, "EMAILID"),
                            h = {},
                            g = 0;
                        m.forEach((function(e) {
                            var t = vr(e);
                            t.counter = g++, h[e.USERID] = t
                        }));
                        var p = !1;
                        Wn(t) || this.props.threaddetails.parentid || !Gi(h) || (p = !0), this.setState({
                            participantsToAdd: h,
                            searchtext: e,
                            excluded_ids: u,
                            allUsersPresent: p
                        })
                    }
                }
            }, {
                key: "getListLabel",
                value: function() {
                    var e = this.props.threaddetails && this.props.threaddetails.allowfollowersaddition ? re("thread.action.addfollower") : re("chat.action.addparticipant");
                    return this.props.allowparticipantsaddition || this.props.threaddetails && this.props.threaddetails.allowfollowersaddition ? N("div", {
                        onclick: this.toggleAddParticipantsList,
                        class: gh.listlabel
                    }, N("span", {
                        class: gh.labelbutton
                    }), N("span", null, e)) : null
                }
            }, {
                key: "onSearch",
                value: function(e, t) {
                    var s = Ir("title", e, t, null, null, "desc");
                    return this.state.showAddParticipantList ? s.length < 10 && (Sn(this.props.listid) || this.searchtoken) && this.getParticipantsListToAdd(e, !0) : s.length < 10 && this.fetchParticipants(e, !0), s.map((function(e) {
                        return e.id
                    }))
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    Gi(this.state.participantslist) && this.fetchParticipants(), this.props.openAddParticipants && this.toggleAddParticipantsList()
                }
            }, {
                key: "getSortComparator",
                value: function() {
                    return Wn(this.props.listid) ? sn(tn("sortidentifier"), tn("counter", !1)) : sn(tn("statuscode"), tn("title", !1, (function(e) {
                        return e.toLowerCase()
                    })))
                }
            }, {
                key: "render",
                value: function() {
                    var e = this.getSortComparator(),
                        t = this.props.listtitle,
                        s = this.state.participantslist,
                        i = null,
                        n = null,
                        a = !1,
                        o = !1,
                        r = this.getListLabel(),
                        l = !!Gi(s),
                        d = this.updateParticipantsList,
                        c = null,
                        u = null,
                        m = null,
                        h = null,
                        g = !1,
                        p = null,
                        f = null;
                    if (this.state.showAddParticipantList) {
                        i = [ut.HYBRIDSEARCH.ORGCONTACT];
                        var v = this.props.threaddetails && this.props.threaddetails.allowfollowersaddition ? re("thread.action.addfollower") : re("chat.action.addparticipant");
                        if (t = N("div", {
                                class: gh.dialogtitle
                            }, N("span", {
                                onclick: this.toggleAddParticipantsList
                            }, this.props.listtitle), N("span", {
                                class: gh.faded
                            }, ">"), N("span", null, v)), r = null, this.props.threaddetails && this.props.threaddetails.parentid && (u = N("div", null, N("strong", null, N(re, {
                                id: "channel.deluge.note"
                            })), " ", N(re, {
                                id: "participantdialog.footnote",
                                params: [this.props.threaddetails.parentchattitle]
                            }))), this.props.threaddetails && this.props.threaddetails.parentid && this.state.allParticipantsPresent) m = {
                            footerWrapper: gh.footerInfoStyle_noneSelected
                        }, s = {}, g = !0, p = function() {
                            var e = $WC.Config.get("staticserverpath") + "/images/bar/aac5f9c7_no_user_found.svg";
                            return N("div", {
                                class: Uo.error_info + " " + Uo.hv_align
                            }, N("img", {
                                src: e,
                                class: Uo.error_img
                            }), N("div", {
                                class: Uo.infotxt
                            }, N("div", null, N(re, {
                                id: "participantdialog.users.noneavailable"
                            })), N("div", {
                                class: Uo.infotext_2
                            }, N(re, {
                                id: "participantdialog.users.noneavailable.reason"
                            }))))
                        };
                        else {
                            if (this.props.threaddetails && this.props.threaddetails.parentid) {
                                var C = gh.footerInfoStyle_noneSelected;
                                this.state.participantSelectedToAdd && (m = {
                                    footerWrapper: gh.customFooterStyle
                                }, C = gh.footerInfoStyle), u = N("div", {
                                    class: C
                                }, u), d = function(e, t, s) {
                                    this.setState({
                                        participantSelectedToAdd: !0
                                    })
                                }.bind(this), h = function(e) {
                                    Gi(e) && this.setState({
                                        participantSelectedToAdd: !1
                                    })
                                }.bind(this)
                            }
                            var b = oe.get("presence_keys") ? "mode=allowed&fields=presence&search=" : "mode=allowed&search=";
                            this.props.entityid && this.props.is_chatlet_cb_modify_enabled && (b = "entity_id=" + encodeURIComponent(this.props.entityid) + "&limit=200&search="), !Gi(this.state.participantsToAdd) || this.isEmptyResultParticipantCachedRequest(b + this.state.searchtext) || this.state.allUsersPresent || this.getParticipantsListToAdd(this.state.searchtext), l = !(this.state.searchtext || this.state.data_response_empty || this.state.allUsersPresent), s = this.state.participantsToAdd, f = this.state.excluded_ids, n = [{
                                text: re("Add"),
                                buttonstyle: "alignend",
                                onclick: function(e) {
                                    this.addMemberToChat(e), this.props.unmountComponent()
                                }.bind(this)
                            }], a = !0, o = !Wn(this.props.listid) && !Sn(this.props.listid), c = Gi(this.state.participantsToAdd) ? "" : this.state.listid ? this.state.listid : this.props.listid
                        }
                    }
                    return N(Po, {
                        key: c,
                        listid: this.props.listid,
                        title: t,
                        list: s,
                        searchplaceholder: re("users.name.search"),
                        dialogview: !0,
                        iscompletelist: !0,
                        multiselect: a,
                        defaultsearch: o,
                        onSearch: this.onSearch,
                        fetchImageSource: Cr,
                        sortonsearch: !0,
                        sortComparator: e,
                        listlabel: r,
                        loadingstate: l,
                        onListItemClicked: d,
                        searchsequence: i,
                        actions: n,
                        forceupdateinitiallist: this.state.forceupdateinitiallist,
                        callbackOnClose: this.props.unmountComponent,
                        searchtext: this.state.searchtext,
                        footerprefix: u,
                        customDialogStyles: m,
                        onSelectedItemRemoval: h,
                        getCustomEmptyPage: p,
                        customemptypage: g,
                        excludeduser_ids: f
                    })
                }
            }]), s
        }(R),
        Hh = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s, i, n, a, o, r, l, d, c) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N($h, {
                        listid: e,
                        listtitle: t,
                        participantslist: s,
                        onListItemClicked: i,
                        memberOptions: n,
                        allowparticipantsaddition: a,
                        fetchAndStoreParticipantsList: o,
                        threaddetails: r,
                        unmountComponent: this.unmountComponent,
                        openAddParticipants: l,
                        entityid: d,
                        is_chatlet_cb_modify_enabled: c
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), An(this.node)
                }
            }]), e
        }();
    var Lh = "mc1f3b7abb_container",
        Ph = "mc1f3b7abb_msgref_wrapper",
        Fh = "mc1f3b7abb_headercontainer",
        Bh = "mc1f3b7abb_header",
        jh = "mc1f3b7abb_closebutton",
        zh = "mc1f3b7abb_content",
        Gh = "mc1f3b7abb_listItems",
        qh = "mc1f3b7abb_titlewrapper",
        Vh = "mc1f3b7abb_title",
        Yh = "mc1f3b7abb_typewrapper",
        Zh = "mc1f3b7abb_radio_label",
        Kh = "mc1f3b7abb_calendarwrapper",
        Xh = "mc1f3b7abb_dialogfooter",
        Jh = "mc1f3b7abb_addlist",
        Qh = "mc1f3b7abb_footerwrapper",
        eg = "mc1f3b7abb_containerWrapperStyle",
        tg = "mc1f3b7abb_customListWrapper",
        sg = "mc1f3b7abb_customSearchStyle",
        ig = "mc1f3b7abb_contentwrapper",
        ng = "mc1f3b7abb_dialogcontent",
        ag = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                a(this, s);
                var n = (i = t.call(this, e)).props.parsedtime > 0 ? i.props.parsedtime : (new Date).getTime();
                return i.contentnode = null, i.state = {
                    remindertype: "conversation",
                    selected_list: {},
                    display_userslist: !1,
                    remindertime: n
                }, i.onDurationSelect = i.onDurationSelect.bind(h(i)), i.toggleReminderType = i.toggleReminderType.bind(h(i)), i.showUsersList = i.showUsersList.bind(h(i)), i.toggleUsersList = i.toggleUsersList.bind(h(i)), i.addAssigneeList = i.addAssigneeList.bind(h(i)), i.removeSelectedItem = i.removeSelectedItem.bind(h(i)), i.setContentNode = i.setContentNode.bind(h(i)), i.escEventListener = i.escEventListener.bind(h(i)), i
            }
            return r(s, [{
                key: "componentDidMount",
                value: function() {
                    this.contentnode.focus(), window.addEventListener("keydown", this.escEventListener, !0)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    window.removeEventListener("keydown", this.escEventListener, !0)
                }
            }, {
                key: "setContentNode",
                value: function(e) {
                    this.contentnode = e
                }
            }, {
                key: "updateReminderTime",
                value: function(e) {
                    this.setState({
                        remindertime: e
                    })
                }
            }, {
                key: "escEventListener",
                value: function(e) {
                    e.keyCode === ut.KEYCODES.ESCAPE && this.state.display_userslist && (this.toggleUsersList(), this.contentnode.focus(), e.stopPropagation())
                }
            }, {
                key: "showUsersList",
                value: function() {
                    nn(this.state.selected_list) >= 10 ? (Gn(re("reminders.members.limit", [10])), this.setState({
                        display_userslist: !1
                    })) : !nn(this.state.selected_list) || !Wn(Object.keys(this.state.selected_list)[0]) && ei(Object.keys(this.state.selected_list)[0]) ? this.setState({
                        display_userslist: !1
                    }) : (Gn(re("reminders.chatremlimit.error")), this.setState({
                        display_userslist: !1
                    }))
                }
            }, {
                key: "toggleUsersList",
                value: function() {
                    this.setState({
                        display_userslist: !this.state.display_userslist
                    })
                }
            }, {
                key: "addAssigneeList",
                value: function(e, t, s) {
                    var i = this.state.selected_list;
                    Wn(e.id) || !ei(e.id) ? (i[e.id] = e, this.setState({
                        selected_list: i,
                        display_userslist: !1
                    })) : nn(i) < 10 ? (i[e.id] = e, this.setState({
                        selected_list: i
                    })) : (Gn(re("reminders.members.limit", [10])), this.setState({
                        display_userslist: !1
                    })), s.stopPropagation()
                }
            }, {
                key: "removeSelectedItem",
                value: function(e) {
                    var t = this.state.selected_list;
                    delete t[e], this.setState({
                        selected_list: t
                    })
                }
            }, {
                key: "toggleReminderType",
                value: function(e) {
                    var t = mn(e);
                    this.setState({
                        remindertype: t.value
                    })
                }
            }, {
                key: "onDurationSelect",
                value: function(e, t) {
                    var s = new Date(e.toDateString() + " " + t).getTime();
                    this.setState({
                        remindertime: s
                    })
                }
            }, {
                key: "fetchAssigneeList",
                value: function() {
                    var e = 5;
                    (Gi(Al()) || !Gi(this.state.selected_list) && ei(Object.keys(this.state.selected_list)[0])) && (e = 10);
                    var t = Ir("DNAME", "", di(), e, "", "EMAILID"),
                        s = {},
                        i = 0;
                    if (t.forEach((function(e) {
                            var t = vr(e);
                            t.groupheader = re("Contacts"), t.sortidentifier = 0, t.counter = i++, s[e.USERID] = t
                        })), e < 10) {
                        var n = Al();
                        for (var a in n) {
                            var o = n[a],
                                r = {};
                            r.title = o.dn, r.desc = o.cd, r.id = o.chid, fr(o, r), r.groupheader = re("menuname.channelsandgroups"), r.sortidentifier = 1, r.counter = i++, s[o.chid] = r
                        }
                    }
                    var l = {
                            containerWrapperStyle: eg,
                            customListWrapper: tg,
                            customsearchstyle: {
                                searchcontainerstyle: sg
                            },
                            customContainerStyles: Gh
                        },
                        d = null;
                    Gi(this.state.selected_list) || Wn(Object.keys(this.state.selected_list)[0]) && ei(Object.keys(this.state.selected_list)[0]) || (d = [ut.HYBRIDSEARCH.ORGCONTACT]);
                    var c = Gi(this.state.selected_list) ? this.props.msgid : Object.keys(this.state.selected_list)[Object.keys(this.state.selected_list).length - 1];
                    return N(Po, {
                        key: c,
                        listid: this.props.msgid,
                        list: s,
                        searchplaceholder: re("users.name.search"),
                        fetchImageSource: Cr,
                        multiselect: !0,
                        dialogview: !1,
                        defaultsearch: !0,
                        actions: this.addAssigneeList,
                        sortonsearch: !0,
                        customlistitemstyles: l,
                        onListItemClicked: this.addAssigneeList,
                        invisible_excluded_list: this.state.selected_list,
                        searchsequence: d
                    })
                }
            }, {
                key: "render",
                value: function() {
                    var e = null;
                    this.state.display_userslist && (e = this.fetchAssigneeList());
                    var t = [],
                        s = {
                            customContainerStyle: Lh,
                            customButtonStyle: jh,
                            customHeaderStyle: Fh,
                            customFooterStyle: Xh,
                            customWrapperStyle: ig
                        },
                        i = N("div", {
                            class: Bh
                        }, re("message.actions.setreminder")),
                        n = [{
                            text: re("Create"),
                            buttonstyle: "confirmation_button_small",
                            onclick: function() {
                                var e = {
                                    time: this.state.remindertime
                                };
                                e.message = {
                                    chat_id: this.props.chatid,
                                    time: this.props.msgid
                                }, this.contentnode.value && (e.content = this.contentnode.value), "conversation" === this.state.remindertype && (e.chat_ids = [this.props.chatid]), "assignee" === this.state.remindertype && (e.user_ids = Object.keys(this.state.selected_list));
                                var t = {
                                    "Content-Type": "application/json",
                                    "X-XHR-exception": "true",
                                    "X-ZCSRF-TOKEN": Yi()
                                };
                                Je("v2/reminders", e, this.props.successCallback, this.props.failureCallback, null, null, t), this.props.removeComponent()
                            }.bind(this)
                        }],
                        a = re("event.content"),
                        o = N("div", {
                            class: ng
                        }, N("div", {
                            class: Ph
                        }, N("div", {
                            class: Mr.msg_wrapper
                        }, N("div", {
                            class: Mr.msg
                        }, N("div", {
                            class: Mr.msg_details
                        }, N("div", {
                            class: Mr.msgdetails_sender
                        }, this.props.msgdetails.sender), N("div", {
                            class: Mr.msgdetails_time
                        }, this.props.msgdetails.time)), N("div", {
                            class: Mr.msg_content,
                            dangerouslySetInnerHTML: {
                                __html: this.props.msgdetails.msg
                            }
                        })))), N("div", {
                            class: zh
                        }, N("span", null, a), N("textarea", {
                            ref: this.setContentNode
                        })), N("div", {
                            class: qh
                        }, N("div", {
                            class: Vh
                        }, re("message.reminder.time")), N("div", {
                            class: Kh
                        }, N(Ec, {
                            key: this.state.remindertime,
                            disable_time_zone_picker: !0,
                            value: {
                                date_time: this.state.remindertime
                            },
                            presetdate: this.state.remindertime,
                            ignoreclose: !0,
                            onDateSelection: this.onDurationSelect
                        }))), N("div", {
                            class: qh
                        }, N("div", {
                            class: Vh
                        }, re("message.reminder.type")), N("div", {
                            class: Yh
                        }, N("div", null, N("input", {
                            id: "selfreminder",
                            name: "remtype",
                            checked: "self" === this.state.remindertype,
                            type: "radio",
                            onclick: this.toggleReminderType,
                            value: "self"
                        }), N("span", null), N("label", {
                            for: "selfreminder",
                            class: Zh
                        }, re("message.reminder.self"))), N("div", null, N("input", {
                            id: "assigneereminder",
                            name: "remtype",
                            checked: "assignee" === this.state.remindertype,
                            type: "radio",
                            onclick: this.toggleReminderType,
                            value: "assignee"
                        }), N("span", null), N("label", {
                            for: "assigneereminder",
                            class: Zh
                        }, re("message.reminder.others"))), N("div", null, N("input", {
                            id: "conversationreminder",
                            name: "remtype",
                            checked: "conversation" === this.state.remindertype,
                            type: "radio",
                            onclick: this.toggleReminderType,
                            value: "conversation"
                        }), N("span", null), N("label", {
                            for: "conversationreminder",
                            class: Zh
                        }, re("reminders.type.thisconvo"))))));
                    "assignee" === this.state.remindertype && t.push(N("div", {
                        class: Qh
                    }, N(Lo, {
                        selectedItems: Object.keys(this.state.selected_list),
                        fetchImageSource: Cr,
                        removeSelectedItem: this.removeSelectedItem
                    }), N(we, {
                        onClickOutside: this.showUsersList
                    }, N(se, {
                        classname: Jh,
                        type: "button",
                        content: e,
                        onclick: this.toggleUsersList
                    }))));
                    var r = function() {
                        this.contentnode && this.contentnode.focus()
                    }.bind(this);
                    return N(xt, {
                        heading: i,
                        actions: n,
                        customDialogStyles: s,
                        callbackOnClose: this.props.removeComponent,
                        onDialogDragEnd: r,
                        footerinfoprefix: t
                    }, o)
                }
            }]), s
        }(R),
        og = function() {
            function e() {
                a(this, e), this.updateReminderTime = this.updateReminderTime.bind(this)
            }
            return r(e, [{
                key: "updateReminderTime",
                value: function(e) {
                    this.instance.updateReminderTime(e)
                }
            }, {
                key: "mountComponent",
                value: function(e, t, s, i, n, a) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(ag, {
                        ref: function(e) {
                            this.instance = e
                        }.bind(this),
                        chatid: e,
                        msgid: t,
                        msgdetails: s,
                        parsedtime: i,
                        successCallback: n,
                        failureCallback: a,
                        removeComponent: this.unmountComponent.bind(this)
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), An(this.node)
                }
            }]), e
        }();
    var rg = "mcefac68b2_container",
        lg = "mcefac68b2_header",
        dg = "mcefac68b2_closeicon",
        cg = "mcefac68b2_content",
        ug = "mcefac68b2_contentright",
        mg = "mcefac68b2_actions",
        hg = "mcefac68b2_snooze",
        gg = "mcefac68b2_title",
        pg = "mcefac68b2_clockimgcontainer",
        fg = "mcefac68b2_clockimg",
        vg = "mcefac68b2_heading",
        Cg = "mcefac68b2_description",
        bg = "mcefac68b2_value",
        yg = "mcefac68b2_dismiss",
        _g = "mcefac68b2_openicon",
        Wg = "mcefac68b2_snoozedesc",
        Sg = "mcefac68b2_snoozeitem",
        wg = "mcefac68b2_snoozeoptioncontainer",
        Mg = "mcefac68b2_link",
        Ig = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    snoozetime: 5,
                    snoozeoptions: !1
                }, i.setSnoozeOptions = i.setSnoozeOptions.bind(h(i)), i.toggleSnoozeOptions = i.toggleSnoozeOptions.bind(h(i)), i.snoozePopUp = i.snoozePopUp.bind(h(i)), i.onClickDismiss = i.onClickDismiss.bind(h(i)), i
            }
            return r(s, [{
                key: "onClickDismiss",
                value: function(e) {
                    this.props.unmountComponent(), this.props.onComponentClose(this.props.data.ALRM)
                }
            }, {
                key: "toggleSnoozeOptions",
                value: function(e) {
                    this.setState({
                        snoozeoptions: !this.state.snoozeoptions
                    }), e.preventDefault(), e.stopPropagation()
                }
            }, {
                key: "setSnoozeOptions",
                value: function(e) {
                    this.setState({
                        snoozetime: e,
                        snoozeoptions: !1
                    })
                }
            }, {
                key: "getSnoozeTime",
                value: function() {
                    var e = new Date((new Date).getTime() + 6e4 * this.state.snoozetime),
                        t = new Date(e.getTime() - 6e4 * e.getTimezoneOffset()).toISOString();
                    return (t = t.split("T")[0].replace(/-/gi, "")) + "T" + xe(e.getTime()).replace(/:/gi, "")
                }
            }, {
                key: "snoozePopUp",
                value: function() {
                    var e = "v2/calendars/" + this.props.data.CALUID + "/events/" + this.props.data.EUID + "/snooze",
                        t = {
                            type: 5,
                            action: 3,
                            datetime: this.getSnoozeTime()
                        },
                        s = {
                            "Content-Type": "application/json",
                            "x-consents-version": "1",
                            "X-XHR-exception": !0,
                            "X-ZCSRF-TOKEN": Yi()
                        },
                        i = function(e) {
                            "Success" == JSON.parse(e).status ? (Gn(re("event.snooze.success", [this.state.snoozetime]), "info"), this.props.unmountComponent(), this.props.onComponentClose(this.props.data.ALRM)) : n()
                        }.bind(this),
                        n = function() {
                            Gn(re("event.status.update.error"), "error")
                        }.bind(this);
                    Je(e, t, i, n, null, null, s)
                }
            }, {
                key: "getSnoozeOptions",
                value: function() {
                    for (var e = [5, 10, 15, 20], t = [], s = 0; s < e.length; s++) this.state.snoozetime != e[s] && t.push(N(Tg, {
                        time: e[s],
                        onclick: this.setSnoozeOptions
                    }));
                    return N(we, {
                        onClickOutside: this.toggleSnoozeOptions
                    }, N("div", {
                        class: wg
                    }, t))
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = null;
                    if (e.data.LOC) {
                        var i = Be.check("linkRegExp", e.data.LOC) ? N("a", {
                            href: e.data.LOC,
                            class: bg + " " + Mg,
                            target: "_blank"
                        }, e.data.LOC) : N("span", {
                            class: bg,
                            title: e.data.LOC
                        }, e.data.LOC);
                        s = N("div", {
                            class: vg
                        }, N("b", null, re("Location"), N("span", null, ":")), i)
                    }
                    var n = null != e.data.SD && "" != e.data.SD ? e.data.SD : Ae(e.data.ST),
                        a = this.state.snoozeoptions ? this.getSnoozeOptions() : null,
                        o = $WC.Config.get("staticserverpath") + "/images/bar/67992398_clock-min.png";
                    return N("div", {
                        class: rg
                    }, N("div", {
                        class: lg
                    }, N("div", {
                        class: gg,
                        title: e.data.SUM
                    }, e.data.SUM), N(se, {
                        type: "icon",
                        onclick: this.onClickDismiss,
                        content: "e634",
                        classname: dg
                    })), N("div", {
                        class: cg
                    }, N("div", {
                        class: ug
                    }, N("div", {
                        class: pg
                    }, N("img", {
                        src: o,
                        class: fg
                    })), N("div", {
                        class: Cg
                    }, s, N("div", null, N("b", null, re("Time")), N("span", null, ":"), N("span", {
                        class: bg
                    }, n)))), N("div", {
                        class: mg
                    }, N(se, {
                        type: "button",
                        classname: yg,
                        theme: "negative",
                        content: re("event.snooze.dismiss"),
                        onclick: this.onClickDismiss
                    }), N("div", {
                        class: hg,
                        onclick: this.snoozePopUp
                    }, N("span", {
                        class: Wg
                    }, re("event.snooze.snoozefor") + " " + t.snoozetime + re("min")), N(se, {
                        classname: _g,
                        type: "icon",
                        content: "e622",
                        onclick: this.toggleSnoozeOptions
                    }), a))))
                }
            }]), s
        }(R),
        Tg = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                var e;
                return a(this, s), (e = t.call(this)).onClickItem = e.onClickItem.bind(h(e)), e
            }
            return r(s, [{
                key: "onClickItem",
                value: function(e) {
                    this.props.onclick(this.props.time), e.preventDefault(), e.stopPropagation()
                }
            }, {
                key: "render",
                value: function(e) {
                    return N(se, {
                        classname: Sg,
                        onclick: this.onClickItem
                    }, re("for") + " " + e.time + re("min"))
                }
            }]), s
        }(R),
        Ag = function() {
            function e() {
                a(this, e)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s) {
                    this.node = e, new Nt(this.node), ee(N(Ig, {
                        data: t,
                        unmountComponent: this.unmountComponent.bind(this),
                        onComponentClose: s
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), An(this.node)
                }
            }]), e
        }(),
        Eg = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                var e;
                return a(this, s), (e = t.call(this)).zm = new Pi({
                    default_size: "24",
                    animation: {
                        default_size: "24"
                    },
                    customemoji_size: "small",
                    preLoadCustomEmoji: !0
                }), e.handleSearch = e.handleSearch.bind(h(e)), e.getHoverDetailsContainer = e.getHoverDetailsContainer.bind(h(e)), e.state = {
                    read_userslist: [],
                    show_error_info: !1
                }, e
            }
            return r(s, [{
                key: "handleSearch",
                value: function(e) {
                    var t = this.state.read_userslist;
                    return "" != e && (t = Ir("name", e, t, null, null, "email_id")), t.map((function(e) {
                        return e.id
                    }))
                }
            }, {
                key: "constructUserListObj",
                value: function(e) {
                    for (var t = e || this.state.read_userslist, s = {}, i = 0, n = 0, a = 0; a < t.length; a++) t[a].is_read ? i += 1 : n += 1;
                    for (var o = 0; o < t.length; o++) {
                        var r = t[o].id,
                            l = !!t[o].is_read;
                        this.props.params.is_121_chat && t[o].time && t[o].time, s[r] = {
                            read_time: t[o].time || null,
                            zuid: r,
                            dname: ti(r) || t[o].name,
                            email: t[o].email_id || "",
                            is_read: l,
                            groupheader: l ? re("msg.read.by", "" + i) : re("msg.yet.to.read", "" + n),
                            title: ti(r) || t[o].name,
                            desc: t[o].email_id || "",
                            id: r,
                            imgsrc: oe.get("photoserver") + "/file?ID=" + r + "&t=user&exp=6000&fs=thumb"
                        }
                    }
                    return s
                }
            }, {
                key: "fetchReadReceiptList",
                value: function() {
                    Xe("v2/chats/" + this.props.params.chid + "/messages/" + this.props.params.msguid, "fields=read_status", function(e) {
                        if (e) {
                            var t = "string" == typeof e && "" != e ? JSON.parse(e) : {};
                            (t = t.read_status).length ? this.setState({
                                read_userslist: t
                            }) : this.setState({
                                show_error_info: !0
                            })
                        }
                    }.bind(this), function() {
                        this.setState({
                            show_error_info: !0
                        })
                    }.bind(this))
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    0 != this.state.read_userslist.length || this.state.show_error_info || this.fetchReadReceiptList()
                }
            }, {
                key: "getHeader",
                value: function() {
                    var e = this.props.params.msg;
                    return Be.check("customemoji", e) && (e = this.zm.replaceCustomEmoji(e)), N("div", {
                        class: Fd.header_wrapper
                    }, N("div", {
                        class: Mr.heading
                    }, re("msg.read.info")), N("div", {
                        class: Mr.msg_wrapper
                    }, N("div", {
                        class: Mr.msg
                    }, N("div", {
                        class: Mr.msg_details
                    }, N("div", {
                        class: Mr.msgdetails_sender
                    }, re("chat.you")), N("div", {
                        class: Mr.msgdetails_time
                    }, this.props.params.msg_time)), N("div", {
                        class: Mr.msg_content,
                        dangerouslySetInnerHTML: {
                            __html: e
                        }
                    }))))
                }
            }, {
                key: "getHoverDetailsContainer",
                value: function(e) {
                    var t = this.props.params.is_121_chat && e.read_time ? Ae(+e.read_time) : "";
                    return N("div", {
                        class: Fd.msg_readtime_container
                    }, t)
                }
            }, {
                key: "getUserList",
                value: function() {
                    var e = this.constructUserListObj(),
                        t = 0 == this.state.read_userslist.length && !this.state.show_error_info,
                        s = !!this.props.params.is_121_chat;
                    return N(Po, {
                        list: e,
                        searchplaceholder: re("users.name.search"),
                        iscompletelist: !0,
                        customlistitemstyles: {
                            containerWrapperStyle: Fd.readuserlist_container
                        },
                        onSearch: this.handleSearch,
                        onListItemClicked: this.props.params.onListItemClick,
                        loadingstate: t,
                        sortonsearch: !0,
                        disablesearchcontainer: s,
                        sortComparator: sn(tn("is_read", !0), tn("dname")),
                        customlistitemprops: {
                            listitemhoverdetails: !0,
                            gethoverdetailscontainer: this.getHoverDetailsContainer
                        }
                    })
                }
            }, {
                key: "render",
                value: function() {
                    var e = this.getHeader(),
                        t = this.state.show_error_info ? N("div", {
                            class: Fd.error_info
                        }, re("readreceipt.error.info")) : this.getUserList(),
                        s = {
                            customHeaderStyle: Fd.header,
                            customContainerStyle: Fd.container,
                            customButtonStyle: Mr.close_button,
                            customWrapperStyle: Fd.readuserlist_container
                        };
                    return N(xt, {
                        heading: e,
                        callbackOnClose: this.props.removeComponent,
                        customDialogStyles: s
                    }, t)
                }
            }]), s
        }(R),
        Ug = function() {
            function e() {
                a(this, e)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(Eg, {
                        removeComponent: this.unmountComponent.bind(this),
                        params: e
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), An(this.node)
                }
            }]), e
        }();
    var kg = "mcc7848208_actionscontainer",
        Ng = "mcc7848208_loader",
        xg = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                a(this, s), (i = t.call(this, e)).onClickActionItem = i.onClickActionItem.bind(h(i)), i.data = i.props.data ? i.props.data : {};
                var n = i.data && i.data.buttons ? on(i.props.data.buttons) : null;
                return i.state = {
                    buttons: n,
                    loading: i.props.loading
                }, i
            }
            return r(s, [{
                key: "updateParamDetails",
                value: function(e) {
                    this.data = e, this.setState({
                        buttons: on(this.data.buttons),
                        loading: !1
                    })
                }
            }, {
                key: "closeComponent",
                value: function(e) {
                    var t = this.state.buttons;
                    t[e.index].loading = !1, this.setState({
                        buttons: t
                    }), this.props.closeCallBack()
                }
            }, {
                key: "onClickActionItem",
                value: function(e, t) {
                    var s = this.state.buttons[t],
                        i = this.props.msgnode.getAttribute("data-msgtime");
                    s.loading = !0;
                    var n = this;
                    this.setState({
                        buttons: this.state.buttons
                    });
                    var a = "chid=" + this.props.chid + "&msgid=" + i + "&isTempResponse=false&btnindex=" + s.index + "&event=click";
                    this.data.actions_id && (a += "&actions_id=" + this.data.actions_id), Je("executefunction.do", a, (function(e) {
                        n.props.handleExecuteFuncCallback(n.props.chid, s.action.type, e), n.closeComponent(s)
                    }), (function() {
                        "error" == JSON.parse(this.response).module && Gn(re("chat.settitle.error")), n.closeComponent(s)
                    }), null, null, {
                        "x-consents-version": "1",
                        "X-XHR-exception": "true",
                        "X-SID": WebMessanger.getSid(),
                        "X-ZCSRF-TOKEN": Yi()
                    })
                }
            }, {
                key: "getActionItems",
                value: function() {
                    var e = this.state.buttons,
                        t = [];
                    for (var s in e) {
                        var i = !!e[s].loading;
                        t.push(N(Gd, {
                            actionname: s,
                            label: e[s].label,
                            messageActionCallBack: this.onClickActionItem,
                            loading: i
                        }))
                    }
                    return t
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = this.state.loading ? N("div", {
                        class: Ng
                    }) : this.getActionItems();
                    return N("div", {
                        style: this.state.buttons && Object.keys(this.state.buttons).length < 2 ? {
                            "min-height": "40px"
                        } : null,
                        class: kg
                    }, t)
                }
            }]), s
        }(R),
        Og = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this), this.storeDynamicActionInstance = this.storeDynamicActionInstance.bind(this)
            }
            return r(e, [{
                key: "storeDynamicActionInstance",
                value: function(e) {
                    this.instance = e
                }
            }, {
                key: "updateDynamicActions",
                value: function(e) {
                    this.instance.updateParamDetails(e)
                }
            }, {
                key: "mountComponent",
                value: function(e) {
                    this.node = e.node, ee(N(xg, {
                        ref: this.storeDynamicActionInstance,
                        data: e.data,
                        msgnode: e.msgnode,
                        chid: e.chid,
                        loading: e.loading,
                        closeCallBack: e.closeCallBack,
                        handleExecuteFuncCallback: e.handleExecuteFuncCallback
                    }), e.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node)
                }
            }]), e
        }();
    var Rg = {
        container: "mc953d340a_container",
        closeicon: "mc953d340a_closeicon",
        stopbutton: "mc953d340a_stopbutton",
        sendbutton: "mc953d340a_sendbutton",
        track: "mc953d340a_track",
        progresstime: "mc953d340a_progresstime",
        recordingprocessicon: "mc953d340a_recordingprocessicon",
        recordingtrack: "mc953d340a_recordingtrack",
        audioplayicon: "mc953d340a_audioplayicon",
        audiopauseicon: "mc953d340a_audiopauseicon",
        trackwidth: "mc953d340a_trackwidth",
        loader: "mc953d340a_loader",
        zmNightMode: "zmNightMode"
    };

    function Dg(e, t) {
        if (! function(e, t) {
                if (!e || !e.getTracks) return [];
                return e.getTracks().filter((function(e) {
                    return e.kind === (t || "audio")
                }))
            }(e, "audio").length) throw "Your stream has no audio tracks.";
        var s, i = this,
            n = [],
            a = [],
            o = !1,
            r = 0,
            l = 2,
            d = (t = t || {}).desiredSampRate;

        function c() {
            if (!1 === t.checkForInactiveTracks) return !0;
            if ("active" in e) {
                if (!e.active) return !1
            } else if ("ended" in e && e.ended) return !1;
            return !0
        }

        function u(e, t) {
            function s(e, t) {
                var s, i = e.numberOfAudioChannels,
                    n = e.leftBuffers.slice(0),
                    a = e.rightBuffers.slice(0),
                    o = e.sampleRate,
                    r = e.internalInterleavedLength,
                    l = e.desiredSampRate;

                function d(e, t, s) {
                    var i = Math.round(e.length * (t / s)),
                        n = [],
                        a = Number((e.length - 1) / (i - 1));
                    n[0] = e[0];
                    for (var o = 1; o < i - 1; o++) {
                        var r = o * a,
                            l = Number(Math.floor(r)).toFixed(),
                            d = Number(Math.ceil(r)).toFixed(),
                            u = r - l;
                        n[o] = c(e[l], e[d], u)
                    }
                    return n[i - 1] = e[e.length - 1], n
                }

                function c(e, t, s) {
                    return e + (t - e) * s
                }

                function u(e, t) {
                    for (var s = new Float64Array(t), i = 0, n = e.length, a = 0; a < n; a++) {
                        var o = e[a];
                        s.set(o, i), i += o.length
                    }
                    return s
                }

                function m(e, t, s) {
                    for (var i = s.length, n = 0; n < i; n++) e.setUint8(t + n, s.charCodeAt(n))
                }
                2 === i && (n = u(n, r), a = u(a, r), l && (n = d(n, l, o), a = d(a, l, o))), 1 === i && (n = u(n, r), l && (n = d(n, l, o))), l && (o = l), 2 === i && (s = function(e, t) {
                    for (var s = e.length + t.length, i = new Float64Array(s), n = 0, a = 0; a < s;) i[a++] = e[n], i[a++] = t[n], n++;
                    return i
                }(n, a)), 1 === i && (s = n);
                var h = s.length,
                    g = new ArrayBuffer(44 + 2 * h),
                    p = new DataView(g);
                m(p, 0, "RIFF"), p.setUint32(4, 36 + 2 * h, !0), m(p, 8, "WAVE"), m(p, 12, "fmt "), p.setUint32(16, 16, !0), p.setUint16(20, 1, !0), p.setUint16(22, i, !0), p.setUint32(24, o, !0), p.setUint32(28, o * i * 2, !0), p.setUint16(32, 2 * i, !0), p.setUint16(34, 16, !0), m(p, 36, "data"), p.setUint32(40, 2 * h, !0);
                for (var f = h, v = 44, C = 0; C < f; C++) p.setInt16(v, 32767 * s[C], !0), v += 2;
                if (t) return t({
                    buffer: g,
                    view: p
                });
                postMessage({
                    buffer: g,
                    view: p
                })
            }
            if (e.noWorker) s(e, (function(e) {
                t(e.buffer, e.view)
            }));
            else {
                var i, n, a, o = (i = s, n = URL.createObjectURL(new Blob([i.toString(), ";this.onmessage =  function (eee) {" + i.name + "(eee.data);}"], {
                    type: "application/javascript"
                })), (a = new Worker(n)).workerURL = n, a);
                o.onmessage = function(e) {
                    t(e.data.buffer, e.data.view), URL.revokeObjectURL(o.workerURL), o.terminate()
                }, o.postMessage(e)
            }
        }
        if (!0 === t.leftChannel && (l = 1), 1 === t.numberOfAudioChannels && (l = 1), (!l || l < 1) && (l = 2), t.disableLogs || console.log("StereoAudioRecorder is set to record number of channels: " + l), void 0 === t.checkForInactiveTracks && (t.checkForInactiveTracks = !0), this.record = function() {
                if (!1 === c()) throw "Please make sure MediaStream is active.";
                b(), _ = C = !1, o = !0, void 0 !== t.timeSlice && S()
            }, this.stop = function(e) {
                e = e || function() {}, o = !1, u({
                    desiredSampRate: d,
                    sampleRate: v,
                    numberOfAudioChannels: l,
                    internalInterleavedLength: r,
                    leftBuffers: n,
                    rightBuffers: 1 === l ? [] : a,
                    noWorker: t.noWorker
                }, (function(t, s) {
                    i.blob = new Blob([s], {
                        type: "audio/wav"
                    }), i.buffer = new ArrayBuffer(s.buffer.byteLength), i.view = s, i.sampleRate = d || v, i.bufferSize = f, i.length = r, _ = !1, e && e(i.blob)
                }))
            }, void 0 === m) var m = {};
        void 0 === m.Storage && (m.Storage = {
            AudioContextConstructor: null,
            AudioContext: window.AudioContext || window.webkitAudioContext
        }), m.Storage.AudioContextConstructor && "closed" !== m.Storage.AudioContextConstructor.state || (m.Storage.AudioContextConstructor = new m.Storage.AudioContext);
        var h = m.Storage.AudioContextConstructor,
            g = h.createMediaStreamSource(e),
            p = [0, 256, 512, 1024, 2048, 4096, 8192, 16384],
            f = void 0 === t.bufferSize ? 4096 : t.bufferSize;
        if (-1 === p.indexOf(f) && (t.disableLogs || console.log("Legal values for buffer-size are " + JSON.stringify(p, null, "\t"))), h.createJavaScriptNode) s = h.createJavaScriptNode(f, l, l);
        else {
            if (!h.createScriptProcessor) throw "WebAudio API has no support on this browser.";
            s = h.createScriptProcessor(f, l, l)
        }
        g.connect(s), t.bufferSize || (f = s.bufferSize);
        var v = void 0 !== t.sampleRate ? t.sampleRate : h.sampleRate || 44100;
        (v < 22050 || v > 96e3) && (t.disableLogs || console.log("sample-rate must be under range 22050 and 96000.")), t.disableLogs || t.desiredSampRate && console.log("Desired sample-rate: " + t.desiredSampRate);
        var C = !1;

        function b() {
            n = [], a = [], r = 0, _ = !1, o = !1, C = !1, h = null, i.leftchannel = n, i.rightchannel = a, i.numberOfAudioChannels = l, i.desiredSampRate = d, i.sampleRate = v, i.recordingLength = r, W = {
                left: [],
                right: [],
                recordingLength: 0
            }
        }

        function y() {
            s && (s.onaudioprocess = null, s.disconnect(), s = null), g && (g.disconnect(), g = null), b()
        }
        this.pause = function() {
            C = !0
        }, this.resume = function() {
            if (!1 === c()) throw "Please make sure MediaStream is active.";
            if (!o) return t.disableLogs || console.log("Seems recording has been restarted."), void this.record();
            C = !1
        }, this.clearRecordedData = function() {
            t.checkForInactiveTracks = !1, o && this.stop(y), y()
        }, this.name = "StereoAudioRecorder", this.toString = function() {
            return this.name
        };
        var _ = !1;
        s.onaudioprocess = function(e) {
            if (!C)
                if (!1 === c() && (t.disableLogs || console.log("MediaStream seems stopped."), s.disconnect(), o = !1), o) {
                    _ || (_ = !0, t.onAudioProcessStarted && t.onAudioProcessStarted(), t.initCallback && t.initCallback());
                    var d = e.inputBuffer.getChannelData(0),
                        u = new Float32Array(d);
                    if (n.push(u), 2 === l) {
                        var m = e.inputBuffer.getChannelData(1),
                            h = new Float32Array(m);
                        a.push(h)
                    }
                    r += f, i.recordingLength = r, void 0 !== t.timeSlice && (W.recordingLength += f, W.left.push(u), 2 === l && W.right.push(h))
                } else g && (g.disconnect(), g = null)
        }, h.createMediaStreamDestination ? s.connect(h.createMediaStreamDestination()) : s.connect(h.destination), this.leftchannel = n, this.rightchannel = a, this.numberOfAudioChannels = l, this.desiredSampRate = d, this.sampleRate = v, i.recordingLength = r;
        var W = {
            left: [],
            right: [],
            recordingLength: 0
        };

        function S() {
            o && "function" == typeof t.ondataavailable && void 0 !== t.timeSlice && (W.left.length ? (u({
                desiredSampRate: d,
                sampleRate: v,
                numberOfAudioChannels: l,
                internalInterleavedLength: W.recordingLength,
                leftBuffers: W.left,
                rightBuffers: 1 === l ? [] : W.right
            }, (function(e, s) {
                var i = new Blob([s], {
                    type: "audio/wav"
                });
                t.ondataavailable(i), setTimeout(S, t.timeSlice)
            })), W = {
                left: [],
                right: [],
                recordingLength: 0
            }) : setTimeout(S, t.timeSlice))
        }
    }
    var $g = {
        AUDIO_ONLY: 1,
        VIDEO_ONLY: 2,
        AUDIO_VIDEO: 3,
        SCREEN: 4
    };

    function Hg(e) {
        return new Promise((function(t, s) {
            navigator.mediaDevices ? navigator.mediaDevices.getUserMedia(function(e) {
                var t = !0,
                    s = !0;
                e == $g.AUDIO_ONLY && (s = !1);
                e == $g.VIDEO_ONLY && (t = !1);
                return {
                    audio: t,
                    video: s
                }
            }(e)).then((function(s) {
                s[e] = s, t(s)
            })).catch((function(e) {
                s(e)
            })) : s({})
        }))
    }
    var Lg = "NotAllowedError",
        Pg = "NotFoundError",
        Fg = "NotReadableError",
        Bg = function(e) {
            c(s, e);
            var t = p(s);

            function s() {
                var e;
                return a(this, s), (e = t.call(this)).recordedchunks = [], e.handledRecordingProgress = e.handledRecordingProgress.bind(h(e)), e.onRecordingEnd = e.onRecordingEnd.bind(h(e)), e.stopRecording = e.stopRecording.bind(h(e)), e.toggleAudioPlay = e.toggleAudioPlay.bind(h(e)), e.updateAudioTime = e.updateAudioTime.bind(h(e)), e.onAudioPlayBackEnd = e.onAudioPlayBackEnd.bind(h(e)), e.seekRecordedAudio = e.seekRecordedAudio.bind(h(e)), e.sendRecording = e.sendRecording.bind(h(e)), e.maxduration = 9e5, e.state = {
                    recordingstate: "recording",
                    recordedtime: 0,
                    audiostate: "paused",
                    audiocurrenttime: 0,
                    uploadprogress: !1
                }, e
            }
            return r(s, [{
                key: "componentDidMount",
                value: function() {
                    this.checkAndInitVoiceRecording()
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    this.safelyUnmountComponent()
                }
            }, {
                key: "bindAudioEvents",
                value: function() {
                    this.audionode.ontimeupdate = this.updateAudioTime, this.audionode.onended = this.onAudioPlayBackEnd
                }
            }, {
                key: "startRecording",
                value: function() {
                    this.mediarecorder.record()
                }
            }, {
                key: "stopRecording",
                value: function() {
                    this.mediarecorder.stop(this.onRecordingEnd)
                }
            }, {
                key: "getConfig",
                value: function() {
                    return {
                        type: "",
                        mimeType: "audio/wav",
                        disableLogs: !0,
                        numberOfAudioChannels: 2,
                        timeSlice: 1e3,
                        ondataavailable: this.handledRecordingProgress,
                        checkForInactiveTracks: !0
                    }
                }
            }, {
                key: "checkAndInitVoiceRecording",
                value: function() {
                    Hg($g.AUDIO_ONLY).then(function(e) {
                        this.mediarecorder = new Dg(e, this.getConfig()), this.startRecording(), this.recordingstarttime = new Date, this.current_voice_stream = e, this.autoendrecordingtimer = setTimeout(this.stopRecording.bind(this), this.maxduration)
                    }.bind(this)).catch(function(e) {
                        var t = "";
                        if ("string" == typeof e) Gn($WC.I18N("voicerecorder.common.error"));
                        else if (e.name == Lg) t = ".permission.notallowed";
                        else {
                            if (e.name != Pg && e.name !== Fg) return void 0 !== e.code && void 0 !== e.message ? (Gn(e.message), void this.props.unmountComponent()) : void this.props.unmountComponent();
                            t = ".notfound"
                        }
                        this.props.params.errorCallBack(e, t), this.props.unmountComponent()
                    }.bind(this))
                }
            }, {
                key: "handledRecordingProgress",
                value: function() {
                    var e = new Date - this.recordingstarttime;
                    this.updateProgessTime(e)
                }
            }, {
                key: "updateProgessTime",
                value: function(e) {
                    this.setState({
                        recordedtime: e / 1e3
                    })
                }
            }, {
                key: "updateBlobData",
                value: function(e) {
                    this.audioblob = e
                }
            }, {
                key: "onRecordingEnd",
                value: function(e) {
                    this.updateBlobData(e), this.createAudioNode(), this.bindAudioEvents(), this.closeStream(), qg == this && Yg(), clearTimeout(this.autoendrecordingtimer), this.setState({
                        recordingstate: "ended"
                    })
                }
            }, {
                key: "createAudioNode",
                value: function() {
                    this.audionode = new Audio, this.audionode.src = this.getBlobUrl()
                }
            }, {
                key: "getBlobUrl",
                value: function() {
                    return window.URL.createObjectURL(this.audioblob)
                }
            }, {
                key: "closeStream",
                value: function() {
                    this.current_voice_stream.getTracks().forEach((function(e) {
                        e.stop()
                    }))
                }
            }, {
                key: "updateAudioTime",
                value: function() {
                    this.setState({
                        audiocurrenttime: this.audionode.currentTime
                    })
                }
            }, {
                key: "playRecordedAudio",
                value: function() {
                    this.audionode.play(), this.setState({
                        audiostate: "playing"
                    })
                }
            }, {
                key: "pauseRecordedAudio",
                value: function() {
                    this.audionode.pause(), this.setState({
                        audiostate: "paused"
                    })
                }
            }, {
                key: "toggleAudioPlay",
                value: function() {
                    "playing" == this.state.audiostate ? this.pauseRecordedAudio() : this.playRecordedAudio()
                }
            }, {
                key: "seekRecordedAudio",
                value: function(e) {
                    this.audionode.currentTime = e, this.setState({
                        audiocurrenttime: e
                    })
                }
            }, {
                key: "onAudioPlayBackEnd",
                value: function() {
                    this.audiocurrenttime = 0, this.setState({
                        audiostate: "paused",
                        audiocurrenttime: 0
                    })
                }
            }, {
                key: "getUploadCallBackObj",
                value: function() {
                    return {
                        successCallBack: this.successCallBack.bind(this),
                        errorCallBack: this.errorCallBack.bind(this),
                        uploadCancelCallBack: this.errorCallBack.bind(this)
                    }
                }
            }, {
                key: "sendRecording",
                value: function() {
                    var e = this.getRecordingAsAFile(this.generateFileName());
                    e.duration = Math.round(this.state.recordedtime), this.props.params.fileuploadCallBack(e, this.getUploadCallBackObj()), this.setUploadProgressStatus(!0)
                }
            }, {
                key: "successCallBack",
                value: function() {
                    this.setUploadProgressStatus(!1), this.props.unmountComponent()
                }
            }, {
                key: "errorCallBack",
                value: function() {
                    this.setUploadProgressStatus(!1)
                }
            }, {
                key: "setUploadProgressStatus",
                value: function(e) {
                    this.setState({
                        uploadprogress: e
                    })
                }
            }, {
                key: "getRecordingAsAFile",
                value: function(e) {
                    return new File([this.audioblob], e + ".wav", {
                        type: "audio/wav"
                    })
                }
            }, {
                key: "generateFileName",
                value: function() {
                    return "voice-message-" + Ee(new Date, "dd-MM-yyyy").trim() + "-" + xe(new Date)
                }
            }, {
                key: "safelyUnmountComponent",
                value: function() {
                    "recording" == this.state.recordingstate && this.mediarecorder && this.stopRecording(), "playing" == this.state.audiostate && this.pauseRecordedAudio(), this.audionode && (this.audionode.srcObject = null, this.audionode.src = null, this.audionode.removeAttribute("src")), Yg()
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = null,
                        i = null,
                        n = null,
                        a = null,
                        o = null,
                        r = null,
                        l = null;
                    if ("recording" == t.recordingstate && (a = N("div", {
                            class: Rg.recordingprocessicon
                        }), n = N("div", {
                            class: Rg.progresstime
                        }, Bi(Math.floor(t.recordedtime))), s = N(se, {
                            classname: Rg.stopbutton,
                            type: "button",
                            content: re("voicerecorder.stop"),
                            onclick: this.stopRecording
                        }), i = N(jg, {
                            type: t.recordingstate,
                            recordedtime: t.recordedtime,
                            totaltime: this.maxduration
                        })), "ended" == t.recordingstate) {
                        var d = "",
                            c = re("common.send");
                        t.uploadprogress && (d = Rg.loader, c = ""), s = N(se, {
                            classname: Rg.sendbutton + " " + d,
                            type: "button",
                            content: c,
                            onclick: this.sendRecording
                        }), o = N(se, {
                            onclick: e.params.closeCallBack,
                            classname: Rg.closeicon,
                            type: "icon",
                            content: "e9ee"
                        }), r = N("div", {
                            class: Rg.progresstime
                        }, Bi(Math.floor(t.audiocurrenttime)));
                        var u = isFinite(this.audionode.duration) ? this.audionode.duration : t.recordedtime;
                        i = N("div", {
                            class: Rg.trackwidth
                        }, N(Ya, {
                            videostate: t.recordingstate,
                            duration: u,
                            current_time: t.audiocurrenttime,
                            bufferpercentage: 1,
                            updateCurrentTime: this.seekRecordedAudio,
                            isvoicerecorder: !0
                        }));
                        var m = "playing" == t.audiostate ? "ea12" : "ea1b",
                            h = "playing" == t.audiostate ? Rg.audiopauseicon : Rg.audioplayicon;
                        l = N(se, {
                            onclick: this.toggleAudioPlay,
                            type: "icon",
                            content: m,
                            classname: h
                        })
                    }
                    return N("div", {
                        class: Rg.container
                    }, a, n, l, i, r, o, s)
                }
            }]), s
        }(R);

    function jg(e) {
        var t = "recording" == e.type ? N("div", {
            class: Rg.recordingtrack,
            style: "transform : scaleX(" + e.recordedtime / (e.totaltime / 1e3) + ")"
        }) : null;
        return N("div", {
            class: Rg.track
        }, t)
    }
    var zg = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t) {
                    var s;
                    this.node = e, s = t.sessionid, Gg = !0,
                        function(e) {
                            Vg = e
                        }(s), this.unmountCallBack = t.unmountCallBack, ee(N(Bg, {
                            ref: Zg,
                            params: t,
                            unmountComponent: this.unmountComponent
                        }), e)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    this.unmountCallBack(), ee("", this.node), An(this.node), this.node = null
                }
            }]), e
        }(),
        Gg = !1,
        qg = null,
        Vg = "";

    function Yg() {
        Gg = !1, Vg = ""
    }

    function Zg(e) {
        qg = e
    }
    var Kg = Object.freeze({
        __proto__: null,
        VoiceRecorder: zg,
        VoiceRecorderView: Bg,
        closeAndRemoveRecordingSession: function() {
            qg && qg.props.unmountComponent(), Yg()
        },
        getActiveSessionId: function() {
            return Vg
        },
        isVoiceRecordingActive: function() {
            return Gg
        }
    });
    var Xg = {
            listContainer: "mcada69762_listContainer",
            listContainerHeader: "mcada69762_listContainerHeader",
            listContainerWrapper: "mcada69762_listContainerWrapper",
            listContainerClose: "mcada69762_listContainerClose",
            listContainerHeaderTitle: "mcada69762_listContainerHeaderTitle",
            imgwrapper: "mcada69762_imgwrapper",
            flexcontainer: "mcada69762_flexcontainer",
            recent_convo: "mcada69762_recent_convo",
            infowrapper: "mcada69762_infowrapper",
            infoheaderwrapper: "mcada69762_infoheaderwrapper",
            wms_profileinfo_text: "mcada69762_wms_profileinfo_text",
            transcriptwrapper: "mcada69762_transcriptwrapper",
            transcriptcontainer: "mcada69762_transcriptcontainer",
            infotextwrapper: "mcada69762_infotextwrapper",
            permalink: "mcada69762_permalink",
            joinchannel: "mcada69762_joinchannel",
            "wms-msgfrag": "wms-msgfrag",
            "wms-msg": "wms-msg",
            "wms-replymsgwrapper": "wms-replymsgwrapper",
            wms_forwardmsgwrapper: "wms_forwardmsgwrapper",
            wms_channelimg_badge: "wms_channelimg_badge",
            wms_badge_imgwrapper: "wms_badge_imgwrapper",
            listheaderwrapper: "mcada69762_listheaderwrapper",
            timeseparatorwrapper: "mcada69762_timeseparatorwrapper",
            timeseparator: "mcada69762_timeseparator",
            wms_channelimg: "wms_channelimg",
            "wms-imgmsgcontainer": "wms-imgmsgcontainer",
            zmNightMode: "zmNightMode"
        },
        Jg = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).handleJoinChannel = i.handleJoinChannel.bind(h(i)), i.setContentNode = i.setContentNode.bind(h(i)), i.contentNode = null, i
            }
            return r(s, [{
                key: "setContentNode",
                value: function(e) {
                    this.contentNode = e
                }
            }, {
                key: "handleJoinChannel",
                value: function() {
                    this.props.actionCallbacks.handleJoinChannel(this.props.channeldata.chid), this.props.removeComponent()
                }
            }, {
                key: "handleScroll",
                value: function() {
                    this.props.actionCallbacks.handleLoadImages(this.contentNode)
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    this.contentNode.scrollTop = this.contentNode.scrollHeight - this.contentNode.clientHeight, this.props.actionCallbacks.handleLoadImages(this.contentNode)
                }
            }, {
                key: "render",
                value: function() {
                    var e = jl(this.props.channeldata, !0),
                        t = "";
                    if (nn(this.props.channeldata.scid_name)) {
                        var s = [];
                        for (var i in this.props.channeldata.scid_name) s.push(this.props.channeldata.scid_name[i]);
                        t = s.join(", ")
                    }
                    var n = N("span", null, N("span", {
                            dangerouslySetInnerHTML: {
                                __html: re(t ? "channel.preview.creatorteam" : "channel.preview.creator", ['<span data-zcprofileid="' + this.props.channeldata.cr + '" class="' + Xg.wms_profileinfo_text + '">' + Zi(this.props.channeldata.cr_n) + "</span>", Zi(t)])
                            }
                        }), N("span", {
                            class: Xg.timeseparatorwrapper
                        }, N("span", {
                            class: Xg.timeseparator
                        }), N("span", null, Re(this.props.channeldata.ctime, {
                            shorten: !1
                        })))),
                        a = this.props.channeldata.cd ? "" : "wms-valign-mid-block",
                        o = N("div", {
                            class: Xg.listheaderwrapper
                        }, N("div", null, N("div", {
                            class: Xg.listContainerHeaderTitle
                        }, re("channel.preview.details")), N("div", {
                            class: Xg.flexcontainer
                        }, N("div", {
                            class: Xg.imgwrapper,
                            dangerouslySetInnerHTML: {
                                __html: e
                            }
                        }), N("div", {
                            class: Xg.infowrapper
                        }, N("div", {
                            class: Xg.infoheaderwrapper
                        }, N("div", {
                            onclick: this.props.actionCallbacks.handleCopyLink.bind(this, this.props.channeldata.un),
                            class: Xg.permalink
                        }), N("div", {
                            class: a
                        }, this.props.channeldata.dn), N("div", null, this.props.channeldata.cd)), N("div", {
                            class: Xg.infotextwrapper
                        }, N("div", {
                            "data-zcprofileid": this.props.channeldata.cr,
                            onclick: this.props.actionCallbacks.handleProfileInfo.bind(this),
                            class: Xg.infotext
                        }, n), N(se, {
                            type: "button",
                            tabindex: "0",
                            content: re("channel.preview.join"),
                            onclick: this.handleJoinChannel,
                            classname: Xg.joinchannel
                        })))), N("div", {
                            class: Xg.recent_convo
                        }, re("channel.recent.convo"))), N("div", {
                            class: Xg.transcriptwrapper
                        }, N("div", {
                            onScroll: this.handleScroll.bind(this),
                            ref: this.setContentNode,
                            class: Xg.transcriptcontainer,
                            dangerouslySetInnerHTML: {
                                __html: this.props.transcript
                            }
                        }))),
                        r = {
                            customButtonStyle: Xg.listContainerClose,
                            customContainerStyle: Xg.listContainer,
                            customHeaderStyle: Xg.listContainerHeader,
                            customWrapperStyle: Xg.listContainerWrapper
                        };
                    return N(xt, {
                        heading: o,
                        callbackOnClose: this.props.removeComponent,
                        customDialogStyles: r
                    })
                }
            }]), s
        }(R),
        Qg = function() {
            function e() {
                a(this, e)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(Jg, {
                        removeComponent: this.unmountComponent.bind(this),
                        channeldata: e,
                        transcript: t,
                        actionCallbacks: s
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), An(this.node)
                }
            }]), e
        }();
    var ep, tp = "mc5ef447f3_profileinfowrapper",
        sp = "mc5ef447f3_profileinfocontainer",
        ip = "mc5ef447f3_hv_align",
        np = "mc5ef447f3_loading",
        ap = "mc5ef447f3_imgcontainer",
        op = "mc5ef447f3_infocontainer",
        rp = "mc5ef447f3_basicinfowrapper",
        lp = "mc5ef447f3_boldinfo",
        dp = "mc5ef447f3_basicinfo",
        cp = "mc5ef447f3_checkinstatusin",
        up = "mc5ef447f3_checkinstatusout",
        mp = "mc5ef447f3_addinfo",
        hp = "mc5ef447f3_workinfo",
        gp = "mc5ef447f3_workinfo_item",
        pp = "mc5ef447f3_contactinfo_item",
        fp = "mc5ef447f3_infolabel",
        vp = "mc5ef447f3_contactinfo",
        Cp = "mc5ef447f3_contactinfo_header",
        bp = "mc5ef447f3_timezone",
        yp = "mc5ef447f3_options",
        _p = "mc5ef447f3_optionsicon",
        Wp = "mc5ef447f3_startchat",
        Sp = "mc5ef447f3_audiocall",
        wp = "mc5ef447f3_videocall",
        Mp = "mc5ef447f3_deletecontact",
        Ip = "mc5ef447f3_profileinfo_blur",
        Tp = "mc5ef447f3_ellipsis",
        Ap = "mc5ef447f3_badge_img_cutout",
        Ep = "mc5ef447f3_halign",
        Up = "mc5ef447f3_custombot_info",
        kp = "mc5ef447f3_boticon",
        Np = "mc5ef447f3_inviteopr",
        xp = "mc5ef447f3_copyemail",
        Op = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    details: {},
                    errorstate: !1
                }, i.profileid = i.props.profileid || i.props.targetnode.getAttribute("data-zcprofileid"), i.profilecontainer = null, i.canvasnode = null, i.imgsrcnode = null, i.imgloadernode = null, i.setProfileContainer = i.setProfileContainer.bind(h(i)), i.initiateProfileActions = i.initiateProfileActions.bind(h(i)), i.setCanvasNode = i.setCanvasNode.bind(h(i)), i.setImgNode = i.setImgNode.bind(h(i)), i.setImgLoader = i.setImgLoader.bind(h(i)), i.hideComponent = i.hideComponent.bind(h(i)), i.CONTAINER_WIDTH = 350, i.CONTAINER_HEIGHT = 180, i
            }
            return r(s, [{
                key: "setProfileContainer",
                value: function(e) {
                    this.profilecontainer = e
                }
            }, {
                key: "setCanvasNode",
                value: function(e) {
                    this.canvasnode = e
                }
            }, {
                key: "setImgNode",
                value: function(e) {
                    this.imgsrcnode = e
                }
            }, {
                key: "setImgLoader",
                value: function(e) {
                    this.imgloadernode = e
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    fn(this.props.targetnode, this.profilecontainer.parentNode)
                }
            }, {
                key: "componentDidUpdate",
                value: function() {
                    fn(this.props.targetnode, this.profilecontainer.parentNode), this.profilecontainer.parentNode.focus(), this.setImageAspectRatio(this.imgsrcnode, this.imgsrcnode.width, this.imgsrcnode.height)
                }
            }, {
                key: "componentWillMount",
                value: function() {
                    Gi(this.state.details) && this.fetchUserDetails()
                }
            }, {
                key: "defaultImgLoad",
                value: function() {
                    this.imgsrcnode && (this.setImageAspectRatio(this.imgsrcnode, this.imgsrcnode.width, this.imgsrcnode.height), this.imgloadernode.style.display = "none")
                }
            }, {
                key: "hideComponent",
                value: function(e) {
                    var t = mn(e);
                    (t = t.closest('[id="profileinfo_wrapper"]')) !== (e.relatedTarget && e.relatedTarget.closest('[id="profileinfo_wrapper"]')) && this.props.removeComponent()
                }
            }, {
                key: "initiateProfileActions",
                value: function(e) {
                    var t = mn(e),
                        s = t.getAttribute("data-operation");
                    "startchat" === s ? this.props.startChatCallback(t, this.profileid) : "audiocall" === s ? this.props.startAudioCallCallback(this.profileid) : "videocall" === s ? this.props.startVideoCallCallback(this.profileid) : "deletecontact" !== s && "invite" !== s || this.props.handleProfileActionsCallback(t, this.profileid)
                }
            }, {
                key: "fetchUserDetails",
                value: function() {
                    if (Ms(this.profileid)) {
                        var e = ys(this.profileid),
                            t = {
                                name: e.DNAME,
                                email_id: e.STATUSMSG,
                                unique_name: e.UNIQUENAME
                            };
                        this.setState({
                            details: t
                        })
                    } else if (this.props.isCachedRequest && this.props.isCachedRequest(this.profileid) && this.props.isStatusNotExpired && this.props.isStatusNotExpired(this.profileid)) this.setState({
                        details: this.props.retrieveDetails(this.profileid)
                    });
                    else {
                        var s = this,
                            i = function(e) {
                                var t = "object" === n(e) ? e : JSON.parse(e).data;
                                t.lastreqfetchedtime = Date.now(), this.setState({
                                    details: t,
                                    errorstate: !1
                                }), this.props.storeDetails && this.props.storeDetails(this.profileid, t), delete this.props.requestTriggeredIds[this.profileid]
                            }.bind(this),
                            a = function() {
                                if (this.response) {
                                    var e = JSON.parse(this.response).code,
                                        t = "";
                                    "operation_failed" === e ? t = "contact.profileinfo.notfound" : "operation_not_allowed" === e && (t = "contact.profileinfo.notallowed");
                                    var i = {
                                        email_id: re(t)
                                    };
                                    s.setState({
                                        details: i,
                                        errorstate: !0
                                    }), delete s.props.requestTriggeredIds[s.profileid]
                                }
                            },
                            o = function(e) {
                                Xe("v2/users/" + e, "fields=" + (oe.get("presence_keys") ? encodeURIComponent("all,checkin_status,presence") : encodeURIComponent("all,checkin_status")), i, a)
                            },
                            r = oe.get("profileinfo");
                        if ("function" == typeof r)
                            if (null != oe.get("customContacts")) {
                                for (var l = WmsImplHandler.invokeSynchronously(oe.get("customContacts").customContactsList), d = !1, c = 0; c < l.length; c++) l[c].id == this.profileid && (d = !0);
                                d ? WmsImplHandler.invokeSynchronously(r, this.profileid, i) : o(this.profileid)
                            } else WmsImplHandler.invokeSynchronously(r, this.profileid, i);
                        else o(this.profileid)
                    }
                }
            }, {
                key: "isPeopleInfoAvailable",
                value: function() {
                    return !(!this.state.details || null == this.state.details.checkin_status)
                }
            }, {
                key: "getClonedImgsrc",
                value: function() {
                    if (void 0 !== WebMessanger && WebMessanger.isNetworkUser()) {
                        var e = this.profileid.split("-");
                        this.profileid = e[e.length - 1]
                    }
                    var t = oe.get("photoserver") + "/file?ID=" + this.profileid + "&t=user&exp=6000&fs=thumb",
                        s = oe.get("photoserver") + "/file?ID=" + this.profileid + "&t=user&exp=6000&fs=original";
                    Ms(this.profileid) && (t = Ws(this.profileid), s = Ws(this.profileid));
                    var i = new Image;
                    return i.onload = function() {
                        this.imgsrcnode && (this.imgsrcnode.setAttribute("src", s), this.setImageAspectRatio(this.imgsrcnode, this.imgsrcnode.width, this.imgsrcnode.height))
                    }.bind(this), i.src = s, t
                }
            }, {
                key: "setImageAspectRatio",
                value: function(e, t, s) {
                    e.style.width = "auto", e.style.height = "auto", this.setImagePosition(e, t, s)
                }
            }, {
                key: "setImagePosition",
                value: function(e, t, s) {
                    var i = this.CONTAINER_WIDTH,
                        n = this.CONTAINER_HEIGHT,
                        a = this.getAspectRatioFit(e.width, e.height, i, n, !0);
                    t > i && s > n - 40 && (e.style.height = "100%"), t < i && s < n - 40 && (e.style = ""), t > i && s < n - 40 && (e.style.height = "100%"), t < i && s > n - 40 && (e.style = "", e.style.height = "100%"), this.populateBlurBgImage(e, "", a)
                }
            }, {
                key: "getAspectRatioFit",
                value: function(e, t, s, i, n) {
                    var a = [s / e, i / t];
                    return a = Math.min(a[0], a[1]), !n && a > 1 ? {
                        width: e,
                        height: t
                    } : {
                        width: e * a,
                        height: t * a,
                        ratio: a
                    }
                }
            }, {
                key: "populateBlurBgImage",
                value: function(e, t, s) {
                    var i = this.CONTAINER_WIDTH - s.width,
                        n = this.CONTAINER_HEIGHT - s.height;
                    if (0 != i || 0 != n) {
                        var a = this.canvasnode,
                            o = s.width / s.ratio,
                            r = s.height / s.ratio;
                        if (i > 0 && a) {
                            var l = i / 10;
                            a.getContext("2d").drawImage(e, 0, 0, l, r, 0, 0, i / 2, this.CONTAINER_WIDTH), a.getContext("2d").drawImage(e, i / 2, 0, s.width, this.CONTAINER_HEIGHT), a.getContext("2d").drawImage(e, o - l, 0, l, r, s.width + i / 2, 0, i / 2, this.CONTAINER_HEIGHT)
                        } else if (n > 0 && a) {
                            var d = n / 10;
                            a.getContext("2d").drawImage(e, 0, 0, o, d, 0, 0, this.CONTAINER_WIDTH, n / 2), a.getContext("2d").drawImage(e, 0, n / 2, this.CONTAINER_WIDTH, s.height), a.getContext("2d").drawImage(e, 0, r - d, o, d, 0, s.height + n / 2, this.CONTAINER_WIDTH, n / 2)
                        }
                    }
                }
            }, {
                key: "render",
                value: function() {
                    var e = N("div", {
                        class: np + " " + ip
                    });
                    if (!Gi(this.state.details)) {
                        var t = "",
                            s = "";
                        this.isPeopleInfoAvailable() && (!0 === this.state.details.checkin_status ? (s = this.state.details.checkin_status_text ? Zi(this.state.details.checkin_status_text) : re("status.in"), t = N("span", {
                            class: cp
                        }, s)) : (s = this.state.details.checkin_status_text ? Zi(this.state.details.checkin_status_text) : re("status.out"), t = N("span", {
                            class: up
                        }, s)));
                        var i = "",
                            n = "",
                            a = "",
                            o = "",
                            r = "",
                            l = "",
                            d = "",
                            c = "",
                            u = "";
                        if (un(this.profileid) || Ms(this.profileid) || Js(this.profileid) != ut.CONTACTSTATUS.REMOVE && ei(this.profileid) || (!oe.get("presence_keys") || null != _WMSAPPACCOUNTID && _WMSAPPACCOUNTID !== this.state.details.organization_id) && (u = N("div", {
                                onclick: this.initiateProfileActions,
                                "data-operation": "invite",
                                class: Ep + " " + Np
                            }, re("contact.profileinfo.invite"))), Ms(this.profileid)) {
                            var m = "/api/v1/bots/" + pn(this.state.details.unique_name) + "/message";
                            c = N("div", {
                                class: Ep
                            }, N("div", {
                                class: Up
                            }, re("bot.custom.info")), N("span", null, m))
                        }
                        this.state.details.department && this.state.details.department.name && (o = N("span", {
                            class: gp
                        }, this.state.details.department.name)), this.state.details.designation && this.state.details.designation.name && (r = N("span", {
                            class: gp
                        }, this.state.details.designation.name));
                        var h = Js(this.profileid) != ut.CONTACTSTATUS.REQACC && Js(this.profileid) != ut.CONTACTSTATUS.UNAPRD && Js(this.profileid) != ut.CONTACTSTATUS.REMOVE && ei(this.profileid) && (!oe.get("presence_keys") || null != _WMSAPPACCOUNTID && _WMSAPPACCOUNTID !== this.state.details.organization_id) ? N("div", {
                            class: _p + " " + Mp,
                            "data-operation": "deletecontact"
                        }) : "";
                        if ("inactive" === this.state.details.status) l = N("div", {
                            class: pp
                        }, N("span", {
                            class: fp
                        }, re("contact.info.country") + " : "), N("span", {
                            class: vp
                        }, this.state.details.country)), d = N("div", {
                            class: yp,
                            onclick: this.initiateProfileActions
                        }, N("div", {
                            class: _p + " " + Wp,
                            "data-type": ut.HYBRIDSEARCH.CONTACT,
                            "data-id": this.profileid,
                            "data-operation": "startchat"
                        }), h);
                        else if (!un(this.profileid) && !1 === this.state.errorstate) {
                            var g = N("div", {
                                    class: _p + " " + Sp,
                                    "data-operation": "audiocall"
                                }),
                                p = N("div", {
                                    class: _p + " " + wp,
                                    "data-operation": "videocall"
                                }),
                                f = N("div", {
                                    class: _p + " " + Wp,
                                    "data-type": ut.HYBRIDSEARCH.CONTACT,
                                    "data-id": this.profileid,
                                    "data-operation": "startchat"
                                });
                            (Ms(this.profileid) || oe.get("_WMSDISABLEAVCHAT")) && (g = null, p = null), oe.get("disableChatInProfileInfoCard") && (f = null), d = N("div", {
                                class: yp,
                                onclick: this.initiateProfileActions
                            }, f, g, p, h)
                        }
                        this.state.details.mobile && (i = N("div", {
                            class: pp
                        }, N("span", {
                            class: fp
                        }, re("contact.info.mobile") + " : "), N("span", {
                            class: vp
                        }, this.state.details.mobile))), this.state.details.extension && (n = N("div", {
                            class: pp
                        }, N("span", {
                            class: fp
                        }, re("contact.info.extension") + " : "), N("span", {
                            class: vp
                        }, this.state.details.extension))), this.state.details.phone && (a = N("div", {
                            class: pp
                        }, N("span", {
                            class: fp
                        }, re("contact.info.workphone") + " : "), N("span", {
                            class: vp
                        }, this.state.details.phone)));
                        var v = Qs(this.profileid, null, Xs(this.profileid));
                        oe.get("presence_keys") && this.state.details.presence && (v = Qs(this.state.details.presence.wmsid, this.state.details.presence.scode, this.state.details.presence.stype));
                        var C = "" === v || Ms(this.profileid) ? "" : "wms_badge_statusicon_" + v + " " + Ap,
                            b = Ms(this.profileid) || this.state.errorstate || !this.state.details.timeoffset ? "" : N("span", {
                                class: bp
                            }, Ne(this.state.details.timezone, this.state.details.timeoffset)),
                            y = Ms(this.profileid) ? rp + " " + Ep : rp,
                            _ = Ms(this.profileid) ? dp + " " + Ep + " " + kp : this.state.errorstate ? dp + " " + Ep : dp,
                            W = un(this.profileid) ? re("chat.you") : ei(this.profileid) ? ei(this.profileid).DNAME : this.state.details.name,
                            S = Ms(this.profileid) || this.state.errorstate ? this.state.details.email_id : N("a", {
                                href: "mailto:" + this.state.details.email_id
                            }, this.state.details.email_id),
                            w = this.state.errorstate ? "" : Tp,
                            M = Ms(this.profileid) ? null : N("span", {
                                class: xp,
                                onclick: function(e) {
                                    e.stopPropagation(), e.preventDefault(), Qn(this.state.details.email_id), WMSUI.showErrorMsg(re("message.info.emailaddresscopied"), "info")
                                }.bind(this),
                                title: re("message.info.copyemail.tooltip")
                            }),
                            I = N("div", {
                                class: _
                            }, N("div", {
                                title: this.state.details.email_id,
                                class: w
                            }, S), M);
                        Be.check("emailid", this.state.details.email_id) && void 0 !== WmsSettings && WmsSettings.isEmailIDHidden() && (I = null), e = N("div", {
                            id: "wms_contactdetails"
                        }, N("div", {
                            class: ap
                        }, N("canvas", {
                            ref: this.setCanvasNode,
                            imgsrc: this.getClonedImgsrc(),
                            class: Ip
                        }), N("img", {
                            onLoad: this.defaultImgLoad.bind(this),
                            src: this.getClonedImgsrc(),
                            ref: this.setImgNode,
                            class: ip
                        }), N("div", {
                            ref: this.setImgLoader,
                            class: np + " " + ip
                        }), b), N("div", {
                            class: op
                        }, N("div", {
                            class: y
                        }, N("span", {
                            class: C
                        }), N("span", {
                            class: lp
                        }, N("span", {
                            title: W,
                            class: Tp
                        }, " ", W, " ")), t), I, N("div", {
                            class: mp
                        }, N("div", {
                            class: hp
                        }, o, r, c), N("div", {
                            class: Cp
                        }, i, n, a, l)), d), u)
                    }
                    return N("div", {
                        onMouseOut: this.hideComponent,
                        ref: this.setProfileContainer,
                        class: sp
                    }, e)
                }
            }]), s
        }(R),
        Rp = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this), this.isCachedRequest = this.isCachedRequest.bind(this), this.storeDetails = this.storeDetails.bind(this), this.retrieveDetails = this.retrieveDetails.bind(this), this.handleDocumentClick = this.handleDocumentClick.bind(this), this.isStatusNotExpired = this.isStatusNotExpired.bind(this), this.profileinfo = {}, this.requestTriggeredIds = {}
            }
            return r(e, [{
                key: "isCachedRequest",
                value: function(e) {
                    if (this.profileinfo[e]) return this.profileinfo[e]
                }
            }, {
                key: "storeDetails",
                value: function(e, t) {
                    this.profileinfo[e] = t
                }
            }, {
                key: "retrieveDetails",
                value: function(e) {
                    return delete this.requestTriggeredIds[e], this.profileinfo[e]
                }
            }, {
                key: "isStatusNotExpired",
                value: function(e) {
                    var t = this.profileinfo[e].lastreqfetchedtime;
                    return Date.now() - t < 18e4
                }
            }, {
                key: "handleDocumentClick",
                value: function(e) {
                    if (document.getElementById("profileinfo_wrapper")) {
                        var t = mn(e),
                            s = t.getAttribute("data-zcprofileid");
                        if (t.closest('[id="profileinfo_wrapper"]') || s === document.getElementById("profileinfo_wrapper").getAttribute("data-zcprofileid")) return;
                        this.unmountComponent()
                    }
                }
            }, {
                key: "mountComponent",
                value: function(e, t, s, i, n, a) {
                    t = t || e.getAttribute("data-zcprofileid"), this.requestTriggeredIds[t] || (this.requestTriggeredIds[t] = !0, this.unmountComponent(document.getElementById("profileinfo_wrapper")), this.node = document.createElement("div"), this.node.id = "profileinfo_wrapper", this.node.className = tp, void 0 !== WebMessanger && (WebMessanger.isDarkModeEnabled && (this.node.className += " zmNightMode"), "function" == typeof WebMessanger.isDNDBackupIconEnabled && WebMessanger.isDNDBackupIconEnabled() && (this.node.className += " wms_dnd_backup_icon")), this.node.style.zIndex = oe.get("zindex"), this.node.setAttribute("tabIndex", "0"), this.node.setAttribute("data-zcprofileid", t), document.body.appendChild(this.node), ee(N(Op, {
                        removeComponent: this.unmountComponent,
                        targetnode: e,
                        profileid: t,
                        startChatCallback: s,
                        startAudioCallCallback: i,
                        startVideoCallCallback: n,
                        handleProfileActionsCallback: a,
                        isCachedRequest: this.isCachedRequest,
                        storeDetails: this.storeDetails,
                        retrieveDetails: this.retrieveDetails,
                        isStatusNotExpired: this.isStatusNotExpired,
                        requestTriggeredIds: this.requestTriggeredIds
                    }), this.node))
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    document.getElementById("profileinfo_wrapper") && (ee("", this.node), An(this.node))
                }
            }]), e
        }(),
        Dp = {
            PERCENTAGECHART: "percentage_chart",
            GRAPH: "graph",
            PIE: "pie",
            DOUGHNUT: "doughnut",
            SEMIDOUGHNUT: "semi_doughnut",
            SLIDERHEIGHT: 38,
            SLIDERWIDTH: 200,
            BARCHART_SLIDERWIDTH: 198,
            TRENDS_SLIDERWIDTH: 196,
            LEGENDCOLORS: ["#DD1B51", "#FEB935", "#722A99", "#C8D74F", "#2A98F0", "#FF5C00", "#2064B6", "#4CB271", "#FF4F99", "#72DDFF", "#137FA0", "#FCA9DE", "#2EC246", "#AF60FF", "#FF8A00", "#9B1D43", "#28CBC3", "#F86C84", "#394666", "#D0A6A3"],
            CENTERVAL: 50,
            CIRCLEVALUE: 360,
            SEMICIRCLE: 180,
            CIRCLERADIUS: 40,
            GRAPHSPACINGTOP: .05,
            GRAPHSPACINGBOTTOM: .2,
            GRAPHSPACINGLEFT: .25,
            GRAPHSPACINGRIGHT: .05,
            GRAPHPREVIEWSPACINGBOTTOM: .25,
            GRAPHPREVIEWSPACINGLEFT: .25,
            LEGENDBGOPACITY: .2
        },
        $p = {
            previewSlider: '<div class="zcq-slider-cont zcq-flexC fjustifyE"><div class="charts-navi-label zcq-font14 zcq-mR10 ">Navigator</div><div id="zcc-charts-navigator" class="zcq-charts-navigator"><div class="zcq-charts-slider" id="zcc-preview-slider"><div class="zcq-slider-dragpoints zcq-dragleft" id="zcc-left-dragpoint" data-purpose="resizing"></div><div class="zcq-slider-dragpoints zcq-dragright" id="zcc-right-dragpoint" data-purpose="resizing"></div></div><div id="zcc-slider-wrapper" class="zcq-chart-preview-wrapper"></div><div id="zcc-slider-wrapper1" class="zcq-chart-preview-wrapper"></div><div id="zcc-sliderpreviewcont" class="zcq-slider-preview-cont"><svg class="zcq-charts-slider-preview">{{SILDER_HTML}}</svg></div></div></div>',
            barChartHtml: '<rect class="zcq-curP" data-action="{{ACTION}}" x={{xVal}} y={{yVal}} width={{barWidth}} height={{barHeight}} style="fill:{{color}};" data-value="{{currentVal}}" data-label="{{currentLabel}}" data-category="{{category}}"></rect>',
            trendsChartDotHtml: '<circle data-action="{{ACTION}}" cx={{x}} cy={{y}} r={{trendsCircleVal}} style="fill:{{color}};" data-value="{{currentVal}}" data-label="{{currentLabel}}" data-category="{{category}}"></circle>',
            trendsChartPathHtml: '<path d="{{distStr}}" style="stroke:{{color}};fill:none;"></path>',
            legendHtml: '<div class="zcq-legend-card {{SINGLE_LEGEND_CLASS}}" status="on" data-category="{{category}}" data-action = "chartLegendclick" style="background-color:{{legendContBGColor}};"><span class="zcq-legend-card-fill" style="background-color:{{legendColor}};"></span><span class="zcq-legend-card-text">{{category}}</span></div>',
            legendParentHtml: '<div class="zcq-legend-cont zcq-p10  zcq-trends" id="zcc-legends">{{legendHtml}}</div>',
            pieChartsLegendHtml: '<div class="zcq-piechart-legend-card {{SINGLE_LEGEND_CLASS}}" data-label="{{label}}" legendId={{legengId}} legendValue={{legendVal}} status="on" data-action="legendclick" style="background-color:{{legendContBGColor}};"><span class="zcq-legend-card-fill" style="background-color:{{legendColor}};"></span><span class="zcq-ellips" title="{{label}}">{{label}}</span></div>',
            graphChartContHtml: "<div>{{GRAPHBODYHTML}}{{LEGENDHTML}}</div>{{PREVIEWBTN_HTML}}",
            previewBtnHtml: '<div id="chartsPreviewBtn" class="zcq-textR zcq-chart-preview-btn {{INLINE_MULTIPLE_CHART_CSS}}">{{EXPAND_CHARTS_BTN}}<div class="zcq-zcl-btn-xs  zcq-zcl-btn--secondary">{{MSG_CONTENT}}</div>',
            graphBodyHtml: '<div class="zcq-curP" id="zcc-graphChartCont">{{SLIDER_PREVIEW}}<div class="zcq-trends-cont {{PREVIEW_CLASS}}" id="zcc-svg-cont"><svg  height="100%" width="100%" {{VIEWBOX_ATTRIBUTE}}>{{GRAPH_AXIS}}{{GRAPH_POINTS}}</svg></div></div>',
            chartsToolTipContHtml: '<div class="zcq-svgtooltip" id="zcc-charttooltip"></div>',
            graphSvgHtml: '<svg  height="100%" width="100%" {{VIEWBOX_ATTRIBUTE}} class="{{VISIBILITY_CLASS}}">{{GRAPH_AXIS}}{{GRAPH_POINTS}}</svg>',
            axisTitleHtml: '<text class="zcq-axistitle {{visiblityCls}}" x={{xVal}} y={{yVal}} transform="{{trasnformVal}}">{{axisTitle}}</text>',
            pieChartContHtml: '<div class="zcq-flexC"><div class="zcq-preview zcq-svgchart-cont" id="zcc-svg-cont">{{CHARTBODY_HTML}}</div>{{LEGEND_HTML}}</div>{{PREVIEWBTN_HTML}}',
            pieChartBodyHtml: '<svg viewBox="{{viewBoxSize}}" id="{{ID}}" style="transform: rotate({{rotationDeg}}deg);position: relative;" height="100%" width="100%">{{CHART_HTML}}{{CENTER_CIRCLE_HTML}}</svg>',
            pieChartsLegendContHtml: '<div class="zcq-legend-cont zcq-p10 " id="zcc-legends">{{LEGEND_HTML}}</div>',
            pieChartCenterCircleHtml: "<circle cx=" + Dp.CENTERVAL + " cy=" + Dp.CENTERVAL + ' r="2" style="fill:var(--default-bg-color, #15202B);"></circle>',
            doughnutCenterCircleHtml: "<circle cx=" + Dp.CENTERVAL + " cy=" + Dp.CENTERVAL + ' r="20" style="fill:var(--default-bg-color, #15202B);" clip-path="{{CLIPPATH}}"></circle><circle cx=' + Dp.CENTERVAL + " cy=" + Dp.CENTERVAL + ' r="10" style="fill:var(--color-hover2, #F1F4F7);" clip-path="{{CLIPPATH}}"></circle>',
            semiDoughnutDefinitionHtml: '<defs> <clipPath id="zcc-cut-off-bottom"> <rect x="0" y="49" width="100" height="50"> </rect> </clipPath> </defs>',
            percentageChartPathHtml: '<path data-action="{{ACTION}}" class="zcq-chart-path" d="M {{CENTERVAL}} {{CENTERVAL}} L {{FROMCOORDX}} , {{FROMCOORDY}} A {{RADIUS}} ,{{RADIUS}} {{ARCVAL}} {{TOCOORDX}}, {{TOCOORDY}} z" data-label="{{LABEL}}" data-value={{VALUE}} normal-val={{NORMALVAL}} style="fill:{{LEGENDCOLOR}}" legendId={{LEGENDID}}></path>',
            percentageChartPathCircleHtml: '<circle data-action="{{ACTION}}" cx={{CENTERVAL}} cy={{CENTERVAL}} r={{RADIUS}} style="fill:{{LEGENDCOLOR}}" data-label="{{LABEL}}" data-value={{VALUE}}></circle>',
            percentageChartCustomTooltip: '<div class="zcq-font14"><div class="zcq-mT2 zcq-fontB">{{LABEL}}</div><div class="zcq-mT2">{{VALUETITLE}} : {{VALUE}} ({{PERCENTAGEVAL}}%)</div></div>',
            graphCustomTooltip: '<div class="zcq-font14"><div class="zcq-mT2 zcq-fontB">{{LABEL}}</div><div class="zcq-mT2">{{CATEGORY_TXT}} : {{CATEGORY}}</div><div class="zcq-mT2">{{VALUETITLE}} : {{VALUE}} {{PERCENTAGE}}</div></div>',
            trendMultiPointsTooltip: '<div class="zcq-flexC zcq-mT2"><span class="zcq-graphtooltip" style="background-color:{{COLOR}};"></span><span class="zcq-mL5">{{CATEGORY}} - </span><span class="zcq-mL5 zcq-fontB">{{VALUE}} </span></div>',
            graphAxisLine: '<line class="zcq-outer-axis" x1={{FIRST_X}} y1={{FIRST_Y}} x2={{SECOND_X}} y2={{SECOND_Y}}></line>',
            grpahAxisCont: '<g class="" id="{{ID}}">{{AXISLINE}}{{AXISTITLE}}{{AXISVALUES}}</g>',
            graphYAxisValueLine: '<line class="zcq-axisvalueline" x1={{XPOSITION}} y1={{YPOSITION}} x2={{XSTARTPOINT}} y2={{YPOSITION}}></line><line class="zcq-inner-axis" x1={{XSTARTPOINT}} y1={{YPOSITION}} x2={{XENDPOINT}} y2={{YPOSITION}}></line><text class="zcq-axisvalue" x={{XPOSITION}} y={{YPOSITION}} dx={{TEXTXPOSITION}} title={{TOOLTIPVALUE}}>{{XAXISVALUE}}</text>',
            graphXAxisValueLine: '<line class="zcq-axisvalueline" x1={{XPOSITION}} y1={{YPOSITION}} x2={{XPOSITION}} y2={{YENDPOINT}} data-label="{{LABEL}}" data-xaxisline></line><text class="zcq-axisvalue" x={{XPOSITION}} y={{TEXTYPOSITION}}  transform="{{TRASNFORMVAL}}" xaxislabel>{{AXIS_LABEL}}</text>',
            chartsPreviewSelector: '<div id="cliqChartsPreviewSelector" class="zcq-charts-preview-selector">{{CHARTS_PREVIEW_CONT}}</div>',
            chartsPreviewHolder: '<div id="cliqChartsPreviewHolder" class="zcq-charts-preview-holder" chid="{{CHID}}" time={{MSG_TIME}}>',
            chartsPreviewContainer: '<div id="cliqChartsPreviewContainer{{CHART_INDEX}}" class="zcq-charts-preview-container {{SELECTED_CLASS}}" data-action="showChartFullView" data-chartindex={{CHART_INDEX}}>{{CHARTS_PREVIEW}}</div>',
            chartsSeparator: '<div id="chartsSeparatorLine" class="zcq-charts-separator">',
            inlineChartsExpandBtn: '<div class="zcq-charts-collapse-text" data-operation="{{DATA_ACTION_NAME}}" msgtime="{{MSG_TIME}}">{{ACTION_USER_INFO}}</div>'
        };

    function Hp(e, t, s) {
        return function(e, t, s) {
            var i, n;
            Kp = e, ef = t, rf = s.isWidgetChart, sf = s.widgetChartId, n = rf ? document.querySelector('[element_id="' + sf + '"]') : document.getElementById("zcc-previewchart");
            i = n.querySelector("#zcc-charts-navigator"), Zp = n.querySelector("#zcc-preview-slider").offsetWidth, Qp = Zp, tf = t / e * of , i.addEventListener("mousemove", (function(e) {
                ! function(e) {
                    var t = e.pageX - Vp;
                    e.preventDefault(), lf(e.target), nf ? function(e) {
                        var t, s, i = ep.parentElement,
                            n = i.style.marginLeft;
                        switch (n = "" === n ? 0 : parseInt(n), ep.getAttribute("id")) {
                            case "zcc-right-dragpoint":
                                t = Qp + e, s = n;
                                break;
                            case "zcc-left-dragpoint":
                                t = Qp - e, s = n + e
                        }
                        var a = i.parentElement.offsetWidth;
                        if (t <= tf) return;
                        s < 0 && (t += s, s = 0);
                        t < 0 && (t = 0, s = i.style.marginLeft);
                        s + t > a && (t = a - s);
                        var o, r = t + s,
                            l = Zp - r;
                        i.style.cssText = "margin-left: " + s + "px; width: " + t + "px", o = rf ? document.querySelector('[element_id="' + sf + '"]') : document.getElementById("zcc-previewchart");
                        o.querySelector("#zcc-slider-wrapper").style.width = s + "px", o.querySelector("#zcc-slider-wrapper1").style.cssText = "margin-left: " + r + "px; width: " + l + "px", Xp = Math.floor(s / ef * Kp), (Jp = Math.floor(r / ef * Kp)) > Kp && (Jp = Kp - 1);
                        Qp = t, Uf(Xp, Jp)
                    }(t) : af && function(e) {
                        var t = Yp.offsetWidth,
                            s = Yp.parentElement.offsetWidth,
                            i = Yp.style.marginLeft,
                            n = (i = "" === i ? 0 : parseInt(i)) + e;
                        n < 0 && (n = 0);
                        n + t > s && (n = s - t);
                        var a, o = t + n,
                            r = Zp - o;
                        Yp.style.marginLeft = n + "px", a = rf ? document.querySelector('[element_id="' + sf + '"]') : document.getElementById("zcc-previewchart");
                        a.querySelector("#zcc-slider-wrapper").style.width = n + "px", a.querySelector("#zcc-slider-wrapper1").style.cssText = "margin-left: " + o + "px; width: " + r + "px", Xp = Math.floor(n / ef * Kp), Jp = Math.floor(o / ef * Kp), Uf(Xp, Jp)
                    }(t);
                    Vp = e.pageX
                }(e)
            })), i.addEventListener("mouseup", (function(e) {
                af = !1, nf = !1
            })), i.addEventListener("mouseleave", (function(e) {
                af = !1, nf = !1
            })), i.querySelector("#zcc-preview-slider").addEventListener("mousedown", (function(e) {
                nf || cf(e)
            })), i.querySelector("#zcc-preview-slider").addEventListener("dblclick", (function(e) {
                nf || cf(e)
            }));
            for (var a = i.querySelectorAll("[data-purpose=resizing]"), o = a.length, r = 0; r < o; r++) {
                var l = a[r];
                l.addEventListener("mousedown", (function(e) {
                    df(e)
                })), l.addEventListener("dblclick", (function(e) {
                    df(e)
                }))
            }
        }(e, t, s)
    }

    function Lp(e) {
        return function(e) {
            return Object.values(e).reduce((function(e, t) {
                return e + t
            }), 0)
        }(e)
    }

    function Pp(e) {
        return function(e) {
            var t = e.getAttribute("normal-val");
            if (void 0 === t || !t) return;
            var s = 4 * Math.cos(t),
                i = -4 * Math.sin(t);
            e.style.transform = "translate(" + i + "px, " + s + "px )";
            for (var n = e.parentElement.children, a = n.length, o = 0; o < a; o++) {
                var r = n[o];
                "path" === r.tagName && (r.style.opacity = "0.5")
            }
            e.style.opacity = "1"
        }(e)
    }

    function Fp(e) {
        return function(e) {
            var t = ("" + e).length - 1,
                s = t % 3,
                i = t - s;
            if (i > 18) {
                var n = i % 18;
                s += n, i -= n
            }
            return ("" + e).substring(0, s + 1) + {
                3: "K",
                6: "M",
                9: "B",
                12: "T",
                15: "P",
                18: "E"
            }[i]
        }(e)
    }

    function Bp(e) {
        return uf(e)
    }

    function jp(e) {
        return function(e) {
            var t;
            rf = e.isWidgetChart, sf = e.widgetChartId, t = rf ? document.querySelector('[element_id="' + sf + '"]') : document.getElementById("zcc-previewchart");
            for (var s = t.querySelector("#zcc-svg-cont").offsetHeight, i = t.querySelector("#zcc-xaxiscont"), n = s * Dp.GRAPHPREVIEWSPACINGBOTTOM - 40, a = i.querySelectorAll("text[xaxislabel]"), o = a.length, r = 0; r < o; r++) {
                var l = a[r];
                if (l.getBoundingClientRect().width >= n) {
                    var d = l.textContent.substring(0, 5) + "...";
                    l.textContent = d
                }
            }
        }(e)
    }

    function zp(e, t, s) {
        return function(e, t, s) {
            return e.getAttribute(t) === s || e.parentElement.getAttribute(t) === s
        }(e, t, s)
    }

    function Gp(e) {
        return function(e) {
            var t = e.reduce((function(e, t) {
                return Math.max(e, t)
            }));
            return Math.ceil(t)
        }(e)
    }

    function qp(e) {
        return function(e) {
            for (var t = 0, s = e.length, i = 0; i < s; i++) {
                var n = e[i].type;
                "percentage_chart" != n && "graph" != n || t++
            }
            return t
        }(e)
    }
    var Vp, Yp, Zp, Kp, Xp, Jp, Qp, ef, tf, sf, nf = !1,
        af = !1,
        of = 4,
        rf = !1;

    function lf(e) {
        var t = e.closest("div[chart-type]");
        t ? (sf = t.getAttribute("element_id"), rf = !0) : (sf = null, rf = !1)
    }

    function df(e) {
        lf(ep = e.target), nf = !0, Vp = e.pageX
    }

    function cf(e) {
        lf(Yp = e.target), af = !0, Vp = e.pageX
    }
    var uf = function(e) {
        var t = ("" + e).length - 2,
            s = e / Math.pow(10, t);
        return Math.ceil(Math.ceil(s / 5) * Math.pow(10, t))
    };
    var mf = Object.freeze({
        __proto__: null,
        addTransitionEffect: Pp,
        allignYAxisText: jp,
        allowEventExecution: zp,
        bindEventsForSlider: Hp,
        getChartsObjCount: qp,
        getFriendlyFormat: Fp,
        getMaxValFromArray: Gp,
        getOptimalSplitValue: Bp,
        sumAllValuesOfKeys: Lp
    });

    function hf(e, t, s) {
        return function(e, t, s) {
            var i = e.target,
                n = i.getAttribute("data-label"),
                a = i.getAttribute("data-value"),
                o = i.getAttribute("data-category"),
                r = void 0 !== t.styles.y_axis && void 0 !== t.styles.y_axis.title ? t.styles.y_axis.title : "Value",
                l = {
                    LABEL: n,
                    VALUETITLE: r,
                    VALUE: a,
                    CATEGORY_TXT: "Category",
                    CATEGORY: o
                },
                d = yi($p.graphCustomTooltip, l);
            if ("vertical_stacked_bar" === t.styles.preview) {
                var c = (a / s[n] * 100).toFixed(1);
                d = yi(d, {
                    PERCENTAGE: "(" + c + "%)"
                }, "InSecureHTML")
            } else d = yi(d, {
                PERCENTAGE: ""
            });
            if ("trend" === t.styles.preview) {
                var u, m = i.getAttribute("cx"),
                    h = i.getAttribute("cy");
                if ((u = (u = t.isWidgetChart ? document.querySelector('[element_id="' + t.widgetChartId + '"]') : document.getElementById("zcc-previewchart")).querySelector("#zcc-svg-cont").querySelectorAll("[cx='" + m + "'][cy='" + h + "']")).length > 1) {
                    var g = '<div class="zcq-fontB">' + n + "</div>",
                        p = _f(u);
                    d = g += p
                }! function(e) {
                    var t = parseInt(e.getAttribute("r")) + 2,
                        s = e.style.fill;
                    e.style.cssText += "stroke: " + s + "; stroke-width: " + t + "px; stroke-opacity: 0.5"
                }(i)
            }
            var f = document.getElementById("zcc-charttooltip");
            f.innerHTML = d, f.classList.remove("dN"), Wf(f, e)
        }(e, t, s)
    }

    function gf(e, t) {
        return function(e, t) {
            document.getElementById("zcc-charttooltip").classList.add("dN"), "trend" !== t || e.target.hasAttribute("data-xaxisline") || (e.target.style.stroke = "none")
        }(e, t)
    }

    function pf(e) {
        return function(e) {
            Wf(document.getElementById("zcc-charttooltip"), e)
        }(e)
    }

    function ff(e) {
        return Pp((t = e).event.target), void
        function(e) {
            var t = e.event,
                s = e.totalChartVal,
                i = document.getElementById("zcc-charttooltip");
            i.classList.remove("dN");
            var n = t.target,
                a = n.getAttribute("data-value"),
                o = n.getAttribute("data-label"),
                r = (a / s * 100).toFixed(1),
                l = {
                    LABEL: o,
                    VALUETITLE: "Value",
                    VALUE: a,
                    PERCENTAGEVAL: r
                },
                d = yi($p.percentageChartCustomTooltip, l);
            i.innerHTML = d, Wf(i, t)
        }(t);
        var t
    }

    function vf(e, t) {
        return Sf(e, t)
    }

    function Cf(e) {
        return function(e) {
            var t = e.target;
            t.style.transform = "none";
            for (var s = t.parentElement.children, i = s.length, n = 0; n < i; n++) {
                var a = s[n];
                "path" === a.tagName && (a.style.opacity = "1")
            }
            document.getElementById("zcc-charttooltip").classList.add("dN")
        }(e)
    }

    function bf(e) {
        return function(e) {
            e.style.transform = "none";
            for (var t = e.parentElement.children, s = t.length, i = 0; i < s; i++) {
                "path" === (e = t[i]).tagName && (e.style.opacity = "1")
            }
        }(e)
    }

    function yf(e, t) {
        return function(e, t) {
            var s, i = e.target.getAttribute("data-label");
            s = t.isWidgetChart ? document.querySelector('[element_id="' + t.widgetChartId + '"]') : document.getElementById("zcc-previewchart");
            s = s.querySelector("#zcc-svg-cont").querySelectorAll("[data-label='" + i + "'][data-category]");
            var n = '<div class="zcq-fontB">' + i + "</div>",
                a = _f(s);
            n += a;
            var o = document.getElementById("zcc-charttooltip");
            o.innerHTML = n, o.classList.remove("dN"), Wf(o, e)
        }(e, t)
    }

    function _f(e) {
        for (var t = "", s = e.length, i = 0; i < s; i++) {
            var n = e[i],
                a = {
                    COLOR: n.style.fill,
                    CATEGORY: n.getAttribute("data-category"),
                    VALUE: n.getAttribute("data-value")
                };
            t += yi($p.trendMultiPointsTooltip, a)
        }
        return t
    }

    function Wf(e, t) {
        var s = t.pageX - e.offsetWidth / 2,
            i = t.pageY - (e.offsetHeight + 20);
        e.style.cssText += "left: " + s + "px; top: " + i + "px"
    }
    var Sf = function(e, t) {
        Wf(e, t)
    };
    var wf, Mf, If, Tf, Af = Object.freeze({
        __proto__: null,
        mouseMoveForChart: vf,
        mouseMoveForGraph: pf,
        mouseOutForChart: Cf,
        mouseOutForGraph: gf,
        mouseOutForLegend: bf,
        mouseOverAxisLine: yf,
        mouseOverForChart: ff,
        mouseOverForGraph: hf
    });

    function Ef(e) {
        return Ff(e)
    }

    function Uf(e, t) {
        return tv(e, t)
    }
    var kf, Nf, xf, Of, Rf = {},
        Df = {},
        $f = "",
        Hf = "",
        Lf = {},
        Pf = {};

    function Ff(e) {
        return Bf(e), jf[wf.type]()
    }

    function Bf(e) {
        Mf = [], If = [], Rf = {}, Df = {}, (wf = e.chartObjInfo).isPreview = !!e.isPreview && e.isPreview, wf.showLegends = !!e.showLegends && e.showLegends, wf.sliderView = !!e.sliderView && e.sliderView, wf.isLegendClick = !!e.isLegendClick && e.isLegendClick, wf.isSliderInActiveState = !!e.isSliderInActiveState && e.isSliderInActiveState, Tf = void 0 !== e.onLegendsCount ? e.onLegendsCount : wf.data.length, null !== e.widgetChartId && void 0 !== e.widgetChartId ? (wf.widgetChartId = e.widgetChartId, wf.isWidgetChart = !0) : (wf.widgetChartId = null, wf.isWidgetChart = !1)
    }
    var jf = {
        percentage_chart: function() {
            return zf(),
                function() {
                    var e = "",
                        t = -90,
                        s = "0 0 100 100";
                    wf.styles.preview === Dp.SEMIDOUGHNUT && (t = -Dp.SEMICIRCLE, s = "0 14 100 100");
                    var i, n, a = function() {
                            for (var e = 0, t = 0, s = .5 * -Math.PI, i = Dp.SEMICIRCLE, n = Dp.CIRCLEVALUE, a = wf.styles.preview === Dp.SEMIDOUGHNUT ? i : n, o = Dp.CIRCLERADIUS, r = "", l = "", d = wf.isPreview ? "addeffects" : "", c = 0; c < Mf.length; c++) {
                                var u = Mf[c];
                                if (0 !== u) {
                                    var m, h = (t += u / kf * a) - e,
                                        g = " 0,0,1 ",
                                        p = u / kf * 2 * Math.PI;
                                    wf.styles.preview === Dp.SEMIDOUGHNUT && (p = u / kf * Math.PI);
                                    var f = s + .5 * p;
                                    if (s += p, h >= i && (g = " 0,1,1 "), h === n) {
                                        var v = {
                                            ACTION: d,
                                            CENTERVAL: Dp.CENTERVAL,
                                            LABEL: If[c],
                                            VALUE: u,
                                            LEGENDCOLOR: Dp.LEGENDCOLORS[c],
                                            RADIUS: o
                                        };
                                        m = yi($p.percentageChartPathCircleHtml, v)
                                    } else {
                                        var C = Dp.CENTERVAL + o * Math.cos(e * Math.PI / i),
                                            b = Dp.CENTERVAL + o * Math.sin(e * Math.PI / i),
                                            y = Dp.CENTERVAL + o * Math.cos(t * Math.PI / i),
                                            _ = Dp.CENTERVAL + o * Math.sin(t * Math.PI / i);
                                        v = {
                                            ACTION: d,
                                            CENTERVAL: Dp.CENTERVAL,
                                            FROMCOORDX: C,
                                            FROMCOORDY: b,
                                            RADIUS: o,
                                            ARCVAL: g,
                                            TOCOORDX: y,
                                            TOCOORDY: _,
                                            LABEL: If[c],
                                            VALUE: u,
                                            NORMALVAL: f,
                                            LEGENDCOLOR: Dp.LEGENDCOLORS[c],
                                            LEGENDID: c
                                        }, m = yi($p.percentageChartPathHtml, v)
                                    }
                                    if (r += m, wf.showLegends) {
                                        v = {
                                            label: wf.data[c].label,
                                            legengId: c,
                                            legendVal: u,
                                            legendColor: Dp.LEGENDCOLORS[c],
                                            legendContBGColor: "rgba(" + $WC.Util.hexToRGB(Dp.LEGENDCOLORS[c]) + "," + Dp.LEGENDBGOPACITY + ")",
                                            value: wf.data[c].value,
                                            SINGLE_LEGEND_CLASS: Gf(wf)
                                        };
                                        var W = yi($p.pieChartsLegendHtml, v);
                                        l += W
                                    }
                                    e = t
                                }
                            }
                            return {
                                percentageChartHtml: r,
                                legendHtml: l
                            }
                        }(),
                        o = a.percentageChartHtml,
                        r = ((n = wf.styles.preview) === Dp.PIE ? i = $p.pieChartCenterCircleHtml : n === Dp.DOUGHNUT ? i = yi($p.doughnutCenterCircleHtml, {
                            CLIPPATH: ""
                        }, "InSecureHTML") : n === Dp.SEMIDOUGHNUT && (i = $p.semiDoughnutDefinitionHtml + yi($p.doughnutCenterCircleHtml, {
                            CLIPPATH: "url(#zcc-cut-off-bottom)"
                        }, "InSecureHTML")), i),
                        l = {
                            viewBoxSize: s,
                            ID: Dp.PIE,
                            rotationDeg: t,
                            CHART_HTML: o,
                            CENTER_CIRCLE_HTML: r
                        },
                        d = yi($p.pieChartBodyHtml, l, "InSecureHTML");
                    if (wf.isLegendClick) return d;
                    if (wf.showLegends) {
                        var c = a.legendHtml;
                        e = yi($p.pieChartsLegendContHtml, {
                            LEGEND_HTML: c
                        }, "InSecureHTML")
                    }
                    return l = {
                        CHARTBODY_HTML: d,
                        LEGEND_HTML: e,
                        PREVIEWBTN_HTML: wf.isPreview || wf.isSelectionView ? "" : qf(wf)
                    }, yi($p.pieChartContHtml, l, "InSecureHTML")
                }()
        },
        graph: function() {
            return function() {
                var e = "",
                    t = function() {
                        var e, t, s, i, n, a, o, r;
                        e = 200, t = 350, s = Dp.GRAPHSPACINGTOP, i = Dp.GRAPHSPACINGBOTTOM, n = Dp.GRAPHSPACINGLEFT, a = Dp.GRAPHSPACINGRIGHT, 5, Xf(), o = o || 0, r = r || If.length, wf.isPreview && (e = 400, t = 900, i = Dp.GRAPHPREVIEWSPACINGBOTTOM, n = Dp.GRAPHPREVIEWSPACINGLEFT);
                        var l = e * n,
                            d = e * s,
                            c = t - t * a,
                            u = e - e * i,
                            m = {
                                xStartPoint: l,
                                xEndPoint: c,
                                yStartPoint: d,
                                yEndPoint: u,
                                totalXaxis: 5,
                                startValue: o,
                                endValue: r,
                                height: e,
                                width: t,
                                spacingBottom: i
                            },
                            h = "",
                            g = "";
                        if (void 0 !== wf.styles.x_axis && void 0 !== wf.styles.y_axis) {
                            var p, f, v, C, b, y = wf.styles.x_axis.title,
                                _ = wf.styles.y_axis.title;
                            wf.isPreview ? (p = 30, f = e - 10, v = (u - d) / 2 + d, C = (c - l) / 2 + l, b = "") : (p = 10, f = e - 5, v = (e - e * Dp.GRAPHSPACINGBOTTOM) / 2, C = (c - l) / 2 + l, b = "zcq-chart-inline-title");
                            var W = "rotate(-90 " + p + " " + v + ")";
                            h = yi($p.axisTitleHtml, {
                                visiblityCls: b,
                                xVal: p,
                                yVal: v,
                                trasnformVal: W,
                                axisTitle: _
                            }), g = yi($p.axisTitleHtml, {
                                visiblityCls: b,
                                xVal: C,
                                yVal: f,
                                trasnformVal: "",
                                axisTitle: y
                            })
                        }
                        var S = yi($p.graphAxisLine, {
                                FIRST_X: l,
                                FIRST_Y: u,
                                SECOND_X: c,
                                SECOND_Y: u
                            }),
                            w = yi($p.graphAxisLine, {
                                FIRST_X: l,
                                FIRST_Y: d,
                                SECOND_X: l,
                                SECOND_Y: u
                            }),
                            M = function(e) {
                                var t, s, i, n, a, o = e.xStartPoint,
                                    r = e.xEndPoint,
                                    l = e.yStartPoint,
                                    d = e.yEndPoint,
                                    c = e.totalXaxis,
                                    u = If.length > 20 && wf.isPreview && !wf.sliderView;
                                t = "vertical_stacked_bar" === wf.styles.preview ? Gp(Object.values(Df)) : Gp(Mf);
                                if (i = (r - o) / (If.length + 1), n = (d - (l + 10)) / c, s = Bp(t), a = n / s, u) var m = d - l,
                                    h = r - o,
                                    g = Dp.SLIDERHEIGHT,
                                    p = a / m * Dp.SLIDERHEIGHT,
                                    f = i / h * Dp.SLIDERWIDTH,
                                    v = 0;
                                return {
                                    spaceBtwnYaxisVal: i,
                                    spaceBtwnXaxisVal: n,
                                    yAxisStartValue: s,
                                    singleAxisValue: a,
                                    sliderYEndingPoint: void 0 !== g ? g : void 0,
                                    sliderSingleAxisValue: void 0 !== p ? p : void 0,
                                    sliderSpaceBtwnYaxisVal: void 0 !== f ? f : void 0,
                                    sliderXStartPoint: void 0 !== v ? v : void 0
                                }
                            }(m),
                            I = function(e, t) {
                                var s = "",
                                    i = "",
                                    n = e.totalXaxis,
                                    a = e.xStartPoint,
                                    o = e.xEndPoint,
                                    r = e.yEndPoint,
                                    l = t.spaceBtwnXaxisVal,
                                    d = t.spaceBtwnYaxisVal,
                                    c = t.yAxisStartValue,
                                    u = e.startValue,
                                    m = e.endValue,
                                    h = -5;
                                (function() {
                                    for (var e = r, t = 0; t < n; t++) {
                                        e -= l;
                                        var i = a;
                                        wf.isPreview && (i = a - 10);
                                        var d = (t + 1) * c,
                                            u = "";
                                        d >= 1e3 && (u = d, d = Fp(d));
                                        var m = {
                                            XPOSITION: i,
                                            YPOSITION: e,
                                            XSTARTPOINT: a,
                                            XENDPOINT: o,
                                            XAXISVALUE: d,
                                            TEXTXPOSITION: h,
                                            TOOLTIPVALUE: u
                                        };
                                        s += yi($p.graphYAxisValueLine, m)
                                    }
                                })(), wf.isPreview && (h = -10, function() {
                                    for (var e = a, t = If.length, s = 0; s < t; s++)
                                        if (s >= u && s <= m) {
                                            var n = r + 12,
                                                o = n + 5,
                                                l = {
                                                    XPOSITION: e += d,
                                                    YPOSITION: n,
                                                    YENDPOINT: r,
                                                    TEXTYPOSITION: o,
                                                    TRASNFORMVAL: "rotate(-45 " + e + " " + o + ")",
                                                    LABEL: If[s],
                                                    AXIS_LABEL: m - u > 20 && s % 2 != 0 ? "" : If[s]
                                                };
                                            i += yi($p.graphXAxisValueLine, l)
                                        }
                                }());
                                return {
                                    xAxisValsHtml: i,
                                    yAxisValsHtml: s
                                }
                            }(m, M),
                            T = function(e, t) {
                                var s = "<g>",
                                    i = {};
                                Pf = {};
                                var n = t.spaceBtwnYaxisVal;
                                e.height, e.spacingBottom;
                                var a = t.singleAxisValue;
                                e.startValue;
                                var o = e.xStartPoint;
                                e.xEndPoint, e.yStartPoint;
                                var r = e.yEndPoint,
                                    l = wf.styles.preview;
                                $f = "", Hf = "";
                                var d = If.length > 20 && wf.isPreview && !wf.sliderView;
                                if ("vertical_stacked_bar" == l) {
                                    Pf = Jf(Object.keys(Rf));
                                    var c = If.length + (If.length - 1);
                                    wf.data.forEach((function(e) {
                                        e.status && "off" === e.status || function(e, i, l, c) {
                                            var u, m = n / 3 * 2,
                                                h = (Dp.SLIDERWIDTH - 2) / c,
                                                g = e.length;
                                            wf.showLegends && (u = {
                                                category: i,
                                                legendColor: l,
                                                legendContBGColor: "rgba(" + $WC.Util.hexToRGB(l) + "," + Dp.LEGENDBGOPACITY + ")",
                                                SINGLE_LEGEND_CLASS: Gf(wf)
                                            }, Hf += yi($p.legendHtml, u));
                                            for (var p = 0; p < g; p++)
                                                if (!wf.sliderView || !(p < Nf || p > xf)) {
                                                    var f = e[p].value,
                                                        v = e[p].label;
                                                    Pf[v] += f;
                                                    var C = Pf[v],
                                                        b = r - C * a;
                                                    if (u = {
                                                            xVal: y = (If.indexOf(v) + 1) * n + o - m / 2,
                                                            yVal: b,
                                                            barWidth: m,
                                                            barHeight: f * a,
                                                            color: l,
                                                            currentVal: f,
                                                            currentLabel: v,
                                                            category: i,
                                                            ACTION: wf.isPreview ? "viewtooltip" : ""
                                                        }, s += yi($p.barChartHtml, u), d) {
                                                        var y;
                                                        b = t.sliderYEndingPoint - C * t.sliderSingleAxisValue, If.indexOf(v), t.sliderSpaceBtwnYaxisVal, t.sliderXStartPoint;
                                                        u = {
                                                            xVal: y = 0 === (y = 2 * If.indexOf(v) * h) ? 1 : y,
                                                            yVal: b,
                                                            barWidth: h,
                                                            barHeight: f * t.sliderSingleAxisValue,
                                                            color: l,
                                                            currentVal: f,
                                                            currentLabel: v,
                                                            category: i,
                                                            ACTION: ""
                                                        }, $f += yi($p.barChartHtml, u)
                                                    }
                                                }
                                        }(e.values, e.category, e.color, c)
                                    }))
                                } else if ("vertical_bar" === l) {
                                    i = Jf(Object.keys(Rf));
                                    c = Lp(Rf) + (Object.keys(Rf).length - 1);
                                    Lf = {}, wf.data.forEach((function(e) {
                                        e.status && "off" === e.status || function(e, l, c, u) {
                                            var m, h = n - 2 * (.15 * n),
                                                g = .05 * n,
                                                p = (Dp.SLIDERWIDTH - 2) / u,
                                                f = e.length;
                                            wf.showLegends && (m = {
                                                category: l,
                                                legendColor: c,
                                                legendContBGColor: "rgba(" + $WC.Util.hexToRGB(c) + "," + Dp.LEGENDBGOPACITY + ")",
                                                SINGLE_LEGEND_CLASS: Gf(wf)
                                            }, Hf += yi($p.legendHtml, m));
                                            for (var v = 0; v < f; v++)
                                                if (!wf.sliderView || !(v < Nf || v > xf)) {
                                                    var C = e[v].value,
                                                        b = e[v].label,
                                                        y = r - (M = C * a),
                                                        _ = o + (If.indexOf(b) + 1) * n;
                                                    _ -= h / 2;
                                                    var W = (h - (Rf[b] - 1) * g) / Rf[b],
                                                        S = _ + i[b] * (W + g);
                                                    if (i[b] += 1, m = {
                                                            xVal: S,
                                                            yVal: y,
                                                            barWidth: W,
                                                            barHeight: M,
                                                            color: c,
                                                            currentVal: C,
                                                            currentLabel: b,
                                                            category: l,
                                                            ACTION: wf.isPreview ? "viewtooltip" : ""
                                                        }, s += yi($p.barChartHtml, m), d) {
                                                        if (void 0 === Lf[b])
                                                            if (0 == If.indexOf(b)) Lf[b] = 0;
                                                            else {
                                                                var w = e[v - 1].label;
                                                                Lf[b] = Lf[w] + Rf[w] + 1
                                                            }
                                                        else Lf[b] += 1;
                                                        var M = C * t.sliderSingleAxisValue;
                                                        y = t.sliderYEndingPoint - M;
                                                        m = {
                                                            xVal: S = 0 === (S = Lf[b] * p) ? 1 : S,
                                                            yVal: y,
                                                            barWidth: p,
                                                            barHeight: M,
                                                            color: c,
                                                            currentVal: C,
                                                            currentLabel: b,
                                                            category: l,
                                                            ACTION: ""
                                                        }, $f += yi($p.barChartHtml, m)
                                                    }
                                                }
                                        }(e.values, e.category, e.color, c)
                                    }))
                                } else if ("trend" === l) {
                                    c = If.length;
                                    wf.data.forEach((function(e) {
                                        e.status && "off" === e.status || function(e, i, l, c) {
                                            var u, m, h = "",
                                                g = !0,
                                                p = wf.isPreview ? 4 : 2,
                                                f = e.length;
                                            if (d) var v, C = (Dp.SLIDERWIDTH - 4) / (c - 1);
                                            wf.showLegends && (m = {
                                                category: i,
                                                legendColor: l,
                                                legendContBGColor: "rgba(" + $WC.Util.hexToRGB(l) + "," + Dp.LEGENDBGOPACITY + ")",
                                                SINGLE_LEGEND_CLASS: Gf(wf)
                                            }, Hf += yi($p.legendHtml, m)), s += '<g data-id="' + i + '">';
                                            for (var b = 0; b < f; b++)
                                                if (!wf.sliderView || !(b < Nf || b > xf)) {
                                                    var y = e[b].value,
                                                        _ = e[b].label,
                                                        W = r - y * a,
                                                        S = (If.indexOf(_) + 1) * n + o;
                                                    m = {
                                                        x: S,
                                                        y: W,
                                                        trendsCircleVal: p,
                                                        color: l,
                                                        currentVal: y,
                                                        currentLabel: _,
                                                        category: i,
                                                        ACTION: wf.isPreview ? "viewtooltip" : ""
                                                    }, h += yi($p.trendsChartDotHtml, m), g ? u = "M " + S + " " + W + " " : u += "L " + S + " " + W + " ", d && (W = t.sliderYEndingPoint - y * t.sliderSingleAxisValue, S = 0 === (S = If.indexOf(_) * C) ? 2 : S, g ? v = "M " + S + " " + W + " " : v += "L " + S + " " + W + " "), g = !1
                                                }
                                            d && (m = {
                                                distStr: v,
                                                color: l
                                            }, $f += yi($p.trendsChartPathHtml, m)), m = {
                                                distStr: u,
                                                color: l
                                            }, s += yi($p.trendsChartPathHtml, m), s += h, s += "</g>"
                                        }(e.values, e.category, e.color, c)
                                    }))
                                }
                                return s += "</g>"
                            }(m, M),
                            A = yi($p.grpahAxisCont, {
                                ID: "zcc-xaxiscont",
                                AXISLINE: S,
                                AXISTITLE: g,
                                AXISVALUES: I.xAxisValsHtml
                            }, "InSecureHTML"),
                            E = yi($p.grpahAxisCont, {
                                ID: "zcc-yaxiscont",
                                AXISLINE: w,
                                AXISTITLE: h,
                                AXISVALUES: I.yAxisValsHtml
                            }, "InSecureHTML");
                        return {
                            graphAxisHtml: A + E,
                            graphPointsHtml: T,
                            height: e,
                            width: t
                        }
                    }(),
                    s = t.height,
                    i = t.width,
                    n = t.graphAxisHtml,
                    a = t.graphPointsHtml;
                wf.isPreview && If.length > 20 && (e = yi($p.previewSlider, {
                    SILDER_HTML: $f
                }, "InSecureHTML"));
                wf.showLegends && (Hf = yi($p.legendParentHtml, {
                    legendHtml: Hf
                }, "InSecureHTML"));
                if (wf.isLegendClick && wf.isSliderInActiveState) {
                    var o = {
                            VISIBILITY_CLASS: "dN",
                            VIEWBOX_ATTRIBUTE: wf.isPreview ? "" : "viewBox='0 0 " + i + " " + s + " '",
                            GRAPH_AXIS: n,
                            GRAPH_POINTS: a
                        },
                        r = yi($p.graphSvgHtml, o, "InSecureHTML"),
                        l = yi('<svg class="zcq-charts-slider-preview">{{SILDER_HTML}}</svg>', {
                            SILDER_HTML: $f
                        }, "InSecureHTML");
                    return {
                        previewGrpahHtml: r,
                        sliderPerviewGrpahHtml: l
                    }
                }
                o = {
                    SLIDER_PREVIEW: e,
                    PREVIEW_CLASS: wf.isPreview ? "zcq-preview mT40" : "",
                    VIEWBOX_ATTRIBUTE: wf.isPreview ? "" : "viewBox='0 0 " + i + " " + s + " '",
                    GRAPH_AXIS: n,
                    GRAPH_POINTS: a
                };
                var d = yi($p.graphBodyHtml, o, "InSecureHTML");
                if (wf.isLegendClick) return d;
                if (wf.sliderView) return o = {
                    VISIBILITY_CLASS: "",
                    VIEWBOX_ATTRIBUTE: wf.isPreview ? "" : "viewBox='0 0 " + i + " " + s + " '",
                    GRAPH_AXIS: n,
                    GRAPH_POINTS: a
                }, yi($p.graphSvgHtml, o, "InSecureHTML");
                return o = {
                    GRAPHBODYHTML: d,
                    LEGENDHTML: Hf,
                    PREVIEWBTN_HTML: wf.isPreview || wf.isSelectionView ? "" : qf(wf)
                }, yi($p.graphChartContHtml, o, "InSecureHTML")
            }()
        }
    };

    function zf() {
        kf = 0;
        for (var e = wf.data.length, t = 0; t < e; t++) Mf[t] = wf.data[t].value, If[t] = wf.data[t].label, kf += Mf[t]
    }

    function Gf(e) {
        return e.data && 1 == e.data.length ? "zcq-single-legend-card" : ""
    }

    function qf(e) {
        var t = "undefined" != typeof ResourceMessageObject ? ResourceMessageObject["common.preview"] : $WC.I18N("chat.preview");
        if (e.hasFirstChartInMessage || e.hasLastChartInMessage) {
            var s = "expandInlineCharts",
                i = $WC.I18N("charts.viewmore", [e.totalCharts]);
            e.hasLastChartInMessage && (s = "collapseInlineCharts", i = $WC.I18N("common.collapse"));
            var n = yi($p.inlineChartsExpandBtn, {
                MSG_TIME: e.msgtime,
                DATA_ACTION_NAME: s,
                ACTION_USER_INFO: i
            });
            return yi($p.previewBtnHtml, {
                INLINE_MULTIPLE_CHART_CSS: "zcq-charts-collapse-txt-cont",
                EXPAND_CHARTS_BTN: n,
                MSG_CONTENT: t
            }, "InSecureHTML")
        }
        return e.hasSingleChart ? yi($p.previewBtnHtml, {
            INLINE_MULTIPLE_CHART_CSS: "",
            EXPAND_CHARTS_BTN: "",
            MSG_CONTENT: t
        }) : $p.chartsSeparator
    }

    function Vf() {
        Kf({
            mouseevents: !0,
            legendcardevents: !0
        })
    }

    function Yf(e) {
        wf.type === Dp.PERCENTAGECHART ? Vf() : (Qf(), jp(wf))
    }

    function Zf(e) {
        var t = $WC.CustomMsg.getMsgObj(e),
            s = e.getAttribute("data-chartindex");
        if (s != Of) {
            var i = JSON.parse(JSON.stringify(t["long.msg"][s])),
                n = Ef({
                    chartObjInfo: i,
                    isPreview: !0,
                    showLegends: !0
                }),
                a = document.getElementById("cliqChartsPreviewContainer" + Of),
                o = document.getElementById("cliqChartsPreviewContainer" + s),
                r = document.getElementById("winhead");
            a.classList.remove("sel"), o.classList.add("sel"), r.nextSibling.remove(), r.insertAdjacentHTML("afterend", n), Of = s, Yf(i.type)
        }
    }

    function Kf(e) {
        e.mouseevents && function() {
            var e;
            e = wf.isWidgetChart ? document.querySelector('[element_id="' + wf.widgetChartId + '"]') : document.getElementById("zcc-previewchart");
            (e = e.querySelector("#zcc-svg-cont").querySelector("svg")).addEventListener("mouseover", (function(e) {
                zp(e.target, "data-action", "addeffects") && ff({
                    event: e,
                    totalChartVal: kf,
                    chartObj: wf
                })
            })), e.addEventListener("mousemove", (function(e) {
                zp(e.target, "data-action", "addeffects") && vf(document.getElementById("zcc-charttooltip"), e)
            })), e.addEventListener("mouseout", (function(e) {
                zp(e.target, "data-action", "addeffects") && Cf(e)
            }))
        }(), e.legendcardevents && function() {
            var e;
            e = wf.isWidgetChart ? document.querySelector('[element_id="' + wf.widgetChartId + '"]') : document.getElementById("zcc-previewchart");
            (e = e.querySelector("#zcc-legends")).addEventListener("click", (function(e) {
                if (zp(e.target, "data-action", "legendclick")) {
                    var t = function(e) {
                        var t = e.getAttribute("status"),
                            s = e.getAttribute("legendId"),
                            i = {
                                chartObjInfo: wf,
                                isPreview: !0,
                                showLegends: !1,
                                onLegendsCount: Tf,
                                isLegendClick: !0,
                                widgetChartId: wf.widgetChartId
                            };
                        if (1 === Tf && "on" === t) return i.onLegendsCount = Tf, Ff(i);
                        if ("on" === t) Tf--, wf.data[s].value = 0, e.setAttribute("status", "off"), e.classList.add("zcq-statusoff");
                        else {
                            Tf++;
                            var n = parseInt(e.getAttribute("legendValue"));
                            wf.data[s].value = n, e.setAttribute("status", "on"), e.classList.remove("zcq-statusoff")
                        }
                        return i.onLegendsCount = Tf, Ff(i)
                    }(e.target.hasAttribute("data-action") ? e.target : e.target.parentElement);
                    (wf.isWidgetChart ? document.querySelector('[element_id="' + wf.widgetChartId + '"]') : document.getElementById("zcc-previewchart")).querySelector("#zcc-svg-cont").innerHTML = t, Kf({
                        mouseevents: !0
                    })
                }
            })), e.addEventListener("mouseover", (function(e) {
                if (zp(e.target, "data-action", "legendclick")) {
                    var t, s = (e.target.hasAttribute("data-label") ? e.target : e.target.parentElement).getAttribute("data-label");
                    (t = (t = wf.isWidgetChart ? document.querySelector('[element_id="' + wf.widgetChartId + '"]') : document.getElementById("zcc-previewchart")).querySelector("#zcc-svg-cont").querySelector("[data-label='" + s + "']")) && Pp(t)
                }
            })), e.addEventListener("mouseout", (function(e) {
                if (zp(e.target, "data-action", "legendclick")) {
                    var t, s = (e.target.hasAttribute("data-label") ? e.target : e.target.parentElement).getAttribute("data-label");
                    (t = (t = wf.isWidgetChart ? document.querySelector('[element_id="' + wf.widgetChartId + '"]') : document.getElementById("zcc-previewchart")).querySelector("#zcc-svg-cont").querySelector("[data-label='" + s + "']")) && bf(t)
                }
            }))
        }()
    }

    function Xf() {
        var e = 0;
        wf.data.forEach((function(t) {
            t.status && "off" === t.status || (t.color || (t.color = Dp.LEGENDCOLORS[e], e++), function(e) {
                for (var t, s, i = e.length, n = 0; n < i; n++) wf.sliderView && (n < Nf || n > xf) || (t = e[n].value, s = e[n].label, Rf[s] = Rf[s] ? Rf[s] + 1 : 1, Df[s] = Df[s] ? Df[s] + t : t, Mf.includes(e[n].value) || Mf.push(e[n].value), If.includes(e[n].label) || If.push(e[n].label))
            }(t.values))
        }))
    }

    function Jf(e) {
        for (var t = {}, s = e.length, i = 0; i < s; i++) t[e[i]] = 0;
        return t
    }

    function Qf() {
        sv({
            mouseevents: !0,
            sliderevents: !0,
            legendcardevents: !0
        })
    }

    function ev(e) {
        var t = e.getAttribute("status"),
            s = e.getAttribute("data-category");
        if (1 === Tf && "on" === t) return Ff(wf);
        e.getAttribute("legendId"), "on" === t ? (Tf--, e.setAttribute("status", "off"), e.classList.add("zcq-statusoff")) : (Tf++, e.setAttribute("status", "on"), e.classList.remove("zcq-statusoff")), wf.data.forEach((function(e) {
            e.category === s && (e.status && "off" === e.status ? delete e.status : e.status = "off")
        }));
        var i = {
            chartObjInfo: wf,
            isPreview: !0,
            showLegends: !1,
            onLegendsCount: Tf,
            isLegendClick: !0,
            widgetChartId: wf.widgetChartId,
            isSliderInActiveState: nv()
        };
        return i.isSliderInActiveState ? (function(e) {
            var t;
            t = wf.isWidgetChart ? document.querySelector('[element_id="' + wf.widgetChartId + '"]') : document.getElementById("zcc-previewchart");
            var s = t.querySelector("#zcc-sliderpreviewcont"),
                i = t.querySelector("#zcc-svg-cont");
            s.innerHTML = e.sliderPerviewGrpahHtml, i.innerHTML = e.previewGrpahHtml, sv({
                mouseevents: !0
            }), jp(wf)
        }(Ff(i)), tv(Nf, xf), !1) : Ff(i)
    }

    function tv(e, t) {
        Nf = e, xf = t;
        var s, i = Ff({
            chartObjInfo: wf,
            isPreview: !0,
            sliderView: !0,
            onLegendsCount: Tf,
            widgetChartId: wf.widgetChartId
        });
        (s = (s = wf.isWidgetChart ? document.querySelector('[element_id="' + wf.widgetChartId + '"]') : document.getElementById("zcc-previewchart")).querySelector("#zcc-svg-cont")).querySelector("svg").remove(), s.innerHTML = i;
        sv({
            mouseevents: !0
        }), jp(wf)
    }

    function sv(e) {
        e.mouseevents && function() {
            var e;
            e = wf.isWidgetChart ? document.querySelector('[element_id="' + wf.widgetChartId + '"]') : document.getElementById("zcc-previewchart");
            (e = e.querySelector("#zcc-svg-cont").querySelector("svg")).addEventListener("mouseover", (function(e) {
                zp(e.target, "data-action", "viewtooltip") ? hf(e, wf, Df) : e.target.hasAttribute("data-xaxisline") && yf(e, wf)
            })), e.addEventListener("mouseout", (function(e) {
                (zp(e.target, "data-action", "viewtooltip") || e.target.hasAttribute("data-xaxisline")) && gf(e, wf.styles.preview)
            })), e.addEventListener("mousemove", (function(e) {
                zp(e.target, "data-action", "viewtooltip") && pf(e)
            }))
        }(), e.sliderevents && function() {
            if (If.length > 20) {
                var e, t = wf.styles.preview;
                "vertical_bar" === t || "vertical_stacked_bar" === t ? e = Dp.BARCHART_SLIDERWIDTH : "trend" === t && (e = Dp.TRENDS_SLIDERWIDTH), Hp(If.length, e, wf)
            }
        }(), e.legendcardevents && function() {
            var e;
            e = wf.isWidgetChart ? document.querySelector('[element_id="' + wf.widgetChartId + '"]') : document.getElementById("zcc-previewchart");
            (e = e.querySelector("#zcc-legends")).addEventListener("click", (function(e) {
                if (zp(e.target, "data-action", "chartLegendclick")) {
                    var t = e.target.hasAttribute("status") ? e.target : e.target.parentElement;
                    1 === Tf && "on" === t.getAttribute("status") || function(e) {
                        var t = ev(e.target.hasAttribute("data-action") ? e.target : e.target.parentElement);
                        if (t) {
                            var s;
                            (s = wf.isWidgetChart ? document.querySelector('[element_id="' + wf.widgetChartId + '"]') : document.getElementById("zcc-previewchart").querySelector("#winhead").nextSibling).querySelector("#zcc-graphChartCont").remove(), s.insertAdjacentHTML("afterbegin", t);
                            sv({
                                mouseevents: !0,
                                sliderevents: !0
                            }), jp(wf)
                        }
                    }(e)
                }
            }))
        }()
    }

    function iv() {
        document.body.insertAdjacentHTML("beforeend", $p.chartsToolTipContHtml)
    }

    function nv() {
        var e;
        if (!(e = (e = wf.isWidgetChart ? document.querySelector('[element_id="' + wf.widgetChartId + '"]') : document.getElementById("zcc-previewchart")).querySelector("#zcc-preview-slider"))) return !1;
        var t = e.offsetWidth,
            s = wf.styles.preview;
        return "vertical_bar" === s || "vertical_stacked_bar" === s ? t <= Dp.BARCHART_SLIDERWIDTH : "trend" === s ? t <= Dp.TRENDS_SLIDERWIDTH : void 0
    }
    var av = Object.freeze({
        __proto__: null,
        addCustomTooltipCont: function() {
            return iv()
        },
        chartsPreviewNavigationHandler: function(e) {
            return function(e) {
                var t, s = document.getElementById("cliqChartsPreviewHolder");
                Of *= 1, e && Of > 0 ? t = s.querySelector("[data-chartindex='" + (Of - 1) + "']") : e || (t = s.querySelector("[data-chartindex='" + (Of + 1) + "']"));
                t && Zf(t)
            }(e)
        },
        getChartsHtml: Ef,
        handleChartsPreviewForWidgets: function(e, t, s) {
            return function(e, t, s) {
                Bf({
                    chartObjInfo: t,
                    isPreview: !0,
                    showLegends: !0,
                    widgetChartId: e,
                    onLegendsCount: document.querySelector('[element_id="' + e + '"]').querySelector(".zcq-legend-cont").querySelectorAll('[status="on"]').length
                }), t.type === Dp.PERCENTAGECHART ? zf() : Xf();
                s && (t.type === Dp.PERCENTAGECHART ? Vf() : (Qf(), jp(t)))
            }(e, t, s)
        },
        handleSliderView: Uf,
        openChartsPreview: function(e) {
            return function(e) {
                var t = e.currentTarget,
                    s = t.getAttribute("chid"),
                    i = t.getAttribute("time"),
                    n = $WC.CustomMsg.getMsgObj(t, s, i),
                    a = t.getAttribute("data-chartindex"),
                    o = JSON.parse(JSON.stringify(n["long.msg"][a])),
                    r = Ef({
                        chartObjInfo: o,
                        isPreview: !0,
                        showLegends: !0
                    });
                ! function(e, t, s) {
                    var i = t["long.msg"],
                        n = "",
                        a = i ? qp(i) : 0;
                    if (a <= 1) return;
                    n += $WC.template.replace($p.chartsPreviewHolder, {
                        CHID: t.chid,
                        MSG_TIME: $WC.CMsgUtil.getTimeFromMsgObj(t)
                    });
                    for (var o = 0; o < a; o++) {
                        i[o].isSelectionView = !0;
                        var r = "";
                        o == s && (r = "sel", Of = o);
                        var l = {
                            chartObjInfo: i[o],
                            isPreview: !1,
                            showLegends: !1
                        };
                        n += $WC.template.replace($p.chartsPreviewContainer, {
                            CHARTS_PREVIEW: $WC.Charts.getChartsHtml(l),
                            SELECTED_CLASS: r,
                            CHART_INDEX: o
                        }, "InSecureHTML")
                    }
                    n += "</div>", n = $WC.template.replace($p.chartsPreviewSelector, {
                        CHARTS_PREVIEW_CONT: n
                    }, "InSecureHTML"), e.insertAdjacentHTML("beforebegin", n), document.getElementById("cliqChartsPreviewHolder").addEventListener("click", (function(e) {
                        Zf(e.target.closest("[data-chartindex]"))
                    }))
                }($WC.$Win.create({
                    id: "zcc-previewchart",
                    class: "zcq-chartpreviewheader",
                    header: $WC.CMsgUtil.processMsg(n.msg.trim(), n),
                    html: r,
                    openfn: function() {
                        iv(), Yf(o.type)
                    },
                    closefn: function() {
                        document.getElementById("zcc-charttooltip").remove(), qp(n["long.msg"]) > 1 && document.getElementById("cliqChartsPreviewSelector").remove()
                    },
                    closeoutside: !0
                })[0], n, a)
            }(e)
        },
        showCollapseInlineViewCharts: function(e, t) {
            return function(e, t) {
                for (var s = e.currentTarget, i = s.getAttribute("msgtime"), n = document.querySelector("[time='" + i + "'][customcardmsg]").querySelectorAll("[data-inlinechart-cont]"), a = n.length, o = 1; o < a; o++) t ? n[o].classList.add("zcq-dN") : n[o].classList.remove("zcq-dN");
                if (t) n[0].querySelector("#chartsSeparatorLine").remove(), n[0].querySelector("#chartsPreviewBtn").classList.remove("zcq-dN");
                else {
                    var r = s.parentElement;
                    r.insertAdjacentHTML("afterEnd", $p.chartsSeparator + "</div>"), r.classList.add("zcq-dN")
                }
            }(e, t)
        }
    });
    var ov = {
            container: "mc378179c8_container",
            staritem: "mc378179c8_staritem",
            label: "mc378179c8_label",
            staricon: "mc378179c8_staricon",
            staricon_sel: "mc378179c8_staricon_sel",
            staricon_solid: "mc378179c8_staricon_solid",
            labelhighlight: "mc378179c8_labelhighlight",
            type1: "mc378179c8_type1",
            type2: "mc378179c8_type2",
            type3: "mc378179c8_type3",
            type4: "mc378179c8_type4",
            type5: "mc378179c8_type5",
            zmNightMode: "zmNightMode"
        },
        rv = {},
        lv = {
            1: "important",
            2: "todo",
            3: "note",
            4: "boss",
            5: "followup"
        };

    function dv(e) {
        function t(t) {
            var s = e.msgid,
                i = {
                    "X-XHR-exception": !0,
                    "X-ZCSRF-TOKEN": Yi()
                };
            e.onChangeCallBack(e.clickednode, e.chid), "true" == e.starselected && e.startype == parseInt(t) ? et("v1/stars/" + s + "_" + t + "_" + e.chid, null, e.successCallBack, e.failureCallBack, null, null, i) : Je("v1/stars", "chid=" + e.chid + "&msguid=" + s + "&type=" + t, e.successCallBack, e.failureCallBack, null, null, i)
        }
        return N(we, {
            onClickOutside: e.unmountComponent
        }, N("div", {
            class: ov.container
        }, function() {
            var s = [],
                i = -1;
            for (var n in rv[e.msguid] && (i = rv[e.msguid], s.append(N(cv, {
                    itemtype: lv[i],
                    selected: !0
                }))), lv) n != i && s.push(N(cv, {
                itemtype: n,
                selectedstartype: e.startype,
                onClickStarItem: t.bind(this),
                useunstar: !0
            }));
            return s
        }()))
    }

    function cv(e) {
        var t = e.selectedstartype == e.itemtype ? "_sel" : "",
            s = e.customstyles && e.customstyles.customstaritemstyle ? e.customstyles.customstaritemstyle : ov.staritem,
            i = e.customstyles && e.customstyles.customlabelclass || "",
            n = re("star." + lv[e.itemtype]);
        return e.icontype && "solid" == e.icontype && (t = "_solid"), e.useunstar && e.selectedstartype == e.itemtype && (n = re("chat.message.unstar"), s += " " + ov.labelhighlight), N("div", {
            class: s,
            onclick: function(t) {
                e.onClickStarItem(e.itemtype)
            }
        }, N("div", {
            class: ov["staricon" + t] + " " + ov["type" + e.itemtype]
        }), N("div", {
            class: ov.label + " " + i
        }, n))
    }
    var uv = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e) {
                    this.mountpoint = e.mountpoint, this.currentmsgid = e.msgid, this.clickednode = e.clickednode, ee(N(dv, {
                        msgid: e.msgid,
                        chid: e.chid,
                        successCallBack: e.successCallBack,
                        failureCallBack: e.failureCallBack,
                        onChangeCallBack: e.onChangeCallBack,
                        unmountComponent: e.unmountComponent,
                        unmountWithoutClearing: this.unmountComponent,
                        starselected: e.starselected,
                        startype: e.startype,
                        clickednode: e.clickednode
                    }), this.mountpoint)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.mountpoint), An(this.mountpoint)
                }
            }, {
                key: "getCurrentMsgId",
                value: function() {
                    return this.currentmsgid
                }
            }]), e
        }(),
        mv = {
            TEXTMSG: "TEXTMSG",
            INFOMSG: "INFOMSG",
            IMGATT: "IMGATT",
            FILEATT: "FILEATT",
            LOADMORE: "LOADMORE",
            LOADMOREBUTTON: "LOADMOREBUTTON",
            TRANSERR: "TRANSERR",
            AUDIOATT: "AUDIOATT",
            VIDEOATT: "VIDEOATT",
            LOCATT: "LOCATT",
            CONTACTATT: "CONTACTATT",
            EVENTATT: "EVENTATT",
            CUSTOMMSG: "CUSTOMMSG",
            VIDEOLINK: "VIDEOLINK",
            AUDIOLINK: "AUDIOLINK",
            IMGLINK: "IMGLINK",
            BOTMSG: "BOTMSG",
            REPLYMSG: "REPLYMSG",
            TEMPMSG: "TEMPMSG",
            HRMSG: "HRMSG",
            DELETEDMSG: "DELETEDMSG",
            EDITEDMSG: "EDITEDMSG",
            FORWARDEDMSG: "FORWARDEDMSG",
            THREADMSG: "THREADMSG",
            THREADLINKMSG: "THREADLINKMSG"
        };

    function hv(e) {
        var t;
        if (e.isv1local) t = e.url;
        else if (WebMessanger.isGuestUser()) t = "/" + _CHATCONT + "/guestapi/v1/attachments/" + (e.url || e.fileurl), t += e.thumb ? "/thumbnail?guest_id=" + WebMessanger.guest_info.encrypt_id : "?guest_id=" + WebMessanger.guest_info.encrypt_id;
        else if (WebMessanger.isUDSDownloadEnabled() && e.isv1) {
            var s = WebMessanger.isRTCChat() ? "rtcplatform" : "CLIQ";
            t = _DOWNLOADSERVERURL + "/webdownload?x-service=" + s + "&event-id=" + (e.url || e.fileurl)
        } else t = WebMessanger.isNetworkUser() ? e.isv1 ? "/" + _CHATCONT + WebMessanger.network_info.url + "/v1/attachments/" + (e.url || e.fileurl) : _WMSCHATURL + "download.sas?mime=" + (e.content || e.contenttype) + "&url=" + (e.url || e.fileurl) + "&fName=" + e.fName : e.isv1 ? "/" + _CHATCONT + "/v1/attachments/" + (e.url || e.fileurl) : _WMSCHATURL + "download.sas?mime=" + (e.content || e.contenttype) + "&url=" + (e.url || e.fileurl) + "&fName=" + e.fName;
        return t
    }
    var gv = Object.freeze({
        __proto__: null,
        getDownloadUrl: hv,
        types: mv
    });
    var pv = {
        messageitemcontainer: "mc35699546_messageitemcontainer",
        zmNightMode: "zmNightMode",
        titlecontainer: "mc35699546_titlecontainer",
        "wms-txtmsg": "wms-txtmsg",
        seperator: "mc35699546_seperator",
        photocontainer: "mc35699546_photocontainer",
        profileimg: "mc35699546_profileimg",
        rowcontainer: "mc35699546_rowcontainer",
        title: "mc35699546_title",
        datelabel: "mc35699546_datelabel",
        staricon: "mc35699546_staricon",
        type1: "mc35699546_type1",
        type2: "mc35699546_type2",
        type3: "mc35699546_type3",
        type4: "mc35699546_type4",
        type5: "mc35699546_type5",
        messagehtml: "mc35699546_messagehtml",
        "wms-imgmsgcontainer": "wms-imgmsgcontainer",
        threadtitle: "mc35699546_threadtitle",
        threadicon: "mc35699546_threadicon"
    };

    function fv(e) {
        var t = "starredmsg" == e.type ? function(e) {
                var t = e.item,
                    s = t.mtype ? t.mtype : "12",
                    i = 1 === t.status,
                    n = e.getMessageType(t),
                    a = t;
                if (i) return e.getDeletedMsgInfo(t.time);
                "20" == s && (t.msg = "string" == typeof t.msg ? JSON.parse(t.msg) : t.msg, t.mod = t.msg.__module || t.mode, n = e.getMessageType(t), t.msg.constructeddownloadurl = hv(t.msg), n === mv.IMGATT && t.thumb && (t.constructeddownloadurl += e.getThumbnailImageUrl(t.msg.constructeddownloadurl)), t.meta && (t.msg.meta = t.meta), a = t.msg);
                "12" == s && 2 != t.revision && (a.rawstarmsg = !0);
                return e.constructMessageFragment(t.sender, t.dname, t.time, a, n, t.sender, t.time, t.sender + "_" + t.time, null, null, null, null, t.time + "%" + t.chid, null, null, null, null, null, null, !0)
            }(e) : null,
            s = function(e) {
                var t = vv(e),
                    s = "";
                Sn(e.chid) && (s = N("span", {
                    class: pv.threadtitle
                }, N(se, {
                    type: "icon",
                    content: "e9d8",
                    tabindex: "-1",
                    classname: pv.threadicon
                }), e.title));
                return N("div", {
                    class: pv.titlecontainer
                }, function(e) {
                    var t = e.sendername;
                    t.indexOf("b-") > -1 && (t = e.title);
                    un(e.sender) && (t = re("chat.you"));
                    return N("span", {
                        class: pv.title
                    }, t)
                }(e), N("span", {
                    class: pv.seperator
                }, " ", "❭❭", " "), N("span", {
                    class: pv.title
                }, t), N("span", {
                    class: pv.datelabel
                }, Ee(e.time) + ", " + Te(e.time)), s)
            }(e.item),
            i = null;
        return "starredmsg" == e.type && (i = N("div", {
            class: pv.staricon + " " + pv["type" + e.item.startype]
        })), N("div", {
            class: pv.messageitemcontainer,
            onclick: function(t) {
                e.onClickListItem(e.item), t.stopPropagation(), t.preventDefault()
            }
        }, N(Cv, {
            item: e.item
        }), N("div", {
            class: pv.rowcontainer
        }, s, i, N("div", {
            class: pv.messagehtml,
            dangerouslySetInnerHTML: {
                __html: t
            }
        })))
    }

    function vv(e) {
        var t = e.title,
            s = Sn(e.chid) ? e.parent_chat_id : e.chid;
        return Wn(s) && (t = Gl(s) || t), e.receiver && (t = un(e.receiver) ? re("chat.you") : ti(e.receiver)), t
    }

    function Cv(e) {
        var t = oi(e.item.sender);
        return N("div", {
            key: e.item.sender,
            class: pv.photocontainer
        }, N("img", {
            class: pv.profileimg,
            "data-zcprofileid": e.sender,
            src: t
        }))
    }
    var bv = {
        container: "mc07a5d35a_container",
        loader: "mc07a5d35a_loader",
        hv_align: "mc07a5d35a_hv_align",
        header: "mc07a5d35a_header",
        content: "mc07a5d35a_content",
        wrapper: "mc07a5d35a_wrapper",
        filtercontainer: "mc07a5d35a_filtercontainer",
        filteritemstyle: "mc07a5d35a_filteritemstyle",
        filteritemall: "mc07a5d35a_filteritemall",
        filteritemsel: "mc07a5d35a_filteritemsel",
        labelcolor: "mc07a5d35a_labelcolor",
        listview: "mc07a5d35a_listview",
        itemloader: "mc07a5d35a_itemloader",
        loadergif: "mc07a5d35a_loadergif",
        emptylistcontainer: "mc07a5d35a_emptylistcontainer",
        nostarimg: "mc07a5d35a_nostarimg",
        emptylistmsg: "mc07a5d35a_emptylistmsg",
        backdrop: "mc07a5d35a_backdrop",
        "wms-msg": "wms-msg",
        closeiconstyle: "mc07a5d35a_closeiconstyle",
        zmNightMode: "zmNightMode"
    };
    var yv = "mc511a2e7a_loader",
        _v = "mc511a2e7a_hv_align",
        Wv = "mc511a2e7a_container",
        Sv = "mc511a2e7a_showtranscript",
        wv = "mc511a2e7a_close",
        Mv = "mc511a2e7a_chattitlecontainer",
        Iv = "mc511a2e7a_title",
        Tv = "mc511a2e7a_transcriptarea",
        Av = "mc511a2e7a_threadtitle",
        Ev = "mc511a2e7a_threadicon",
        Uv = "mc511a2e7a_continuechat",
        kv = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).escListener = i.escListener.bind(h(i)), i.storeTranscriptNode = i.storeTranscriptNode.bind(h(i)), i.openCurrentChat = i.openCurrentChat.bind(h(i)), i.state = {
                    transcripthtml: null
                }, i
            }
            return r(s, [{
                key: "componentDidMount",
                value: function() {
                    window.addEventListener("keydown", this.escListener, !0)
                }
            }, {
                key: "componentDidUpdate",
                value: function(e, t) {
                    e.item && this.props.item && e.item.starmessageid != this.props.item.starmessageid ? this.checkAndGetTranscript(e.item, this.props.item) : !e.item && this.props.item ? this.getTranscriptFromServer(this.props.item) : e.item && this.props.item && e.item.starmessageid == this.props.item.starmessageid && this.props.glowBubble(this.props.item.time, this.transcriptnode, this.props.item.chid)
                }
            }, {
                key: "checkAndGetTranscript",
                value: function(e, t) {
                    if (e.chid == t.chid && this.checkIfMessageExist(t)) return;
                    this.getTranscriptFromServer(t), this.setState({
                        transcripthtml: null
                    })
                }
            }, {
                key: "checkIfMessageExist",
                value: function(e) {
                    var t = encodeURI(e.message_id.replace("_", " "));
                    return !!this.transcriptnode.querySelector('[data-msguid="' + t + '"]') && (this.props.glowBubble(e.time, this.transcriptnode, e.chid), !0)
                }
            }, {
                key: "getTranscriptFromServer",
                value: function(e) {
                    var t = e.time,
                        s = e.chid,
                        i = s + "|" + t,
                        n = "chid=" + s + "&tzoffset=330&mentionmsgid=" + encodeURIComponent(i) + "&lineslimit=30",
                        a = {
                            "X-XHR-exception": "true",
                            "X-ZCSRF-TOKEN": Yi()
                        },
                        o = this;
                    Xe("gettranscriptasjsonforweb.do", n, (function(e) {
                        var i = o.props.constructChatContent(JSON.parse("[" + this.responseText.slice(0, -1) + "]"));
                        o.setState({
                            transcripthtml: i
                        }, (function() {
                            this.props.glowBubble(t, this.transcriptnode, s), this.props.addEventListenersForTranscript(this.transcriptnode, s)
                        }))
                    }), (function() {
                        var e = o.props.constructChatContent([{
                            messagetype: mv.TRANSERR,
                            msg: {
                                mentionmsgid: i,
                                latestchunk: !0
                            }
                        }]);
                        o.setState({
                            transcripthtml: e
                        }, (function() {
                            this.props.addEventListenersForTranscript(this.transcriptnode, s)
                        }))
                    }), null, null, a)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    window.removeEventListener("keydown", this.escListener, !0)
                }
            }, {
                key: "storeTranscriptNode",
                value: function(e) {
                    this.transcriptnode = e
                }
            }, {
                key: "escListener",
                value: function(e) {
                    e.keyCode == ut.KEYCODES.ESCAPE && this.props.showtranscript && (this.setState({
                        transcripthtml: null
                    }), this.props.callbackOnClose(), e.stopPropagation(), e.preventDefault())
                }
            }, {
                key: "getTitleElement",
                value: function() {
                    var e = null;
                    return Sn(this.props.item.chid) && (e = [">"]).push(N("span", {
                        class: Av,
                        title: this.props.item.title
                    }, N(se, {
                        type: "icon",
                        content: "e9d8",
                        tabindex: "-1",
                        classname: Ev
                    }), this.props.item.title)), N("div", {
                        class: Mv
                    }, N("span", {
                        class: Iv,
                        title: vv(this.props.item)
                    }, vv(this.props.item)), e)
                }
            }, {
                key: "openCurrentChat",
                value: function() {
                    this.props.openCurrentChat(this.props.item)
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = null,
                        i = null;
                    e.loading && !t.transcripthtml && (s = N("div", {
                        class: yv + " " + _v
                    })), e.item && (i = this.getTitleElement());
                    var n = e.showtranscript ? Sv : "",
                        a = e.item && e.item.chid,
                        o = e.item && e.item.starmessageid;
                    return N("div", {
                        class: Wv + " " + n
                    }, i, s, N("div", {
                        id: "wmstranscriptcomponent",
                        "data-scrolldown": "true",
                        "data-chid": a,
                        key: o,
                        class: Tv,
                        dangerouslySetInnerHTML: {
                            __html: t.transcripthtml
                        },
                        ref: this.storeTranscriptNode
                    }), N(se, {
                        onclick: e.callbackOnClose,
                        type: "icon",
                        content: "e634",
                        classname: wv
                    }), N(se, {
                        onclick: this.openCurrentChat,
                        type: "button",
                        content: re("thread.msglink"),
                        classname: Uv
                    }))
                }
            }]), s
        }(R),
        Nv = {
            0: "all",
            1: "important",
            2: "todo",
            3: "note",
            4: "boss",
            5: "followup"
        },
        xv = [],
        Ov = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).filterStarMsg = i.filterStarMsg.bind(h(i)), i.performScrollOperations = Mn(i.performScrollOperations, h(i), 300), i.onClickListItem = i.onClickListItem.bind(h(i)), i.hideTranscriptView = i.hideTranscriptView.bind(h(i)), i.openCurrentChat = i.openCurrentChat.bind(h(i)), i.storeListContainer = i.storeListContainer.bind(h(i)), i.starmsgstorage = {
                    0: {},
                    1: {},
                    2: {},
                    3: {},
                    4: {},
                    5: {}
                }, i.searchmore = {
                    0: !0,
                    1: !0,
                    2: !0,
                    3: !0,
                    4: !0,
                    5: !0
                }, i.last_fetched_starmsg_time = {
                    0: 0,
                    1: 0,
                    2: 0,
                    3: 0,
                    4: 0,
                    5: 0
                }, i.state = {
                    list: {},
                    selectedstarfilter: 0,
                    selecteditem: null,
                    showtranscript: !1
                }, i
            }
            return r(s, [{
                key: "componentDidMount",
                value: function() {
                    this.getMessageList()
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    xv = []
                }
            }, {
                key: "storeListContainer",
                value: function(e) {
                    e && (this.listcontainer = e, this.props.config.loadOriginalImages(this.listcontainer))
                }
            }, {
                key: "updateListItem",
                value: function(e, t) {
                    var s = this.state.list;
                    "starredmsg" == this.getListType() && ("STAR" == t ? (0 != this.state.selectedstarfilter && this.state.selectedstarfilter != e.startype ? (delete this.starmsgstorage[this.state.selectedstarfilter][e.starmessageid], s = ia(s, e.time), xv = na(xv, e, "starmessageid")) : s = na(s, e, e.starmessageid), s = this.sortStarMsgWithKey(s, "time", !0), this.starmsgstorage[0][e.starmessageid] = e, this.starmsgstorage[e.startype][e.starmessageid] = e) : (e.time = e.msgtime, s = ia(s, e.time)), this.updateCompleteList(s)), this.setState({
                        list: s
                    })
                }
            }, {
                key: "performScrollOperations",
                value: function(e) {
                    "starredmsg" == this.getListType() && (this.props.config.loadOriginalImages(e.target), this.checkAndLoadNextPage(e))
                }
            }, {
                key: "checkAndLoadNextPage",
                value: function(e) {
                    var t = e.target;
                    t.scrollHeight - t.scrollTop < 3 * t.offsetHeight && this.getStarMessageList(this.state.selectedstarfilter)
                }
            }, {
                key: "sortStarMsgWithKey",
                value: function(e, t, s) {
                    return e.sort(tn(t, s))
                }
            }, {
                key: "getLastMsgTotime",
                value: function(e) {
                    return this.last_fetched_starmsg_time[e]
                }
            }, {
                key: "updateStorage",
                value: function(e, t) {
                    for (var s = 0; s < e.length; s++) this.starmsgstorage[t][e[s].starmessageid] = e[s]
                }
            }, {
                key: "updateCompleteList",
                value: function(e) {
                    for (var t = function(t) {
                            var s = xv.findIndex((function(s) {
                                return s.starmessageid == e[t].starmessageid
                            }));
                            s > -1 ? xv[s] = e[t] : xv.push(e[t])
                        }, s = 0; s < e.length; s++) t(s);
                    xv = this.sortStarMsgWithKey(xv, "time", !0)
                }
            }, {
                key: "updateStarMessageList",
                value: function(e, t) {
                    this.updateCompleteList(e), this.updateStorage(e, t), e.length < 50 && (this.searchmore[t] = !1), e.length > 0 && (this.last_fetched_starmsg_time[t] = e[e.length - 1].time), this.filterStarMsg(t)
                }
            }, {
                key: "getStarMessageList",
                value: function(e) {
                    if (this.searchmore[e]) {
                        var t = "limit=50",
                            s = this.getLastMsgTotime(e);
                        xv.length > 0 && s > 0 && (t += "&totime=" + s), e > 0 && (t += "&type=" + e), Xe("v1/stars", t, function(e, t) {
                            var s = JSON.parse(t).data.starmessages;
                            this.updateStarMessageList(s, e)
                        }.bind(this, e), function() {
                            Gn(re("event.status.update.error")), this.setState({
                                showtranscript: !1
                            })
                        }.bind(this), null, null, {
                            "x-xhr-exception": "true"
                        })
                    }
                }
            }, {
                key: "getMessageList",
                value: function() {
                    "starredmsg" == this.getListType() && this.getStarMessageList(this.state.selectedstarfilter)
                }
            }, {
                key: "getListType",
                value: function() {
                    return this.props.config.type
                }
            }, {
                key: "getHeadingContent",
                value: function() {
                    if ("starredmsg" == this.getListType()) return re("chat.message.star")
                }
            }, {
                key: "filterStarMsg",
                value: function(e) {
                    var t = this,
                        s = xv.filter((function(s) {
                            return 0 == e && t.starmsgstorage[e][s.starmessageid] ? s : s.startype == e
                        }));
                    (e > 0 || xv.length < 50) && this.getStarMessageList(e), this.setState({
                        selectedstarfilter: e,
                        list: s,
                        showtranscript: !1,
                        selecteditem: null
                    })
                }
            }, {
                key: "openCurrentChat",
                value: function(e) {
                    var t = e.chid,
                        s = e.message_id;
                    s ? this.props.config.showMessageFragmentInView(t, s) : this.props.config.attachSession(t), this.props.unmountComponent()
                }
            }, {
                key: "getStarMsgFilters",
                value: function() {
                    return N(Rv, {
                        onclick: this.filterStarMsg,
                        selectedfilter: this.state.selectedstarfilter,
                        filterStarMsg: this.filterStarMsg
                    })
                }
            }, {
                key: "onClickListItem",
                value: function(e) {
                    this.setState({
                        selecteditem: e,
                        showtranscript: !0
                    })
                }
            }, {
                key: "hideTranscriptView",
                value: function() {
                    this.setState({
                        showtranscript: !1,
                        selecteditem: null
                    })
                }
            }, {
                key: "getListItemsForCurrentType",
                value: function(e, t) {
                    var s = [];
                    if (e.length)
                        for (var i = 0; i < e.length; i++) s.push(N(fv, {
                            item: e[i],
                            type: t,
                            onClickListItem: this.onClickListItem,
                            constructMessageFragment: this.props.config.constructMessageFragment,
                            getMessageType: this.props.config.getMessageType,
                            getThumbnailImageUrl: this.props.config.getThumbnailImageUrl,
                            getDeletedMsgInfo: this.props.config.getDeletedMsgInfo
                        }));
                    return this.searchmore[this.state.selectedstarfilter] && s.push(N("div", {
                        class: bv.itemloader
                    }, N("span", {
                        class: bv.loadergif
                    }))), N("div", {
                        class: bv.listview,
                        ref: this.storeListContainer,
                        key: this.state.selectedstarfilter,
                        onscroll: this.performScrollOperations
                    }, s)
                }
            }, {
                key: "getTranscriptContainer",
                value: function() {
                    var e = !!this.state.selecteditem;
                    return N(kv, {
                        loading: e,
                        item: this.state.selecteditem,
                        glowBubble: this.props.config.glowBubble,
                        constructChatContent: this.props.config.constructChatContent,
                        addEventListenersForTranscript: this.props.config.addEventListenersForTranscript,
                        showtranscript: this.state.showtranscript,
                        callbackOnClose: this.hideTranscriptView,
                        openCurrentChat: this.openCurrentChat
                    })
                }
            }, {
                key: "getEmptyList",
                value: function() {
                    var e = null;
                    if (0 == this.state.selectedstarfilter) e = N("div", {
                        class: bv.emptylistmsg,
                        dangerouslySetInnerHTML: {
                            __html: re("star.emptylist.empty")
                        }
                    });
                    else {
                        var t = re("star." + Nv[this.state.selectedstarfilter]);
                        e = N("div", {
                            class: bv.emptylistmsg
                        }, N("span", {
                            dangerouslySetInnerHTML: {
                                __html: re("star.emptylist.empty1")
                            }
                        }), N("b", null, t))
                    }
                    return N("div", {
                        class: bv.emptylistcontainer
                    }, N("div", {
                        class: bv.nostarimg
                    }), e)
                }
            }, {
                key: "getStarMessagesContent",
                value: function() {
                    var e = this.getStarMsgFilters(),
                        t = this.state.list,
                        s = this.getListItemsForCurrentType(t, this.getListType());
                    if (0 == t.length) {
                        if (0 == this.state.selectedstarfilter) return this.getEmptyList();
                        s = this.getEmptyList()
                    }
                    var i = this.getTranscriptContainer();
                    return N("div", {
                        class: bv.content
                    }, e, s, i)
                }
            }, {
                key: "getCustomDialogStyles",
                value: function() {
                    return {
                        customContainerStyle: bv.container,
                        customHeaderStyle: bv.header,
                        customWrapperStyle: bv.wrapper,
                        customoverlaystyle: bv.backdrop,
                        customButtonStyle: bv.closeiconstyle
                    }
                }
            }, {
                key: "render",
                value: function(e, t) {
                    t.list;
                    var s = null;
                    return "starredmsg" == this.getListType() && (s = this.getStarMessagesContent()), Gi(t.list) && (s = N("div", {
                        class: bv.loader + " " + bv.hv_align
                    })), N(xt, {
                        heading: this.getHeadingContent(),
                        callbackOnClose: this.props.unmountComponent,
                        customDialogStyles: this.getCustomDialogStyles(),
                        ignoreFocusOnMount: !0
                    }, s)
                }
            }]), s
        }(R);

    function Rv(e) {
        return N("div", {
            class: bv.filtercontainer
        }, function() {
            var t = [];
            for (var s in Nv) {
                var i = e.selectedfilter == s ? bv.filteritemstyle + " " + bv.filteritemsel : bv.filteritemstyle;
                0 == s ? t.push(N("div", {
                    class: i,
                    onclick: function() {
                        e.filterStarMsg(0)
                    }.bind(this)
                }, re("All"))) : t.push(N(cv, {
                    itemtype: s,
                    icontype: "solid",
                    customstyles: {
                        customstaritemstyle: i,
                        customlabelclass: bv.labelcolor
                    },
                    iconselected: e.selectedfilter == s,
                    onClickStarItem: e.filterStarMsg
                }))
            }
            return t
        }())
    }
    var Dv = function() {
        function e() {
            a(this, e), this.unmountComponent = this.unmountComponent.bind(this), this.storeListViewInstance = this.storeListViewInstance.bind(this)
        }
        return r(e, [{
            key: "updateListItem",
            value: function(e, t) {
                this.instance && this.instance.updateListItem(e, t)
            }
        }, {
            key: "storeListViewInstance",
            value: function(e) {
                this.instance = e
            }
        }, {
            key: "mountComponent",
            value: function(e) {
                this.clickednode = e.clickednode, this.closeCallBack = e.closeCallBack, this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(Ov, {
                    ref: this.storeListViewInstance,
                    config: e,
                    unmountComponent: this.unmountComponent
                }), this.node)
            }
        }, {
            key: "unmountComponent",
            value: function() {
                ee("", this.node), this.node.parentElement && this.node.parentElement.removeChild(this.node), "function" == typeof this.closeCallBack && this.closeCallBack()
            }
        }]), e
    }();
    var $v = "mccdc6e71c_toggle_switch",
        Hv = "mccdc6e71c_checkbox",
        Lv = "mccdc6e71c_label",
        Pv = "mccdc6e71c_inner",
        Fv = "mccdc6e71c_switch",
        Bv = "mccdc6e71c_loading_container",
        jv = "mccdc6e71c_loader",
        zv = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    button_state: i.props.button_state,
                    loader: !1
                }, i.handleChange = i.handleChange.bind(h(i)), i
            }
            return r(s, [{
                key: "handleChange",
                value: function() {
                    var e = this.state.button_state,
                        t = function() {
                            this.setState((function(t) {
                                return {
                                    button_state: !e,
                                    loader: !1
                                }
                            }))
                        }.bind(this);
                    this.props.handleChange(e, t), this.setState((function(e) {
                        return {
                            button_state: !1,
                            loader: !0
                        }
                    }))
                }
            }, {
                key: "render",
                value: function() {
                    var e = Fv;
                    return this.state.loader && (e += " " + jv), N("div", {
                        class: $v
                    }, N("input", {
                        type: "checkbox",
                        class: Hv,
                        name: "toggleswitch",
                        id: "toggleswitch",
                        checked: this.state.button_state,
                        onChange: this.handleChange
                    }), N("label", {
                        for: "toggleswitch",
                        class: Lv
                    }, N("span", {
                        class: Pv
                    }), N("span", {
                        class: e
                    }), N("div", {
                        class: Bv
                    }, N("span", null), N("span", null), N("span", null))))
                }
            }]), s
        }(R);
    var Gv = "mcecbec3c1_header",
        qv = "mcecbec3c1_titleheader",
        Vv = "mcecbec3c1_thread_follow",
        Yv = "mcecbec3c1_headerwrapper",
        Zv = "mcecbec3c1_threads_classifier",
        Kv = "mcecbec3c1_loading",
        Xv = "mcecbec3c1_hv_align",
        Jv = "mcecbec3c1_error_info",
        Qv = "mcecbec3c1_error_img",
        eC = "mcecbec3c1_infotxt",
        tC = "mcecbec3c1_infotext_1",
        sC = "mcecbec3c1_threads_highlighter",
        iC = "mcecbec3c1_closed_threads",
        nC = "mcecbec3c1_checkbox",
        aC = "mcecbec3c1_checkboxsel",
        oC = "mcecbec3c1_closedthread_icon",
        rC = "mcecbec3c1_threads_listwrapper",
        lC = "mcecbec3c1_classifier_wrapper",
        dC = "mcecbec3c1_close",
        cC = "mcecbec3c1_lastmsgtime_container",
        uC = "not_followed",
        mC = "followed",
        hC = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).state = {
                    selectedthreadfilter: 1,
                    follow_loading_state: !0,
                    unfollow_loading_state: !0,
                    list: [],
                    include_closed_threads: i.props.include_closedthreads,
                    searchtext: ""
                }, i.followed_list = [], i.unfollowed_list = [], i.followed_nexttoken, i.unfollowed_nexttoken, i.chatslist = [], i.msglist = [], i.search_pno = 1, i.search_token = null, i.setThreadsFilter = i.setThreadsFilter.bind(h(i)), i.toggleThreadsInclusion = i.toggleThreadsInclusion.bind(h(i)), i.fetchNextSet = Mn(i.fetchNextSet, h(i), 300), i.handleAutoFollowThreads = i.handleAutoFollowThreads.bind(h(i)), i.onListItemClicked = i.onListItemClicked.bind(h(i)), i.getHoverDetailsContainer = i.getHoverDetailsContainer.bind(h(i)), i
            }
            return r(s, [{
                key: "componentDidMount",
                value: function() {
                    this.fetchThreadsList();
                    var e = Al(this.props.chatid);
                    if (!e || !e.oc_id) {
                        Xe("v1/channels", "chid=" + this.props.chatid, (function(e) {
                            Ol(JSON.parse(e))
                        }))
                    }
                }
            }, {
                key: "componentDidUpdate",
                value: function(e, t) {
                    if (t.searchtext !== this.state.searchtext && (this.search_pno = 1), t.selectedthreadfilter !== this.state.selectedthreadfilter || t.include_closed_threads !== this.state.include_closed_threads)
                        if (this.state.searchtext) {
                            var s = t.searchtext !== this.state.searchtext;
                            this.filterThreadsList(null, this.state.searchtext, s)
                        } else this.fetchThreadsList(!0)
                }
            }, {
                key: "fetchNextSet",
                value: function(e) {
                    var t = e.target;
                    t.scrollHeight - t.scrollTop < 3 * t.offsetHeight && (this.state.searchtext ? this.filterThreadsList(null, this.state.searchtext) : this.fetchThreadsList())
                }
            }, {
                key: "getThreadsListType",
                value: function() {
                    return "1" === this.state.include_closed_threads ? "" : "open"
                }
            }, {
                key: "getSelectedThreadsFilter",
                value: function() {
                    return this.state.selectedthreadfilter
                }
            }, {
                key: "filterUniqueItems",
                value: function(e, t) {
                    return e.reduce((function(e, s) {
                        return e.some((function(e) {
                            return e[t] === s[t]
                        })) || e.push(s), e
                    }), [])
                }
            }, {
                key: "fetchThreadsList",
                value: function(e) {
                    var t = function(t) {
                            var s = JSON.parse(t);
                            1 === this.getSelectedThreadsFilter() ? (e ? this.followed_list = s.data : (this.followed_list = this.followed_list.concat(s.data), this.followed_list = this.filterUniqueItems(this.followed_list, "chat_id")), this.setState({
                                follow_loading_state: !1,
                                searchtext: ""
                            }), this.followed_nexttoken = s.next_token) : (e ? this.unfollowed_list = s.data : (this.unfollowed_list = this.unfollowed_list.concat(s.data), this.unfollowed_list = this.filterUniqueItems(this.unfollowed_list, "chat_id")), this.setState({
                                unfollow_loading_state: !1,
                                searchtext: ""
                            }), this.unfollowed_nexttoken = s.next_token)
                        }.bind(this),
                        s = {
                            "X-XHR-exception": "true",
                            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
                        },
                        i = 1 === this.getSelectedThreadsFilter() ? mC : uC,
                        n = "parent_chat_id=" + this.props.chatid + "&state=" + i + "&limit=15";
                    this.getThreadsListType() && (n += "&type=" + this.getThreadsListType()), this.followed_nexttoken && 1 == this.state.selectedthreadfilter && !e && (n += "&next_token=" + this.followed_nexttoken), this.unfollowed_nexttoken && 0 == this.state.selectedthreadfilter && !e && (n += "&next_token=" + this.unfollowed_nexttoken), (1 == this.state.selectedthreadfilter && (!this.followed_list.length || this.followed_nexttoken || e) || 0 == this.state.selectedthreadfilter && (!this.unfollowed_list.length || this.unfollowed_nexttoken || e)) && Xe("v2/threads", n, t, null, null, null, s)
                }
            }, {
                key: "handleAutoFollowThreads",
                value: function(e, t) {
                    var s = e ? "disable" : "enable",
                        i = {
                            "X-XHR-exception": "true",
                            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
                        },
                        n = Al(this.props.chatid).oc_id,
                        a = "?auto_follow_threads=" + s,
                        o = this.props.chattitle;
                    Qe("v1/channels/" + n + a, null, function() {
                        t(), e ? (WMSUI.showInfoMsg(re("threadchat.autofollow.disable", [o])), xl(this.props.chatid, "auto_follow_threads", !1)) : (WMSUI.showInfoMsg(re("threadchat.autofollow.enable", [o])), xl(this.props.chatid, "auto_follow_threads", !0))
                    }.bind(this), null, null, null, i)
                }
            }, {
                key: "onListItemClicked",
                value: function(e, t, s) {
                    var i = e.chat_id || e.chid || e.chid;
                    this.props.handleListItemClick(i), this.props.unmountComponent()
                }
            }, {
                key: "getHoverDetailsContainer",
                value: function(e) {
                    var t = e.LASTMSGINFO;
                    if (t && t.time) return N("div", {
                        class: cC
                    }, Ae(t.time))
                }
            }, {
                key: "getThreadsListHTML",
                value: function() {
                    var e;
                    this.state.searchtext && (e = 1 === this.getSelectedThreadsFilter() ? this.chatslist : this.msglist);
                    var t = e || (1 === this.getSelectedThreadsFilter() ? this.followed_list : this.unfollowed_list),
                        s = [];
                    if (t.length) t.forEach(function(e) {
                        e.LASTMSGINFO = e.last_message_information ? JSON.parse(e.last_message_information) : e.lastmsginfo ? JSON.parse(e.lastmsginfo) : "", e.desc = e.message || e.fname, e.htmldesc = Ur(e), e.imgsrc = _WMSPHOTOSERVER + "/file?ID=" + e.parent_message_sender + "&t=user&exp=6000&fs=thumb", e.threadicon = "open" === e.thread_state ? "thread" : "closedthread", e.title = e.title || e.ctitle;
                        var t = e.chat_id || e.chatid || e.chid;
                        s.push(N(No, {
                            id: t,
                            item: e,
                            onListItemClicked: this.onListItemClicked,
                            customlistitemprops: {
                                listitemhoverdetails: !0,
                                gethoverdetailscontainer: this.getHoverDetailsContainer
                            }
                        }))
                    }.bind(this));
                    else {
                        var i = $WC.Config.get("staticserverpath") + "/images/bar/3b3dce50_followed.svg",
                            n = re("threads.follow.empty");
                        0 === this.getSelectedThreadsFilter() && (i = $WC.Config.get("staticserverpath") + "/images/bar/981cba22_unfollowed.svg", n = re("threads.unfollow.empty")), s.push(N("div", {
                            class: Jv + " " + Xv
                        }, N("img", {
                            class: Qv,
                            src: i
                        }), N("div", {
                            class: eC
                        }, N("div", {
                            class: tC
                        }, n))))
                    }
                    return N("div", {
                        class: rC,
                        onscroll: this.fetchNextSet
                    }, s)
                }
            }, {
                key: "setThreadsFilter",
                value: function(e) {
                    "follow_section" === mn(e).getAttribute("data-id") ? (this.setState({
                        selectedthreadfilter: 1
                    }), this.state.searchtext && (this.search_pno = 1)) : (this.setState({
                        selectedthreadfilter: 0
                    }), this.state.searchtext && (this.search_token = null))
                }
            }, {
                key: "toggleThreadsInclusion",
                value: function() {
                    var e = "0" == this.state.include_closed_threads ? "1" : "0",
                        t = function() {
                            this.setState({
                                include_closed_threads: e
                            }), this.props.updateClosedThreadsInclusion(e)
                        }.bind(this);
                    Je("updbsettings.do", "include_closed_threads=" + e, t)
                }
            }, {
                key: "filterThreadsList",
                value: function(e, t, s) {
                    var i = e && mn(e).value ? mn(e).value : t;
                    if (i) {
                        var n = this;
                        if (this.state.selectedthreadfilter) {
                            this.search_token = null === this.search_token || "" == this.search_token && e && i ? (new Date).getTime() : this.search_token;
                            var a = "parent_chid=" + this.props.chatid + "&title=" + i + "&limit=10&totime=" + this.search_token;
                            ("" !== this.search_token || s) && Xe("v1/chats", a, (function() {
                                var e = JSON.parse(this.response).data;
                                i && e.matched_search_value === i && e.chats ? (e.chats.length >= 10 ? n.search_token = e.chats[e.chats.length - 2].lmtime - 1 : n.search_token = "", n.chatslist = n.search_token || t ? n.chatslist.concat(e.chats) : e.chats) : n.chatslist = [], n.chatslist = n.filterUniqueItems(n.chatslist, "chatid"), n.setState({
                                    searchtext: i,
                                    follow_loading_state: !1
                                })
                            }))
                        } else {
                            var o = "parent_chid=" + this.props.chatid + "&message=" + i + "&lim=10&pno=" + this.search_pno;
                            (0 !== n.search_pno || s) && Xe("v1/messagesearch", o, (function() {
                                var e = JSON.parse(this.response).data;
                                i && e.matched_search_value === i && e.messages ? (n.msglist = n.search_pno > 1 ? n.msglist.concat(e.messages) : e.messages, e.messages.length >= 10 ? n.search_pno++ : n.search_pno = 0) : n.msglist = [], n.msglist = n.filterUniqueItems(n.msglist, "msguid"), n.setState({
                                    searchtext: i,
                                    unfollow_loading_state: !1
                                })
                            }))
                        }
                        t || n.setState({
                            searchtext: i,
                            follow_loading_state: !0,
                            unfollow_loading_state: !0
                        })
                    } else this.setState({
                        searchtext: "",
                        selectedthreadfilter: 1,
                        follow_loading_state: !1,
                        unfollow_loading_state: !1
                    })
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = "",
                        s = "",
                        i = this.state.searchtext ? re("threads.header.title") : re("threads.list.follow"),
                        n = this.state.searchtext ? re("messages.header.title") : re("threads.list.unfollow"),
                        a = "1" == this.state.include_closed_threads ? aC : nC,
                        o = N("div", {
                            class: rC
                        }, N("div", {
                            class: Kv + " " + Xv
                        }));
                    (1 === this.getSelectedThreadsFilter() && !this.state.follow_loading_state || 0 === this.getSelectedThreadsFilter() && !this.state.unfollow_loading_state) && (o = this.getThreadsListHTML()), 1 === this.getSelectedThreadsFilter() ? t = sC : s = sC;
                    var r = N("div", {
                            class: Zv,
                            onclick: this.setThreadsFilter
                        }, N("div", {
                            "data-id": "follow_section",
                            class: t
                        }, i), N("div", {
                            class: s
                        }, n)),
                        l = N("div", null, N("div", {
                            class: lC
                        }, N(Do, {
                            searchplaceholder: re("threads.search.msg"),
                            handleChange: this.filterThreadsList.bind(this),
                            searchvalue: this.state.searchtext
                        }), N("div", {
                            class: iC,
                            onclick: this.toggleThreadsInclusion
                        }, N("span", {
                            class: a
                        }), N("input", {
                            type: "checkbox"
                        }), N("label", null, N("span", {
                            class: oC
                        }), re("threads.include.closed"))), r), o),
                        d = e.chattitle + " - " + re("threads.header.title"),
                        c = Al(this.props.chatid).auto_follow_threads,
                        u = N("div", {
                            class: Yv
                        }, N("div", {
                            class: qv
                        }, d), N("div", {
                            class: Vv
                        }, re("thread.follow.auto"), N(zv, {
                            button_state: c,
                            handleChange: this.handleAutoFollowThreads
                        }))),
                        m = {
                            customHeaderStyle: Gv,
                            customButtonStyle: dC
                        };
                    return N(xt, {
                        callbackOnClose: e.unmountComponent,
                        heading: u,
                        customDialogStyles: m
                    }, l)
                }
            }]), s
        }(R),
        gC = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e, t, s, i, n) {
                    this.node = document.createElement("div"), document.body.appendChild(this.node), ee(N(hC, {
                        ref: function(e) {
                            this.instance = e
                        }.bind(this),
                        chatid: e,
                        chattitle: t,
                        include_closedthreads: s,
                        updateClosedThreadsInclusion: i,
                        handleListItemClick: n,
                        unmountComponent: this.unmountComponent
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), this.node.parentElement && this.node.parentElement.removeChild(this.node)
                }
            }]), e
        }();
    var pC = {
            statusupdater: "mc3a39902b_statusupdater",
            statustypeholder: "mc3a39902b_statustypeholder",
            statusmessageholder: "mc3a39902b_statusmessageholder",
            statustypetoggle: "mc3a39902b_statustypetoggle",
            statusmessagetoggle: "mc3a39902b_statusmessagetoggle",
            statusicon: "mc3a39902b_statusicon",
            statusmessagelist: "mc3a39902b_statusmessagelist",
            statuselement: "mc3a39902b_statuselement",
            statusdetails: "mc3a39902b_statusdetails",
            statusmessagedropdown: "mc3a39902b_statusmessagedropdown",
            statusicondropdown: "mc3a39902b_statusicondropdown",
            transientTimeDropdown: "mc3a39902b_transientTimeDropdown",
            timeLeft: "mc3a39902b_timeLeft",
            currentTransientTime: "mc3a39902b_currentTransientTime",
            statusdescription: "mc3a39902b_statusdescription",
            quickstatusiconholder: "mc3a39902b_quickstatusiconholder",
            quickstatusicon: "mc3a39902b_quickstatusicon",
            statusname: "mc3a39902b_statusname",
            "wms-statusicon-away": "wms-statusicon-away",
            focused: "mc3a39902b_focused",
            activestatusicon: "mc3a39902b_activestatusicon",
            wms_badge_statusicon_available: "wms_badge_statusicon_available",
            wms_badge_statusicon_offline: "wms_badge_statusicon_offline",
            wms_badge_statusicon_busy: "wms_badge_statusicon_busy",
            wms_badge_statusicon_idle: "wms_badge_statusicon_idle",
            wms_badge_statusicon_available_mobile: "wms_badge_statusicon_available_mobile",
            wms_badge_statusicon_busy_mobile: "wms_badge_statusicon_busy_mobile",
            wms_badge_statusicon_dnd: "wms_badge_statusicon_dnd",
            wms_badge_statusicon_dnd_mobile: "wms_badge_statusicon_dnd_mobile",
            wms_badge_statusicon_away: "wms_badge_statusicon_away",
            wms_badge_statusicon_away_mobile: "wms_badge_statusicon_away_mobile",
            wms_badge_statusicon_idle_mobile: "wms_badge_statusicon_idle_mobile",
            wms_badge_statusicon_busy_cliqcall: "wms_badge_statusicon_busy_cliqcall",
            wms_badge_statusicon_busy_meeting: "wms_badge_statusicon_busy_meeting",
            wms_badge_statusicon_busy_calendarevent: "wms_badge_statusicon_busy_calendarevent",
            wms_badge_statusicon_busy_assistsession: "wms_badge_statusicon_busy_assistsession",
            wms_badge_statusicon_busy_webinar: "wms_badge_statusicon_busy_webinar",
            wms_badge_statusicon_busy_broadcast: "wms_badge_statusicon_busy_broadcast",
            dummyinput: "mc3a39902b_dummyinput",
            defaultstatusicons: "mc3a39902b_defaultstatusicons",
            defaultstatusiconholder: "mc3a39902b_defaultstatusiconholder",
            statusmessageitem: "mc3a39902b_statusmessageitem",
            selectedstatus: "mc3a39902b_selectedstatus",
            loadingstatus: "mc3a39902b_loadingstatus",
            customstatus: "mc3a39902b_customstatus",
            restrictedByAdmin: "mc3a39902b_restrictedByAdmin",
            "wms-statusicon-dnd": "wms-statusicon-dnd",
            deletestatus: "mc3a39902b_deletestatus",
            smsgheading: "mc3a39902b_smsgheading",
            dropDownLabelOnly: "mc3a39902b_dropDownLabelOnly",
            timeDropdown: "mc3a39902b_timeDropdown",
            timeDropdownItem: "mc3a39902b_timeDropdownItem",
            disabled: "mc3a39902b_disabled",
            lockedStatusInfo: "mc3a39902b_lockedStatusInfo",
            lockicon: "mc3a39902b_lockicon",
            lockStatusMessage: "mc3a39902b_lockStatusMessage",
            zmNightMode: "zmNightMode",
            wms_badge_statusicon_invisible: "wms_badge_statusicon_invisible",
            remoteWorkStatusIcon: "mc3a39902b_remoteWorkStatusIcon",
            remoteWorkStatus: "mc3a39902b_remoteWorkStatus",
            quickStatusContainer: "mc3a39902b_quickStatusContainer",
            quickStatus: "mc3a39902b_quickStatus",
            available: "mc3a39902b_available",
            busy: "mc3a39902b_busy",
            dnd: "mc3a39902b_dnd",
            away: "mc3a39902b_away",
            active: "mc3a39902b_active",
            defaultQuickStatusIcon: "mc3a39902b_defaultQuickStatusIcon",
            transientDropdownArrow: "mc3a39902b_transientDropdownArrow",
            remoteWorkPopupStatusList: "mc3a39902b_remoteWorkPopupStatusList",
            statusChangeDialog: "mc3a39902b_statusChangeDialog",
            statusChangeDialogTitle: "mc3a39902b_statusChangeDialogTitle",
            statusChangeDialogInfo: "mc3a39902b_statusChangeDialogInfo",
            warning: "mc3a39902b_warning",
            statusChangeDialogBody: "mc3a39902b_statusChangeDialogBody",
            statusChangeDialogBodyText: "mc3a39902b_statusChangeDialogBodyText",
            statusChangeDialogDivider: "mc3a39902b_statusChangeDialogDivider",
            statusChangeDialogFooter: "mc3a39902b_statusChangeDialogFooter",
            statusChangeDialogFooterButton: "mc3a39902b_statusChangeDialogFooterButton",
            hover: "mc3a39902b_hover",
            statusChangeDialogPaddedContainer: "mc3a39902b_statusChangeDialogPaddedContainer",
            minimizedStatusChangeDialog: "mc3a39902b_minimizedStatusChangeDialog",
            openPopupButton: "mc3a39902b_openPopupButton"
        },
        fC = null,
        vC = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                if (a(this, s), (i = t.call(this, e)).setStatus = i.setStatus.bind(h(i)), i.deleteStatus = i.deleteStatus.bind(h(i)), i.handleKeyPress = i.handleKeyPress.bind(h(i)), i.checkAndSetStatus = i.checkAndSetStatus.bind(h(i)), i.updateCustomStatus = i.updateCustomStatus.bind(h(i)), i.updateCurrentStatus = i.updateCurrentStatus.bind(h(i)), i.storeStatusInputRef = i.storeStatusInputRef.bind(h(i)), i.getStatusOptionsItem = i.getStatusOptionsItem.bind(h(i)), i.handleStatusInputBlur = i.handleStatusInputBlur.bind(h(i)), i.updateStatusItemState = i.updateStatusItemState.bind(h(i)), i.storeCurrentSelectedItem = i.storeCurrentSelectedItem.bind(h(i)), i.handleStatusMessageEntry = i.handleStatusMessageEntry.bind(h(i)), i.storeStatusTypeDropdownRef = i.storeStatusTypeDropdownRef.bind(h(i)), i.storeStatusMessageHolderRef = i.storeStatusMessageHolderRef.bind(h(i)), i.handleStatusInputTextChange = i.handleStatusInputTextChange.bind(h(i)), i.onTransientTimeDropdownClick = i.onTransientTimeDropdownClick.bind(h(i)), i.storeStatusMessageDropdownRef = i.storeStatusMessageDropdownRef.bind(h(i)), i.setDefaultStatusDropdownValues = i.setDefaultStatusDropdownValues.bind(h(i)), i.state = {
                        statusMessageFocus: !1,
                        statusTypeFocus: !1,
                        allStatuses: [],
                        customStatuses: [],
                        selectedStatusId: null,
                        userStatusMessage: e.userStatusMessage,
                        userStatusCode: e.userStatusCode,
                        userStatusType: e.userStatusType
                    }, i.isCliqUser = WebMessanger.isCliqUser(), i.defaultStatuses = i.defaultStatusOptions = MC(), i.remoteWorkStatuses = [], i.isCliqUser && !e.hideRemoteWorkStatuses) {
                    i.defaultStatusOptions = v(i.defaultStatuses);
                    var n = i.defaultStatuses.findIndex((function(e) {
                        return 5 == e.scode
                    })); - 1 !== n && i.defaultStatuses.splice(n, 1), i.remoteWorkStatuses = IC()
                }
                return i.componentMountTime = (new Date).getTime(), i.hideCustomStatuses = e.hideCustomStatuses, i
            }
            return r(s, [{
                key: "componentWillMount",
                value: function() {
                    if (void 0 !== WmsSettings && WmsSettings.isAllowedStatusConfigEnabled()) {
                        var e = WmsSettings.getAllowedStatuses();
                        if (e && -1 == e.indexOf("custom")) return void(this.hideCustomStatuses = !0)
                    }
                    if (!fC && !this.hideCustomStatuses) {
                        Xe("getcstatus.do", null, this.updateCustomStatus, null, null, null, {
                            "X-XHR-exception": "true"
                        })
                    }
                }
            }, {
                key: "componentDidMount",
                value: function() {
                    this.updateCurrentStatus(), window.addEventListener("keydown", this.handleKeyPress)
                }
            }, {
                key: "componentWillUpdate",
                value: function(e, t) {
                    e.checkedin !== this.props.checkedin && this.setDefaultStatusDropdownValues()
                }
            }, {
                key: "componentDidUpdate",
                value: function(e, t) {
                    0 == t.statusMessageFocus && this.state.statusMessageFocus && fC < this.componentMountTime && !this.hideCustomStatuses && Xe("getcstatus.do", null, this.updateCustomStatus, null, null, null, {
                        "X-XHR-exception": "true"
                    }), this.state.currentFocusedItem && this.currentSelectedItemNode && (this.state.statusTypeFocus && this.statusTypeDropdownNode ? ln(this.currentSelectedItemNode, this.statusTypeDropdownNode, !1) || bn(this.currentSelectedItemNode, {
                        block: "end"
                    }) : this.state.statusMessageFocus && this.statusMessageDropdownNode && (ln(this.currentSelectedItemNode, this.statusMessageDropdownNode, !1) || bn(this.currentSelectedItemNode, {
                        block: "end"
                    }))), e.userStatusMessage === this.props.userStatusMessage && e.userStatusCode === this.props.userStatusCode && e.userStatusType === this.props.userStatusType || this.updateCurrentStatus(null, {
                        scode: this.props.userStatusCode,
                        label: this.props.userStatusMessage,
                        stype: this.props.userStatusType
                    }), "function" != typeof this.props.onStatusMessageFocusChange || t.statusMessageFocus === this.state.statusMessageFocus && t.statusTypeFocus === this.state.statusTypeFocus || this.props.onStatusMessageFocusChange(this.state.statusTypeFocus || this.state.statusMessageFocus)
                }
            }, {
                key: "componentWillUnmount",
                value: function() {
                    window.removeEventListener("keydown", this.handleKeyPress)
                }
            }, {
                key: "setDefaultStatusDropdownValues",
                value: function() {
                    if (this.defaultStatuses = MC(), this.isCliqUser && !this.props.hideRemoteWorkStatuses) {
                        this.defaultStatusOptions = v(this.defaultStatuses);
                        var e = this.defaultStatuses.findIndex((function(e) {
                            return 5 == e.scode
                        })); - 1 !== e && this.defaultStatuses.splice(e, 1), this.remoteWorkStatuses = IC()
                    }
                    this.updateStatusItemState()
                }
            }, {
                key: "storeStatusInputRef",
                value: function(e) {
                    this.statusInput = e
                }
            }, {
                key: "storeStatusTypeDropdownRef",
                value: function(e) {
                    this.statusTypeDropdownNode = e
                }
            }, {
                key: "storeStatusMessageDropdownRef",
                value: function(e) {
                    this.statusMessageDropdownNode = e
                }
            }, {
                key: "storeCurrentSelectedItem",
                value: function(e) {
                    this.currentSelectedItemNode = e
                }
            }, {
                key: "storeStatusMessageHolderRef",
                value: function(e) {
                    this.statusMessageHolderNode = e;
                    var t = this,
                        s = new IntersectionObserver((function(e) {
                            e.forEach((function(e) {
                                t.statusMessageDropdownNodeBounds = e.boundingClientRect
                            })), s.disconnect()
                        }));
                    setTimeout((function() {
                        t.statusMessageHolderNode && s.observe(t.statusMessageHolderNode)
                    }), 1)
                }
            }, {
                key: "updateCustomStatus",
                value: function(e) {
                    var t = e.getRowsForTable("UserStatus");
                    if (t) {
                        var s = [];
                        t.forEach(function(e) {
                            if (0 == e.SYSTEM) {
                                var t = !0;
                                this.remoteWorkStatuses.forEach((function(s) {
                                    e.ENC_STATUSMSG == s.label && (t = !1)
                                })), t && s.push({
                                    label: e.ENC_STATUSMSG,
                                    scode: e.STAT_ID,
                                    lmtime: e.LMTIME,
                                    userid: e.USERID,
                                    type: "custom"
                                })
                            }
                        }.bind(this)), fC = (new Date).getTime(), this.updateCurrentStatus(s)
                    }
                }
            }, {
                key: "updateCurrentStatus",
                value: function(e, t) {
                    var s, i;
                    e = e || this.state.customStatuses && v(this.state.customStatuses), this.defaultStatuses.concat(this.remoteWorkStatuses, e).forEach(function(e) {
                        t ? e.label == t.label && ("custom" == e.type || "remotework" == e.type ? (s = e.scode, i = e.label) : e.scode == t.scode && (s = e.scode, i = e.label)) : e.label == this.props.userStatusMessage && ("default" == e.type ? e.scode == this.props.userStatusCode && (s = e.scode, i = e.label) : (s = e.scode, i = e.label))
                    }.bind(this)), this.updateStatusItemState(e, null, null, s, i)
                }
            }, {
                key: "updateStatusItemState",
                value: function(e, t, s, i, n) {
                    var a = [],
                        o = this.props.userStatusMessage;
                    e = e || this.state.customStatuses, a.push({
                        label: re("statusmenu.heading.default"),
                        type: "heading"
                    }), a = a.concat(this.defaultStatuses), this.isCliqUser && !this.props.hideRemoteWorkStatuses && (a.push({
                        label: re("statusmenu.heading.suggestions"),
                        type: "heading"
                    }), a = a.concat(this.remoteWorkStatuses)), e.length > 0 && (a.push({
                        label: re("statusmenu.heading.custom"),
                        type: "heading"
                    }), a = a.concat(e));
                    var r = a.map(function(e) {
                        return "heading" == e.type ? e : (e.loading && delete e.loading, e.selected && delete e.selected, t && s && t.scode == e.scode && t.label == e.label && "loading" == s && (e.loading = !0), n == e.label && (e.selected = !0, o = e.label, this.currentStatusType = e.type, this.currentStatusMessage = e.label), e)
                    }.bind(this));
                    this.setState({
                        allStatuses: r,
                        customStatuses: e,
                        selectedStatusId: i,
                        userStatusMessage: o
                    })
                }
            }, {
                key: "handleStatusMessageEntry",
                value: function(e) {
                    var t = e.target;
                    e.keyCode == ut.KEYCODES.ENTER && (this.checkAndSetStatus(t.value.trim()), this.setState({
                        userStatusMessage: t.value,
                        statusMessageFocus: !1,
                        statusTypeFocus: !1,
                        openTransientDropdown: null
                    }), e.stopPropagation(), e.preventDefault()), e.keyCode == ut.KEYCODES.ESCAPE && (this.state.statusMessageFocus || this.state.statusTypeFocus || this.state.openTransientDropdown) && (t.value = this.currentStatusMessage, this.setState({
                        userStatusMessage: this.currentStatusMessage,
                        statusMessageFocus: !1,
                        statusTypeFocus: !1,
                        openTransientDropdown: null
                    }), this.statusInput && this.statusInput.blur(), e.stopPropagation(), e.preventDefault())
                }
            }, {
                key: "handleKeyPress",
                value: function(e) {
                    var t = this.state.statusMessageFocus,
                        s = this.state.statusTypeFocus,
                        i = this.state.currentFocusedItem || 0,
                        n = this.isCliqUser ? this.defaultStatusOptions : this.defaultStatuses,
                        a = n.length;
                    if (s) {
                        if (e.keyCode == ut.KEYCODES.ESCAPE) t = !1, s = !1, i = 0, e.stopPropagation(), e.preventDefault();
                        else if (e.keyCode == ut.KEYCODES.ENTER) {
                            var o = n[i - 1];
                            if (this.props.closeDropDownOnSelection && this.setState({
                                    currentFocusedItem: 0,
                                    statusMessageFocus: !1,
                                    statusTypeFocus: !1
                                }), "function" == typeof this.props.handleStatusItemClick) return void this.props.handleStatusItemClick(o);
                            "custom" == this.currentStatusType ? this.setStatus({
                                scode: o.scode,
                                label: this.state.userStatusMessage,
                                type: "default"
                            }) : this.setStatus(o), e.stopPropagation(), e.preventDefault()
                        } else e.keyCode == ut.KEYCODES.DOWN ? i += 1 : e.keyCode == ut.KEYCODES.UP && (i -= 1);
                        e.keyCode != ut.KEYCODES.DOWN && e.keyCode != ut.KEYCODES.UP || (i > a ? i = 1 : i <= 0 && (i = a))
                    } else if (t) {
                        if (e.keyCode == ut.KEYCODES.ESCAPE) t = !1, s = !1, i = 0, e.stopPropagation(), e.preventDefault();
                        else if (e.keyCode == ut.KEYCODES.ENTER) {
                            var r = this.state.allStatuses[i - 1];
                            if (this.props.closeDropDownOnSelection && this.setState({
                                    currentFocusedItem: 0,
                                    statusMessageFocus: !1,
                                    statusTypeFocus: !1
                                }), e.target == this.statusInput) return this.handleStatusMessageEntry(e), void this.setState({
                                currentFocusedItem: 0,
                                statusMessageFocus: !1,
                                statusTypeFocus: !1
                            });
                            if ("function" == typeof this.props.handleStatusItemClick) return void this.props.handleStatusItemClick(r);
                            r.label !== this.state.userStatusMessage && this.setStatus(r), e.stopPropagation(), e.preventDefault()
                        } else e.keyCode == ut.KEYCODES.DOWN ? i += 1 : e.keyCode == ut.KEYCODES.UP && (i -= 1);
                        if (e.keyCode == ut.KEYCODES.DOWN || e.keyCode == ut.KEYCODES.UP) {
                            var l = this.state.allStatuses.length;
                            i > l && e.keyCode == ut.KEYCODES.DOWN && (i = 2), "heading" === this.state.allStatuses[i - 1].type && (e.keyCode == ut.KEYCODES.DOWN ? i += 1 : e.keyCode == ut.KEYCODES.UP && (i -= 1)), i > l ? i = 2 : i < 2 && (i = l)
                        }
                    }
                    this.setState({
                        currentFocusedItem: i,
                        statusMessageFocus: t,
                        statusTypeFocus: s
                    })
                }
            }, {
                key: "handleStatusInputTextChange",
                value: function(e) {
                    e.stopPropagation(), e.preventDefault();
                    var t = mn(e);
                    this.setState({
                        userStatusMessage: t.value
                    })
                }
            }, {
                key: "handleStatusInputBlur",
                value: function(e) {
                    var t = mn(e);
                    if ("INPUT" == t.nodeName) return t.value.trim() !== this.currentStatusMessage && this.checkAndSetStatus(t.value.trim()), this.statusInput && this.statusInput.blur(), void this.setState({
                        openTransientDropdown: null
                    })
                }
            }, {
                key: "setStatus",
                value: function(e) {
                    if (e && (e.label != this.props.userStatusMessage || e.scode != this.props.userStatusCode)) {
                        this.updateStatusItemState(null, e, "loading");
                        var t = function(t) {
                                this.updateCurrentStatus(null, e), "function" == typeof this.props.onStatusChangeSuccess && this.props.onStatusChangeSuccess(e)
                            }.bind(this),
                            s = function(e) {
                                this.updateCurrentStatus()
                            }.bind(this);
                        if ("default" === e.type || "remotework" === e.type) {
                            var i = null;
                            "remotework" === e.type && e.transient && e.transientValue && (i = e.transientValue), WebMessanger.setStatus(e.scode, e.label, i, t, s)
                        } else WebMessanger.setStatusWithID(e.scode, t, s)
                    }
                }
            }, {
                key: "deleteStatus",
                value: function(e) {
                    var t = function() {
                        var t = this.state.customStatuses;
                        t = t.filter((function(t) {
                            if (t.scode !== e.scode) return !0
                        })), this.updateStatusItemState(t)
                    }.bind(this);
                    this.updateStatusItemState(null, e, "loading"), WebMessanger.deleteStatus(e.scode, !1, t, (function() {
                        if (this.response) {
                            var e = JSON.parse(this.response);
                            e && "status_invalid_id" == e.code && t()
                        }
                    }))
                }
            }, {
                key: "checkAndSetStatus",
                value: function(e) {
                    if (-1 === this.defaultStatuses.concat(this.remoteWorkStatuses, this.state.customStatuses).map((function(e) {
                            return e.label
                        })).indexOf(e)) {
                        var t = function(e) {
                            if (e) {
                                var t = v(this.state.customStatuses) || [];
                                t.push({
                                    label: e.smsg,
                                    scode: e.skey,
                                    lmtime: -1,
                                    userid: oe.get("zuid"),
                                    type: "custom"
                                }), this.updateCurrentStatus(t, {
                                    scode: e.skey,
                                    label: e.smsg
                                })
                            }
                        }.bind(this);
                        WebMessanger.setStatus(this.props.userStatusCode, e, null, t)
                    } else {
                        var s;
                        this.defaultStatuses.concat(this.remoteWorkStatuses, this.state.customStatuses).forEach((function(t) {
                            t.label === e && (s = t)
                        })), this.setStatus(s)
                    }
                }
            }, {
                key: "onTransientTimeDropdownClick",
                value: function(e, t, s) {
                    s.stopPropagation(), s.preventDefault(), e.value !== t.transientValue && (t.transientValue = e.value, e.tomorrow ? (t.localStorageKey && Ut.setItem(t.localStorageKey, "tomorrow"), t.dropDownLabel = re("transientstatus.time.tomorrow.8am")) : e.forever ? (t.localStorageKey && Ut.setItem(t.localStorageKey, !1), t.dropDownLabel = re("transientstatus.time.forever")) : 480 == e.value ? (t.localStorageKey && Ut.setItem(t.localStorageKey, e.value), t.dropDownLabel = re("chat.hours", ["8"])) : (t.localStorageKey && Ut.setItem(t.localStorageKey, e.value), t.dropDownLabel = re("common.reltime.minutes", [e.value]))), this.setStatus(t), this.setState({
                        openTransientDropdown: null,
                        dropdownitems: null,
                        statusMessageFocus: !1
                    })
                }
            }, {
                key: "getStatusMessageDropdown",
                value: function() {
                    var e = pC.statusmessagedropdown,
                        t = null;
                    return oe.get("showRestrictedStatusReason") && void 0 !== WmsSettings && WmsSettings.isActivityStatusConfigEnabled() && WmsSettings.isCurrentActivityStatusOverrideDisabled() && (t = N(yC, {
                        userStatusType: this.state.userStatusType
                    }), e += " " + pC.disabled), N("div", {
                        id: "wms_statusmessagedropdown",
                        class: e,
                        ref: this.storeStatusMessageDropdownRef
                    }, N(we, {
                        onClickOutside: function(e) {
                            this.setState({
                                statusMessageFocus: !1
                            })
                        }.bind(this)
                    }, N("ul", {
                        class: pC.statusmessagelist
                    }, this.state.allStatuses.map(function(e, t, s) {
                        return N(CC, {
                            smsg: e,
                            index: t,
                            array: s,
                            userStatusCode: this.props.userStatusCode,
                            userStatusMessage: this.state.userStatusMessage,
                            expirytimeleft: this.props.expirytimeleft,
                            currentFocusedItem: this.state.currentFocusedItem,
                            storeCurrentSelectedItem: this.storeCurrentSelectedItem,
                            handleStatusItemClick: function(t) {
                                t.stopPropagation(), t.preventDefault(), e.restrictedByAdmin || (this.props.closeDropDownOnSelection && this.setState({
                                    statusMessageFocus: !1
                                }), "function" != typeof this.props.handleStatusItemClick ? this.setStatus(e) : this.props.handleStatusItemClick(e))
                            }.bind(this),
                            handleDeleteIconClick: function(t) {
                                t.stopPropagation(), t.preventDefault(), this.deleteStatus(e)
                            }.bind(this),
                            handleDropDownClick: function(t) {
                                t.preventDefault(), t.stopPropagation(), this.dropDownPosition = {
                                    bottom: this.statusMessageDropdownNodeBounds.bottom - t.clientY
                                };
                                var s = e.dropdown.filter((function(t) {
                                    return t.value !== e.transientValue
                                }));
                                this.setState({
                                    openTransientDropdown: this.state.openTransientDropdown && this.state.openTransientDropdown.scode == e.scode ? null : e,
                                    dropdownitems: s
                                })
                            }.bind(this)
                        })
                    }.bind(this)))), t)
                }
            }, {
                key: "getStatusOptionsDropdown",
                value: function() {
                    var e = this.isCliqUser ? this.defaultStatusOptions : this.defaultStatuses,
                        t = pC.statusicondropdown,
                        s = null;
                    return oe.get("showRestrictedStatusReason") && void 0 !== WmsSettings && WmsSettings.isActivityStatusConfigEnabled() && WmsSettings.isCurrentActivityStatusOverrideDisabled() && (s = N(yC, {
                        userStatusType: this.state.userStatusType
                    }), t += " " + pC.disabled), N("div", {
                        id: "wms_statusicondropdown",
                        class: t,
                        ref: this.storeStatusTypeDropdownRef
                    }, N(we, {
                        onClickOutside: function(e) {
                            this.setState({
                                statusTypeFocus: !1
                            })
                        }.bind(this)
                    }, N("ul", {
                        class: pC.statusmessagelist
                    }, e.map(this.getStatusOptionsItem))), s)
                }
            }, {
                key: "getStatusOptionsItem",
                value: function(e, t) {
                    var s = e.description ? N("div", {
                            class: pC.statusdescription
                        }, e.description) : null,
                        i = function(t) {
                            t.stopPropagation(), t.preventDefault(), e.restrictedByAdmin || (this.props.closeDropDownOnSelection && this.setState({
                                statusTypeFocus: !1
                            }), "function" != typeof this.props.handleStatusItemClick ? "custom" == this.currentStatusType ? this.setStatus({
                                scode: e.scode,
                                label: this.props.userStatusMessage,
                                type: "default"
                            }) : this.setStatus(e) : this.props.handleStatusItemClick(e))
                        }.bind(this),
                        n = pC.quickstatusiconholder;
                    e.scode == this.props.userStatusCode && (n += " " + pC.activestatusicon);
                    var a = pC.statuselement,
                        o = null;
                    t + 1 == this.state.currentFocusedItem && (a += " " + pC.focused, o = this.storeCurrentSelectedItem);
                    var r = null;
                    return e.restrictedByAdmin && (a += " " + pC.restrictedByAdmin, r = re("userstatus.restrictedbyadmin")), N("li", {
                        class: a,
                        onclick: i,
                        ref: o
                    }, N("div", {
                        class: n,
                        "data-scode": e.scode
                    }, N("div", {
                        class: pC.quickstatusicon
                    }, N("span", {
                        class: pC.defaultstatusicons + " wms-statusicon-" + e.iconcode
                    }))), N("div", {
                        class: pC.statusdetails,
                        title: r
                    }, N("div", {
                        class: pC.statusname
                    }, e.label), s))
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = pC.statusmessageholder,
                        i = null,
                        n = null;
                    this.state.openTransientDropdown && this.state.dropdownitems && this.dropDownPosition && (n = N(bC, {
                        openTransientDropdown: this.state.openTransientDropdown,
                        dropdownitems: this.state.dropdownitems,
                        dropDownPosition: this.dropDownPosition,
                        onClickOutside: function(e) {
                            this.setState({
                                openTransientDropdown: null,
                                dropdown: null
                            })
                        }.bind(this),
                        onTransientTimeDropdownClick: this.onTransientTimeDropdownClick
                    })), t.statusMessageFocus && (s += " " + pC.focused, i = this.getStatusMessageDropdown());
                    var a = pC.statustypeholder,
                        o = null;
                    t.statusTypeFocus && (a += " " + pC.focused, o = this.getStatusOptionsDropdown());
                    var r = N("input", {
                            onChange: this.handleStatusInputTextChange,
                            onInput: function(e) {
                                var t = e.target;
                                this.setState({
                                    userStatusMessage: t.value
                                })
                            }.bind(this),
                            onKeyPress: this.handleStatusMessageEntry,
                            onblur: this.handleStatusInputBlur,
                            value: t.userStatusMessage,
                            ref: this.storeStatusInputRef
                        }),
                        l = function(e) {
                            if (oe.get("showRestrictedStatusReason") || void 0 === WmsSettings || !WmsSettings.isActivityStatusConfigEnabled() || !WmsSettings.isCurrentActivityStatusOverrideDisabled()) {
                                var s = !1,
                                    i = !1;
                                e ? s = !t.statusTypeFocus : i = !t.statusMessageFocus, this.setState({
                                    statusTypeFocus: s,
                                    statusMessageFocus: i,
                                    currentFocusedItem: 0,
                                    openTransientDropdown: null,
                                    showRemoteWorkStatusPopup: !1
                                })
                            }
                        }.bind(this);
                    void 0 !== WmsSettings && (WmsSettings.isActivityStatusConfigEnabled() && WmsSettings.isCurrentActivityStatusOverrideDisabled() || WmsSettings.isAllowedStatusConfigEnabled() && -1 == WmsSettings.getAllowedStatuses().indexOf("custom")) && (r = N("div", {
                        class: pC.dummyinput
                    }, t.userStatusMessage), WmsSettings.isActivityStatusConfigEnabled() && WmsSettings.isCurrentActivityStatusOverrideDisabled() && !oe.get("showRestrictedStatusReason") && (a += " " + pC.disabled, s += " " + pC.disabled));
                    var d = Qs(this.props.zuid, this.props.userStatusCode, this.props.userStatusType),
                        c = pC.statusicon + " wms_badge_statusicon_" + d + "_cutout wms_badge_statusicon_" + d;
                    return N("div", {
                        class: pC.statusupdater
                    }, N("div", {
                        class: a,
                        onclick: function(e) {
                            e.stopPropagation(), e.preventDefault(), l(!0)
                        }.bind(this)
                    }, N("div", {
                        class: c
                    }), N("span", {
                        class: pC.statustypetoggle
                    }), o), N("div", {
                        class: s,
                        onclick: function(e) {
                            e.stopPropagation(), e.preventDefault(), l()
                        }.bind(this),
                        ref: this.storeStatusMessageHolderRef
                    }, r, N("span", {
                        class: pC.statusmessagetoggle
                    }), i, n))
                }
            }]), s
        }(R);

    function CC(e) {
        var t = e.smsg,
            s = e.index;
        e.array;
        var i = e.purpose;
        if ("heading" == t.type) return N("div", {
            class: pC.smsgheading
        }, " ", t.label, " ");
        var n = null,
            a = null,
            o = null,
            r = pC.statusmessageitem,
            l = e.handleStatusItemClick;
        "default" === t.type || "remotework" === t.type ? n = N("div", {
            class: pC.defaultstatusiconholder
        }, N("span", {
            class: pC.defaultstatusicons + " wms-statusicon-" + t.iconcode
        })) : r += " " + pC.customstatus, ("remotework" == i || t.showRemoteWorkIcon) && "remotework" === t.type && t.remoteiconcode && (n = N("div", {
            class: pC.defaultstatusiconholder
        }, N("span", {
            class: pC.defaultstatusicons + " " + pC.remoteWorkStatusIcon,
            "data-type": t.remoteiconcode
        }))), t.selected ? (r += " " + pC.selectedstatus, l = null) : t.loading ? r += " " + pC.loadingstatus : "custom" === t.type ? a = N("span", {
            class: pC.deletestatus,
            onclick: e.handleDeleteIconClick
        }) : t.restrictedByAdmin && (r += " " + pC.restrictedByAdmin, o = re("userstatus.restrictedbyadmin"));
        var d = null;
        s + 1 == e.currentFocusedItem && (r += " " + pC.focused, d = e.storeCurrentSelectedItem);
        var c = null;
        if (e.userStatusCode != t.scode && 4 != e.userStatusCode || e.userStatusMessage != t.label || !t.transient) t.dropdown && t.dropdown.length ? c = N("div", {
            class: pC.transientTimeDropdown,
            onclick: e.handleDropDownClick
        }, N("div", {
            class: pC.currentTransientTime
        }, t.dropDownLabel)) : t.dropDownLabel && (c = N("div", {
            class: pC.transientTimeDropdown
        }, N("div", {
            class: pC.dropDownLabelOnly
        }, t.dropDownLabel)));
        else {
            var u = e.expirytimeleft ? re("transientstatus.time.left", [e.expirytimeleft]) : "",
                m = "";
            t.dropDownLabel != re("transientstatus.time.tomorrow.8am") && t.dropDownLabel != re("transientstatus.time.forever") && t.dropDownLabel != re("chat.hours", ["8"]) || (t.dropDownLabel != re("transientstatus.time.tomorrow.8am") && t.dropDownLabel != re("chat.hours", ["8"]) || (m = u), u = t.dropDownLabel), c = N("div", {
                class: pC.transientTimeDropdown + " " + pC.timeLeft
            }, N("div", {
                class: pC.currentTransientTime,
                title: m
            }, u))
        }
        return N("li", {
            class: r,
            onclick: l,
            ref: d,
            title: o
        }, n, t.label, a, c)
    }

    function bC(e) {
        var t = Object.assign({}, e.dropDownPosition),
            s = e.dropdownitems && 25 * e.dropdownitems.length + 2;
        return t.top + s + 10 > window.innerHeight && (t.top = t.top - s), N("div", {
            class: pC.timeDropdown,
            style: t
        }, N(we, {
            onClickOutside: e.onClickOutside
        }, e.dropdownitems.map(function(t) {
            return N("div", {
                class: pC.timeDropdownItem,
                onclick: function(s) {
                    s.stopPropagation(), s.preventDefault(), e.onTransientTimeDropdownClick(t, e.openTransientDropdown, s)
                }
            }, t.label)
        }.bind(this))))
    }

    function yC(e) {
        return N("div", {
            class: pC.lockedStatusInfo,
            onclick: function(e) {
                e.preventDefault(), e.stopPropagation()
            }
        }, N("div", {
            class: pC.lockicon
        }), N("div", {
            class: pC.lockStatusMessage
        }, N(re, {
            id: "userstatus.activity.restrictedbyadmin." + wC[e.userStatusType]
        })))
    }
    var _C = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).setStatus = i.setStatus.bind(h(i)), i.handleDropdownClick = i.handleDropdownClick.bind(h(i)), i.storeRemoteWorkListRef = i.storeRemoteWorkListRef.bind(h(i)), i.onTransientTimeDropdownClick = i.onTransientTimeDropdownClick.bind(h(i)), i.state = {
                    openTransientDropdown: !1,
                    dropdownitems: [],
                    dropDownPosition: null,
                    loadingStatus: null,
                    currentStatus: {
                        scode: e.userStatusCode,
                        label: e.userStatusMessage
                    }
                }, i
            }
            return r(s, [{
                key: "storeRemoteWorkListRef",
                value: function(e) {
                    this.remoteWorkListNode = e;
                    var t = this,
                        s = new IntersectionObserver((function(e) {
                            e.forEach((function(e) {
                                t.remoteWorkListBounds = e.boundingClientRect
                            })), s.disconnect()
                        }));
                    setTimeout((function() {
                        t.remoteWorkListNode && s.observe(t.remoteWorkListNode)
                    }), 1)
                }
            }, {
                key: "setStatus",
                value: function(e) {
                    if ("remotework" === e.type) {
                        var t = null;
                        e.transient && e.transientValue && (t = e.transientValue), WebMessanger.setStatus(e.scode, e.label, t, function() {
                            this.setState({
                                loadingStatus: null,
                                currentStatus: e
                            }), "function" == typeof this.props.onStatusChangeSuccess && this.props.onStatusChangeSuccess(e)
                        }.bind(this), function() {
                            this.setState({
                                loadingStatus: null
                            })
                        }.bind(this))
                    }
                    this.setState({
                        loadingStatus: e
                    })
                }
            }, {
                key: "onTransientTimeDropdownClick",
                value: function(e, t) {
                    e.value !== t.transientValue && (t.transientValue = e.value, e.tomorrow ? (t.localStorageKey && Ut.setItem(t.localStorageKey, "tomorrow"), t.dropDownLabel = re("transientstatus.time.tomorrow.8am")) : e.forever ? (t.localStorageKey && Ut.setItem(t.localStorageKey, !1), t.dropDownLabel = re("transientstatus.time.forever")) : 480 == e.value ? (t.localStorageKey && Ut.setItem(t.localStorageKey, e.value), t.dropDownLabel = re("chat.hours", ["8"])) : (t.localStorageKey && Ut.setItem(t.localStorageKey, e.value), t.dropDownLabel = re("common.reltime.minutes", [e.value]))), this.setStatus(t), this.setState({
                        openTransientDropdown: null,
                        dropdownitems: null,
                        statusMessageFocus: !1
                    })
                }
            }, {
                key: "handleDropdownClick",
                value: function(e, t) {
                    if (t.preventDefault(), t.stopPropagation(), this.state.openTransientDropdown && this.state.openTransientDropdown.label == e.label) this.setState({
                        openTransientDropdown: null,
                        dropdownitems: [],
                        dropDownPosition: {}
                    });
                    else {
                        var s = t.target.getBoundingClientRect(),
                            i = {
                                position: "fixed",
                                bottom: this.remoteWorkListBounds.bottom - t.clientY - 10,
                                left: s.right - 5
                            },
                            n = e.dropdown;
                        this.props.pillButtons ? i = {
                            position: "fixed",
                            top: this.remoteWorkListBounds.bottom,
                            left: s.left
                        } : n = e.dropdown.filter((function(t) {
                            return t.value !== e.transientValue
                        })), this.setState({
                            openTransientDropdown: e,
                            dropdownitems: n,
                            dropDownPosition: i
                        })
                    }
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = IC(),
                        i = null;
                    if (t.openTransientDropdown && t.dropdownitems && t.dropDownPosition && (i = N(bC, {
                            openTransientDropdown: t.openTransientDropdown,
                            dropdownitems: t.dropdownitems,
                            dropDownPosition: t.dropDownPosition,
                            onClickOutside: function(e) {
                                this.setState({
                                    openTransientDropdown: null,
                                    dropdown: null
                                })
                            }.bind(this),
                            onTransientTimeDropdownClick: this.onTransientTimeDropdownClick
                        })), e.pillButtons) {
                        var n = s.map(function(e) {
                            var s = e.label,
                                i = null;
                            e.dropdown ? (i = N("div", {
                                class: pC.transientDropdownArrow,
                                onclick: this.handleDropdownClick.bind(this, e)
                            }), s = re("userstatus.ephemeral.withtime", [e.label, e.dropDownLabel])) : e.dropDownLabel && (i = e.dropDownLabel);
                            var n = pC.quickStatus + " " + pC[e.iconcode];
                            return t.currentStatus && t.currentStatus.label == e.label && t.currentStatus.scode == e.scode && (n += " " + pC.active), N("div", {
                                class: n,
                                onclick: function(t) {
                                    this.setStatus(e)
                                }.bind(this),
                                title: s
                            }, N("div", {
                                class: e.showRemoteWorkIcon ? pC.remoteWorkStatusIcon : pC.defaultQuickStatusIcon,
                                "data-type": e.remoteiconcode || e.iconcode
                            }), i)
                        }.bind(this));
                        return N("div", {
                            class: pC.quickStatusContainer,
                            ref: this.storeRemoteWorkListRef
                        }, n, i)
                    }
                    var a = null,
                        o = pC.remoteWorkPopupStatusList;
                    return void 0 !== WmsSettings && WmsSettings.isActivityStatusConfigEnabled() && WmsSettings.isCurrentActivityStatusOverrideDisabled() && (oe.get("showRestrictedStatusReason") && (a = N(yC, {
                        userStatusType: e.userStatusType
                    })), o += " " + pC.disabled), N("div", {
                        ref: this.storeRemoteWorkListRef,
                        class: o
                    }, s.map(function(s, i, n) {
                        return t.loadingStatus && t.loadingStatus.label == s.label ? s.loading = !0 : s.label == e.userStatusMessage && s.scode == e.userStatusCode && (s.selected = !0), N(CC, {
                            smsg: s,
                            index: i,
                            array: n,
                            purpose: "remotework",
                            userStatusCode: e.userStatusCode,
                            userStatusMessage: e.userStatusMessage,
                            expirytimeleft: e.expirytimeleft,
                            currentFocusedItem: e.currentFocusedItem,
                            handleStatusItemClick: function(e) {
                                e.stopPropagation(), e.preventDefault(), this.setStatus(s)
                            }.bind(this),
                            handleDropDownClick: this.handleDropdownClick.bind(this, s)
                        })
                    }.bind(this)), i, a)
                }
            }]), s
        }(R),
        WC = {
            0: "offline",
            1: "available",
            2: "invisible",
            3: "busy",
            4: "idle",
            5: "dnd",
            7: "away"
        },
        SC = {
            offline: 0,
            available: 1,
            invisible: 2,
            busy: 3,
            idle: 4,
            dnd: 5,
            away: 7
        },
        wC = {
            101: "call",
            102: "meeting",
            103: "calender",
            104: "showtime",
            105: "remote_session",
            106: "telephony",
            107: "salesiq",
            108: "webinar",
            109: "voice",
            110: "broadcast"
        };

    function MC() {
        var e = [{
            type: "default",
            scode: 1,
            label: re("Available"),
            iconcode: "available"
        }, {
            type: "default",
            scode: 7,
            label: re("userstatus.away"),
            iconcode: "away",
            description: re("statusmenu.description.away")
        }, {
            type: "default",
            scode: 3,
            label: re("Busy"),
            iconcode: "busy",
            description: re("statusmenu.description.busy")
        }, {
            type: "default",
            scode: 2,
            label: re("Invisible"),
            iconcode: "offline",
            description: re("statusmenu.description.invisible")
        }, {
            type: "default",
            scode: 5,
            label: re("userstatus.dnd"),
            iconcode: "dnd",
            description: re("statusmenu.description.dnd")
        }];
        if (void 0 !== WmsSettings && WmsSettings.isAllowedStatusConfigEnabled()) {
            var t = WmsSettings.getAllowedStatusesDetails();
            t.length && (e.forEach((function(e) {
                var s = t.find((function(t) {
                    return t.scode == WC[e.scode]
                }));
                s && s.isRestricted ? e.restrictedByAdmin = !0 : s && !s.isAllowed && (e.disabled = !0)
            })), e = e.filter((function(e) {
                return !e.disabled
            })))
        }
        return e
    }

    function IC() {
        if (void 0 !== WmsSettings && WmsSettings.isQuickStatusConfigEnabled()) {
            var e = WmsSettings.getAllowedQuickStatusList(),
                t = ["laptop_available", "engaged_at_work", "meal_break", "short_break", "dnd"];
            if (e = e.map((function(e) {
                    var s = -1 !== t.indexOf(e.icon) || e.default_id ? e.icon : "",
                        i = {
                            type: "remotework",
                            scode: e.scode,
                            label: e.name,
                            adminControlledList: !0,
                            remoteiconcode: s,
                            iconcode: WC[e.scode],
                            showRemoteWorkIcon: !!s
                        };
                    return e.time_slots.length && (i.transient = !0, i.transientValue = +e.time_slots[0], i.dropDownLabel = re("common.reltime.minutes", [i.transientValue]), e.time_slots.length > 1 && (i.dropdown = e.time_slots.map((function(e) {
                        return {
                            value: +e,
                            label: re("common.reltime.minutes", [e])
                        }
                    })))), i
                })), WmsSettings.isAllowedStatusConfigEnabled()) {
                var s = WmsSettings.getAllowedStatuses();
                e = e.filter((function(e) {
                    return -1 !== s.indexOf(WC[e.scode])
                }))
            }
            return e
        }
        var i = Ut.getItem("wms_breakCustomTime"),
            n = Ut.getItem("wms_dndCustomTime"),
            a = re("common.reltime.minutes", [n || 15]);
        480 == n ? a = re("chat.hours", ["8"]) : 0 == n ? a = re("transientstatus.time.forever") : "tomorrow" === n && (a = re("transientstatus.time.tomorrow.8am"));
        var o = De(),
            r = o.date + 1,
            l = De(o.year + "/" + o.month + "/" + r + " 8:00:00");
        l = l.timestamp, l = (l -= (new Date).getTime()) / 1e3 / 60, "tomorrow" === n && (n = l);
        var d = [{
            type: "remotework",
            scode: 1,
            label: re("userstatus.available.forcollaboration"),
            iconcode: "available",
            remoteiconcode: "laptop_available",
            showRemoteWorkIcon: !0
        }, {
            type: "remotework",
            scode: 3,
            label: re("userstatus.engaged"),
            iconcode: "busy",
            remoteiconcode: "engaged_at_work",
            showRemoteWorkIcon: !0
        }, {
            type: "remotework",
            scode: 7,
            label: re("userstatus.mealbreak"),
            iconcode: "away",
            remoteiconcode: "meal_break",
            showRemoteWorkIcon: !0,
            transient: !0,
            transientValue: 60,
            dropDownLabel: re("common.reltime.minutes", [60])
        }, {
            type: "remotework",
            scode: 7,
            label: re("userstatus.shortbreak"),
            iconcode: "away",
            remoteiconcode: "short_break",
            showRemoteWorkIcon: !0,
            transient: !0,
            transientValue: i || 15,
            localStorageKey: "wms_breakCustomTime",
            dropDownLabel: re("common.reltime.minutes", [i || 15]),
            dropdown: [{
                value: 15,
                label: re("common.reltime.minutes", ["15"])
            }, {
                value: 30,
                label: re("common.reltime.minutes", ["30"])
            }, {
                value: 45,
                label: re("common.reltime.minutes", ["45"])
            }, {
                value: 60,
                label: re("common.reltime.minutes", ["60"])
            }]
        }, {
            type: "remotework",
            scode: 5,
            label: re("userstatus.dnd"),
            iconcode: "dnd",
            remoteiconcode: "dnd",
            showRemoteWorkIcon: !0,
            transient: !0,
            transientValue: n || 15,
            localStorageKey: "wms_dndCustomTime",
            dropDownLabel: a,
            dropdown: [{
                value: 15,
                label: re("common.reltime.minutes", ["15"])
            }, {
                value: 30,
                label: re("common.reltime.minutes", ["30"])
            }, {
                value: 45,
                label: re("common.reltime.minutes", ["45"])
            }, {
                value: 60,
                label: re("common.reltime.minutes", ["60"])
            }, {
                value: 480,
                label: re("chat.hours", ["8"])
            }, {
                value: l,
                label: re("transientstatus.time.tomorrow"),
                tomorrow: !0
            }, {
                value: !1,
                label: re("transientstatus.time.forever"),
                forever: !0
            }]
        }];
        if (void 0 !== WmsSettings && WmsSettings.isAllowedStatusConfigEnabled()) {
            var c = WmsSettings.getAllowedStatuses();
            d = d.filter((function(e) {
                return -1 !== c.indexOf(WC[e.scode])
            }))
        }
        return d
    }
    var TC = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).setStatusPreference = i.setStatusPreference.bind(h(i)), i.isUserCheckedIn = !1, oe.get("localUserData") && oe.get("localUserData").checkin_status && (i.isUserCheckedIn = oe.get("localUserData").checkin_status), i.state = {
                    enableCloseButton: !1,
                    userStatusCode: e.userStatusCode,
                    userStatusMessage: e.userStatusMessage,
                    disabledStatusMessage: e.userStatusMessage,
                    showMinimized: e.showMinimized
                }, i
            }
            return r(s, [{
                key: "componentWillMount",
                value: function() {
                    this.props.openedOnStatusChange || Xe("company/" + _WMSAPPACCOUNTID + "/v2/settings/statuspreferences", null, function(e) {
                        var t;
                        e = JSON.parse(e), t = this.isUserCheckedIn ? e.check_in.status : e.check_out.status, this.setState({
                            userStatusMessage: t.message,
                            userStatusCode: SC[t.code],
                            disabledStatusMessage: t.message
                        })
                    }.bind(this), function() {
                        this.setState({
                            userStatusCode: WebMessanger.scode,
                            userStatusMessage: WebMessanger.smsg
                        })
                    }.bind(this), null, null)
                }
            }, {
                key: "setStatusPreference",
                value: function(e) {
                    var t = {
                        operation: this.isUserCheckedIn ? "check_in" : "check_out",
                        preference: "custom_status",
                        status: {
                            code: WC[e.scode] || WC[this.state.userStatusCode],
                            message: e.label
                        }
                    };
                    Qe("company/" + _WMSAPPACCOUNTID + "/v2/settings/statuspreferences", t, function(e) {
                        this.props.unmountComponent()
                    }.bind(this), null, null, null, {
                        "Content-Type": "application/json",
                        "X-XHR-exception": "true",
                        "X-ZCSRF-TOKEN": Yi()
                    })
                }
            }, {
                key: "render",
                value: function(e, t) {
                    if (t.showMinimized) return N("div", {
                        class: pC.minimizedStatusChangeDialog,
                        onclick: function() {
                            this.setState({
                                showMinimized: !1
                            })
                        }.bind(this)
                    }, N(re, {
                        id: "statuschange.currentstatus.quicktip"
                    }), N("span", {
                        class: pC.openPopupButton
                    }, N(re, {
                        id: "common.update"
                    })));
                    var s = pC.statusChangeDialogFooterButton,
                        i = e.unmountComponent;
                    t.enableCloseButton || (s += " " + pC.disabled, i = null);
                    var n = N("div", {
                            class: s,
                            onclick: i
                        }, N(re, {
                            id: "common.done"
                        })),
                        a = !1;
                    void 0 !== WmsSettings && WmsSettings.isAllowedStatusConfigEnabled() && -1 == WmsSettings.getAllowedStatuses().indexOf("custom") && (a = !0);
                    var o = "statuschange.orgadminrestriction.checkout",
                        r = "statuschange.newstatuspreference.checkout";
                    this.isUserCheckedIn && (o = "statuschange.orgadminrestriction.checkin", r = "statuschange.newstatuspreference.checkin");
                    var l = N("div", {
                            class: pC.statusChangeDialogDivider
                        }, N("span", null, N(re, {
                            id: "common.or"
                        }))),
                        d = "statuschange.quickstatus.title",
                        c = this.setStatusPreference,
                        u = function(e) {
                            this.setState({
                                userStatusCode: e.scode,
                                userStatusMessage: e.label,
                                enableCloseButton: !0
                            })
                        }.bind(this);
                    !0 === e.openedOnStatusChange && (l = null, c = null, o = "statuschange.currentstatus.disabled", d = "statuschange.quickstatus.title.short", r = "statuschange.currentstatus.title.short");
                    var m = N("div", {
                        class: pC.statusChangeDialogInfo + " " + pC.warning
                    }, N(re, {
                        id: o,
                        params: [t.disabledStatusMessage]
                    }));
                    t.enableCloseButton && (m = null);
                    var h = N("div", {
                            class: pC.statusChangeDialogBodyText
                        }, N(re, {
                            id: r
                        })),
                        g = N("div", {
                            class: pC.statusChangeDialogPaddedContainer
                        }, N(vC, {
                            userStatusMessage: t.userStatusMessage,
                            userStatusCode: t.userStatusCode,
                            userStatusType: t.userStatusType,
                            zuid: this.props.zuid,
                            ref: this.storeStatusSelectionInstance,
                            handleStatusItemClick: c,
                            closeDropDownOnSelection: !0,
                            hideCustomStatuses: a,
                            hideRemoteWorkStatuses: !0,
                            onStatusChangeSuccess: u
                        }));
                    return N("div", {
                        class: pC.statusChangeDialog
                    }, N("div", {
                        class: pC.statusChangeDialogTitle
                    }, N(re, {
                        id: "statuschange.dialog.title"
                    })), m, N("div", {
                        class: pC.statusChangeDialogBody
                    }, h, g, l, N("div", {
                        class: pC.statusChangeDialogBodyText
                    }, N(re, {
                        id: d
                    })), N("div", {
                        class: pC.statusChangeDialogPaddedContainer
                    }, N(_C, {
                        pillButtons: !0,
                        userStatusCode: this.state.userStatusCode,
                        userStatusMessage: this.state.userStatusMessage,
                        onStatusChangeSuccess: u,
                        ref: function(e) {
                            this.remoteWorkStatus = e
                        }.bind(this)
                    })), N("div", {
                        class: pC.statusChangeDialogFooter
                    }, n)))
                }
            }]), s
        }(R),
        AC = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this), this.storeInstance = this.storeInstance.bind(this)
            }
            return r(e, [{
                key: "storeInstance",
                value: function(e) {
                    this.instance = e
                }
            }, {
                key: "mountComponent",
                value: function(e) {
                    this.node = e.node, this.onCloseCallback = e.onCloseCallback, ee(N(TC, {
                        ref: this.storeInstance,
                        unmountComponent: this.unmountComponent,
                        userStatusMessage: e.userStatusMessage,
                        userStatusCode: e.userStatusCode,
                        userStatusType: e.userStatusType,
                        openedOnStatusChange: e.openedOnStatusChange,
                        showMinimized: e.showMinimized
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), this.node.parentNode.removeChild(this.node), "function" == typeof this.onCloseCallback && this.onCloseCallback()
                }
            }]), e
        }();
    var EC = "mc9a05ce0c_dialogcontainer",
        UC = "mc9a05ce0c_dialogheader",
        kC = "mc9a05ce0c_backbutton",
        NC = "mc9a05ce0c_customListItemContainer",
        xC = "mc9a05ce0c_containerWrapperStyle",
        OC = "mc9a05ce0c_customlistwrapper",
        RC = "mc9a05ce0c_closebutton",
        DC = function(e) {
            c(s, e);
            var t = p(s);

            function s(e) {
                var i;
                return a(this, s), (i = t.call(this, e)).getHeader = i.getHeader.bind(h(i)), i.escapeListener = i.escapeListener.bind(h(i)), i.onListItemClicked = i.onListItemClicked.bind(h(i)), document.addEventListener("keydown", i.escapeListener, !1), i
            }
            return r(s, [{
                key: "componentWillUnmount",
                value: function() {
                    document.removeEventListener("keydown", this.escapeListener, !1)
                }
            }, {
                key: "escapeListener",
                value: function(e) {
                    ("click" == e.type || "keydown" == e.type && e.keyCode == ut.KEYCODES.ESCAPE) && (e.stopPropagation(), e.preventDefault(), this.props.unmountComponent())
                }
            }, {
                key: "onListItemClicked",
                value: function(e, t, s) {
                    s && (s.stopPropagation(), s.preventDefault()), this.props.unmountComponent(), this.props.onChatSelect({
                        chid: e.id,
                        pcount: e.pcount,
                        title: e.title
                    })
                }
            }, {
                key: "getHeader",
                value: function() {
                    var e = re("chat.switch");
                    if (this.props.primarychid !== this.props.currentchid) {
                        var t, s = Xo(this.props.primarychid);
                        if (s) {
                            var i = vr(s);
                            delete i.htmldesc, t = N(No, {
                                key: this.props.primarychid,
                                item: i,
                                customlistitemstyles: {
                                    customContainerStyles: NC
                                }
                            })
                        }
                        e = N("div", {
                            class: kC,
                            onclick: function(e) {
                                this.onListItemClicked({
                                    id: this.props.primarychid,
                                    title: s && s.TITLE,
                                    pcount: s && s.PARTICIPANTSCOUNT
                                }, null, e)
                            }.bind(this)
                        }, re("common.back"), t)
                    }
                    return N("div", {
                        class: UC
                    }, e, N("div", {
                        class: RC,
                        onclick: this.escapeListener
                    }))
                }
            }, {
                key: "render",
                value: function(e, t) {
                    var s = br(),
                        i = [ut.HYBRIDSEARCH.CHAT, ut.HYBRIDSEARCH.JOINEDCHANNEL],
                        n = {
                            containerWrapperStyle: xC,
                            customListWrapper: OC,
                            customContainerStyles: NC,
                            rowHeight: 50
                        };
                    return N(we, {
                        onClickOutside: this.escapeListener
                    }, N("div", {
                        class: EC,
                        onclick: function(e) {
                            e.stopPropagation(), e.preventDefault()
                        }
                    }, this.getHeader(), N(Po, {
                        listid: e.primarychid,
                        list: s,
                        searchplaceholder: re("Search"),
                        onListItemClicked: this.onListItemClicked,
                        searchsequence: i,
                        callbackOnClose: e.unmountComponent,
                        customlistitemstyles: n,
                        sortonsearch: !0,
                        loadingstate: !1,
                        multiselect: !1,
                        fetchImageSource: Cr,
                        iscompletelist: !1,
                        dialogview: !1,
                        defaultsearch: !0
                    })))
                }
            }]), s
        }(R),
        $C = function() {
            function e() {
                a(this, e), this.unmountComponent = this.unmountComponent.bind(this)
            }
            return r(e, [{
                key: "mountComponent",
                value: function(e) {
                    this.node = e.node, this.onCloseCallback = e.onCloseCallback, ee(N(DC, {
                        unmountComponent: this.unmountComponent,
                        primarychid: e.primarychid,
                        currentchid: e.currentchid,
                        onChatSelect: e.onChatSelect
                    }), this.node)
                }
            }, {
                key: "unmountComponent",
                value: function() {
                    ee("", this.node), "function" == typeof this.onCloseCallback && this.onCloseCallback()
                }
            }]), e
        }();
    return e.Ajax = ct, e.BadgeImage = wr, e.Bots = Is, e.Button = ie, e.Calendar = ue, e.ChannelPreview = Qg, e.Channels = Ql, e.ChartEventHandler = Af, e.Charts = av, e.ChartsConstants = Dp, e.ChartsTemplates = $p, e.ChartsUtility = mf, e.ChatSwitchDialog = $C, e.Chats = Eo, e.Config = oe, e.ConfirmationDialog = Pd, e.Consents = os, e.Cookie = Fe, e.CustomEmoji = Li, e.DataObject = je, e.DatePicker = ma, e.DateUtil = $e, e.DesktopNotification = me, e.Dialog = function(e) {
        ee(N(xt, {
            nodeToBeFocusedOnClose: e.nodeToBeFocusedOnClose,
            headerhtml: e.headerhtml,
            heading: e.heading,
            actions: e.actions,
            footerinfoprefix: e.footerinfoprefix,
            footerinfosuffix: e.footerinfosuffix,
            customDialogStyles: e.customDialogStyles,
            callbackOnClose: e.callbackOnClose,
            ignoreFocusOnMount: e.ignoreFocusOnMount
        }, e.content), document.body)
    }, e.DialogView = xt, e.Drafts = Hd, e.DurationSelector = ch, e.DynamicActions = Og, e.ForkChat = fh, e.FormCatalogue = am, e.FormFileShare = Qc, e.Forms = Um, e.ForwardMsg = Ch, e.GIFs = ka, e.HybridSearch = vl, e.I18N = re, e.IntegrationsData = Ot, e.ListViewComponent = Ro, e.Markdown = ts, e.Matcher = Be, e.Message = gv, e.MessageActions = Zd, e.MessageList = Dv, e.MoreMessageActions = jd, e.Moveable = Nt, e.MsgUtil = id, e.MultiSelectList = Lo, e.MultiSelectorListDialogComponent = Fo, e.NotificationOwner = function(e, t, s) {
        var i, n = 1,
            a = 2,
            o = 3,
            r = "com_" + e + "_owner",
            l = "" + (new Date).getTime(),
            d = t && document.location.hostname.split(".").splice(1).join(".");

        function c(e) {
            if (clearTimeout(i), i = setTimeout(c, 4e3), s || e || m() || u() === o) {
                var t = Le(r);
                if (t && -1 !== t.indexOf("_f") && !0 !== s) return;
                var n = l;
                s && (n += "_f"), He(r, n, 1e4, d)
            }
        }

        function u() {
            var e = Le(r);
            return "" === e ? o : e === l || e === l + "_f" ? n : a
        }

        function m() {
            return u() === n
        }
        return s = s || !1, c(), window.addEventListener("focus", c), {
            isOwner: m,
            clearOwnerSync: function() {
                clearTimeout(i), Pe(r, d)
            }
        }
    }, e.Participants = yr, e.PinMsgDialog = hh, e.ProfileInfo = Rp, e.ReadReceiptList = Ug, e.RecentChats = mr, e.ReminderPopup = Ag, e.RemindersDialog = og, e.SearchContainer = Do, e.SearchContainerComponent = $o, e.SecurityManager = cs, e.StarOptions = uv, e.StatusChangeDialogComponent = AC, e.StatusSelection = vC, e.ThreadsList = gC, e.Time = qa, e.ToggleButton = zv, e.UrlConsent = Gm, e.UrlPreview = Md, e.Users = fi, e.Util = ca, e.VideoPlayer = ro, e.VideoPlayerFactory = po, e.ViewParticipants = Hh, e.ViewReactions = Dh, e.VoiceRecorderApi = Kg, e.WmsConstants = ut, e.WmsContacts = ui, e.WmsLocalStorage = Ut, e.WmsOrgContacts = It, e.WmsSessionStorage = Et, e.Zomoji = Pi, e.ZomojiComponent = Da, e.addMessageActionToList = function(e) {
        Yd.isinitialized && Yd.data.push(e)
    }, e.removeMessageActionFromList = function(e) {
        if (Yd.data.length)
            for (var t = 0; t < Yd.data.length; t++) e.id == Yd.data[t].id && Yd.data.splice(t, 1)
    }, e.template = _i, e.updateLinkPreviewSettings = qm, e
}({})) || {}).VirtualList = function(e) {
    var t = e && e.w + "px" || "100%",
        s = e && e.h + "px" || "100%",
        i = this.itemHeight = e.itemHeight;
    this.excessHeightObj = {}, this.items = e.items, this.generatorFn = e.generatorFn, this.hoverFunction = e.hoverFunction, this.totalRows = e.totalRows || e.items && e.items.length;
    var n = $WC.VirtualList.createScroller(i * this.totalRows);
    this.container = e.container ? e.container : $WC.VirtualList.createContainer(t, s), this.container.appendChild(n);
    var a = Math.ceil(e.h / i);
    if (this.cachedItemsLen = 4 * a, 0 != this.container.scrollTop) {
        var o = parseInt(this.container.scrollTop / i) - a;
        o = o < 0 ? Math.ceil(this.container.scrollTop / i) : o, this.container.scrollTop = o * i, this._renderChunk(this.container, o)
    } else this._renderChunk(this.container, 0);
    var r, l = this,
        d = a * i,
        c = 0;

    function u() {
        if (Date.now() - c > 100)
            for (var e = this.container.querySelectorAll('[data-rm="1"]'), t = 0, s = e.length; t < s; t++) this.container.removeChild(e[t])
    }
    this.onScroll = function(e) {
        var t = e.target.scrollTop,
            s = l.container.querySelector("[data-id]");
        if (!r || s.getAttribute("data-select") && 0 != s.getAttribute("data-rc") || Math.abs(t - r) > d) {
            var n = l.container.querySelector("[data-select]"),
                o = parseInt(t / i) - a;
            l._renderChunk(l.container, o < 0 ? 0 : o), (n = n ? l.container.querySelector('[data-rc="' + n.getAttribute("data-rc") + '"]:not([data-rm])') : "") && l.hoverFunction(n), r = t
        }
        c = Date.now(), e.preventDefault && e.preventDefault(), null == l.rmNodeInterval && (l.rmNodeInterval = setInterval(u.bind(l), 300)), $WC.Util.debounce((function() {
            clearInterval(l.rmNodeInterval), l.rmNodeInterval = null
        }), l, 1e3)
    }, this.clearRmNodeInterval = $WC.Util.debounce((function() {
        clearInterval(this.rmNodeInterval), this.rmNodeInterval = null
    }), this, 1e3), this.remove_event_listeners = function() {
        this.container.removeEventListener("scroll", this.onScroll), this.container.removeEventListener("scroll", this.clearRmNodeInterval)
    }, this.container.addEventListener("scroll", this.onScroll), this.container.addEventListener("scroll", this.clearRmNodeInterval)
}, $WC.VirtualList.prototype.createRow = function(e) {
    var t;
    if (this.generatorFn) t = this.generatorFn(e);
    else if (this.items)
        if ("string" == typeof this.items[e]) {
            var s = document.createTextNode(this.items[e]);
            (t = document.createElement("div")).style.height = this.itemHeight + "px", t.appendChild(s)
        } else t = this.items[e];
    $WC.Util.isArray(t) && (this.excessHeightObj[e] = t[1], t = t[0]);
    var i = 0;
    for (var n in this.excessHeightObj) e > n && (i += this.excessHeightObj[n]);
    return t.style.position = "absolute", t.style.top = e * this.itemHeight + i + "px", $WC.Util.setAttribute(t, "data-rc", e), t
}, $WC.VirtualList.prototype._renderChunk = function(e, t) {
    var s = t + this.cachedItemsLen;
    s > this.totalRows && (s = this.totalRows);
    for (var i = document.createDocumentFragment(), n = t; n < s; n++) i.appendChild(this.createRow(n));
    for (var a = 1, o = e.childNodes.length; a < o; a++) e.childNodes[a].style.display = "none", e.childNodes[a].setAttribute("data-rm", "1");
    e.appendChild(i)
}, $WC.VirtualList.createContainer = function(e, t) {
    var s = document.createElement("div");
    return s.style.width = e, s.style.height = t, s.style.overflow = "auto", s.style.position = "relative", s.style.padding = 0, s.style.border = "1px solid black", s
}, $WC.VirtualList.createScroller = function(e) {
    var t = document.createElement("div");
    return t.style.opacity = 0, t.style.position = "absolute", t.style.top = 0, t.style.left = 0, t.style.width = "1px", t.style.height = e + "px", t
};
var $WC = $WC || {},
    ie = !(op = /opera|opera 5|opera\/5/i.test(navigator.userAgent)) && /msie/i.test(navigator.userAgent);
$WC.$CUtil = {
    processXSS: function(e, t) {
        return e ? (t || (e = $WC.Util.decodeHTMLEntities(e)), e.replace(/&/g, "&amp;").replace(/\"/g, "&quot;").replace(/\'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;")) : e
    },
    trim: function(e) {
        return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
    },
    getNextRotationalNode: function(e, t) {
        return 39 === t || 40 === t ? e.nextSibling || e.parentNode.firstChild : 37 === t || 38 === t ? e.previousSibling || e.parentNode.lastChild : void 0
    },
    center: function(e) {
        if (e) {
            var t = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,
                s = e.offsetHeight,
                i = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,
                n = e.offsetWidth,
                a = e.style,
                o = t < s ? 0 : (t - s) / 2,
                r = i < n ? 0 : (i - n) / 2;
            a.top = o + "px", a.left = r + "px"
        }
    },
    removeAllClass: function(e, t) {
        if (e) {
            var s = e.querySelectorAll("." + t),
                i = s.length;
            if (i)
                for (var n = 0; n < i; n++) $WC.Util.removeClass(s[n], t)
        }
    },
    cloneArray: function(e) {
        return e.slice(0)
    },
    setInnerTextById: function(e, t) {
        return $WC.$CUtil.setInnerText(document.getElementById(e), t)
    },
    setInnerText: function(e, t) {
        e && (document.getElementsByTagName("body")[0].textContent ? e.textContent = t : e.innerText = t)
    },
    getConditionalNextNode: function(e, t, s) {
        function i(t, s) {
            if (e[s]) {
                if (e[s].getAttribute(t)) return e[s];
                for (var i = e[s]; i;) {
                    if (i.getAttribute(t)) return i;
                    i = i[s]
                }
            }
            var n = e.parentNode.querySelectorAll("[" + t + "]");
            if (n && n.length > 1) {
                if ("nextSibling" === s) return n[0];
                if ("previousSibling" === s) return n[n.length - 1]
            }
            return e
        }
        return 39 === t || 40 === t || 9 === t ? i(s, "nextSibling") : 37 === t || 38 === t ? i(s, "previousSibling") : void 0
    },
    removeEvent: function(e, t, s) {
        e.detachEvent ? e.detachEvent("on" + t, s) : e.removeEventListener ? e.removeEventListener(t, s, !0) : e["on" + t] = null
    },
    isScrolledIntoView: function(e, t, s) {
        var i = t.getBoundingClientRect().top,
            n = t.getBoundingClientRect().bottom,
            a = e.getBoundingClientRect().top,
            o = e.getBoundingClientRect().bottom;
        return !(0 === i && 0 === n || 0 === a && 0 === o) && (s ? o >= i && a <= n : a >= i && o <= n)
    },
    preventHandlingTabUpDownEnter: function(e) {
        e.keyCode !== $WC.WmsConstants.KEYCODES.DOWN && e.keyCode !== $WC.WmsConstants.KEYCODES.UP && e.keyCode !== $WC.WmsConstants.KEYCODES.ENTER && e.keyCode !== $WC.WmsConstants.KEYCODES.TAB || e.preventDefault()
    },
    hasClass: function(e, t) {
        return new RegExp("(\\s|^)" + t + "(\\s|$)").test(e.className)
    },
    hasFocus: function(e) {
        if (e) return e === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
    },
    getAttribute: function(e, t) {
        if (e && "function" == typeof e.getAttribute) return e.getAttribute(t)
    },
    getDirectText: function(e) {
        for (var t = e.firstChild, s = []; t;) 3 == t.nodeType && s.push(t.data), t = t.nextSibling;
        return s.join("")
    },
    getDirectTextFromHtmlString: function(e) {
        var t = document.createElement("div");
        t.innerHTML = e;
        for (var s = t.firstChild, i = []; s;) 3 == s.nodeType ? i.push(s.data) : i.push(s.textContent), s = s.nextSibling;
        return i.join("")
    },
    createOverlay: function(e) {
        if (null == document.getElementById("wms-overlay")) {
            var t = document.createElement("div");
            t.id = "wms-overlay", t.className = "wms-overlay", t.onclick = e, t.style.zIndex = $WC.Config.get("zindex");
            var s = document.getElementById("wmstoolbar");
            s ? document.body.insertBefore(t, s.nextSibling) : document.body.appendChild(t)
        }
    },
    removeOverlay: function() {
        var e = document.getElementById("wms-overlay");
        e && e.parentNode.removeChild(e)
    },
    getAspectRatioFit: function(e, t, s, i, n) {
        var a = [s / e, i / t];
        return a = Math.min(a[0], a[1]), !n && a > 1 ? {
            width: e,
            height: t
        } : {
            width: e * a,
            height: t * a,
            ratio: a
        }
    },
    getBrowserName: function() {
        var e = navigator.userAgent.toLowerCase();
        return $WC.Matcher.check("firefox_useragent_lowercase", e) ? "firefox" : $WC.Matcher.check("opera_useragent_lowercase", e) ? "opera" : $WC.Matcher.check("chrome_useragent_lowercase", e) ? "chrome" : $WC.Matcher.check("safari_useragent_lowercase", e) ? "safari" : $WC.Matcher.check("ie_useragent_lowercase", e) ? "ie" : void 0
    },
    isChrome: function() {
        return "chrome" === this.getBrowserName()
    },
    isFirefox: function() {
        return "firefox" === this.getBrowserName()
    },
    isSafari: function() {
        return "safari" === this.getBrowserName()
    },
    isIEVersion11: function() {
        var e = navigator.userAgent.toLowerCase();
        if (e.indexOf("trident/") > 0) {
            var t = e.indexOf("rv:");
            return "11" == e.substring(t + 3, e.indexOf(".", t))
        }
    },
    checkAndUpdateLocationPermissionStatus: function() {
        "undefined" != typeof navigator && void 0 !== navigator.permissions && navigator.permissions.query({
            name: "geolocation"
        }).then((function(e) {
            $WC.Config.get("LOCATION_INFO").PERMISSIONSTATE = e.state, e.onchange = function() {
                $WC.Config.get("LOCATION_INFO").PERMISSIONSTATE = e.state
            }
        }))
    },
    chatTypes: {
        CHANNEL: 1,
        DEFAULT_BOT: "B1",
        CUSTOM_BOT: "B2"
    }
}, ($WC = $WC || {}).Functions = {}, $WC.Functions.init = function() {
    Gator(document).on("click", "[custombuttonclick_onmsg],[zc-quickbutton]", (function(e) {
        $WC.CMsgUtil.handleButtons({
            elem: this,
            event: e,
            actionclbck: function(t, s, i, n) {
                if (e.target.getAttribute("data-cmsgbtn")) {
                    var a = e.target,
                        o = $WC.Util.createElement("span", "wms_cmsg_loader", "wms_cmsg_loader");
                    a.className += " wms_cmsg_loadingon", a.parentElement.style.pointerEvents = "none", a.appendChild(o);
                    var r = function() {
                        $WC.Util.removeElement(o), a.className = "cmsg-btn", a.parentElement.style.pointerEvents = ""
                    }
                }
                var l = $WC.Functions.isTempResponse(e.target, s, i);
                $WC.Functions.execute(t, s, i, n, l, e.type, r)
            }
        })
    }))
}, $WC.Functions.execute = function(e, t, s, i, n, a, o) {
    var r = "chid=" + t + "&msgid=" + s + "&fname=" + e + "&btnindex=" + i + "&isTempResponse=" + n + "&event=" + a,
        l = document.getElementById("buttonconfirminput");
    if (l) {
        var d = l.value,
            c = l.getAttribute("mandatory");
        if (0 == d.length && "true" === c) return l.focus(), l.parentElement.querySelector("[category='errormsg']").innerHTML = $WC.I18N("formdialog.error.mandatory"), void l.classList.add("zcq-inpt-error");
        r += "&input=" + d
    }
    var u = {
        "x-consents-version": "1",
        "X-XHR-exception": "true",
        "X-SID": WebMessanger.getSid(),
        "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
    };
    $WC.Ajax.postRequestToChat("executefunction.do", r, (function() {
        var s = JSON.parse(this.response)[0].objString;
        $WC.Functions.handleExecuteFuncCallback(t, e, s), o && o()
    }), null, null, null, u)
}, $WC.Functions.handleExecuteFuncCallback = function(e, t, s) {
    if ("Consent" === s.status)(new $WC.Consents).mountComponent(e, s, (function(e, s) {
        $WC.Functions.handleExecuteFuncCallback(e, t, s.data.dreResponse)
    }));
    else if ("Success" === s.status) {
        var i = s.output;
        if (i)
            if (i.widget) {
                var n = JSON.parse(i.widget);
                $WC.Widgets.construct(n)
            } else if ((i.text || i.msg) && "function" == typeof $WC.Functions.showResponse) $WC.Functions.showResponse(s.output, e);
        else if (i.actions) {
            $WC.Channels.initChannels(), (new $WC.Forms).mountComponent(s, Commands.showResponse, (function() {
                var t = WindowHandler.getWinObjById(e);
                t && t.composer.focus()
            }))
        }
    } else if ("Failure" === s.status && "function" == typeof $WC.Functions.showErrorResponse)
        if ($WC.Util.isEmpty(s.resumeUrl)) $WC.Functions.showErrorResponse(s, e);
        else {
            if (null === document.getElementById("zcwindows")) {
                var a = document.createElement("div");
                a.id = "zcwindows", a.className = "zcoverlay", a.style.zIndex = WebMessanger.setzindex, document.body.appendChild(a)
            }
            var o = "<b>" + s.connectionDetails.serviceDisplayName + "</b>",
                r = "<b>" + t + "</b>";
            $WC.$Dlg.confirm({
                id: "wms_oauthprompt",
                bodyhtml: $WC.I18N("common.access.permission", [r, o]),
                imagehtml: "<img src=" + s.connectionDetails.imageUrl + ">",
                buttons: [{
                    text: $WC.I18N("common.authenticate"),
                    action: function() {
                        window.open(s.resumeUrl)
                    }
                }]
            })
        }
};
var WmsImplHandler = {};

function WmsResource() {
    this.MessageObject
}
WmsImplHandler.invoke = function() {
    var e = arguments;
    setTimeout((function() {
        var t = Array.prototype.slice.call(e, 1);
        "function" == typeof e[0] && e[0].apply(null, t)
    }), 1)
}, WmsImplHandler.invokeSynchronously = function() {
    var e = arguments[0],
        t = Array.prototype.slice.call(arguments, 1);
    if ("function" == typeof e) try {
        return e.apply(null, t)
    } catch (e) {
        setTimeout((function() {
            throw e
        }), 1)
    }
}, WmsResource.init = function() {
    this.MessageObject = {}, this.MessageObject["connectionerror.chatfail"] = "Chat not reachable.", this.MessageObject["connectionerror.netfail"] = "Internet not reachable.", this.MessageObject["connectionerror.reconnect"] = "Reconnecting", this.MessageObject["connectionerror.reconnecttime"] = "Reconnecting in $1", void 0 !== $WC && $WC.template && $WC.template.setResource(WmsResource)
}, WmsResource.getRealValue = function(e, t) {
    try {
        var s = "";
        return (s = null == this.MessageObject["" + e] || null == this.MessageObject["" + e] ? e : this.MessageObject[e]) && s.length && (s = s.replace(/_/g, " ")), null == t ? s || "" : s = WmsResource.replaceParams(s, t)
    } catch (e) {
        setTimeout((function() {
            throw e
        }), 1)
    }
    try {
        return e.replace(/_/g, " ")
    } catch (e) {
        return ""
    }
}, WmsResource.getRealData = function(e, t) {
    try {
        var s = e.trim();
        return s = (s = s.replace(/ /g, "_")).replace(/\.$/, ""), WmsResource.getRealValue(s, t)
    } catch (t) {
        return e
    }
}, WmsResource.getTrimmedValue = function(e, t) {
    var s = WmsResource.getRealValue(e, t);
    return s = s.replace(/\s/g, "&nbsp;")
}, WmsResource.replaceParams = function(e, t) {
    t instanceof Array || (t = t.split(","));
    for (var s = 0; s < t.length; s++) {
        var i = t[s],
            n = new RegExp("\\$" + (s + 1), "g");
        e = e.replace(n, i)
    }
    return e
}, WmsResource.extendResourceObject = function(e) {
    this.MessageObject = Object.assign(this.MessageObject, e)
}, WmsResource.init();
var _WMSCFPARAMNAME, wmsnotifyowner, avcliqnotifyowner, _WMSAPPACCOUNTID, _UPLOADSERVERURL, _DOWNLOADSERVERURL, _WMSRTCATOKEN, _WMSAUTHTOKEN, _WMSAUTHSCOPE, _WMSZAID, _WMSPOTYPE, _WMSOAUTHTOKEN, _WMSOAUTHORGSCOPE, _WMSOAUTHUSERSCOPE, _WMSOAUTHOPRSCOPE, dext = ".sas",
    lfromstatic = !1,
    wmsjsversion = "v265",
    silent = !1,
    WMSIAMURL = window.location.protocol + "//accounts.zoho.com",
    wmsmeetingurl = window.location.protocol + "//meeting.zoho.com",
    _WMSIAMTICKETNAME = "IAMAGENTTICKET",
    _WMSMAILURL = window.location.protocol + "//zmail.zoho.com/",
    _WMSCHATURL = window.location.protocol + "//chat.zoho.com/",
    _WMSPHOTOSERVER = window.location.protocol + "//contacts.zoho.com",
    _WMSSALESIQSERVER = window.location.protocol + "//salesiq.zoho.com",
    _WMSCONFIG = "15",
    _WMSCALENDARSERVER = window.location.protocol + "//calendar.zoho.com",
    _WMSCONT = "_wms",
    _CHATCONT = "_chat",
    _RTCCONT = "_wmsrtc",
    _WMSDOMAIN = "zoho.com",
    _WMS_SAMEDOMAIN = !1,
    _WMS_FORCEDOMAIN = !1,
    _WMS_NODOMAINCHANGE = !1,
    _CHATCFPARAMNAME = "zchat_csrparam",
    _CHATCFTOKEN = "CT_CSRF_TOKEN",
    _WMSDRAGDROP = !0,
    _WMSSST = !1,
    _RETRYREGINTERVAL = 1e4,
    iswmsframemonitorrunning = !1,
    iswmsframeloaded = !1,
    retryregistertimer = null,
    wmsdebuginfo = [],
    _WMSWINFOCUS = !0,
    _WMSEMPTYBAR = !1,
    _PRIMETIMEHELPLINK = "https://www.zoho.com/cliq/help/primetime/",
    _UDS_CLIQ_SERVICE = "CLIQ",
    _UDS_RTC_SERVICE = "rtcplatform",
    _NEWCLIENTPORTAL_AUTHENTICATION = !1,
    _WMS_LAZYLOAD_SCRIPT = !1,
    _isGSearchAppended = !1,
    _isVideoJSAppended = !1,
    _isCliqAVLibLoaded = !1,
    _WMSDISABLEAVCHAT = !1,
    _WMSOPENINCLIQ = !0,
    _WMS_RETRY_COUNT = 0,
    _WMSORIGINALIMG_LOAD_TIMEOUT = 250,
    _WMS_LP = "false",
    _WMS_REQLOG = [],
    _TZOFFSET = -1 * (new Date).getTimezoneOffset();
$WC.Config.set({
    _TZOFFSET: _TZOFFSET
});
var op, _WMSCHATHIDDEN = !1,
    _WMS_FETCHCHANNELSINITIATED = !1,
    opera_browser = op = -1 != navigator.userAgent.indexOf("Opera"),
    mz = (ie = !op && /msie/i.test(navigator.userAgent), !op && !ie && /mozilla\/5/i.test(navigator.userAgent)),
    wms_sf = -1 != navigator.userAgent.indexOf("Safari"),
    WM_ACK_CONNECT = 0,
    WM_INFO = 1,
    WM_CUSTOM = 2,
    WM_CROSSPRODUCT = 4,
    WM_PRESENCE = 6,
    WM_RECONNECT = -1,
    WM_SERVER_UP = -3,
    WM_CONN_UP = -4,
    WM_NFY_LOGOUT = -2,
    WM_AUTH_FAILED = -5,
    WM_INVALID_AUTH_PARAMS = -12,
    PS_REG_ACK = -16,
    WM_INVALID_TOKEN = -17,
    WM_NFY_ATTACH = -8,
    WM_NFY_DETACH = -9,
    SHOW_INFO = -10,
    CT_JOIN = 10,
    CT_TXT_MSG = 12,
    CT_NFY_USERSTATUS = 13,
    CT_NFY_USERADD = 14,
    CT_NFY_USERDELETE = 15,
    CT_INF_MSG = 16,
    CT_NFY_APPROVAL = 102,
    CT_ATT_MSG = 20,
    WM_NFY_COLLABADD = 21,
    WM_NFY_COLLABDELETE = 22,
    CT_NFY_SETTITLE = 19,
    WM_NFY_STATUS = 23,
    WM_NFY_CSTATUSCHANGE = 24,
    WM_NFY_USERIMGCHANGE = 25,
    CONTACT_INFO = 27,
    NFY_CONTACT_INFO = 253,
    NFY_CONTACT_ADD = 250,
    CT_CLOSE_WIN = 28,
    WM_AV_MSG = 29,
    WM_CLEAR_NOTI = 32,
    CT_NFY_ACTCHATADD = 50,
    CT_NFY_ACTCHATDELETE = 34,
    WM_SKIPTRANS = 36,
    WM_USER_LANG_CHANGE = 37,
    WM_SYSTEM_MSG = 38,
    WM_LASTSEEN_SETTINGS = 90,
    ACS_MSG = 43,
    WM_TICKET_MSG = 46,
    CT_MSG_STORAGE = 47,
    CT_ATTACH = 49,
    WM_DEF_STATUS = 54,
    CT_NFY_MUTECHAT = 58,
    CT_BOT_LIST = 60,
    CT_BOT_OPR = 61,
    WM_ZTI_CROSSPRODUCT = 62,
    CT_DELETED_MSG = 63,
    CT_EDITED_MSG = 64,
    CT_SYSTEM_EDIT = 66,
    CT_MSG_ADDL = 70,
    CT_MSG_REACT = 72,
    CT_MSG_REACT_CURR = 73,
    CT_MSG_READRECEIPT = 71,
    CT_NFY_MSG = 112,
    NFY_USER_TYPING = 104,
    NFY_USER_IDLE = 105,
    NFY_USER_ENTERED = 110,
    WM_ZTI_FAIL_MSG = 601,
    WMS_ONLINE = 1,
    WMS_INVISIBLE = 2,
    CT_NFY_LIVESUPPORT = 4,
    CT_NFY_ZOHOGROUP = 5,
    NFY_REQ_CSUPPORT = 106,
    NFY_ACC_CSUPPORT = 108,
    NFY_QIT_CSUPPORT = 109,
    NFY_ENDLIVESUPPORT = 113,
    CT_GUEST_REQ = 100,
    WM_PUB_SUB = 800,
    PR_MSG = 700,
    WM_WEBRTC_MSG = 59,
    RTC_CUSTOMCHAT_CLOSE = 80,
    CLIQ_AV_MSG = 5e3,
    RTC_EVENT_MSG = 901;

function push(e) {
    if (e.msg && e.msg.msglist)
        for (var t = e.msg.msglist, s = Object.assign({}, e), i = 0; i < t.length; i++) delete s.msg.meta, delete s.msg.mod, s.msg = Object.assign(s.msg, t[i]), s.mtype = t[i].mtype, s.msg.meta && 0 == $WC.Util.getObjectLength(s.msg.meta) && delete s.msg.meta, WebMessanger.push(s);
    else WebMessanger.push(e);
    setTimeout((function() {
        WebMessanger.updateClientDebugStore(e)
    }), 1), WebMessanger.lastmessage = e, WebMessanger.lastmessagetime = new Date
}

function getPrd() {
    return WebMessanger.getPrd()
}

function getWmsConfig() {
    return _WMSCONFIG
}

function getUserName() {
    return WebMessanger.getUserName()
}

function getNickName() {
    return WebMessanger.getNickName()
}

function getZuid() {
    return WebMessanger.getZuid()
}

function getUserId() {
    return WebMessanger.getUserId()
}

function getSid() {
    return WebMessanger.getSid()
}

function getWmsXA() {
    return WebMessanger.XA
}

function _getAuthType() {
    return WebMessanger.authtype
}

function getAuthToken() {
    return _WMSAUTHTOKEN
}

function getAuthScope() {
    return _WMSAUTHSCOPE
}

function getZAID() {
    return _WMSZAID
}

function getRawSid() {
    return WebMessanger.getRawSid()
}

function getWmsContacts() {
    return WmsContacts.getcontacts()
}

function updateWmsContacts(e) {
    WmsContacts.init(e)
}

function isReconnecting() {
    return WebMessanger.isReconnecting()
}

function disablewms() {
    WebMessanger.disable()
}

function isdisablewms() {
    return WebMessanger.isdisablewms()
}

function getWMSOAuthCredentials() {
    return {
        token: _WMSOAUTHTOKEN,
        orgscope: _WMSOAUTHORGSCOPE,
        userscope: _WMSOAUTHUSERSCOPE,
        oprscope: _WMSOAUTHOPRSCOPE
    }
}

function WebMessanger() {}

function EventsUtil() {}

function getNewClientPortalAuthentication() {
    return _NEWCLIENTPORTAL_AUTHENTICATION
}
WebMessanger.chatdeactivated = !1, WebMessanger.allprdchatdeactivated = !1, WebMessanger.chatdisabled = !1, WebMessanger.jsstaticdomain = "", WebMessanger.cssstaticdomain = "", WebMessanger.staticdomain = "",
    function() {
        var e;
        document.currentScript ? e = document.currentScript : void 0 !== document.querySelector && (e = document.querySelector('script[src*="ichat"][src*="wmsbar"]')), e && (WebMessanger.jsstaticdomain = e.src.split("/")[2], WebMessanger.staticdomain = WebMessanger.jsstaticdomain.replace(/^js/, "static"));
        var t = document.querySelector("link[href*=wmsbar]");
        WebMessanger.cssstaticdomain = t ? t.href.split("/")[2] : WebMessanger.jsstaticdomain.replace(/^js/, "css")
    }(), WebMessanger.isIdle = !1, WebMessanger.smartchatshortcutdisabled = !1, WebMessanger.userslist, WebMessanger.forkedlist, WebMessanger.sync_adminsettings_onfocus = !1, WebMessanger.get_pinmsg_onfocus = !1, WebMessanger.is_create_channel_link_disabled = !1, WebMessanger.is_copy_message_link_disabled = !1, WebMessanger.is_set_reminder_option_disabled = !1, WebMessanger.prefetch_channels = !1, WebMessanger.is_zoho_links_settings_disabled = !1, WebMessanger.is_msgpin_option_disabled = !1, WebMessanger.is_group_call_disabled = !1, WebMessanger.resourceloaded = !1, WebMessanger.is_exclusive_chat = !1, WebMessanger.rtlmode = !1, WebMessanger.exclusive_chat_info = {
        entity_id: "",
        chat_id: "",
        failure_callback: null,
        allowedchids: []
    }, WebMessanger.guest_info = {
        id: "",
        encrypt_id: "",
        chat_id: "",
        verification_url: "",
        chat_info: {},
        chat_info_fetched: !1
    }, WebMessanger.rtc_chat_details = {
        chat_id: ""
    }, WebMessanger.isNotebookFrameLoaded = !1, WebMessanger.methodsInCallbackQueue = [], WebMessanger.server_sync_time_diff, WebMessanger.is_screen_grabber_enabled = !1, WebMessanger.is_screengrabber_js_loaded = !1, WebMessanger.isDarkModeEnabled = !1, WebMessanger.network_info = {}, WebMessanger.is_custom_menu_opted = !1, WebMessanger.external_sound_notification_config_state = !0, WebMessanger.isTitleBlinkDisabled = !1, WebMessanger.glowOnOpen = void 0, WebMessanger.isactivechatbaruser = !1, WebMessanger.is_chat_enabled_always = !1, WebMessanger.apiInvocationCallback = null, WebMessanger.calendar_settings_retrycount = 0, $WC.Util.addEvent(window, "beforeunload", (function(e) {
        if (_WMS_REQLOG.length) {
            var t = "Your message is being sent. Do you still want to leave this page?";
            return e.returnValue = t, t
        }
    })), $WC.Util.addEvent(window, "unload", (function() {
        var e = WindowHandler.openedChats;
        for (var t in e) {
            var s = WindowHandler.getWinObjById(t);
            !s || "" == s.composer.value || WebMessanger.isExclusiveChat() || WebMessanger.isRTCChat() || "true" == s.editorreplydiv.getAttribute("data-editmsg") || $WC.Drafts.updateBeforeUnload(s)
        }
    })), Smiley = new $WC.Zomoji({
        default_size: "24",
        animation: {
            default_size: "24"
        }
    }), Smiley.init = function() {}, Smiley.extrasmiley_lookup = Smiley.symbol_lookup, Smiley.defaultsmiley_lookup = Smiley.symbol_lookup, WmsContacts = Object.assign({}, $WC.WmsContacts), WmsOrgContacts = $WC.WmsOrgContacts, WmsProfileInfo = new $WC.ProfileInfo, WebMessanger.checkNetworkAndUpdateBanner = function() {
        var e;
        return function() {
            var t = $WC.Config.get("staticserverpath") + "/images/a29a4f41_spacer.gif";
            void 0 === e && ((e = $WC.Util.createElement("img")).style.display = "none", document.body.appendChild(e), EventsUtil.attachonload.call(e, (function() {
                document.getElementById("wmsbannertext") && setTimeout((function() {
                    document.getElementById("wmsbannertext").innerHTML = $WC.I18N("connectionerror.chatfail")
                }), 1)
            }))), e.src = t + "?nocache=" + (new Date).getTime()
        }
    }(),
    function() {
        var e = (new Date).getTime() + "_" + Math.floor(1e4 * Math.random());
        window.getWmsTabId = function() {
            return WebMessanger.zuid + "_" + WebMessanger.prd + "_" + e
        }
    }(), WebMessanger.getDebugInfo = function() {
        return wmsdebuginfo
    }, WebMessanger.updateDebugInfo = function(e) {
        "string" == typeof e ? (e += ";;" + (new Date).getTime(), wmsdebuginfo.length >= 300 && wmsdebuginfo.splice(0, 1), wmsdebuginfo.push(e)) : wmsdebuginfo = e
    }, WebMessanger.setOAuthCredentials = function(e, t, s, i) {
        _WMSOAUTHTOKEN = e, _WMSOAUTHORGSCOPE = t || _WMSOAUTHORGSCOPE, _WMSOAUTHUSERSCOPE = s || _WMSOAUTHUSERSCOPE, _WMSOAUTHOPRSCOPE = i || _WMSOAUTHOPRSCOPE, "function" == typeof WebMessanger.updateOAuthCredInBridge && WebMessanger.updateOAuthCredInBridge()
    },
    function() {
        var e = [];

        function t(e) {
            e && e.linkdetails && (e.linkdetails.cliq_message && e.linkdetails.cliq_message.msg && (e.linkdetails.description = e.linkdetails.cliq_message.msg = "**********", e.linkdetails.cliq_message.meta && e.linkdetails.cliq_message.meta.opr_replydetails && s(e.linkdetails.cliq_message.meta)), "rich" == e.linkdetails.linktype && (e.linkdetails.description = "**********"))
        }

        function s(e) {
            if (e && e.opr_replydetails) {
                var t = e.opr_replydetails;
                "20" == t.mtype && t.addinfo && t.addinfo.comment ? t.addinfo.comment = "**********" : t.msg && (t.msg = "**********")
            }
        }

        function i(e) {
            "string" == typeof e.msg && (e.msg = "**********"), e.notification_text && (e.notification_text = "**********"), e.meta && (t(e.meta), s(e.meta))
        }
        WebMessanger.updateClientDebugStore = function(n) {
            var a = JSON.parse(JSON.stringify(n));
            if (e.length >= 1e3 && e.shift(), a.timestamp = (new Date).getTime(), a.mtype) {
                if ("12" === a.mtype) {
                    if (a.msg && (a.msg.msg = "**********", a.msg.notification_text && (a.msg.notification_text = "**********"), a.msg.msglist))
                        for (var o in a.msg.msglist) i(a.msg.msglist[o])
                } else if ("20" === a.mtype) a.msg && (a.msg.comment = "**********", a.msg.msg && (a.msg.msg.comment = "**********"));
                else if ("66" === a.mtype || "64" === a.mtype) {
                    if (a.msg && a.msg.msg) {
                        for (var o in a.msg.msg) {
                            var r = a.msg.msg[o];
                            r.msg && i(r.msg)
                        }
                        a.msg.notification_text && (a.msg.notification_text = "**********")
                    }
                } else if ("50" == a.mtype) {
                    var l = a.msg.uc || a.msg.ac;
                    for (var d in l) {
                        var c = l[d].lmhash;
                        "20" == (c = JSON.parse(c)).mtype || "64" == c.mtype && "att" == c.__module ? c.msg && c.msg.comment && (c.msg.comment = "**********") : "12" != c.mtype && "66" != c.mtype && "64" != c.mtype || (c.msg = "**********"), c.meta && (t(c.meta), s(c.meta)), c = JSON.stringify(c), l[d].lmhash = c
                    }
                } else "23" == a.mtype && a.msg && a.msg.s && (a.msg.s = $WC.Matcher.replace("mail", a.msg.s, "**********"));
                a.msg && a.msg.meta && (t(a.msg.meta), s(a.msg.meta))
            }
            e.push(a)
        }, WebMessanger.getClientDebugStore = function() {
            return e
        }
    }(),
    function() {
        var e = [];
        WebMessanger.updateReminderInfo = function(t) {
            var s = Object.keys(t)[0];
            e.length >= 100 && e.shift(), !1 === e.some((function(e) {
                if (e.hasOwnProperty(s)) return !0
            })) && e.push(t)
        }, WebMessanger.getReminderInfo = function(t) {
            var s = e.find((function(e) {
                if (e.hasOwnProperty(t)) return e
            }));
            return s && s[t]
        }
    }(), WebMessanger.pause_printlog_requests = !1, WebMessanger.postDebugInfoToServer = function(e) {
        if (!WebMessanger.pause_printlog_requests) {
            var t = "zuid=" + WebMessanger.zuid + "&wmsdebuginfo=" + JSON.stringify(WebMessanger.getDebugInfo()) + "&sid=" + WebMessanger.sid + "&rawsid=" + WebMessanger.rawsid;
            e && (t += "&source=" + e), -1 === document.location.hostname.indexOf(".manageengine.com") && $WC.Ajax.postRequestToChat("printlog.do", t, null, (function() {
                this.status >= 400 && (WebMessanger.pause_printlog_requests = !0)
            }))
        }
    }, WebMessanger.disableTitleBlink = function() {
        WebMessanger.isTitleBlinkDisabled = !0
    }, WebMessanger.showBanner = $WC.Util.throttle((function(e, t) {
        WebMessanger.offline = !0, WebMessanger.checkNetworkAndUpdateBanner();
        var s = !(WMSUI.isBannerShown("wms-netdownbanner") && !WebMessanger.initcountdown);
        WebMessanger.initcountdown = !1, !1 === iswmsframeloaded ? (WMSUI.showBanner(WebMessanger.forceRegister), WebMessanger.reconnectTimer(s, WebMessanger.retryRegister, e, t)) : (WMSUI.showBanner(WebMessanger.forceReconnect), WebMessanger.reconnectTimer(s, WebMessanger.triggerbind, e, t))
    }), null, 4e3), WebMessanger.hideBanner = function() {
        WebMessanger.offline = !1, WMSUI.hideBanner()
    }, WebMessanger.init = function(e) {
        _WMS_NODOMAINCHANGE || _WMS_SAMEDOMAIN || opera_browser || !(!ie || ie && _WMS_FORCEDOMAIN) || (document.domain = _WMSDOMAIN), silent = e, void 0 === this.countrycode && (this.countrycode = "US"), void 0 === this.language && (this.language = "en"), "ar" == this.language && WebMessanger.enableRTLMode(), void 0 === this.rebrand && (this.rebrand = ""), void 0 === this.meeting && (this.meeting = !0), void 0 === this.theme && (this.theme = "grey"), void 0 === this.setzindex && (this.setzindex = 999), void 0 === this.disablenetworkdownbanner && (this.disablenetworkdownbanner = !1), WebMessanger.statusarr = new Array("Offline", "Available", "Invisible", "Busy", "Idle", "dnd", "Away"), WebMessanger.scodearr = new Array(0, 1, 3, 4, 5, 7), WebMessanger.isServiceStatusSet = !1, WebMessanger.offline = !0, WebMessanger.locationurl = window.location.href, WebMessanger.disablewms = !1, WebMessanger.showbannertime = 0, WebMessanger.showchatbannertime = 0, WebMessanger.lastmessage = "", WebMessanger.lastmessagetime = "", WebMessanger.reconnectPrevlimit = 30, WebMessanger.isPresenceEnabled() && (setTimeout((function() {
            WMSUI.runIdleTimer()
        }), 10), setTimeout((function() {
            WMSUI.checkDocumentActive()
        }), 20)), WMSUI.init(), WebMessanger.systemdown = !1, WebMessanger.ucmap = {}, WebMessanger.waitchats = {}, WebMessanger.liveChats = new Array, WebMessanger.chatmap = {}, WebMessanger.threadmap = {}, WebMessanger.unreadthreadmap = {};
        for (var t = [], s = 0; s < localStorage.length; s++) {
            var i = localStorage.key(s);
            "_wms_orgcontacts" == i.substring(i.indexOf("_")) && t.push(i)
        }
        t.forEach((function(e) {
            $WC.WmsLocalStorage.removeItem(e)
        }))
    }, WebMessanger.forceRegister = function() {
        WebMessanger.initcountdown = !0, document.getElementById("recntime").innerHTML = $WC.I18N("connectionerror.reconnect"), WebMessanger.retryRegister()
    }, WebMessanger.forceReconnect = function() {
        WebMessanger.initcountdown = !0, document.getElementById("recntime").innerHTML = $WC.I18N("connectionerror.reconnect"), WebMessanger.triggerbind()
    }, WebMessanger.reconnectTimer = function() {
        var e = [30, 60, 90, 120],
            t = 0;

        function s(e, t) {
            return e = +e, t = +t, Math.floor(Math.random() * (t - e + 1) + e)
        }
        return window.addEventListener("online", (function() {
                t = -1
            })),
            function(i, n, a, o) {
                i ? (t = 0, e[0] = s(5, 30)) : t < e.length - 1 && t++;
                var r = e[t];
                a && (r = s(a, o = o || a)), WMSUI.showCountDownInBanner(r, n)
            }
    }(), WebMessanger.reconnect = function(e, t, s) {
        null != s && 1 == s && (this.reconnecting = !1), 1 != this.reconnecting && (this.reconnecting = !0, null == this.retry && (this.retry = 0), this.retry++, setTimeout((function() {
            WebMessanger.registerWms(WebMessanger.prd, WebMessanger.zuid, WebMessanger.uname, WebMessanger.nname, silent, !0)
        }), e), WebMessanger.serverdown(), WMSUI.RestartTimers())
    }, WebMessanger.isReconnecting = function() {
        return this.reconnecting
    }, WebMessanger.registerZuid = function(e, t, s, i) {
        WebMessanger.registerWms(e, t, s, null, i)
    }, WebMessanger.registerAnnon = function(e, t, s, i) {
        WebMessanger.disableContacts(), WebMessanger.disableGroups(), WebMessanger.disableActiveChat(), WebMessanger.disableProfile(), WebMessanger.disableMeeting(), WebMessanger.disableNotification(), WebMessanger.disableCWActions(), WebMessanger.disableSmartChat(), this.registerAnnonUser = !0, WebMessanger.authtype = 4, WebMessanger.registerWms(e, t, t, s, i)
    }, WebMessanger.register = function(e, t, s, i, n, a, o, r, l) {
        if ("undefined" == typeof JSON) {
            var d = $WC.Util.createElement("script"),
                c = window.location.protocol,
                u = "https:" === c ? wmsjsversion + "_https" : wmsjsversion;
            if (d.type = "text/javascript", d.src = c + "//" + this.jsstaticdomain + "/ichat/" + u + "/js/8b9999fd_json2.min.js", WebMessanger.getClientSRIValues("json2.min.js")) {
                var m = WebMessanger.getClientSRIValues("json2.min.js");
                d.crossOrigin = "anonymous", d.integrity = m
            }
            document.body.appendChild(d), EventsUtil.attachonload.call(d, h)
        } else h();

        function h() {
            _WMSAUTHSCOPE = n, _WMSZAID = a, _WMSPOTYPE = o, (_WMSAUTHTOKEN = i) && _WMSAUTHSCOPE && (s = !0, WebMessanger.authtype = 1), _WMSAUTHTOKEN && _WMSZAID && (s = !0, WebMessanger.authtype = 8), _WMSZAID && WebMessanger.tokenpairauth && (s = !0, WebMessanger.authtype = 10), _WMSOAUTHTOKEN && (s = !0, WebMessanger.authtype = 9), _WMSRTCATOKEN && (WebMessanger.authtype = 13), $WC.Util.isZuid(t) ? (r = l && r ? r : null, WebMessanger.registerWms(e, t, null, r, s, null, l)) : WebMessanger.isRTCUser(t) ? WebMessanger.registerWms(e, t, null, r, s, null, l) : WebMessanger.registerWms(e, null, t, null, s, null, l)
        }
    }, WebMessanger.setStaticServerPath = function() {
        $WC.Config.set({
            staticserverpath: window.location.protocol + "//" + WebMessanger.staticdomain + "/ichat",
            cliqstaticserverpath: window.location.protocol + "//" + WebMessanger.staticdomain + "/chat/source"
        })
    }, WebMessanger.showEmptyBar = function() {
        _WMSEMPTYBAR = !0
    }, WebMessanger.disableToggleUI = function() {}, WebMessanger.disableDragDrop = function() {
        _WMSDRAGDROP = !1
    }, WebMessanger.setIamTicketName = function(e) {
        _WMSIAMTICKETNAME = e
    }, WebMessanger.setPhotoServer = function(e) {
        _WMSPHOTOSERVER = window.location.protocol + "//" + e, $WC.Config.set({
            photoserver: _WMSPHOTOSERVER
        })
    }, WebMessanger.setIamServer = function(e) {
        WMSIAMURL = e
    }, WebMessanger.setChatServer = function(e) {
        _WMSCHATURL = window.location.protocol + "//" + e + "/"
    }, WebMessanger.setMailServer = function(e) {
        _WMSMAILURL = window.location.protocol + "//" + e + "/"
    }, WebMessanger.setCalendarServer = function(e) {
        _WMSCALENDARSERVER = window.location.protocol + "//" + e
    }, WebMessanger.setTheme = function(e) {}, WebMessanger.setDomain = function(e) {
        _WMSDOMAIN = e
    }, WebMessanger.isChatPaused = function() {
        return WebMessanger.chatdeactivated || WebMessanger.allprdchatdeactivated || WebMessanger.chatdisabled
    }, WebMessanger.disableAudioVideoChat = function() {
        _WMSDISABLEAVCHAT = !0, $WC.Config.set({
            _WMSDISABLEAVCHAT: !0
        })
    }, WebMessanger.disableChatFromProfileInfoCard = function() {
        $WC.Config.set({
            disableChatInProfileInfoCard: !0
        })
    }, WebMessanger.disableOpenInCliq = function() {
        _WMSOPENINCLIQ = !1
    }, WebMessanger.getDomain = function() {
        return _WMSDOMAIN
    }, WebMessanger.getServiceName = function() {
        return this.servicename
    }, WebMessanger.setConfig = function(e) {
        _WMSCONFIG = e
    }, WebMessanger.setChatBarPrimaryColor = function(e) {
        document.documentElement.style.setProperty("--wms-primary-color", e)
    }, WebMessanger.loadSalesIQJS = function() {
        if (wmsUserConfig.salesiqjsurl && "1" === WmsSettings.salesiq_chatbar && wmsUserConfig.salesiq_enabled_prdlist && -1 !== wmsUserConfig.salesiq_enabled_prdlist.split(",").indexOf(WebMessanger.prd) && !silent) {
            var e = document.getElementsByTagName("head");
            e && 0 != e.length || ((e = [])[0] = $WC.Util.createElement("head"), document.insertBefore(doc.body, e[0])), $WC.Util.loadFiles(wmsUserConfig.salesiqjsurl, "script", (function() {
                WmsMainUI.applyChatBarOptions()
            }))
        }
    }, WebMessanger.setSalesIQServerURL = function(e) {
        _WMSSALESIQSERVER = window.location.protocol + "//" + e
    }, WebMessanger.getSalesIQServerURL = function() {
        return _WMSSALESIQSERVER
    }, WebMessanger.initCliqAVManager = function() {
        var e = window.location.protocol + WmsSettings.adminsettings.av_library.js_url[0];
        e = e.substring(0, e.indexOf("/chat"));
        var t = {
                ZUID: $WC.Config.get("zuid"),
                _AV_BETA_TESTERS: "-1",
                MEDIADEFAULTSTATICURL: e + "/chat/source/officechat/sound/default",
                IMGDEFAULTSTATICURL: e + "/chat/source/officechat/images/default",
                PHOTOSERVER: _WMSPHOTOSERVER,
                tp_static_url: e + "/chat/tpv3",
                _CONNECTED: !0,
                IS_APPACC_USER: WebMessanger.isCliqUser(),
                IS_GUEST_USER: WebMessanger.isGuestUser(),
                IS_CUSTOM_DOMAIN: _WMS_SAMEDOMAIN,
                CLIENT_PORTAL_ZAID: _WMSZAID
            },
            s = new $WC.ForkChat,
            i = !1,
            n = {
                constants: t,
                wms_status_api: function() {
                    return !WebMessanger.systemdown
                },
                user_status_api: {
                    isBusy: function() {
                        return "3" == WebMessanger.scode
                    },
                    isDND: function() {
                        return "5" == WebMessanger.scode
                    }
                },
                settings_api: {
                    get: function(e) {
                        return "globalsoundnotify" === e ? 1 : WmsSettings.adminsettings[e] ? "1" == WmsSettings.adminsettings[e] ? 1 : "0" == WmsSettings.adminsettings[e] ? 0 : WmsSettings.adminsettings[e] : 0
                    },
                    update: function(e, t, s) {
                        var i = "";
                        for (var n in e) i += "" == i ? "" : "&", i += n + "=" + e[n];
                        "" !== i && WebMessanger.updateSettings(i, (function() {
                            if (this.response) {
                                var e = JSON.parse(this.response),
                                    s = e[0] && e[0].objString;
                                if (s)
                                    for (var i in s) WmsSettings.adminsettings[i] = s[i]
                            }
                            "function" == typeof t && t()
                        }), s)
                    }
                },
                sound_manager: {
                    play: function(e, t, s) {
                        var i = s && s.loop || !1,
                            n = s && s.mildTone ? .1 : null;
                        WmsSound.playAVTone(e, t, i, n)
                    },
                    stop: function(e) {
                        WmsSound.stop()
                    },
                    preLoadFiles: function(e) {
                        WmsSound.preloadFiles(e)
                    }
                },
                notification_api: {
                    notify: function(e) {
                        WmsNotification.notifyNewCall(e.title, null, null, !1, e.icon, e.body)
                    },
                    notifyInTitle: function() {},
                    revertTitle: function() {
                        ChatBlink.stopRepeat(), $WC.DesktopNotification.close("call")
                    }
                },
                users_api: {
                    getName: function(e, t) {
                        return WmsContacts.getDisplayName(e) || t || ""
                    },
                    getImgUrlById: function(e, t) {
                        return t = $WC.Matcher.check("imagesize", t) ? t : "thumb", $WC.WmsContacts.getUserPhoto(e, null, t)
                    }
                },
                resource_api: {
                    getRealValue: function(e, t) {
                        return $WC.I18N(e, t)
                    },
                    combineResourceFiles: function(e) {
                        WmsResource.extendResourceObject(e)
                    }
                },
                get_z_index: function() {
                    return $WC.Config.get("zindex")
                },
                get_sid: function() {
                    return WebMessanger.getSid()
                },
                get_raw_sid: function() {
                    return WebMessanger.getRawSid()
                },
                is_wms_owner: function() {
                    return wmsnotifyowner && wmsnotifyowner.isOwner()
                },
                is_avcliq_notify_owner: function() {
                    return avcliqnotifyowner && avcliqnotifyowner.isOwner()
                },
                get_synced_current_time: function() {
                    return Date.now() - WebMessanger.server_sync_time_diff
                },
                get_wms_rtt: function(e) {
                    WebMessanger.getWMSRTT(e)
                },
                server_config: WmsSettings.adminsettings && WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.av_features,
                isDesktopApp: WmsImplHandler.invokeSynchronously(WmsUIImpl.isDesktopApp),
                desktopScreenCapturer: WmsImplHandler.invokeSynchronously(WmsUIImpl.isDesktopApp) && WmsImplHandler.invokeSynchronously(WmsUIImpl.getScreenCapturerForAVCall),
                handleChatOpen: function(e, t, s) {
                    if (e) WmsMainUI.scheduleAutoFocus(e), WmsHybridSearch.checkAndOpenChat($WC.WmsConstants.HYBRIDSEARCH.CHAT, null, null, null, null, null, e);
                    else if (t) WmsMainUI.scheduleAutoFocus(t), WmsHybridSearch.checkAndOpenChat($WC.WmsConstants.HYBRIDSEARCH.CONTACT, t);
                    else if (s) {
                        var i = $WC.Bots.get(s);
                        i && WmsMainUI.scheduleAutoFocus(i.CHID), WmsHybridSearch.checkAndOpenChat($WC.WmsConstants.HYBRIDSEARCH.BOT, s)
                    }
                },
                listener: {
                    handleCallStart: function(e) {},
                    handleCallEnd: function(e) {
                        "undefined" != typeof WmsUIImpl && WmsImplHandler.invoke(WmsUIImpl.onCallEnd, e)
                    }
                },
                ui_util: {
                    openAddParticipantWin: function(e, t, n) {
                        if (!i) {
                            var a = e[0] == WebMessanger.zuid ? e[1] : e[0],
                                o = $WC.Util.getContactName(a);
                            s.mountComponent(null, t, null, null, e, $WC.Util.showErrorMsg, !0, o, n, (function() {
                                i = !1
                            })), i = !0
                        }
                    },
                    closeAddParticipantWin: function() {
                        i && (s.unmountComponent(), i = !1)
                    },
                    updateBanner: function(e, t, s) {
                        e && $WC.Util.showErrorMsg(e, t, s)
                    },
                    loadCliqIframeAndSwitchFocus: function() {
                        return WmsUIImpl.loadCliqIframeAndSwitchFocus()
                    }
                },
                bots_api: {
                    getImgUrl: function(e) {
                        return WmsContacts.getUserPhoto(e)
                    }
                }
            };
        window.MediacallManager = new ZCAVCallManager(n);
        window.$ZCAjx = {
            ajax: function(e) {
                var t = e.url;
                t = "0" == t.indexOf("/") ? t.substring(1) : t;
                var s = e.type,
                    i = e.data || {},
                    n = e.contentType,
                    a = e.headers || {};
                a["X-XHR-exception"] = "true", a["X-ZCSRF-TOKEN"] = $WC.Util.getCSRF(), WebMessanger.isGuestUser() && (a["x-cliq-guid"] = WebMessanger.guest_info.encrypt_id);
                var o = function(t) {
                        var s = "string" == typeof t && "" != t ? JSON.parse(t) : t;
                        0 == e.contentType ? "function" == typeof e.success && e.success(s) : this.getResponseHeader("x-cliq-av") ? e.success(null, null, null, null, {
                            "x-cliq-av": this.getResponseHeader("x-cliq-av")
                        }) : "function" == typeof e.success && e.success(s)
                    },
                    r = function() {
                        var t = "string" == typeof this.response && "" != this.response ? JSON.parse(this.response) : this.response;
                        "function" == typeof e.error && e.error(t)
                    },
                    l = "";
                if ("application/json" == n) a["Content-Type"] = "application/json", l = i;
                else {
                    if (0 == n) return void(ZCJQuery && ZCJQuery.ajax && ZCJQuery.ajax({
                        url: "/" + _CHATCONT + "/" + t,
                        type: "POST",
                        data: i,
                        headers: a,
                        contentType: !1,
                        processData: !1,
                        success: o,
                        error: r
                    }));
                    for (var d in i) l += d + "=" + i[d] + "&"
                }
                "PUT" === s ? $WC.Ajax.putRequestToChat(t, l, o, r, null, null, a) : "POST" === s ? $WC.Ajax.postRequestToChat(t, l, o, r, null, null, a) : "GET" === s ? $WC.Ajax.requestToChat(t, l, o, r, null, null, a) : "-1" != t.indexOf("avversion") && "function" == typeof e.success && e.success(null, null, null, null, {
                    "x-cliq-av": "upgrade"
                })
            }
        }, MediacallManager.initialize(), MediaCall.setClientBridge(MediacallManager)
    }, WebMessanger.loadAVLibrary = function() {
        if (!_WMSDISABLEAVCHAT && !_isCliqAVLibLoaded) {
            var e = document.getElementsByTagName("head");
            e && 0 != e.length || ((e = [])[0] = $WC.Util.createElement("head"), document.insertBefore(doc.body, e[0])),
                function() {
                    if (void 0 !== WmsSettings && WmsSettings.adminsettings.av_library) {
                        var e = WmsSettings.adminsettings.av_library.css_url,
                            t = {};
                        WmsSettings.adminsettings.av_library.integrity_hash && WmsSettings.adminsettings.av_library.integrity_hash[e[0]] && (t.integrity = "sha384-" + WmsSettings.adminsettings.av_library.integrity_hash[e[0]]), $WC.Util.loadFiles(e, "link", (function() {
                            ! function() {
                                if (void 0 !== WmsSettings && WmsSettings.adminsettings.av_library) {
                                    var e = WmsSettings.adminsettings.av_library.js_url,
                                        t = {};
                                    WmsSettings.adminsettings.av_library.integrity_hash && WmsSettings.adminsettings.av_library.integrity_hash[e[0]] && (t.integrity = "sha384-" + WmsSettings.adminsettings.av_library.integrity_hash[e[0]]), $WC.Util.loadFiles(e, "script", (function() {
                                        _isCliqAVLibLoaded = !0, WebMessanger.initCliqAVManager()
                                    }), 5, t)
                                }
                            }()
                        }), 5, t)
                    }
                }()
        }
    }, WebMessanger.loadAnnotatorLibrary = function() {
        if (("764037743" == WebMessanger.zuid || "772926064" == WebMessanger.zuid || "7936929" == WebMessanger.zuid || "801812622" == WebMessanger.zuid || $WC.Util.isBetaOrg() && ["ZN", "VO", "ZA", "PR", "ZS", "ZB", "IN", "WP"].includes(WebMessanger.prd)) && (WMSUI.show_imgedit_icon = !0, "undefined" == typeof ZAnnotator && WMSUI.annotator_req_retrycount < 5)) {
            WMSUI.annotator_req_retrycount++, $WC.Util.loadFiles($WC.Config.get("staticserverpath") + "/css/684db852_annotator.css", "link", (function() {
                $WC.Util.loadFiles($WC.Config.get("staticserverpath") + "/js/c0fa7676_annotator.js", "script")
            }))
        }
    }, EventsUtil.attachonload = function(e) {
        void 0 !== this.readyState ? this.onreadystatechange = function() {
            "loaded" != this.readyState && "complete" != this.readyState || e.call(this)
        } : this.onload = function() {
            e.call(this)
        }
    }, WebMessanger.registerWms = $WC.Util.throttle((function(e, t, s, i, n, a, o) {
        WebMessanger.prefetchWmsBridgeJS(), WebMessanger.setStaticServerPath(), t = "" + t, WebMessanger.prd = e, WebMessanger.uname = null != s && null != s ? s : "", WebMessanger.zuid = null != t && null != t ? t : "", WebMessanger.zuid = WebMessanger.zuid && o ? WebMessanger.setNetworkDetails(o) : WebMessanger.zuid, _WMS_RETRY_COUNT++, WebMessanger.updateDebugInfo("onRegister. Tab ID: " + window.getWmsTabId() + " count: " + _WMS_RETRY_COUNT), void 0 === WebMessanger.authtype && WebMessanger.enableTokenPairAuth(), void 0 === WebMessanger.nname && (WebMessanger.nname = null != i && null != i ? i : ""), null == a && null == WebMessanger.settings && (_WMSEMPTYBAR && (n = !0), WebMessanger.init(null != n && n), WebMessanger.initCrossOrigin()), "undefined" != typeof CrmPlusImpl && "function" == typeof CrmPlusImpl.isLoadedInCrmplus && CrmPlusImpl.isLoadedInCrmplus() && "CT" != WebMessanger.prd && "LD" != WebMessanger.prd && (_WMSCONFIG &= ~WMSSessionConfig.PRESENCE_PERSONAL);
        var r = document.getElementById("pconnect");
        if (!r) {
            var l = $WC.Util.createElement("iframe", "pconnect");
            l.name = "wmspconnect", l.style.display = "none", document.body.appendChild(l), r = document.getElementById("pconnect")
        }
        var d = "" != WebMessanger.zuid ? WebMessanger.zuid : WebMessanger.uname,
            c = !1;
        n && !WebMessanger.silentOverriddenForAnnouncement || (c = !0);
        var u = WebMessanger.prd,
            m = "";
        WebMessanger.network_info.url && (m = "/" + (m = "/" === WebMessanger.network_info.url[0] ? WebMessanger.network_info.url.slice(1) : WebMessanger.network_info.url));
        var h = "/" + _WMSCONT + m + "/pconnect" + dext + "?prd=" + u + "&uname=" + d + "&samedomain=" + _WMS_SAMEDOMAIN + $WC.Util.nocachefix(!0) + "&config=" + _WMSCONFIG + "&settings=" + c + "&wmscont=" + _WMSCONT + "&nodomainchange=" + _WMS_NODOMAINCHANGE + "&retrycount=" + _WMS_RETRY_COUNT;
        if (lfromstatic && (h += "&staticdomain=" + WebMessanger.jsstaticdomain + "&staticversion=" + wmsjsversion), _WMSSST && (h += "&sst=true"), WebMessanger.tokenpairauth && (h += "&tokenpair=true"), WebMessanger.crossoriginallowed && (h += "&crossorigin=true"), WebMessanger.hosturl && (h = WebMessanger.hosturl + h), WebMessanger.frameorigin) h += "&frameorigin=" + WebMessanger.frameorigin;
        else {
            var g = window.location.protocol + "//" + window.location.host;
            if (window !== window.top) {
                if ("about:" == window.location.protocol) {
                    for (var p = window;
                        "about:" == p.location.protocol && p.parent;) p = p.parent;
                    g = p.location.protocol + "//" + p.location.host
                }
                if (void 0 !== location.ancestorOrigins)
                    for (var f = 0; f < window.location.ancestorOrigins.length; f++) - 1 === g.indexOf(window.location.ancestorOrigins[f]) && (g.length && (g += ","), g += window.location.ancestorOrigins[f]);
                else if (window.location.search) {
                    var v = new URLSearchParams(window.location.search).get("frameorigin");
                    v && (g.length && (g += ","), g += v)
                } else document.referrer && (g.length && (g += ","), g += new URL(document.referrer).origin)
            }
            h += "&frameorigin=" + encodeURIComponent(g)
        }
        WebMessanger.fp_hash && (h += "&hash=" + WebMessanger.fp_hash["wmsbridge.js"].split("_")[0]), _WMSZAID && (h += "&zaid=" + _WMSZAID), _WMSPOTYPE && (h += "&potype=" + _WMSPOTYPE), WebMessanger.crossoriginisolation && (h += "&coi=true"), r.src = h, WebMessanger.pconnectframe = r, iswmsframeloaded = !1, WebMessanger.scheduleWMSFrameMonitor()
    }), null, _RETRYREGINTERVAL), WebMessanger.scheduleWMSFrameMonitor = function() {
        iswmsframemonitorrunning || (iswmsframemonitorrunning = !0, WebMessanger.updateDebugInfo("Started frame monitor"), clearTimeout(retryregistertimer), retryregistertimer = setTimeout((function() {
            WebMessanger.registerMonitor()
        }), 6 * _RETRYREGINTERVAL))
    }, WebMessanger.registerMonitor = function() {
        WebMessanger.offline = !0, WebMessanger.updateDebugInfo("Retry triggered from frame monitor"), WebMessanger.isReuseSession() ? WebMessanger.retryRegister() : WebMessanger.showBanner()
    }, WebMessanger.clearWMSFrameMonitor = function(e) {
        iswmsframemonitorrunning && WebMessanger.updateDebugInfo("Stopped frame monitor"), clearTimeout(retryregistertimer), iswmsframemonitorrunning = !1, e && (WebMessanger.offline = !1, WebMessanger.isReuseSession() || WebMessanger.hideBanner())
    }, WebMessanger.retryRegister = function() {
        WebMessanger.isReuseSession() && !op && top.WebMessanger.offline || WebMessanger.reconnect(0, "Retry Register", !0), clearTimeout(retryregistertimer), retryregistertimer = setTimeout((function() {
            WebMessanger.registerMonitor()
        }), _RETRYREGINTERVAL)
    }, WebMessanger.isReuseSession = function() {
        return (_WMSCONFIG & WMSSessionConfig.REUSE_SESSION) == WMSSessionConfig.REUSE_SESSION
    }, WebMessanger.getZuid = function() {
        return this.zuid
    }, WebMessanger.uisettingsconst = {
        contacts: 1,
        groups: 2,
        activechats: 4,
        notifications: 8,
        settings: 16,
        smartchat: 32
    }, WebMessanger.disableContacts = function() {}, WebMessanger.disableGroups = function() {}, WebMessanger.disableActiveChat = function() {}, WebMessanger.disableProfile = function() {}, WebMessanger.disableNotification = function() {}, WebMessanger.disableSmartChat = function() {
        WMSUI.smartchatenabled = !1, WebMessanger.disableSmartChatKeyboardShortcut();
        var e = document.getElementById("wmsbarmovablehint");
        e && (e.style.display = "none")
    }, WebMessanger.disableCWActions = function() {
        this.disableCWAction = !0
    }, WebMessanger.hideChatBar = function() {
        document.getElementById("wmstoolbar") && (_WMSCHATHIDDEN = !0, document.getElementById("wmstoolbar").style.display = "none")
    }, WebMessanger.showChatBar = function() {
        document.getElementById("wmstoolbar") && _WMSCHATHIDDEN && (document.getElementById("wmstoolbar").style.display = "block", _WMSCHATHIDDEN = !1)
    }, WebMessanger.enableGlobalSearch = function(e) {
        WMSUI.globalsearchenabled = !0, null != e && (WMSUI.hidegsicon = e)
    }, WebMessanger.enablePhoneBridge = function(e) {
        WMSUI.phonebridgeenabled = !0, WMSUI.phonebridgeconfig = e
    }, WebMessanger.getPhoneBridgeConfig = function() {
        return WMSUI.phonebridgeconfig
    }, WebMessanger.enableSMSBridge = function(e) {
        WebMessanger.smsbridgeenabled = !0, WebMessanger.smsbridgeconfig = e
    }, WebMessanger.getSMSBridgeConfig = function() {
        return WebMessanger.smsbridgeconfig
    }, WebMessanger.getPhoneBridgeContainer = function() {
        return document.getElementById("wmsphonebridge")
    }, WebMessanger.disableNotebookWidget = function() {
        WMSUI.notebook_widget_disabled = !0;
        var e = document.getElementById("wms_notebook_icon");
        e && (e.style.display = "none")
    }, WebMessanger.enableNotebookWidget = function() {
        WMSUI.notebook_widget_disabled = !1, document.getElementById("wms_notebook_icon").style = ""
    }, WebMessanger.getEntityIdFromChat = function(e) {
        var t = WindowHandler.getWinObjById(e);
        if (t) return t.entityid
    }, WebMessanger.getChatIdFromEntityId = function(e) {
        for (var t in WindowHandler.openedChats) {
            var s = WindowHandler.getWinObjById(t);
            if (s && s.entityid == WebMessanger.getPrd() + "." + e) return t;
            if (s && s.entityid == e) return t
        }
    }, WebMessanger.enableNotificationForAnnonUser = function(e, t) {
        $WC.DesktopNotification.requestPermission(), WmsSound.annonUserSoundNotification = e, WMSUI.annonUserDesktopNotification = t, WmsSound.loadNotificationTunes()
    }, WebMessanger.hideEmailVisibility = function(e) {
        WMSUI.isEmailVisibilityHidden = e
    }, WebMessanger.disableContactsListing = function() {
        $WC.Config.set({
            iscontacts_listing_disabled: !0
        })
    }, WebMessanger.setDateFormat = function(e) {
        /^((dd|MM|y{2,4})( {0,1})\/( {0,1})(dd|MM)( {0,1})\/( {0,1})(dd|MM|y{2,4}))$/.test(e) && $WC.Config.set({
            dateformat: e
        })
    }, WebMessanger.overrideChatbarDisableSetting = function() {
        WebMessanger.is_chat_enabled_always = !0
    }, WebMessanger.sendRequestToCliq = function(e, t, s, i, n) {
        "GET" === e ? $WC.Ajax.requestToChat(t, s, i, n) : "POST" === e ? $WC.Ajax.postRequestToChat(t, s, i, n) : "PUT" === e ? $WC.Ajax.putRequestToChat(t, s, i, n) : $WC.Ajax.deleteRequestToChat(t, s, i, n)
    }, WebMessanger.getParticipantsData = function(e, t, s) {
        var i = "v1/chats/" + e + "/participants";
        $WC.Ajax.requestToChat(i, null, t, s)
    }, WebMessanger.chatletsSearch = function(e, t, s) {
        var i = "",
            n = "",
            a = function(e) {
                for (var t = 0; t < WMSUI.chatletsSearch.noresults.length; t++) {
                    if (-1 !== WMSUI.chatletsSearch.noresults[t].search_data.indexOf(e)) return WMSUI.chatletsSearch.noresults.splice(t, 1), !0
                }
                return !1
            };
        i = !1 === function(e) {
            for (var t = 0; t < WMSUI.chatletsSearch.results.length; t++) {
                if (-1 !== WMSUI.chatletsSearch.results[t].search_data.indexOf(e)) return n = WMSUI.chatletsSearch.results[t].next_token, WMSUI.chatletsSearch.results.splice(t, 1), !0
            }
            return a(e)
        }(e) ? "content=" + e : n ? "content=" + e + "&next_token=" + n : "content=" + e, $WC.Ajax.requestToChat("v2/chatlets/search", i, (function(s) {
            var i = JSON.parse(s);
            i && !$WC.Util.isEmptyObject(i) && (WMSUI.chatletsSearch.results.push({
                search_data: e,
                next_token: i.next_token
            }), "function" == typeof t && t(i))
        }), (function(t) {
            WMSUI.chatletsSearch.noresults.push({
                search_data: e
            }), "function" == typeof s && s(t)
        }))
    }, WebMessanger.getChatletsMedia = function(e, t, s, i, n, a) {
        e = WebMessanger.prd + "." + e;
        var o = t ? "limit=" + t : "limit=50",
            r = "";
        s && (o += "&type=" + s);
        i && function(e, t) {
            return !($WC.Util.isEmptyObject(WMSUI.chatletsSearch.mediaresult) || !WMSUI.chatletsSearch.mediaresult[e] || WMSUI.chatletsSearch.mediaresult[e].type != t) && (r = WMSUI.chatletsSearch.mediaresult[e].next_token, delete WMSUI.chatletsSearch.mediaresult[e], !0)
        }(e, s) && r && (o += "&next_token=" + r), $WC.Ajax.requestToChat("v2/chatlets/" + encodeURIComponent(e) + "/media", o, (function(t) {
            var i = JSON.parse(t);
            i && !$WC.Util.isEmptyObject(i) && (WMSUI.chatletsSearch.mediaresult[e] = {
                type: s,
                next_token: i.next_token
            }, "function" == typeof n && n(i.list))
        }), (function(e) {
            "function" == typeof a && a(e)
        }))
    }, WebMessanger.getUserName = function() {
        return this.uname
    }, WebMessanger.getNickName = function() {
        return this.nname
    }, WebMessanger.setNickName = function(e) {
        this.nname = e
    }, WebMessanger.getUserId = function() {
        return this.uid
    }, WebMessanger.getPrd = function() {
        return this.prd
    }, WebMessanger.getSid = function() {
        return this.sid
    }, WebMessanger.setSid = function(e) {
        this.sid = e
    }, WebMessanger.getRawSid = function() {
        return this.rawsid
    }, WebMessanger.getRebrand = function() {
        return this.rebrand
    }, WebMessanger.getUnreadFeeds = function() {
        $WC.Ajax.requestToChat("unreadzmsg.do")
    }, WebMessanger.getPinnedChats = function() {
        if (!silent) {
            var e = {
                "x-consents-version": "1",
                "X-XHR-exception": !0,
                "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
            };
            $WC.Ajax.requestToChat("v2/pincategories", "include_chats=true", (function() {
                var e = this.response && JSON.parse(this.response),
                    t = [];
                if (e.data && e.data.length)
                    for (var s = 0; s < e.data.length; s++) e.data[s].chats && (t = t.concat(e.data[s].chats));
                var i = [];
                t && t.forEach((function(e) {
                    if ("onetoone" === e.type) {
                        var t = e.recipients_summary && e.recipients_summary.split(",");
                        t ? e.recipants = [{
                            zuid: t[0]
                        }, {
                            zuid: t[1]
                        }] : i.push(e.id), e.pcount = 2
                    } else "thread" !== e.type && "channel" !== e.type || i.push(e.id)
                })), i.length && WebMessanger.getChatDataForPinnedChats(i.join(",")), $WC.RecentChats.updatePinnedChatList(e, !0, null, !0), $WC.RecentChats.setPinnedChatsLastFetchedTime(Date.now())
            }), null, null, null, e)
        }
    }, WebMessanger.getChatDataForPinnedChats = function(e) {
        var t = "chat_ids=" + e,
            s = {
                "X-XHR-exception": "true",
                "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
            };
        $WC.Ajax.requestToChat("v1/chats", t, (function() {
            var e = this.response && JSON.parse(this.response);
            $WC.RecentChats.updatePinnedChatList(e, null, !0), $WC.HybridSearch.populateRecentChats()
        }), null, null, null, s)
    }, WebMessanger.sendMailTranscript = function(e, t) {
        var s = "chid=" + e + "&mailid=" + encodeURIComponent(t);
        $WC.Ajax.postRequestToChat("sendtranscriptasmail.do", s)
    }, WebMessanger.setStatus = function(e, t, s, i, n) {
        if (!(e > 7 || e < 0 || 4 == e || "" == t.trim() && 2 !== e))
            if ($WC.I18N("Available") == t ? t = "Available" : $WC.I18N("Busy") == t ? t = "Busy" : $WC.I18N("Invisible") == t ? t = "Invisible" : $WC.I18N("userstatus.away") == t ? t = "Away" : $WC.I18N("userstatus.dnd") == t && (status = t), s) {
                var a = {
                        "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
                        "Content-Type": "application/json"
                    },
                    o = {
                        code: {
                            1: "available",
                            2: "invisible",
                            3: "busy",
                            5: "dnd",
                            7: "away"
                        }[e],
                        message: t,
                        expiry: (new Date).getTime() + 60 * s * 1e3
                    };
                $WC.Ajax.putRequestToChat("v2/statuses/ephemeral", o, i, n, null, null, a)
            } else {
                o = "smsg=" + encodeURIComponent(t.trim()) + "&scode=" + e;
                $WC.Ajax.postRequestToChat("setstatus.do", o, i, n)
            }
    }, WebMessanger.deleteStatus = function(e, t, s, i) {
        t && (e = "ephemeral"), $WC.Ajax.deleteRequestToChat("v2/statuses/" + e, null, s, i, null, null, {
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        })
    }, WebMessanger.getStatusMessage = function() {
        $WC.Ajax.requestToChat("v2/statuses/current", null, (function() {
            var e = JSON.parse(this.response).data,
                t = e.message,
                s = e.code,
                i = null,
                n = null;
            e.transient_status && (t = e.transient_status.message, s = e.transient_status.code, n = e.transient_status.expiry), e.activity_status && (t = e.activity_status.message, s = e.activity_status.code, i = e.activity_status.activity_code, n = e.activity_status.expiry), WmsImplHandler.invoke(WmsContactImpl.handleStatusMessage, {
                offline: "0",
                available: "1",
                invisible: "2",
                busy: "3",
                idle: "4",
                dnd: "5",
                away: "7"
            }[s], t, i, n);
            var a = !1;
            WmsSettings.isActivityStatusConfigEnabled() && WmsSettings.isCurrentActivityStatusOverrideDisabled() && (a = !0), WmsImplHandler.invoke(WmsContactImpl.isActivityStatusOverrideDisabled, a)
        }), null, null, null, {
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        })
    }, WebMessanger.setStatusWithID = function(e, t, s) {
        e && $WC.Ajax.putRequestToChat("v2/statuses/" + e + "/set", null, t, s, null, null, {
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        })
    }, WebMessanger.syncStatusMessage = function() {
        var e = null;
        return $WC.Ajax.requestToChat("getdefaultstatus.do", null, (function() {
            "" !== this.responseText && (e = JSON.parse(this.responseText)[0].objString)
        }), null, null, !1), e
    }, WebMessanger.getAllStatusMessage = function() {
        $WC.Ajax.requestToChat("getcstatus.do", null, null, (function() {
            9005 == JSON.parse(this.response)[0].objString.ERRCODE && WMSUI.showErrorMsg($WC.I18N("status.change.notallowed"))
        }), null, null, {
            "X-XHR-exception": "true"
        })
    }, WebMessanger.remoteWork = function(e, t, s) {
        if (WebMessanger.isCliqUser()) {
            var i = "company/" + _WMSAPPACCOUNTID + "/v2/me/";
            i += e ? "checkin" : "checkout";
            var n = {
                "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
                "Content-Type": "application/json"
            };
            $WC.Ajax.putRequestToChat(i, void 0, (function() {
                if ("function" == typeof t) {
                    var e = JSON.parse(this.response);
                    t(e)
                }
            }), (function() {
                if ("function" == typeof s) {
                    var e = JSON.parse(this.response);
                    s(e)
                }
            }), null, !0, n)
        }
    }, WebMessanger.setRemoteWorkCallback = function(e) {
        WebMessanger.remoteworkcallback = e
    }, WebMessanger.getUserCheckinStatus = function(e, t) {
        if (WebMessanger.isCliqUser()) {
            var s = {
                "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
            };
            $WC.Ajax.requestToChat("v2/me", "source=remote_tools", (function() {
                var t = JSON.parse(this.response),
                    s = {
                        zuid: t.zuid,
                        checkin_status: t.checkin_status,
                        checkin_status_text: t.checkin_status_text,
                        checkin_time: t.checkin_time,
                        checkin_allowed: t.checkin_allowed,
                        duration: t.duration,
                        status: t.status
                    };
                $WC.Config.get("localUserData") && $WC.Config.get("localUserData").email || $WC.Config.set({
                    localUserData: t,
                    email: t.email_id
                }), "function" == typeof e && e(s)
            }), t, null, null, s)
        }
    }, WebMessanger.getUserDetailsFromServer = function(e, t, s) {
        e || (e = WebMessanger.zuid), $WC.Ajax.requestToChat("v2/users/" + e, "fields=" + encodeURIComponent("all,checkin_status"), (function() {
            var e = JSON.parse(this.response).data;
            e.zuid == WebMessanger.zuid && $WC.Config.set({
                localUserData: e,
                email: e.email_id
            }), "function" == typeof t && t(e)
        }), s)
    }, WebMessanger.getPresence = function(e, t, s) {
        var i;
        if (WmsContacts.get(e) && WmsContacts.get(e).STATUS || WmsOrgContacts.getOrgContactsList(e) && WmsOrgContacts.getOrgContactsList(e).STATUS)(i = WmsContacts.get(e) ? {
            status: WmsContacts.get(e).STATUS,
            stype: WmsContacts.get(e).STYPE,
            status_msg: WmsContacts.get(e).STATUSMSG
        } : {
            status: WmsOrgContacts.getOrgContactsList(e).STATUS,
            stype: WmsOrgContacts.getOrgContactsList(e).STYPE,
            status_msg: WmsOrgContacts.getOrgContactsList(e).STATUSMSG
        }) && "function" == typeof t && t(i);
        else {
            $WC.Ajax.requestToChat("v2/users/" + e, "fields=" + encodeURIComponent("presence"), (function() {
                var e = JSON.parse(this.response).data;
                e.presence && "function" == typeof t && (i = {
                    status: e.presence.scode,
                    stype: e.presence.st,
                    status_msg: e.presence.smsg
                }, t(i))
            }), (function() {
                "function" == typeof s && s(this.response)
            }))
        }
    }, WebMessanger.getBarChatSettings = function(e) {
        $WC.Ajax.requestToChat("getwmssettings.do", "property=" + encodeURIComponent(e))
    }, WebMessanger.UpdateWmsSettings = function(e, t, s, i, n, a, o) {
        var r = "property=" + encodeURIComponent(e) + "&key=" + t + "&value=" + s;
        r += i ? "&prd=" + i : "", r += n ? "&opr=" + n : "", $WC.Ajax.postRequestToChat("updwmssettings.do", r, a, o)
    }, WebMessanger.updateSettings = function(e, t, s) {
        $WC.Ajax.postRequestToChat("updbsettings.do", e, t, s, null, null, {
            "X-XHR-exception": "true"
        })
    }, WebMessanger.clearCustomStatus = function() {
        $WC.Ajax.postRequestToChat("clearcstatus.do")
    }, WebMessanger.clearReminder = function(e) {
        var t = "calid=" + encodeURIComponent(e);
        $WC.Ajax.postRequest("clearreminder" + dext, t)
    }, WebMessanger.getEditMsgHistory = function(e, t) {
        var s = {
                "X-XHR-exception": "true",
                "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
            },
            i = "";
        WebMessanger.isGuestUser() ? (s["x-cliq-guid"] = WebMessanger.guest_info.encrypt_id, i = "guestapi/v2/chats/" + e + "/transcript/" + t) : i = "v2/chats/" + e + "/transcript/" + t, $WC.Ajax.requestToChat(i, null, (function() {
            var e = JSON.parse(this.response).transcript;
            Message.updateEditMsgHistory(e)
        }), null, null, null, s)
    }, WebMessanger.getChatTranscript = function(e) {
        var t = e || (new Date).getTime(),
            s = "limit=" + ZMSG_CHATCOUNT + "&totime=" + t;
        ZMSG_USERID ? (s = ZMSG_SEARCHVALUE && "title=" + ZMSG_SEARCHVALUE + "&", s += "recipient=" + ZMSG_USERID + "&totime=" + t) : s += ZMSG_SEARCHVALUE && "&content=" + ZMSG_SEARCHVALUE;
        var i = {
                "X-XHR-exception": "true",
                "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
            },
            n = function() {
                if (!silent) {
                    var e = JSON.parse(this.response).data;
                    e.chats && 0 == e.chats.length && (ZMSG_CHATPGNO = "End");
                    var t = document.getElementById("chathistorywin");
                    ZMSG_transContent.querySelector("[errormsg=true]") && $WC.Util.removeElement(ZMSG_transContent.querySelector("[errormsg=true]")), e.chats[0] && t.querySelector('[cid="' + e.chats[0].chatid + '"]') && 1 != ZMSG_CHATPGNO && e.chats.shift(), ZMSG_CHATS = e.chats, ZMSGUI.populate(e.chats)
                }
            },
            a = function() {
                ZMSG_transmoreloader && ZMSG_transmoreloader.parentNode && $WC.Util.removeElement(ZMSG_transmoreloader), ZMSGUI.showErrorMessage()
            };
        WebMessanger.isCliqUser() && !ZMSG_USERID ? $WC.Ajax.requestToChat("v1/history", s, n, a, null, null, i) : $WC.Ajax.requestToChat("v1/chats", s, n, a, null, null, i)
    }, WebMessanger.deleteSelectedChats = function(e) {
        $WC.Ajax.postRequestToChat("deleteselectedchat.do", "chid=" + e)
    }, WebMessanger.deleteChat = function(e) {
        $WC.Ajax.postRequestToChat("deletechat.do", "chid=" + e)
    }, WebMessanger.continueChat = function(e, t, s, i) {
        if (WebMessanger.isChatPaused() || silent) WebMessanger.checkAndEnableChatBar("", e, !0);
        else if (Chat.isExists(e)) {
            WMSUI.handleChatExist(e);
            var n = WindowHandler.getWinObjById(e);
            if (t && n)
                if (n.msgdisp.querySelector('.wms-msgfrag[data-msgtime="' + t + '"]')) Message.glowBubble(t, n.ctrlcomp, e);
                else {
                    var a = Message.getMarkerElement(e + "|" + t, t, n.msgdisp);
                    Message.loadSpecificTranscript(e, n.msgdisp, a)
                }
        } else {
            if (WmsMainUI.scheduleAutoFocus(e), WebMessanger.prefetch_channels && $WC.Util.isChannelChid(e) && null === $WC.Channels.getLastFetchedTime()) return $WC.Channels.initChannels(), void WmsMainUI.scheduleAutoJoin(e);
            var o = "chid=" + e + "&btf=" + !0 + "&autojoin=" + !1 + "&sid=" + encodeURIComponent(WebMessanger.getSid());
            t && (Message.mentionMsgInfo[e] = e + "|" + t, WmsMainUI.scheduleAutoFocus(e));
            $WC.Ajax.postRequestToChat("continuechat.do", o, (function(e) {
                if (e && 8 == e.ctype) {
                    $WC.Channels.updateChannelMetaData(e);
                    var t = WindowHandler.getWinObjById(e.chid);
                    t && $WC.Channels.get(t.objId) && 0 == $WC.Channels.isUserHasPermission(t.objId, $WC.WmsConstants.USERPERMISSIONS.SEND_MESSAGE) && (t.permdenied = !0, t.disableComposerOptions($WC.I18N("channels.announcementonly")))
                }
                "function" == typeof s && s(e)
            }), (function(e) {
                "function" == typeof i && i(e)
            }))
        }
    }, WebMessanger.disable = function() {
        this.disablewms = !0, this.abortBind(), this.clearWMSFrameMonitor()
    }, WebMessanger.isOnline = function(e) {
        $WC.Ajax.postRequest("isonline" + dext, "ulist=" + encodeURIComponent(e))
    }, WebMessanger.isdisablewms = function() {
        return this.disablewms
    }, WebMessanger.setRebrand = function(e) {
        "baihui" !== e && (this.rebrand = e)
    }, WebMessanger.setJsStaticDomain = function() {}, WebMessanger.setCssStaticDomain = function() {}, WebMessanger.useSameDomain = WebMessanger.enableCustomDomain = function() {
        _WMS_SAMEDOMAIN = !0
    }, WebMessanger.setWmsContext = function(e) {
        _WMSCONT = e, $WC.Config.set({
            WMSCONT: _WMSCONT
        })
    }, WebMessanger.forceDomainChange = function() {
        _WMS_FORCEDOMAIN = !0
    }, WebMessanger.setNoDomainChange = function() {
        _WMS_NODOMAINCHANGE = !0
    }, WebMessanger.setNewClientPortalAuthentication = function() {
        _NEWCLIENTPORTAL_AUTHENTICATION = !0
    }, WebMessanger.silentOverriddenForAnnouncement = !1, WebMessanger.overrideSilentForAnnouncement = function() {
        WebMessanger.silentOverriddenForAnnouncement = !0
    }, WebMessanger.overrideSilentForBanners = function() {
        WMSUI.overrideSilentForBanners = !0
    }, WebMessanger.setLocale = function(e, t) {
        for (var s = new Array("en", "zh", "ta", "ja", "de", "ca", "cs", "da", "el", "es", "et", "fi", "fr", "hr", "hu", "it", "ko", "lt", "nb", "nl", "pl", "pt", "ro", "ru", "sk", "sv", "th", "tr", "uk", "vi", "ar", "zh_tw"), i = -1, n = 0; n < s.length; n++)
            if (s[n] == e) {
                i = n;
                break
            }
        i > -1 ? (this.language = e, this.countrycode = t) : (this.language = "en", this.countrycode = "US")
    }, WebMessanger.disableMeeting = function() {
        this.meeting = !1
    }, WebMessanger.setMeetingUrl = function(e) {
        wmsmeetingurl = window.location.protocol + "//" + e
    }, WebMessanger.setAppAccountId = function(e) {
        _WMSAPPACCOUNTID = e
    }, WebMessanger.isCliqUser = function() {
        return !!_WMSAPPACCOUNTID
    }, WebMessanger.reload = function() {
        try {
            (newurl = window.location.href).indexOf("#") > -1 && (newurl = window.location.href.substring(0, window.location.href.indexOf("#"))), setTimeout((function() {
                return window.location.href = newurl, !0
            }), 3e3)
        } catch (e) {
            setTimeout((function() {
                return window.location.href = WebMessanger.locationurl, !0
            }), 3e3)
        }
    }, WebMessanger.setMaxChatWindow = function(e) {
        WebMessanger.forceMaxWin = e
    }, WebMessanger.isAutoJoinAllowed = function(e, t) {
        var s = WindowHandler.exist.filter((function(e) {
            if ("empty" != e) return !0
        })).length;
        return !WebMessanger.is_custom_menu_opted && (!(s >= WindowHandler.getMaxWin()) && (3 != WebMessanger.scode && 5 != WebMessanger.scode && ("456089" != WebMessanger.orgid || "Estancia Bot" != e && "Jeeves Bot" != e && "CT_2243174094947259583_64396901" !== t)))
    }, WebMessanger.push = function(e) {
        if (e.mtype == WM_RECONNECT) {
            var t;
            if ((s = e.msg || {}) && s.instruction) t = s.instruction.split("-")[0];
            void 0 === t && WebMessanger.reconnect(CT_JOIN, "psdown", !0), silent || WmsMainUI.resetAllUnreadCount()
        } else if (e.mtype == WM_NFY_LOGOUT || e.mtype == WM_AUTH_FAILED) {
            WebMessanger.disable();
            var s = e.msg;
            setTimeout((function() {
                e.mtype == WM_NFY_LOGOUT ? (WebMessanger.clearTicket(s.ticket), !0 !== WmsImplHandler.invokeSynchronously(Collaboration.handleLogout, s && s.reason) && WebMessanger.reload()) : (WmsImplHandler.invoke(Collaboration.handleWmsDisable, s && s.reason), WmsImplHandler.invoke(Collaboration.handleAuthFailure), WebMessanger.postDebugInfoToServer("AuthFailed"))
            }), 1), $WC.Util.clearBrowserStorage()
        } else if (e.mtype == PS_REG_ACK) iswmsframeloaded = !0, WebMessanger.clearWMSFrameMonitor();
        else if (e.mtype == WM_INVALID_AUTH_PARAMS || e.mtype == WM_INVALID_TOKEN) {
            iswmsframeloaded = !1, WebMessanger.scheduleWMSFrameMonitor();
            var i = e.mtype == WM_INVALID_AUTH_PARAMS ? "InvalidAuthParam" : "InvalidToken";
            WmsImplHandler.invoke(Collaboration.handleAuthFailure), WebMessanger.postDebugInfoToServer(i)
        } else if (e.mtype == WM_SERVER_UP) silent || (WmsMainUI.resetAllUnreadCount(), $WC.HybridSearch.populateRecentChats(), Commands.sync = !0, $WC.Channels.sync = !0, $WC.RecentChats.setPinnedChatsLastFetchedTime(null), WindowHandler.syncChatWindowTranscripts(), WindowHandler.restoreChats(), WebMessanger.registerAnnonUser || WebMessanger.isCliqUser() || WebMessanger.isRTCChat() || WebMessanger.getUnreadFeeds(), _WMSWINFOCUS ? (WebMessanger.syncAdminSettings(), WindowHandler.getPinMsgForOpenedChats(), $WC.Bots.initBots(!0)) : (WebMessanger.sync_adminsettings_onfocus = !0, WebMessanger.get_pinmsg_onfocus = !0, $WC.Bots.syncFromServerAfterFocus())), WmsChatCache.removeAll(), Message.deletedMessages.removeAll(), "undefined" != typeof AcsApi && WmsImplHandler.invoke(AcsApi.handleServerUP), WebMessanger.updateDebugInfo("Called serverup"), WmsImplHandler.invoke(Collaboration.serverup), _WMS_RETRY_COUNT = 0, WebMessanger.pause_printlog_requests = !1;
        else if (e.mtype == WM_CONN_UP) {
            var n = "string" == typeof e.msg ? JSON.parse(e.msg) : {};
            WmsImplHandler.invoke(Collaboration.connectionup, n.t)
        } else if (e.mtype == WM_NFY_ATTACH) {
            n = e.msg;
            this.uid = n.uid, "" != n.nname && (this.nname = n.nname), this.sid = n.sid, this.rawsid = n.rsid, myMsgObj.sender = n.uname, myMsgObj.zuid = n.zuid, this.zuid = n.zuid, WebMessanger.clearWMSFrameMonitor(!0), iswmsframeloaded = !0, silent || WmsContacts.updateFromMDParent(WmsContacts.getZohoContacts()), setTimeout((function() {
                WebMessanger.serverup(e.msg)
            }), 100), WmsImplHandler.invoke(WmsContactImpl.handleGetContacts)
        } else if (e.mtype == WM_NFY_DETACH) setTimeout((function() {
            WebMessanger.serverdown()
        }), 100);
        else if (-7 == e.mtype) WmsImplHandler.invoke(Collaboration.handleServiceMessage, e.msg);
        else if (e.mtype == NFY_USER_IDLE) {
            s = e.msg;
            var a = $WC.Util.splitWmsFormattedString(s.oc, 4);
            s.chid = a[0], s.zuid = a[2], s.sender = s.zuid, s.dname = $WC.Util.getContactName(s.zuid, a[3]);
            var o = s.chid;
            (ce = WindowHandler.getWinObjById(o)) && !$WC.Util.isLocalUser(s.zuid) && ce.clearTypingStatus(), s.msg = "", silent || Self.status.update(s), WmsImplHandler.invoke(WmsChatUIImpl.handleUserIdle, s.dname, o)
        } else if (e.mtype == NFY_USER_ENTERED) {
            s = e.msg, a = $WC.Util.splitWmsFormattedString(s.oc, 4);
            s.chid = a[0], s.zuid = a[2], s.sender = s.zuid, s.dname = $WC.Util.getContactName(s.zuid, a[3]);
            o = s.chid;
            (ce = WindowHandler.getWinObjById(o)) && !$WC.Util.isLocalUser(s.zuid) && ce.clearTypingStatus(), s.msg = "", silent || Self.status.update(s), WmsImplHandler.invoke(WmsChatUIImpl.handleUserEnteredText, s.dname, o)
        } else if (e.mtype == NFY_USER_TYPING) {
            s = e.msg, a = $WC.Util.splitWmsFormattedString(s.oc, 4);
            s.chid = a[0], s.zuid = a[2], s.sender = s.zuid, s.dname = $WC.Util.getContactName(s.zuid, a[3], !0), s.mtype = NFY_USER_TYPING;
            var r;
            o = s.chid;
            if ((ce = WindowHandler.getWinObjById(o)) && !$WC.Util.isLocalUser(s.zuid) && ((r = ce.typingstatusnode).innerHTML = "", $WC.Util.removeClass(r, "wms_cw_typingstatus_animate"), $WC.Util.isImageLazyLoaded(s.zuid) ? r.innerHTML = '<img class="wms_cw_userphoto" data-zcprofileid="' + s.zuid + '" src="' + WmsContacts.getUserPhoto(s.zuid) + '" title="' + $WC.Util.getContactName(s.zuid, s.dname, !0) + '">' : r.innerHTML = '<div class="wms_menu_item_img wms_typingstatus_img" data-imgid="' + s.zuid + '" data-originalsrc="' + WmsContacts.getUserPhoto(s.zuid) + '" title="' + $WC.Util.getContactName(s.zuid, s.dname, !0) + '"></div>', r.innerHTML += '<div class="wms_usertyping_status"><span></span><span></span><span></span></div>', r.setAttribute("data-typingstatus", !0), $WC.Util.isImageLazyLoaded(s.zuid) || $WC.Util.loadOriginalImage(r, !0, !0)), !silent) {
                Self.status.update(s);
                var l = s.chid + "." + s.sender,
                    d = s.sender;
                Self.Timer[l] = setTimeout((function() {
                    Self.status.clear(o, d);
                    var e = WindowHandler.getWinObjById(o);
                    e && !$WC.Util.isLocalUser(s.zuid) && e.clearTypingStatus()
                }), 15e3)
            }
            WmsImplHandler.invoke(WmsChatUIImpl.handleUserTyping, s.dname, o)
        } else if (e.mtype == WM_ACK_CONNECT) {
            n = e.msg;
            this.uid = n.uid, "" != n.nname && (this.nname = n.nname), this.sid = n.sid, this.XA = n.xa, this.rawsid = n.rsid, this.uname = n.uname, this.orgid = n.orgid, myMsgObj.sender = n.uname, myMsgObj.zuid = n.zuid, this.zuid = n.zuid, this.retry = 0, this.reconnecting = !1, this.registered = !0, silent || WebMessanger.isOrgUser() || WebMessanger.isNetworkUser() || WmsMainUI.removeChannelMenu(), WmsImplHandler.invoke(Collaboration.onConnect), WebMessanger.clearWMSFrameMonitor(!0), iswmsframeloaded = !0, WebMessanger.serverup(e.msg), WindowHandler.restoreChats(!0), silent || WebMessanger.registerAnnonUser || WebMessanger.isCliqUser() || WebMessanger.isRTCChat() || WebMessanger.getUnreadFeeds(), $WC.Config.set({
                orgid: WebMessanger.orgid,
                dname: WebMessanger.nname,
                sid: WebMessanger.sid
            }), null == $WC.WmsLocalStorage.getItem("wms_firstloaded") && $WC.WmsLocalStorage.setItem("wms_firstloaded", (new Date).getTime());
            var c = "object" == typeof WmsSettings.adminsettings && void 0 !== WmsSettings.adminsettings.cliqaccess && 0 == WmsSettings.adminsettings.cliqaccess;
            silent || c || WebMessanger.isRTCChat() || this.registerAnnonUser && !WebMessanger.isExclusiveChat() || this.loadAVLibrary(), WebMessanger.isExclusiveChat() && (WebMessanger.isGuestUser() ? WebMessanger.verifyGuestAndGetChatDetails() : WebMessanger.exclusive_chat_info.entity_id && WebMessanger.joinChatlet(WebMessanger.exclusive_chat_info.entity_id)), WebMessanger.loadScreenGrabberLib(), silent && (!WebMessanger.isExclusiveChat() || "RP" !== WebMessanger.prd && "DC" !== WebMessanger.prd) || WmsSound.loadNotificationTunes(), WebMessanger.is_custom_menu_opted && null === $WC.RecentChats.getPinnedChatsLastFetchedTime() && WebMessanger.getPinnedChats(), ChatTour.checkAndScheduleNotifier($WC.WmsLocalStorage.getItem("wms_firstloaded"))
        } else if (e.mtype == WM_CLEAR_NOTI) {
            if ("clearunreadcount" == (n = e.msg).opr) silent || ZMSGUI.clearAllUnreadChats();
            else if ("clearallnotifications" == n.opr) {
                if (!silent) try {
                    ZMSG_CLKUNREAD = !1, $WC.RecentChats.setUnreadFeedsCount(0), WmsMainUI.updateUnreadChatsCount(), $WC.HybridSearch.populateRecentChats()
                } catch (e) {}
            } else if ("clearreminder" == n.opr) {
                null != (u = n.data).reminder && (silent || WMSUI.removeNotificationHolder("reminder" + u.reminder, !1))
            } else if ("notifyunreadcount" == n.opr) {
                var u;
                if ((u = n.data).chid) {
                    if (silent) return;
                    for (var m = u.chid.split(","), h = 0; h < m.length; h++) WmsMainUI.resetUnreadCount(m[h]), WmsMainUI.updateUnreadCountInUI(m[h]), $WC.RecentChats.updateLastSeenTime(m[h]), WindowHandler.getWinObjById(m[h]) && WindowHandler.getWinObjById(m[h]).makeNormal();
                    $WC.HybridSearch.isUnreadFilterOpen() && WmsMainUI.filterUnreadChats(), ChatBlink.stopRepeat(), WmsMainUI.updateUnreadChatsCount()
                }
            }
        } else if (e.mtype == CT_NFY_ACTCHATADD) {
            function g(e, t) {
                var s = {};
                s.chid = e, s.pcount = t.pcount, s.recipients = t.recipants, WebMessanger.mapChat(s)
            }
            n = e.msg.ac;
            var p = e.msg.uc || e.msg.ac;
            for (var f in p) {
                if (10 == p[f].ctype && p[f].addinfo && p[f].addinfo.indexOf("ENTITYID") > -1) {
                    var v = p[f].addinfo.split(":");
                    p[f].entityid = v[v.indexOf("ENTITYID") + 1]
                }
                if (g(f, p[f]), "8" === p[f].ctype) {
                    var C = p[f];
                    C.chid = f, $WC.Channels.get(C.chid) || $WC.Channels.setChannelInfoFromMsgObj(C)
                }
            }
            if (e.msg.uc) {
                for (var b in e.msg.uc) $WC.Util.isThreadChid(b) && (WebMessanger.unreadthreadmap[b] = e.msg.uc[b]);
                $WC.RecentChats.updateUnReadChats(e.msg.uc), WmsMainUI.updateUnreadChatsCount(), $WC.Util.pubsub.publish("/chats/unreadchatdetails")
            }
            for (var f in n) {
                (ce = WindowHandler.getWinObjById(f)) && ce.title != n[f].title && ce.updateChatTitle(n[f].title), g(f, n[f])
            }
            $WC.RecentChats.updateFromActiveChats(n), $WC.Util.pubsub.publish("/recentchats/updatechatslistui"), WebMessanger.methodsInCallbackQueue.forEach((function(e) {
                e()
            })), WebMessanger.methodsInCallbackQueue = []
        } else if (e.mtype == CT_NFY_ACTCHATDELETE) n = e.msg;
        else if (e.mtype == CT_NFY_MSG) {
            n = e.msg;
            WmsImplHandler.invoke(Collaboration.handleChatNotifyMessage, n.chid, n.sender, n.msg)
        } else if (e.mtype == CT_INF_MSG) {
            var y = (n = e.msg).salesiqchat || !1;
            if (n.h && "CALL_INFO" !== n.msg.mode) return;
            o = n.threadchatid || n.chid;
            if ((ce = WindowHandler.getWinObjById(o)) && "8" == ce.ctype && ("USER ADDED" === n.msg.mode || "USER DELETED" === n.msg.mode)) {
                var _ = [],
                    W = n.msg.userslist;
                for (var S in W) _.push({
                    zuid: S,
                    uname: S,
                    dname: W[S]
                });
                var w = "USER ADDED" === n.msg.mode ? parseInt(ce.partcount) + _.length : parseInt(ce.partcount) - _.length;
                ce.updatePartCount(w), "USER ADDED" === n.msg.mode && WindowHandler.addParticipantsByID(o, _), $WC.RecentChats.updatePartCount(o, _.length, "USER ADDED" === n.msg.mode), $WC.Chats.updatePartCount(o, _.length, "USER ADDED" === n.msg.mode)
            }
            var M = n.sender;
            if (n.sender = "CT_INF_MSG", n.msg.chid = o || "", ce && ce.updateInfoMessage(n.msg, n.time, "", M, n.dname), !$WC.Util.isLocalUser(n.msg.opruser.zuid) && "CALL_INFO" === n.msg.mode && ("CALL_CANCELED" === n.msg.msg.status || "CALL_MISSED" === n.msg.msg.status)) {
                if (10 == n.ctype && "MT" != WebMessanger.prd && "NS" != WebMessanger.prd && $WC.Util.checkIfChatletHidden(n.entityid) || WmsMainUI.incrementUnreadCount(n.chid), ce && (!ce.mutedinterval || ce.mutedinterval < (new Date).getTime()) || !WmsMainUI.getMuteStatus(o)) {
                    var I = "1" === n.a;
                    WmsNotification.notifyNewMessage(n, "chatmsg", I)
                }
                1 == WmsMainUI.getUnreadCount(o) && ($WC.RecentChats.updateLastSeenTime(n.chid, n.time), ce && ce.showUnreadMsgs())
            }
            if ("11" == n.ctype && ("THREAD_CLOSED" == n.msg.mode || "THREAD_REOPENED" == n.msg.mode))
                if (ce) ce.updateThreadState(n.msg.mode);
                else {
                    var T = "THREAD_CLOSED" == n.msg.mode ? "closed" : "open",
                        A = $WC.RecentChats.get(o);
                    if (A && (A.THREAD_STATE = T), ee = WindowHandler.getWinObjById($WC.Util.getParentChidFromThreadChid(o))) {
                        var E = ee.ctrlcomp.querySelector('[data-thread_chid="' + o + '"]');
                        E && E.setAttribute("data-thread_state", T)
                    }
                }
            if ("EVENTNOTIFICATION" === n.msg.mode) {
                if ("11" != n.ctype || n.ht ? WmsMainUI.incrementUnreadCount(n.chid) : WmsMainUI.incrementUnreadCount(n.parentchatid, n.threadchatid), (ce && (!ce.mutedinterval || ce.mutedinterval < (new Date).getTime()) || !WmsMainUI.getMuteStatus(o)) && !n.ht) {
                    I = "1" === n.a;
                    WmsNotification.notifyNewMessage(n, "chatmsg", I)
                }(1 == WmsMainUI.getUnreadCount(n.chid) || "11" == n.ctype && 1 == WmsMainUI.getUnreadCount(n.parentchatid)) && ($WC.RecentChats.updateLastSeenTime(n.chid, n.time), ce && ce.showUnreadMsgs())
            }!1 === y && $WC.RecentChats.updateLastMsgInfo({
                chid: n.threadchatid || o,
                sender: n.sender,
                dname: n.dname,
                msg: n,
                lmtime: n.time,
                msguid: n.msguid,
                addinfo: n.lmsgaddinfo,
                mtype: e.mtype
            })
        } else if (e.mtype == WM_INFO) try {
                n = e.msg;
                silent || WebMessanger.isCliqUser() && $WC.SecurityManager.hasPermission("taz") || ($WC.RecentChats.incrementUnreadFeedsCount(), ZMSG_MSGOBJ.push(n), WmsMainUI.updateUnreadChatsCount(), $WC.HybridSearch.populateRecentChats()), WmsImplHandler.invoke(Collaboration.handleZohoMessage, e.prd, n.MSG, n.URL, n.URLSTRING, n.CATEGORY, n.SENDER, n.ATTACHMENTS, n.PARAMS, n.ID, n.DNAME, n.ORGS, n.GROUPS)
            } catch (e) {} else if (e.mtype == WM_CUSTOM) "COMMAND_CREATED" === e.msg.ACTION ? Commands.updateList(e.msg.data) : "COMMAND_DELETED" === e.msg.ACTION && Commands.deleteObj(e.msg.data), WmsImplHandler.invoke(Collaboration.handleCustomMessage, e.msg);
            else if (e.mtype == WM_CROSSPRODUCT) {
            if ("CL" == e.prd) {
                if ("EVENT REMINDER" == (n = e.msg).operation) silent || WMSUI.showRemainder(n.data);
                else if ("UPDATE PREFERENCES" == n.operation) {
                    s = n.data && JSON.parse(n.data);
                    var U = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"].indexOf(s.weekstart);
                    $WC.Config.set({
                        weekstart_index: "" + U
                    })
                }
            } else if ("HR" == e.prd) {
                if ((n = e.msg).attendance) {
                    var k = {
                        zuid: WebMessanger.zuid,
                        checkin_status: n.checkin_status,
                        checkin_status_text: n.att_status_text,
                        checkin_allowed: n.checkin_allowed,
                        attendance: n.attendance,
                        duration: n.tempTsecs
                    };
                    $WC.Config.set({
                        localUserData: Object.assign({}, $WC.Config.get("localUserData"), k)
                    }), "function" == typeof WebMessanger.remoteworkcallback && WebMessanger.remoteworkcallback(k)
                }
            }
            $WC.Util.pubsub.publish("/wmsevents/crossproduct", e.prd, e.msg), WmsImplHandler.invoke(Collaboration.handleCrossProductMessage, e.prd, e.msg)
        } else if (e.mtype == ACS_MSG) {
            var N = e.msg;
            "undefined" != typeof AcsApi && WmsImplHandler.invoke(AcsApi.handlePush, N.type, N.data)
        } else if (e.mtype == WM_PRESENCE) n = e.msg;
        else if (e.mtype == WM_ZTI_FAIL_MSG) {
            n = e.msg;
            ZTI.handleFailure(n.reason, n)
        } else if (e.mtype == CT_JOIN) {
            var x = (n = e.msg).title,
                O = (o = n.chid, n.ctype),
                R = n.sid,
                D = "";
            y = n.salesiqchat || !1;
            if (WebMessanger.isGuestUser() || "MT" != WebMessanger.prd && "NS" != WebMessanger.prd && $WC.Util.checkIfChatletHidden(n.entityid)) return;
            if ($WC.Config.get("disableOpeningForwardMessageRecipientChat") && WindowHandler.forwardedMessageRecipientChat[o]) return void delete WindowHandler.forwardedMessageRecipientChat[o];
            if (WebMessanger.isExclusiveChat() && n.entityid && -1 != n.entityid.indexOf(WebMessanger.exclusive_chat_info.entity_id) && (WebMessanger.exclusive_chat_info.chat_id = o), n.users)
                for (h = 0; h < n.users.length; h++) {
                    a = $WC.Util.splitWmsFormattedString(n.users[h].s, 3);
                    n.users[h].zuid = a[0], n.users[h].uname = a[0], n.users[h].dname = a[2], D = a[0], WmsContacts.updateUserStatus(n.users[h].zuid, n.users[h].scode, n.users[h].st, n.users[h].smsg)
                }
            if (1 == O && 2 == n.pcount && "false" == n.customgroup && D && WMSUI.dmchat_obj.length > 1)
                if (WMSUI.dmchat_obj[WMSUI.dmchat_obj.length - 1].zuid != D) return;
            if (WebMessanger.liveChats.push(o), 1 == O && WmsImplHandler.invoke(WmsChatUIImpl.handleNewChat, n), 10 == O) {
                var $ = n.cbdata && JSON.parse(n.cbdata);
                try {
                    ChatletImpl.handleUserList(n.entityid, n.users, $)
                } catch (e) {}
                n.autojoin && WmsMainUI.scheduleAutoFocus(o)
            }
            if (R && R == WebMessanger.sid && 1 == O && "false" == n.customgroup) {
                var H = $WC.WmsSessionStorage.getChatInfo(o, "state");
                WmsMainUI.isAutoFocusScheduled(o) || WmsMainUI.isAutoFocusScheduled(D) || null != H || WmsMainUI.scheduleAutoFocus(o)
            }
            var L = 1 != silent || Chat.isExists(o) ? null : WMSUI.getServiceChatContainer(o, n),
                P = 1 == silent && 0 != WMSUI.dmchat_obj.length && WMSUI.dmchat_obj[WMSUI.dmchat_obj.length - 1].zuid == D;
            if ((1 == O || 5 == O || 8 == O || 9 == O || 10 == O || 11 == O || 4 == O && y) && (!silent || WebMessanger.isExclusiveChat() && WebMessanger.isChatAllowedAsExclusiveChat(o) || L || P)) {
                if (5 != O || !CustomChat.isActive(o, n.addinfo)) {
                    if (WmsChatUIImpl.isActive(o)) return;
                    try {
                        if ("true" == n.silent) return
                    } catch (e) {}
                    if (setTimeout((function() {
                            WmsContacts.verifyUserStatus(n.users)
                        }), 1), 8 == O || 11 == O ? (8 == O && ($WC.Channels.get(n.chid) && $WC.Channels.get(n.chid).oc_id ? $WC.Channels.updateChannel(n.chid, "joined", 1) : $WC.Channels.setChannelsSync(!0)), 8 != O || $WC.Channels.get(o) || $WC.Channels.setChannelInfoFromMsgObj(n)) : 9 == O && (_WMSWINFOCUS ? $WC.Bots.initBots() : $WC.Bots.getFromServerAfterFocus()), "5" === O && (n.prd = e.prd), n.pcount = +n.pcount, WebMessanger.mapChat(n), Chat.isExistsInCliqbar(o) && !WMSUI.getServiceChatContainer(o)) {
                        if (WmsMainUI.isAutoFocusScheduled(n.chid) ? WmsMainUI.removeAutoFocusSchedule(n.chid) : 2 === n.pcount && n.users[0] && WmsMainUI.isAutoFocusScheduled(n.users[0].zuid) && WmsMainUI.removeAutoFocusSchedule(n.users[0].zuid), $WC.Util.isThreadChid(o))(ce = WindowHandler.getWinObjById(o)) && (ce.partcount = n.pcount, ce.updatePartCount(n.pcount));
                        10 == O && null == R && WMSUI.handleChatExist(o)
                    } else Chat.isExistsInCliqbar(o) && WMSUI.getServiceChatContainer(o) && WindowHandler.getWinObjById(o).close(), Chat.isExists(o) || ("11" == n.ctype && WebMessanger.wrapThreadsDataFromJoin(n), WMSUI.createNewChatWindow(n, L));
                    var F = WindowHandler.getWinObjById(o);
                    if (2 == n.pcount && (!n.customgroup || "false" == n.customgroup)) {
                        var B = WebMessanger.getSenderFromMsgobj(n) || n.users[0] && n.users[0].uname;
                        WebMessanger.storeUserInfoAndUpdateTitle(B, n.chid), Message.handlePrivateReply(F.recipant)
                    }
                    if (n.mutedinterval && n.mutedinterval > (new Date).getTime() && (F.updateMuteInfo(n.mutedinterval), WmsMainUI.setMuteStatus(n.chid, !0)), 8 != O && 9 != O && 11 != O && F.updateParticipantsFromJoin(n.users), 8 == O && (F.updatePartCount(n.pcount), F.updateChannelImage()), 10 == O && (F.updateWebUrl(n.context), F.updateInfoMsgTemplate(n.cbdata), void 0 !== WebMessanger.glowOnOpen && void 0 !== WebMessanger.glowOnOpen[n.entityid] && (F.glowChatWindow(), delete WebMessanger.glowOnOpen[n.entityid]), null == n.attached && Chat.isExists(o) && F.updateAttachInfo(!0)), 9 == O) {
                        var j = n.bots && n.bots[0];
                        F.updateBotImage(j), F.getActions(j)
                    }
                    "1" === n.attached && F.updateAttachInfo(!0)
                }
            } else 2 == O && WmsImplHandler.invoke(Collaboration.handleUserList, o, n.users);
            if (4 != O && 5 != O || CustomChat.handleUserList(o, n), "6" === O && WmsImplHandler.invoke(Presence.handleUserList, o, n), WMSUI.chatUsersObj[o] && (F.updateRecipientInfo(n.users), F.restrictFileSharingForExternalUser(), WMSUI.removeChatUserObj(o)), 1 == O && 2 == n.pcount && n.users[0] && null != WmsFileUploadHandler.scheduleFileForUpload[n.users[0].zuid] || (9 == O || 10 == O) && null != WmsFileUploadHandler.scheduleFileForUpload[o]) {
                var z = F && 2 == F.partcount && "false" == F.customgroup ? n.users[0].zuid : o,
                    G = WmsFileUploadHandler.scheduleFileForUpload[z];
                WmsFileUploadHandler.addFileForUpload(o, G.fileObj, G.comment, G.atmention, G.fname, !1);
                var q = WmsFileUploadUI.getCallBackObject();
                WmsFileUploadHandler.startFileUpload(o, q), WmsFileUploadUI.addProgressBarForEachFile(o, q), delete WmsFileUploadHandler.scheduleFileForUpload[z]
            }
            WindowHandler.checkAndHighlightChat(o)
        } else if (e.mtype == WM_PUB_SUB) {
            var V = e.msg;
            "pubsub.ulist" == (je = V.opr) ? (WmsImplHandler.invoke(PubSubApi.addUsers, V.pskey, V.psid, V.ulist), WmsImplHandler.invoke(PubSubImpl.handleUserList, V.pskey, V.ulist)) : "pubsub.usersubscribed" == je ? (WmsImplHandler.invoke(PubSubApi.addUsers, V.pskey, V.psid, V.ulist), WmsImplHandler.invoke(PubSubImpl.handleUserIn, V.pskey, V.ulist)) : "pubsub.userunsubscribed" == je ? (WmsImplHandler.invoke(PubSubApi.removeUsers, V.pskey, V.psid, V.ulist), WmsImplHandler.invoke(PubSubImpl.handleUserOut, V.pskey, V.ulist)) : "pubsub.message" == je ? WmsImplHandler.invoke(PubSubImpl.handleMessage, V.pskey, V.msg) : "pubsub.authfailure" == je && WmsImplHandler.invoke(PubSubApi.handleAuthFailure, V.msg)
        } else if (e.mtype == CT_ATT_MSG || e.mtype == CT_SYSTEM_EDIT && e.msg && "20" == e.msg.current_mtype) {
            if (e.mtype == CT_SYSTEM_EDIT && e.msg && e.msg.msg && 1 == e.msg.msg.length) {
                var Y = e.msg.msg[0].msg;
                delete e.msg.msg, Object.assign(e.msg, Y), e.msg.time = e.msg.origin_time, e.msg && !e.msg.hasOwnProperty("isInfected") && (e.msg.isInfected = !1)
            }
            O = (s = e.msg).ctype, o = s.threadchatid || s.chid;
            $WC.Util.isThreadChid(s.chid) && s.threadchatid && (s.chid = $WC.Util.getParentChidFromThreadChid(s.threadchatid));
            y = s.salesiqchat || !1;
            var Z = WindowHandler.getWinObjById(o);
            if (1 != O && 10 != O && 12 != O || WmsImplHandler.invoke(WmsChatUIImpl.handleAttachmentMessage, s), $WC.Config.get("disableOpeningForwardMessageRecipientChat") && WindowHandler.forwardedMessageRecipientChat[o]) return void delete WindowHandler.forwardedMessageRecipientChat[o];
            L = 1 != silent || Chat.isExists(o) ? null : WMSUI.getServiceChatContainer(o, n);
            if ((1 == O || 5 == O || 8 == O || 9 == O || 10 == O || 11 == O || 4 == O && y) && (!silent || WebMessanger.isExclusiveChat() && WebMessanger.isChatAllowedAsExclusiveChat(o) || L || Z && Z.isdmchat) && (y || Message.isSameBrowser(s.sid) || !s.sid && (WebMessanger.isGuestUser() || $WC.FormFileShare.getLastUploadStatus()) || $WC.Util.isLocalUser(s.uname) || !$WC.Util.isLocalUser(s.uname)) && ("att" === s.mod || "contact" === s.mod || "location" === s.mod || "event" === s.mod) && ($WC.FormFileShare.getLastUploadStatus() && $WC.FormFileShare.resetLastUploadStatus(), 5 != O || !CustomChat.isActive(o, s.addinfo))) {
                if (WmsChatUIImpl.isActive(o)) return;
                var K = s.entityid;
                if (10 == O && (K || (K = (K = (K = s.addinfo.split(":"))[K.indexOf("ENTITYID") + 1]).split(",")[0]), "MT" != WebMessanger.prd && "NS" != WebMessanger.prd && $WC.Util.checkIfChatletHidden(K))) return;
                if (s.isfirstthreadmessage || !s.threadmsg || s.ht || !1 !== $WC.Util.isLocalUser(s.uname) ? !1 !== $WC.Util.isLocalUser(s.uname) && !s.includesenderinunread || s.threadmsg || WmsMainUI.incrementUnreadCount(s.chid) : WmsMainUI.incrementUnreadCount(s.chid, s.threadchatid), s.m && "11" != O ? WmsMainUI.setMuteStatus(s.chid, !0) : s.threadmsg || WmsMainUI.setMuteStatus(s.chid, !1), Chat.isExists(o) || s.m || s.h && !s.includesenderinunread || s.ht) {
                    if (ce = WindowHandler.getWinObjById(o)) {
                        e.msg.msgackid = e.msg.msgid, WmsFileUploadHandler.handleAckReceived(o, e.msg.msgackid);
                        var X = e.msg.meta && e.msg.meta.post_in_parent_information;
                        if (e.msg.msgid && ce.msgdisp.querySelector('[data-msgackid="' + e.msg.msgid + '"],[data-msgtime="' + e.msg.time + '"]') ? ce.updateMessageFragment(e.msg) : ce.updateMessage(e.msg), !s.m) {
                            I = "1" === s.a;
                            Self.Idle = !0, WmsNotification.notifyNewMessage(s, "chatmsg", I)
                        }
                    }
                } else {
                    if (s.pcount = +s.pcount, "5" === O && (s.prd = e.prd), "undefined" != typeof WmsUIImpl && WmsUIImpl.preventChatWindowOpen) var J = WmsImplHandler.invokeSynchronously(WmsUIImpl.preventChatWindowOpen, O, o);
                    if (WebMessanger.isAutoJoinAllowed(s.title, s.chid) && !J) {
                        if ($WC.Util.isLocalUser(s.sender) && 2 === s.pcount && "1" == O && !s.customgroup) {
                            var Q = JSON.parse(s.t121t);
                            delete Q[s.sender];
                            S = Object.keys(Q)[0];
                            s.title = WmsContacts.getDisplayName(S) || Q[S]
                        }
                        WebMessanger.prefetch_channels && $WC.Util.isChannelChid(o) && null === $WC.Channels.getLastFetchedTime() ? ($WC.Channels.initChannels(), WmsMainUI.scheduleAutoJoin(o)) : "10" == O ? !1 === $WC.Util.isLocalUser(s.sender) && WebMessanger.join(o) : ("8" === O && ($WC.Channels.get(o) || $WC.Channels.setChannelInfoFromMsgObj(s)), "11" === O && s.threadchatid && (s.thread_msgid = s.threadmsguid, s.thread_parentid = s.parentchatid ? s.parentchatid : $WC.Util.isChannelChid(s.chid) ? s.chid : $WC.Util.getParentChidFromThreadChid(s.threadchatid), s.thread_follower = !0, s.thread_parent_title = s.channelData.dn), WMSUI.createNewChatWindow(s, L), WindowHandler.getWinObjById(o).updateMessage(s), $WC.Util.isThreadChid(s.chid) && (s.chid = $WC.Util.getParentChidFromThreadChid(s.chid)), WindowHandler.getWinObjById(o).showPinnedMsg(s))
                    }
                    Self.Idle = !0;
                    var I = "1" === s.a;
                    WmsNotification.notifyNewMessage(s, "newchat", I)
                }
                var ee = WindowHandler.getWinObjById(s.chid);
                if (s.isfirstthreadmessage && ee) {
                    var te = !(!$WC.Util.isLocalUser(s.parentmessagesenderid) && !$WC.Util.isLocalUser(s.sender)),
                        se = s.parentmessagesenderid === s.sender ? 1 : 2,
                        ie = {
                            chat_id: s.threadchatid,
                            follower_count: se,
                            message_count: 1,
                            title: s.title,
                            thread_message_id: s.threadmsguid,
                            is_follower: te
                        };
                    if (s.thread_information = ie, X || ee.updateMessageFragment(s, null, s.parentmsguid), $WC.Util.isLocalUser(s.sender)) {
                        var ne = ee.ctrlcomp.querySelector('[data-msgid="' + s.sender + "_" + s.time + '"]');
                        X && ne ? ((ne = ne.querySelector('[data-msgid="' + s.sender + "_" + s.time + '"]')).className = "", ne.nextSibling && $WC.Util.removeElement(ne.nextSibling)) : WebMessanger.openThreadWindowFromCache(ee.ctrlcomp.querySelector("[data-thread_chid=" + s.threadchatid + "]"), s.threadchatid)
                    }
                }
                var ae = "11" == O ? s.threadchatid : s.chid;
                if ("1" !== s.ht && !$WC.RecentChats.get(ae)) {
                    if ((fe = s).lmtime = fe.lmsgtime, fe.unreadtime = fe.time, $WC.Util.isLocalUser(fe.sender) && (fe.unreadtime = 0, fe.unreadmsgcount = 0), "1" == fe.ctype && fe.t121t) {
                        "false" == fe.customgroup && (fe.recipantssummary = fe.t121t);
                        var oe = JSON.parse(fe.t121t);
                        for (var re in oe) re !== $WC.Config.get("zuid") && (fe.title = oe[re])
                    }
                    "8" != fe.ctype || $WC.Channels.get(fe.chid) || $WC.Channels.setChannelInfoFromMsgObj(fe), void 0 === typeof fe.recipantssummary && (fe.recipantssummary = []), "11" == fe.ctype && (fe.parentchatid = fe.chid, fe.customgroup = !0);
                    var le = {
                        msg: fe.msg,
                        mtype: fe.mtype,
                        sender: fe.sender,
                        __module: "att",
                        msguid: fe.msguid,
                        time: fe.time,
                        dname: fe.uname
                    };
                    fe.lmhash = JSON.stringify(le);
                    var de = {};
                    de[ae] = fe, $WC.RecentChats.updateUnReadChats(de), WmsMainUI.updateUnreadChatsCount()
                }!1 === y && $WC.RecentChats.updateLastMsgInfo({
                    chid: o,
                    sender: s.sender,
                    dname: s.dname,
                    msg: s.msg,
                    msguid: s.msguid,
                    lmtime: s.time,
                    module: s.mod,
                    mtype: e.mtype
                });
                var ce = ce || WindowHandler.getWinObjById(o);
                if (s.threadmsg && !s.ht && (!s.isfirstthreadmessage && ce && ce.followernode && WindowHandler.updateThreadCount(s), $WC.RecentChats.updateLastThreadMsgTime(s.chid, s.time), $WC.RecentChats.updateThreadParentMsgId(s.threadchatid, s.parentmsguid), ee && ee.toggleUnreadThreadBanner()), (s.threadmsg && 1 == WmsMainUI.getUnreadCount(s.chid, null, s.threadchatid) || WmsMainUI.getUnreadCount(s.chid, null, null, !1)) && ($WC.RecentChats.updateLastSeenTime(o, s.time), ce && ce.showUnreadMsgs()), ce && ("0" == ce.savehistory && "0" == s.history ? ce.lastmsg_uid = s.lmsguid : ce.lastmsg_uid = s.msguid), s.threadmsg && ce && WebMessanger.threadmap[s.threadchatid] && (ce.updateThreadFollowerInfo(!0, null, null, !0), delete WebMessanger.threadmap[s.threadchatid]), s.threadmsg && !s.ht) {
                    I = "1" === s.a;
                    WmsNotification.notifyNewMessage(s, "chatmsg", I), ee && ee.updateUnreadThreadCount(s.chid, s.threadchatid)
                }
            }
            4 != O && 5 != O || s.h || CustomChat.handleAttachmentMessage(s), !1 === $WC.Util.isLocalUser(s.uname) && !1 === y && ($WC.Util.pubsub.publish("/chats/unreadchatdetails"), s.meta && s.meta.mentions && (s.meta.mentions.hasOwnProperty(WebMessanger.zuid) || s.meta.mentions.hasOwnProperty("participants") || s.meta.mentions.hasOwnProperty("available")) && $WC.Util.pubsub.publish("/chats/mentions", s))
        } else if (e.mtype == CT_TXT_MSG) {
            O = (n = e.msg).ctype, o = n.threadchatid || n.chid;
            $WC.Util.isThreadChid(n.chid) && n.threadchatid && (n.chid = $WC.Util.getParentChidFromThreadChid(n.threadchatid));
            ce = WindowHandler.getWinObjById(o), y = n.salesiqchat || !1;
            if (1 != O && 10 != O && 12 != O || WmsImplHandler.invoke(WmsChatUIImpl.handleChatMessage, n), $WC.Config.get("disableOpeningForwardMessageRecipientChat") && WindowHandler.forwardedMessageRecipientChat[o]) return void delete WindowHandler.forwardedMessageRecipientChat[o];
            if (Message.isAddMsg(n)) {
                var ue = Object.keys(n.meta.mentions),
                    me = n.msg,
                    he = "";
                if (ue.forEach((function(e) {
                        he = new RegExp("{\\" + e + "}", "g"), me = me.replace(he, "")
                    })), $WC.Util.isEmptyString(me)) return
            }
            K = n.entityid;
            if (10 == O) {
                if (K || (K = (K = (K = n.addinfo.split(":"))[K.indexOf("ENTITYID") + 1]).split(",")[0]), WebMessanger.isExclusiveChat()) {
                    var ge = $WC.Util.isLocalUser(n.uname);
                    (o === WebMessanger.exclusive_chat_info.chat_id || WebMessanger.isChatAllowedAsExclusiveChat(o)) && WmsImplHandler.invoke(WmsUIImpl.handleMsgForMeetingChat, n, ge)
                }
                if ("MT" != WebMessanger.prd && "NS" != WebMessanger.prd && $WC.Util.checkIfChatletHidden(K)) return
            }
            L = 1 != silent || Chat.isExists(o) ? null : WMSUI.getServiceChatContainer(o, n);
            if ((1 == O || 5 == O || 8 == O || 9 == O || 10 == O || 11 == O || 4 == O && y) && (!silent || WebMessanger.isExclusiveChat() && WebMessanger.isChatAllowedAsExclusiveChat(o) || L || ce && ce.isdmchat || WebMessanger.isRTCChat())) {
                if (5 != O || !CustomChat.isActive(o, n.addinfo)) {
                    if (WmsChatUIImpl.isActive(o)) return;
                    if (y || Message.isSameBrowser(n.sid) && Message.isSentFromApi(n.temp_info) || !1 === $WC.Util.isLocalUser(n.uname) || 10 == O || 9 == O || Message.isBotMsg(n) || Message.isCustomMsg(n) || n.includesenderinunread) {
                        if (ce && !ce.isMsgAlreadyUpdated(n, ce.ctrlcomp) || !ce) {
                            var pe = WebMessanger.getSenderFromMsgobj(n) || n.uname;
                            n.isfirstthreadmessage && n.ht || !n.threadmsg || n.ht || !1 !== $WC.Util.isLocalUser(pe) ? !1 !== $WC.Util.isLocalUser(pe) && !n.includesenderinunread || !1 !== y || n.threadmsg || WmsMainUI.incrementUnreadCount(n.chid) : WmsMainUI.incrementUnreadCount(n.chid, n.threadchatid)
                        }
                        if (n.m && "11" != O ? WmsMainUI.setMuteStatus(n.chid, !0) : n.threadmsg || WmsMainUI.setMuteStatus(n.chid, !1), Chat.isExists(o) || n.m || n.h && !n.includesenderinunread || n.ht)
                            if (Self.Idle = !0, ce && !ce.isMsgAlreadyUpdated(n, ce.ctrlcomp)) {
                                if (ce.updateMessage(n), Self.status.clear(o, n.sender), !n.m && (!1 === $WC.Util.isLocalUser(n.uname) || n.includesenderinunread)) {
                                    I = "1" === n.a;
                                    WmsNotification.notifyNewMessage(n, "chatmsg", I)
                                }
                            } else ce && ce.updateMessageFragment(n);
                        else if ("CT_INF_MSG" !== n.sender) {
                            if (n.pcount = +n.pcount, "5" === O && (n.prd = e.prd), "undefined" != typeof WmsUIImpl && WmsUIImpl.preventChatWindowOpen) J = WmsImplHandler.invokeSynchronously(WmsUIImpl.preventChatWindowOpen, O, o);
                            WebMessanger.isAutoJoinAllowed(n.title, n.chid) && !J && (WebMessanger.prefetch_channels && $WC.Util.isChannelChid(o) && null === $WC.Channels.getLastFetchedTime() ? ($WC.Channels.initChannels(), WmsMainUI.scheduleAutoJoin(o)) : "10" == O ? !1 === $WC.Util.isLocalUser(n.sender) && WebMessanger.join(o) : ("8" === O && ($WC.Channels.get(o) || $WC.Channels.setChannelInfoFromMsgObj(n)), "11" == n.ctype && n.threadchatid && (n.thread_msgid = n.threadmsguid, n.thread_parentid = n.parentchatid ? n.parentchatid : $WC.Util.isChannelChid(n.chid) ? n.chid : $WC.Util.getParentChidFromThreadChid(n.threadchatid), n.thread_follower = !0, n.thread_parent_title = n.channelData.dn), WMSUI.createNewChatWindow(n, L), WindowHandler.getWinObjById(o).updateMessage(n), WindowHandler.getWinObjById(o).showPinnedMsg(n))), Self.Idle = !0;
                            I = "1" === n.a;
                            WmsNotification.notifyNewMessage(n, "newchat", I);
                            ce = WindowHandler.getWinObjById(o);
                            if ("1" === O && ce && 2 === ce.partcount) {
                                B = WebMessanger.getSenderFromMsgobj(n) || n.sender;
                                WebMessanger.storeUserInfoAndUpdateTitle(B, o)
                            }
                        }
                    } else {
                        if (WmsMainUI.resetUnreadCount(o), WmsMainUI.updateUnreadCountInUI(o), WmsMainUI.updateUnreadChatsCount(), ce) {
                            X = n.meta && n.meta.post_in_parent_information;
                            (n.msgid && !1 === $WC.Util.isLocalUser(n.uname) || !ce.isMsgAlreadyUpdated(n, ce.ctrlcomp)) && ce.updateMessage(n), ce.updateMessageFragment(n)
                        }!n.sid || !y && Message.isSameBrowser(n.sid) || (WebMessanger.removeLiveChat(o), WindowHandler.removeWinById(o), ChatBlink.stopRepeat())
                    }
                    ee = WindowHandler.getWinObjById(n.chid);
                    if (n.isfirstthreadmessage && ee) {
                        te = !(!$WC.Util.isLocalUser(n.sender) && !$WC.Util.isLocalUser(n.parentmessagesenderid)), se = n.parentmessagesenderid === n.sender ? 1 : 2, ie = {
                            chat_id: n.threadchatid,
                            follower_count: se,
                            message_count: 1,
                            title: n.title,
                            thread_message_id: n.threadmsguid,
                            is_follower: te
                        };
                        if (n.thread_information = ie, ee.updateMessageFragment(n, null, n.parentmsguid), $WC.Util.isLocalUser(n.sender)) {
                            ne = ee.ctrlcomp.querySelector('[data-msgid="' + n.sender + "_" + n.time + '"]');
                            X && ne && ((ne = ne.querySelector('[data-msgid="' + n.sender + "_" + n.time + '"]')).className = "", ne.nextSibling && $WC.Util.removeElement(ne.nextSibling)), WebMessanger.openThreadWindowFromCache(ee.ctrlcomp.querySelector("[data-thread_chid=" + n.threadchatid + "]"), n.threadchatid)
                        }
                    }
                    ae = "11" == O ? n.threadchatid : n.chid;
                    if ("1" !== n.ht && !$WC.RecentChats.get(ae)) {
                        var fe;
                        if ((fe = n).lmtime = fe.lmsgtime, fe.unreadtime = fe.time, $WC.Util.isLocalUser(fe.sender) && (fe.unreadtime = 0, fe.unreadmsgcount = 0), "1" == fe.ctype && fe.t121t) {
                            "false" == fe.customgroup && (fe.recipantssummary = fe.t121t);
                            oe = JSON.parse(fe.t121t);
                            for (var re in oe) re !== $WC.Config.get("zuid") && (fe.title = oe[re])
                        }
                        "8" != fe.ctype || $WC.Channels.get(fe.chid) || $WC.Channels.setChannelInfoFromMsgObj(fe), void 0 === typeof fe.recipantssummary && (fe.recipantssummary = []), "11" == fe.ctype && (fe.parentchatid = n.chid, fe.customgroup = !0), (s = {})[ae] = fe, $WC.RecentChats.updateUnReadChats(s), WmsMainUI.updateUnreadChatsCount()
                    }
                    if (!1 === y && $WC.RecentChats.updateLastMsgInfo({
                            chid: o,
                            sender: n.sender,
                            dname: n.dname,
                            msg: n,
                            lmtime: n.time,
                            msguid: n.msguid,
                            addinfo: n.lmsgaddinfo,
                            mtype: e.mtype
                        }), ce = ce || WindowHandler.getWinObjById(o), n.threadmsg && !n.ht && (!n.isfirstthreadmessage && ce && ce.followernode && WindowHandler.updateThreadCount(n), $WC.RecentChats.updateLastThreadMsgTime(n.chid, n.time), $WC.RecentChats.updateThreadParentMsgId(n.threadchatid, n.parentmsguid), ee && ee.toggleUnreadThreadBanner()), (n.threadmsg && 1 == WmsMainUI.getUnreadCount(n.chid, null, n.threadchatid) || 1 == WmsMainUI.getUnreadCount(n.chid, null, null, !0)) && ($WC.RecentChats.updateLastSeenTime(o, n.time), ce && ce.showUnreadMsgs()), ce && ("0" == ce.savehistory && "0" == n.history ? ce.lastmsg_uid = n.lmsguid : ce.lastmsg_uid = n.msguid), n.threadmsg && ce && WebMessanger.threadmap[n.threadchatid] && (ce.updateThreadFollowerInfo(!0, null, null, !0), delete WebMessanger.threadmap[n.threadchatid]), n.threadmsg && !n.ht) {
                        I = "1" === n.a;
                        WmsNotification.notifyNewMessage(n, "chatmsg", I), ee && ee.updateUnreadThreadCount(n.chid, n.threadchatid)
                    }
                }
            } else 2 == O && WmsImplHandler.invoke(Collaboration.handleMessage, o, n.sender, n.zuid, n.dname, n.msg);
            4 != O && 5 != O || n.h || CustomChat.handleMessage(n), !1 === $WC.Util.isLocalUser(n.uname) && !1 === y && ($WC.Util.pubsub.publish("/chats/unreadchatdetails"), n.meta && n.meta.mentions && (n.meta.mentions.hasOwnProperty(WebMessanger.zuid) || n.meta.mentions.hasOwnProperty("participants") || n.meta.mentions.hasOwnProperty("available")) && $WC.Util.pubsub.publish("/chats/mentions", n))
        } else if (e.mtype == CT_CLOSE_WIN) {
            if (1 == (O = (n = e.msg).ctype) || 4 == O || 5 == O || 8 == O || 9 == O || 10 == O || 11 == O) {
                o = n.chid;
                11 == O ? WmsMainUI.resetUnreadCount($WC.Util.getParentChidFromThreadChid(o), null, o) : WmsMainUI.resetUnreadCount(o), WmsMainUI.updateUnreadCountInUI(o), WmsMainUI.updateUnreadChatsCount(), $WC.RecentChats.updateLastSeenTime(o), WebMessanger.removeLiveChat(o), WindowHandler.removeWinById(o), ChatBlink.stopRepeat(), WmsChatCache.remove(o), Message.deletedMessages.remove(o), 4 != O && 5 != O || CustomChat.handleCloseWin(o)
            }
        } else if (e.mtype == WM_AV_MSG);
        else if (e.mtype == CLIQ_AV_MSG) _isCliqAVLibLoaded && MediacallManager && (!silent || "CALL_REQUESTED" != e.msg.action && "CALL_INITIATED" != e.msg.action) && MediacallManager.handleWmsMessage(e.msg, e.mtype);
        else if (e.mtype == CT_NFY_USERSTATUS) {
            O = (n = e.msg).ctype, o = n.chid;
            if (1 != O && 5 != O || silent) 2 == O && WmsImplHandler.invoke(Collaboration.handlePresence, o, n.uname, n.zuid, n.dname, n.status);
            else if ((5 != O || !CustomChat.isActive(o, n.addinfo)) && 0 == n.status)
                if ($WC.Util.isLocalUser(n.uname)) {
                    WebMessanger.removeLiveChat(o);
                    try {
                        null != n.close && "true" == n.close && (WindowHandler.removeWinById(o), ChatBlink.stopRepeat())
                    } catch (e) {}
                } else if (WindowHandler.getWinObjById(o)) {
                var ve = (ce = WindowHandler.getWinObjById(o)).partcount;
                ce.clearTypingStatus(), ce.typingindicatornode.style.display = "none", n.msg = "&nbsp;", silent || 1 == ve && Self.status.update(n)
            }
            4 != O && 5 != O || WmsImplHandler.invoke(CustomChat.handlePresence, o, n.uname, n.zuid, n.dname, n.status), "6" === O && WmsImplHandler.invoke(Presence.handlePresence, o, n.uname, n.zuid, n.dname, n.status)
        } else if (e.mtype == CT_NFY_USERADD) {
            for (O = (n = e.msg).ctype, o = n.chid, h = 0; h < n.users.length; h++) {
                a = $WC.Util.splitWmsFormattedString(n.users[h].s, 3);
                n.users[h].uname = a[0], n.users[h].cstatus = a[1], n.users[h].dname = a[2]
            }
            ce = WindowHandler.getWinObjById(n.threadchatid);
            if (11 == O && ce) {
                var Ce = 0;
                n.users.forEach((function(e) {
                    ce.followersinfo[e.zuid] || (ce.followersinfo[e.zuid] = e, $WC.Util.isLocalUser(e.zuid) ? ce.thread_follower = "true" : Ce++)
                })), ce.updateThreadFollowerInfo(!0, Ce)
            } else 1 != O && 5 != O && 10 != O || silent ? 2 == O && WmsImplHandler.invoke(Collaboration.handleUserAdd, o, n.users) : 5 == O && CustomChat.isActive(o, n.addinfo) || (WindowHandler.addParticipantsByID(o, n.users), $WC.RecentChats.updatePartCount(o, n.users.length, !0), n.users.forEach((function(e) {
                $WC.RecentChats.updatePartInfo(o, e, !0)
            })));
            4 != O && 5 != O || WmsImplHandler.invoke(CustomChat.handleUserAdded, o, n.users, n.pcount), "6" === O && WmsImplHandler.invoke(Presence.handleUserAdded, o, n.users)
        } else if (e.mtype == CT_NFY_USERDELETE) {
            for (O = (n = e.msg).ctype, o = n.chid, h = 0; h < n.users.length; h++) {
                a = $WC.Util.splitWmsFormattedString(n.users[h].s, 3);
                n.users[h].uname = a[0], n.users[h].cstatus = a[1], n.users[h].dname = a[2]
            }
            ce = WindowHandler.getWinObjById(n.threadchatid);
            if (11 == O && ce) {
                Ce = 0;
                n.users.forEach((function(e) {
                    delete ce.followersinfo[e.zuid], $WC.Util.isLocalUser(e.zuid) ? ce.thread_follower = "false" : Ce++
                })), ce.updateThreadFollowerInfo(!0, null, Ce)
            } else 1 != O && 5 != O && 10 != O || silent ? 2 == O && WmsImplHandler.invoke(Collaboration.handleUserDeleted, o, n.users) : 5 == O && CustomChat.isActive(o, n.addinfo) || (WindowHandler.deleteParticipantsByID(o, n.users), $WC.RecentChats.updatePartCount(o, n.users.length), n.users.forEach((function(e) {
                $WC.RecentChats.updatePartInfo(o, e)
            })));
            4 != O && 5 != O || WmsImplHandler.invoke(CustomChat.handleUserDeleted, o, n.users, n.pcount), "6" === O && WmsImplHandler.invoke(Presence.handleUserDeleted, o, n.users)
        } else if (e.mtype == WM_NFY_COLLABADD) {
            n = e.msg, a = $WC.Util.splitWmsFormattedString(n.s, 5);
            if (n.uname = a[0], n.zuid = a[0], n.chid = a[1], n.ctype = a[2], n.time = a[3], n.dname = a[4], s = WindowHandler.getWinObjById(n.chid)) {
                ! function(e) {
                    e.enableComposerOptions()
                }(s), s.clearChatContent();
                var be = $WC.Util.createElement("div");
                be.style = "display:none", be.setAttribute("data-latestchunk", "true"), s.msgdisp.appendChild(be), Message.loadSpecificTranscript(o, s.msgdisp, be)
            }
            if (WmsImplHandler.invoke(Collaboration.handleCollabAdd, n.uname, n.dname, n.zuid, n.time, n.chid), "6" === n.ctype && WmsImplHandler.invoke(Presence.handleUserAdd, e.msg), "8" === n.ctype && !$WC.Channels.get(n.chid)) {
                var ye = "chid=" + n.chid;
                $WC.Ajax.requestToChat("v1/channels", ye, (function(e) {
                    $WC.Channels.updateList(JSON.parse(e))
                }))
            }
            $WC.Util.isLocalUser(n.zuid) || "1" !== n.ctype && "8" !== n.ctype && "9" !== n.ctype && "10" !== n.ctype || silent || WebMessanger.isExclusiveChat() || (WmsChatCache.remove(n.chid), Message.deletedMessages.remove(n.chid), WebMessanger.join(n.chid))
        } else if (e.mtype == WM_NFY_COLLABDELETE) {
            n = e.msg, a = $WC.Util.splitWmsFormattedString(n.s, 5);
            n.uname = a[0], n.zuid = a[0], n.chid = a[1], n.ctype = a[2], n.time = a[3], n.dname = a[4], WmsImplHandler.invoke(Collaboration.handleCollabDelete, n.uname, n.dname, n.zuid, n.time, n.chid);
            ce = WindowHandler.getWinObjById(n.chid);
            if ("6" === n.ctype && WmsImplHandler.invoke(Presence.handleUserDelete, e.msg), "8" === n.ctype && ($WC.Channels.updateChannel(n.chid, "joined", 0), ce && ce.close(), $WC.RecentChats.removeFromRecentChats(n.chid)), ce) {
                ce.permdenied = !0, ce.disableActions();
                var _e = $WC.Util.isLocalUser(n.zuid) ? "chat.userleft" : "chat.notamember";
                ce.disableComposerOptions($WC.I18N(_e))
            }
        } else if (e.mtype == CT_NFY_SETTITLE) {
            if (null != (s = e.msg)) {
                var We = s.msg;
                o = We.chid, x = We.title, ce = WindowHandler.getWinObjById(o);
                if (!x) {
                    var Se, we;
                    if (ce) {
                        var Me = ce.partinfo;
                        for (var Ie in Me) 2 == ce.partcount && (Se = Me[Ie].zuid, we = Me[Ie].dname)
                    } else $WC.RecentChats.get().forEach((function(e) {
                        e.CHATID == o && 2 == e.PARTICIPANTSCOUNT && e.PARTICIPANTS.forEach((function(e) {
                            e.zuid !== WebMessanger.zuid && (Se = e.zuid, we = e.dname)
                        }))
                    }));
                    x = $WC.Util.getContactName(Se, we)
                }
                ce && WindowHandler.setTitle(o, x), $WC.RecentChats.updateTitle(o, x), $WC.Chats.updateTitle(o, x), $WC.Channels.updateTitle(o, x)
            }
        } else if (e.mtype == WM_NFY_CSTATUSCHANGE) {
            n = e.msg, WebMessanger.scode;
            var Te = n.scode,
                Ae = n.smsg,
                Ee = n.st,
                Ue = n.expiry;
            if (4 == Te && $WC.Config.get("isStatusConfigEnabledInClient") && WmsSettings.isAllowedStatusConfigEnabled() && -1 == WmsSettings.getAllowedStatuses().indexOf("idle")) return; - 1 != [$WC.WmsContacts.userstatus.CLIQ_CALLS, $WC.WmsContacts.userstatus.MEETING, $WC.WmsContacts.userstatus.ASSIST_SESSION, $WC.WmsContacts.userstatus.CALENDAR_EVENT, $WC.WmsContacts.userstatus.SHOWTIME_TRAINING, $WC.WmsContacts.userstatus.TELEPHONY].indexOf(parseInt(Ee)) && (Te = "3"), WebMessanger.scode = Te, WebMessanger.smsg = Ae, WebMessanger.stype = Ee, $WC.Config.set({
                scode: WebMessanger.scode
            }), $WC.Config.set({
                stype: WebMessanger.stype
            }), silent || (setTimeout((function() {
                WmsMainUI.updateUserStatusIcon(), WmsMainUI.updateUserStatusMsg()
            }), 1), WMSUI.changedsmsg = Ae, WMSUI.changedscode = Te, WmsChatCache.removeAll(), Message.deletedMessages.removeAll(), WMSUI.checkAndShowStatusChangePopup(!0, !0)), WmsImplHandler.invoke(WmsContactImpl.handleStatusMessage, Te, Ae, Ee, Ue);
            var ke = !1;
            WmsSettings.isActivityStatusConfigEnabled() && WmsSettings.isCurrentActivityStatusOverrideDisabled() && (ke = !0), WmsImplHandler.invoke(WmsContactImpl.isActivityStatusOverrideDisabled, ke)
        } else if (e.mtype == WM_NFY_STATUS) {
            if ($WC.Util.checkSessionConfig("PRESENCE_PERSONAL")) {
                if ((n = e.msg).ua) {
                    var Ne = JSON.parse(n.ua);
                    n.zuid = Ne[0], n.scode = Ne[1], n.dname = $WC.Util.getContactName(n.zuid), n.st = Ne[3], n.smsg = Ne[2] || WmsContacts.defaultstatusmsg[n.scode]
                } else {
                    Ne = $WC.Util.splitWmsFormattedString(n.s, 5);
                    n.zuid = Ne[0], n.scode = Ne[1], n.dname = $WC.Util.getContactName(n.zuid), n.email = Ne[2], n.st = Ne[3], n.smsg = Ne[4] || WmsContacts.defaultstatusmsg[n.scode]
                }
                if (WmsImplHandler.invoke(WmsContactImpl.handlePresence, n.zuid, n.zuid, n.dname, n.scode, n.smsg), !$WC.Config.get("presence_keys") && !WmsContacts.get(n.zuid)) return;
                if (WmsContacts.get(n.zuid)) {
                    4 == n.scode && $WC.WmsContacts.getLastAvailableTime(n.zuid) && 0 != $WC.WmsContacts.getLastAvailableTime(n.zuid) && WmsSettings.isLastSeenEnabled() && (n.lastavailabletime = n.time);
                    var xe = !1 !== WmsContacts.status(n.zuid) && +WmsContacts.status(n.zuid);
                    WmsContacts.updateStatus(n), WmsHybridSearch.updatePresence(n.zuid), WindowHandler.updateUserStatus(n.zuid, n.scode, n.smsg, n.st), silent || n.m || $WC.Config.get("presence_keys") || WMSUI.checkAndNotifyStatus(n, xe)
                }
            }
        } else if (e.mtype == NFY_CONTACT_ADD) {
            if ($WC.Config.get("presence_keys")) {
                n = e.msg;
                WmsContacts.updateContacts(n);
                S = Object.keys(n);
                if (WmsContacts.get(S)) {
                    Te = WmsContacts.get(S).STATUS, Ae = WmsContacts.get(S).STATUSMSG, Ee = WmsContacts.get(S).STYPE;
                    WmsHybridSearch.updatePresence(S), WindowHandler.updateUserStatus(S, Te, Ae, Ee)
                }
            }
        } else if (e.mtype == CONTACT_INFO || e.mtype == NFY_CONTACT_INFO) {
            var Oe = $WC.Config.get("presence_keys") && !WebMessanger.isCliqUser();
            if (e.mtype == NFY_CONTACT_INFO && !$WC.Config.get("presence_keys") || e.mtype == CONTACT_INFO && $WC.Config.get("presence_keys") && !Oe) return;
            n = e.msg;
            var Re = e.meta && e.meta.count;
            if (Re > 0 && (WebMessanger.isactivechatbaruser = !0), WmsContacts.updateContacts(n), !_WMSEMPTYBAR && !silent) {
                WmsMainUI.updateChatInvitationCount();
                WmsContacts.getInitializedValue();
                WmsContacts.initialize(!0);
                var De = $WC.Util.getObjectLength(WmsContacts.getContactsList());
                for (h = 0; h < WindowHandler.exist.length; h++) {
                    if ("empty" != (ce = WindowHandler.exist[h]) && null != ce && 2 == ce.partcount && 1 == ce.ctype && !ce.isZohoGroupChat()) {
                        var $e = ce.recipant;
                        if (WmsContacts.get($e)) {
                            var He = WmsContacts.get($e);
                            ce.updateUserStatus(He.STATUS, He.STATUSMSG, He.STYPE)
                        }
                    }
                }
                $WC.Config.get("customContacts") || setTimeout((function() {
                    if (WmsHybridSearch.populateContactListInMainUI(!0), Re < 10 && Re == De) {
                        var e = {
                            suggestions: "show_suggestions"
                        };
                        _WMSEMPTYBAR || silent || $WC.Config.get("customContacts") || WmsHybridSearch.populateContactListInMainUI(!0, e)
                    }
                }), 1)
            }
            Object.keys(WindowHandler.openedChats).length > 0 && WmsContacts.getAndUpdateEmailIdFromServer(), $WC.RecentChats.update121RecentChatName(), WmsImplHandler.invoke(WmsContactImpl.handleGetContacts)
        } else if (e.mtype == WM_NFY_USERIMGCHANGE);
        else if (e.mtype == CT_NFY_APPROVAL) {
            (n = e.msg).zuid;
            WmsContacts.updateContact(n), n.status == $WC.WmsConstants.CONTACTSTATUS.ACCEPT ? (n.status = n.scode, WmsImplHandler.invoke(WmsContactImpl.handleAccept, n.zuid, n.uname, n.dname, n.scode, n.smsg), WindowHandler.updateUserStatus(n.zuid, n.scode, WmsContacts.getStatusMsg(n.zuid), n.st), silent || setTimeout((function() {
                var e = {
                    suggestions: "show_suggestions"
                };
                WmsHybridSearch.populateContactListInMainUI(!0, e)
            }), 1)) : n.status == WMS_ONLINE ? (WmsImplHandler.invoke(WmsContactImpl.notifyAccept, n.zuid, n.uname, n.dname, n.scode, n.smsg), n.status = n.scode, WindowHandler.updateUserStatus(n.zuid, n.scode, WmsContacts.getStatusMsg(n.zuid), n.st), silent || setTimeout((function() {
                -1 !== $WC.WmsContacts.getInvitedContactsList().indexOf(n.zuid) && ($WC.Util.removeElementFromArray(WmsContacts.getInvitedContactsList(), n.zuid), WMSUI.showInfoMsg($WC.I18N("contact.invite.accept"))), WmsHybridSearch.clearInvite(n)
            }), 1)) : n.status == $WC.WmsConstants.CONTACTSTATUS.REQACC ? (WmsImplHandler.invoke(WmsContactImpl.handleInvite, n.zuid, n.uname, n.dname, n.scode, n.smsg), WindowHandler.updateUserStatus(n.zuid, n.scode, WmsContacts.getStatusMsg(n.zuid), n.st), silent || setTimeout((function() {
                WmsHybridSearch.showInvite(n)
            }), 1), !1) : n.status == $WC.WmsConstants.CONTACTSTATUS.UNAPRD ? (WmsImplHandler.invoke(WmsContactImpl.notifyInvite, n.zuid, n.uname, n.dname, n.scode, n.smsg), WindowHandler.updateUserStatus(n.zuid, n.scode, WmsContacts.getStatusMsg(n.zuid), n.st), silent || setTimeout((function() {
                WmsHybridSearch.clearInvite(n)
            }), 1)) : n.status == $WC.WmsConstants.CONTACTSTATUS.REJECT ? (WmsImplHandler.invoke(WmsContactImpl.handleReject, n.zuid, n.uname, n.dname, n.scode, n.smsg), WindowHandler.updateUserStatus(n.zuid, n.scode, WmsContacts.getStatusMsg(n.zuid), n.st), !1) : n.status == $WC.WmsConstants.CONTACTSTATUS.NOCHAT ? ($WC.Util.removeElementFromArray(WmsContacts.getInvitedContactsList(), n.zuid), n.status = n.scode, WindowHandler.updateUserStatus(n.zuid, n.scode, WmsContacts.getStatusMsg(n.zuid), n.st), silent || setTimeout((function() {
                WmsHybridSearch.clearInvite(n)
            }), 1)) : n.status == $WC.WmsConstants.CONTACTSTATUS.REMOVE ? (WmsContacts.deletecontact(n.zuid), WmsImplHandler.invoke(WmsContactImpl.notifyRemove, n.zuid, n.uname, n.dname, n.scode, n.smsg), WindowHandler.updateUserStatus(n.zuid, n.scode, WmsContacts.getStatusMsg(n.zuid), n.st), silent || setTimeout((function() {
                WmsHybridSearch.clearInvite(n)
            }), 1)) : n.status == $WC.WmsConstants.CONTACTSTATUS.DELETE && (WmsImplHandler.invoke(WmsContactImpl.handleDelete, n.zuid, n.uname, n.dname, n.scode, n.smsg), WindowHandler.updateUserStatus(n.zuid, n.scode, WmsContacts.getStatusMsg(n.zuid), n.st), silent || (WmsMainUI.removeFromContactList(n.zuid), $WC.Util.removeElementFromArray(WmsContacts.getInvitedContactsList(), n.zuid), WmsMainUI.updateChatInvitationCount(), WmsContacts.deletecontact(n.zuid))), n.scode = n.status, n.dname = $WC.Util.getContactName(n.zuid, n.dname), WmsMainUI.updateChatInvitationCount(), WmsImplHandler.invoke(WmsContactImpl.handlePresence, n.zuid, n.uname, n.dname, n.status, n.smsg)
        } else if (e.mtype == CT_GUEST_REQ) {
            if (!silent) {
                n = e.msg;
                var Le = "creator=" + myMsgObj.sender + "&ulist=" + n.guid + "&title=" + n.title + "&type=guestim";
                Le = Le + "&sid=" + encodeURIComponent(WebMessanger.getSid()), $WC.Ajax.postRequest("createchat" + dext, Le)
            }
        } else if (e.mtype == WM_USER_LANG_CHANGE) {
            n = e.msg;
            setTimeout((function() {
                WebMessanger.clearTicket(), WmsImplHandler.invoke(Collaboration.handleLanguageChange, n)
            }), 1)
        } else if (e.mtype == WM_SYSTEM_MSG) {
            if ("feeddelete" == (n = e.msg).module) ZohoFeedImpl.handleFeedDelete(n), ZMSGUI.deleteFeed();
            else if ("updatewmssettings" == n.module) {
                var Pe = n.data;
                if (Pe.hasOwnProperty("deact") && "function" == typeof WebMessanger.pausedStatusListener) {
                    var Fe = Pe.deact.split(","); - 1 !== $WC.Util.indexOf(Fe, "ALL") ? WebMessanger.pausedStatusListener("true") : WebMessanger.getTopWindowPrd((function(e) {
                        -1 !== $WC.Util.indexOf(Fe, e) ? WebMessanger.pausedStatusListener("true") : WebMessanger.pausedStatusListener("false")
                    }))
                }
                silent || WmsSettings.handleUpdateWmsSettings(n.data)
            } else if ("MYPINS" === n.module) {
                if (!silent) {
                    var Be = n.data;
                    "PIN_CHAT" === Be.action ? WebMessanger.makeChatPinned(Be.chat_id, Be) : "UNPIN_CHAT" === Be.action ? WebMessanger.makeChatUnPinned(Be.chat_id) : "ENTITY_REORDER" === Be.action && $WC.RecentChats.reorderPinnedChats(Be.chat_id, Be.pin_above)
                }
            } else if ("cw_opr" === n.module) {
                if (!silent) {
                    o = n.data.chid;
                    var je = n.data.action;
                    ce = WindowHandler.getWinObjById(o);
                    if ("pin" === je ? WebMessanger.makeChatPinned(o) : "unpin" === je && WebMessanger.makeChatUnPinned(o), ce)
                        if ("min" === je) ce.minimize(), ChatBlink.stopRepeat();
                        else if ("seen" === je) {
                        if (ce.makeNormal(), ChatBlink.stopRepeat(), "11" == ce.ctype)(ee = WindowHandler.getWinObjById(ce.thread_parentid)) && ee.updateUnreadThreadCount(ce.thread_parentid, ce.objId), $WC.RecentChats.resetUnreadCount(o), WmsMainUI.decrementUnreadCount(ce.thread_parentid, o)
                    } else "close" === je && ce.close();
                    else {
                        if ("close" !== je && (WmsMainUI.getParentThreadId(o) ? WmsMainUI.resetUnreadCount(WmsMainUI.getParentThreadId(o), null, o) : WmsMainUI.resetUnreadCount(o)), "seen" == je && $WC.Util.isThreadChid(o)) {
                            var ze = $WC.Util.getParentChidFromThreadChid(o),
                                Ge = WindowHandler.getWinObjById(ze);
                            Ge && Ge.updateUnreadThreadCount(ze, o), Ge && Ge.toggleUnreadThreadBanner(), $WC.RecentChats.resetUnreadCount(o), WmsMainUI.resetUnreadCount(ze, null, o)
                        }
                        WmsMainUI.updateUnreadChatsCount(), WmsMainUI.updateUnreadCountInUI(o)
                    }
                    if ("seen" == je || "close" == je) {
                        var qe = $WC.Util.isThreadChid(o) ? WmsMainUI.getParentThreadId(o) : o;
                        "close" === je && 0 != WmsMainUI.getUnreadCount(qe) || (WmsMainUI.getParentThreadId(o) ? $WC.RecentChats.updateLastSeenTime(WmsMainUI.getParentThreadId(o)) : $WC.RecentChats.updateLastSeenTime(o)), $WC.HybridSearch.isUnreadFilterOpen() && WmsMainUI.filterUnreadChats()
                    }
                }(WebMessanger.isExclusiveChat() || WebMessanger.isRTCChat()) && "seen" == je && (ce.makeNormal(), ChatBlink.stopRepeat(), $WC.RecentChats.updateLastSeenTime(o))
            } else if ("system_msg" === n.module) "closeticketann" !== n.data.key || silent || WMSUI.closeTicketAnnouncement();
            else if ("toursettings" === n.module) WmsSettings.handleTourSettings(n.data.settings);
            else if (n.data && "MODULE_STATUS_CHANGE" === n.data.ACTION) $WC.SecurityManager.update(n.data.data), WmsSettings.adminsettings.moduleconfig = n.data.data;
            else if ("custom_info" === n.module) {
                if ("add_chatdraft" === (e = n.data).opr) {
                    var Ve = {
                        msg: e.msg,
                        meta: e.meta,
                        mtype: e.mtype,
                        time: e.time,
                        replied_to: e.replied_to,
                        chid: e.chid
                    };
                    $WC.Drafts.update(e.chid, Ve), $WC.Drafts.updateInLocalStorage(Ve, !1)
                } else if ("delete_chatdraft" === e.opr) {
                    var Ye = e.chatids;
                    for (h = 0; h < Ye.length; h++) $WC.Drafts.deleteDraft(Ye[h])
                } else if (e && "CHAT_HISTORY_DELETE" === e.ACTION) {
                    var Ze = e.data || [],
                        Ke = Object.keys(WindowHandler.openedChats);
                    Ze.forEach((function(e) {
                        if (-1 !== Ke.indexOf(e)) {
                            var t = WindowHandler.getWinObjById(e);
                            t && t.close()
                        }
                        $WC.RecentChats.removeFromRecentChats(e)
                    }))
                }
            } else if ("user_deactivated" === n.module) WebMessanger.chatdisabled = !0, WmsSettings.adminsettings.cliqaccess = !1, WebMessanger.turnOffChat(), WMSUI.populateDeactivatedChatUI();
            else if ("bot" === n.module) {
                var Xe = (e = n.data).data.data;
                if ("BOT_SUBSCRIBED" === e.ACTION) Xe.active = !0, $WC.Bots.updateBotContacts([Xe]);
                else if ("BOT_UNSUBSCRIBED" === e.ACTION) $WC.Bots.removeFromSubscribedList(Xe.id);
                else if ("BOT_UPDATED" === e.ACTION) {
                    var Je = $WC.Bots.get(Xe.id),
                        Qe = Je && Je.original_info,
                        et = $WC.Util.extend(!0, {}, Qe, Xe);
                    $WC.Bots.updateBotContacts([et]), Je && Je.ISSUBSCRIBED && $WC.Util.pubsub.publish("/bots/updateui")
                }
            } else if ("COMMAND" === n.module || "command" === n.module) {
                var tt = (e = n.data).data.data;
                "COMMAND_CREATED" === e.ACTION || "COMMAND_EDITED" === e.ACTION ? Commands.updateList([tt]) : "COMMAND_DELETED" === e.ACTION && Commands.deleteObj([tt.id])
            } else if ("linkpreview_status_update" === n.module) $WC.Config.set({
                zoholinks_auth: n.data.authentication_consent
            }), WmsMainUI.setLinkPreviewSettings();
            else if ("ADD_STICKY" === n.module || "DELETE_STICKY" === n.module) {
                var st = n.data.chat_id,
                    it = WindowHandler.getWinObjById(st);
                if (it && ("DELETE_STICKY" === n.module ? it.clearPinnedMsg() : it.showPinnedMsg(n)), "ADD_STICKY" === n.module) {
                    var nt = "STICKY:" + n.data.created_time;
                    $WC.RecentChats.updateAddinfoData(st, nt), $WC.Channels.updateAddinfoData(st, nt), $WC.Chats.updateAddinfoData(st, nt)
                }
            } else if ("messageaction" === n.module) {
                "MESSAGEACTION_CREATED" === (e = n.data).ACTION ? $WC.addMessageActionToList(e.data.data) : "MESSAGEACTION_DELETED" === e.ACTION && $WC.removeMessageActionFromList(e.data.data)
            } else if ("INTEGRATION_RESPONSE" === n.module) {
                o = (e = n.data).data.chid, ce = WindowHandler.getWinObjById(o);
                var at = e.data.dreResponse;
                if (ce && at && "Success" === at.status && "form" === at.output.type) {
                    var ot = !0;
                    if (e.data.sid && e.data.sid != WebMessanger.sid && (ot = !1), ot)(new $WC.Forms).mountComponent(at, Commands.showResponse, (function() {
                        ce.composer.focus()
                    }))
                }
            } else if ("CHANNEL_EDIT" === n.module) {
                e = n.data;
                $WC.Channels.updateConfig(e.oc_id, e.config)
            } else if ("chatlet" === n.module) {
                o = (e = n.data).chid;
                if ("CHATLET_ARCHIVED" === e.action || "CHATLET_DELETED" === e.action) null !== (ce = WindowHandler.getWinObjById(o)) && ce.close(), $WC.RecentChats.removeFromRecentChats(o)
            } else if ("checked_in" === n.module || "checked_out" === n.module) WebMessanger.remoteWorkData = n.data, $WC.Config.set({
                localUserData: Object.assign({}, $WC.Config.get("localUserData"), n.data)
            }), "function" == typeof WebMessanger.remoteworkcallback && WebMessanger.remoteworkcallback(n.data);
            else if ("presence_key_crc_update" === n.module) {
                var rt = n.data.topic;
                WmsSettings.adminsettings.presence_keys.forEach((function(e) {
                    e.topic == rt && (e.header = n.data.header)
                })), WebMessanger.updatePresenceKeys(WmsSettings.adminsettings.presence_keys)
            } else if ("translation_settings_update" === n.module) WmsSettings.handleUpdateWmsSettings(n.data);
            else if ("CLEAR_MESSAGE" === n.module) {
                e = n.data;
                var lt = WindowHandler.getWinObjById(e.chid);
                lt && (lt.msgdisp.innerHTML = "")
            }
        } else if (e.mtype == WM_LASTSEEN_SETTINGS) {
            var dt = {
                last_seen: 1 == e.msg.privacylevel ? "1" : "0"
            };
            WmsSettings.handleUpdateWmsSettings(dt)
        } else if (e.mtype == SHOW_INFO) wmsUserConfig.infomsgid = e.msg.id, wmsUserConfig.infomsgprd = e.prd, e.msg.msg_spl ? (wmsUserConfig.infomsg = e.msg.msg_spl, wmsUserConfig.infomsgtype = e.msg.type, WebMessanger.processSpecialAnnouncement(JSON.parse(wmsUserConfig.infomsg))) : WMSUI.processAnnMsg(e.msg.msg, e.msg.type);
        else if (+e.mtype === CT_MSG_STORAGE) {
            var ct = e.msg.opruser;
            ce = WindowHandler.getWinObjById(e.msg.chid);
            ct.dname = ct.zuid === myMsgObj.zuid ? $WC.I18N("chat.you") : $WC.Util.escapeHTML(ct.dname), re = "0" === e.msg.history ? "history.notsaved.user" : "history.saved.user", ce.updateInfoMessage($WC.I18N(re, ct.dname), e.msg.time), ce.updateSaveHistory(e.msg.history), ce.updateSaveHistoryInUI()
        } else if (+e.mtype === CT_ATTACH) {
            o = e.msg.chid;
            (ce = WindowHandler.getWinObjById(o)) && ce.updateAttachInfo(!0)
        } else if (+e.mtype === WM_TICKET_MSG) WMSUI.showTicketAnnouncement(e.msg);
        else if (+e.mtype === PR_MSG) WmsImplHandler.invoke(Presence.handleMessage, e.msg);
        else if (+e.mtype === WM_DEF_STATUS) {
            if (0 == e.msg.scode && (e.msg.scode = 2, e.msg.smsg = "Invisible"), WebMessanger.smsg = e.msg.smsg, WebMessanger.scode = e.msg.scode, WebMessanger.stype = e.msg.st, $WC.Config.set({
                    scode: WebMessanger.scode
                }), $WC.Config.set({
                    stype: WebMessanger.stype
                }), !_WMSEMPTYBAR && !silent) try {
                WmsMainUI.updateUserStatusIcon(), WmsMainUI.updateUserStatusMsg()
            } catch (e) {}
            WmsImplHandler.invoke(WmsContactImpl.handleStatusMessage, e.msg.scode, e.msg.smsg, e.msg.st);
            ke = !1;
            WmsSettings.isActivityStatusConfigEnabled() && WmsSettings.isCurrentActivityStatusOverrideDisabled() && (ke = !0), WmsImplHandler.invoke(WmsContactImpl.isActivityStatusOverrideDisabled, ke)
        } else if (+e.mtype === CT_NFY_MUTECHAT) {
            if ((ce = WindowHandler.getWinObjById(e.msg.chid)) && (ce.updateMuteInfo(e.msg.muteinterval), ce.isMinimized() && ce.close()), e.msg.muteinterval && e.msg.muteinterval > (new Date).getTime() ? WmsMainUI.setMuteStatus(e.msg.chid, !0) : WmsMainUI.setMuteStatus(e.msg.chid, !1), $WC.Util.isChannelChid(e.msg.chid) && $WC.Channels.get(e.msg.chid)) $WC.Channels.get(e.msg.chid).muted_interval = e.msg.muteinterval;
            else if ($WC.RecentChats.get(e.msg.chid) || $WC.RecentChats.getFromPinnedChatList(e.msg.chid) || $WC.Chats.get(e.msg.chid)) {
                ($WC.RecentChats.get(e.msg.chid) || $WC.RecentChats.getFromPinnedChatList(e.msg.chid) || $WC.Chats.get(e.msg.chid)).MUTEDINTERVAL = e.msg.muteinterval
            }
        } else if (+e.mtype === CT_BOT_LIST) n = e.msg;
        else if (+e.mtype === CT_BOT_OPR) {
            var ut = (n = e.msg).data;
            j = -1 != ut.id.indexOf("b-") ? ut.id.split("-")[1] : ut.id;
            if ("add" === n.operation) ut.active = !0, ut.id = j, $WC.Bots.updateBotContacts([ut]);
            else if ("remove" === n.operation) {
                o = $WC.Bots.get(j) && $WC.Bots.get(j).CHID;
                WebMessanger.makeChatUnPinned(o), $WC.Bots.removeFromSubscribedList(j)
            }
            if (!_WMSEMPTYBAR && !silent && !$WC.Config.get("customContacts")) {
                var mt = {
                    suggestions: "show_suggestions"
                };
                WmsHybridSearch.populateContactListInMainUI(!0, mt), $WC.HybridSearch.populateRecentChats(), $WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT && WmsHybridSearch.populateFrequentContactsInSmartChat()
            }
        } else if (+e.mtype === WM_ZTI_CROSSPRODUCT) WmsImplHandler.invoke(ZTI.handleCrossProductMessage, e.msg);
        else if (+e.mtype === CT_DELETED_MSG) {
            var ht = (n = e.msg).origin_time,
                gt = n.sender + "_" + ht,
                pt = (o = n.threadchatid || n.chid, Message.getDeletedMsgInfo(n.time));
            if (ce = WindowHandler.getWinObjById(o)) {
                var ft = ce.ctrlcomp.querySelector('[data-msgid="' + gt + '"]');
                n.meta && n.meta.prev_msg_info.attpath && ($WC.VideoPlayerFactory.removeExternalVideoPlayers(n.msguid), WMSUI.imgPreview.checkAndShowAttDeletedInfo(n.msguid)), ft && (1 == n.info_visiblity ? (ft.innerHTML = pt, ft.setAttribute("data-type", Message.types.DELETEDMSG), ft.nextSibling && "wms-msgtime" === ft.nextSibling.className && (ft.nextSibling.querySelector("[data-edited]").setAttribute("data-edited", "false"), $WC.Util.removeElement(ft.nextSibling.querySelector("[data-read-receipt]")), $WC.Util.removeElement(ft.nextSibling.querySelector("[data-translatemsg]")), $WC.Util.removeElement(ft.nextSibling.querySelector(".wms_original_msg_container")))) : ce.checkAndRemoveMsg(ft)), Message.deletedMessages.insert(o, ht), ce.pinmsgdetails && ce.pinmsgdetails.info && ce.pinmsgdetails.info.msgid == n.msguid && ce.clearPinnedMsg(o)
            } else WmsChatCache.remove(o), Message.deletedMessages.remove(o);
            if (0 == n.info_visiblity) {
                $WC.DesktopNotification.close(gt);
                var vt = $WC.RecentChats.getLastSeenTime(o);
                0 != WmsMainUI.getUnreadCount(o) && 0 != vt && vt <= n.origin_time && (WmsMainUI.decrementUnreadCount(o), ce ? ce.updateBarMsgcount() : WmsMainUI.updateUnreadCountInUI(o), 0 == WmsMainUI.getUnreadCount(o) && ce && ce.makeNormal())
            }
            var Ct = Message.translationmsgstore;
            Ct && Ct[n.msguid] && delete Ct[n.msguid], $WC.RecentChats.get(o) && $WC.RecentChats.get(o).LMTIME == n.origin_time && $WC.RecentChats.updateLastMsgInfo({
                chid: o,
                sender: n.sender,
                dname: n.dname,
                msguid: n.msguid,
                msg: "",
                lmtime: n.origin_time,
                info_visiblity: n.info_visiblity,
                mtype: e.mtype
            })
        } else if (+e.mtype === CT_EDITED_MSG || +e.mtype === CT_SYSTEM_EDIT) {
            ht = (n = e.msg).msg[0].msg.origin_time, gt = n.msg[0].msg.sender + "_" + ht, o = n.threadchatid || n.chid;
            if (ce = WindowHandler.getWinObjById(o)) {
                if (ce.updateMessageFragment(n.msg[0], gt), ce.pinmsgdetails.info.msgtime === ht && ce.updatePinnedMsg(n.msg[0]), n.msg[1]) {
                    n.msg[1].msg.mtype = n.msg[1].mtype;
                    var bt = ce.ctrlcomp.scrollHeight - ce.ctrlcomp.clientHeight <= ce.ctrlcomp.scrollTop + 20;
                    Message.constructAndAppendChatContent([n.msg[1].msg], ce.msgdisp, o), bt && ce.scrollDisplay()
                }
            } else WmsChatCache.remove(o), Message.deletedMessages.remove(o);
            n.msg[0].islastmsgid && $WC.RecentChats.updateLastMsgInfo({
                chid: o,
                sender: n.sender,
                dname: n.dname,
                msguid: n.msguid,
                addinfo: n.lmsgaddinfo,
                msg: n,
                lmtime: ht
            }), !1 === $WC.Util.isLocalUser(n.uname) && n.meta && n.meta.mentions && (n.meta.mentions.hasOwnProperty(WebMessanger.zuid) || n.meta.mentions.hasOwnProperty("participants") || n.meta.mentions.hasOwnProperty("available")) && $WC.Util.pubsub.publish("/chats/mentions", n)
        } else if (+e.mtype === CT_MSG_ADDL) {
            if ("302" === (n = e.msg).addldatatype)(ce = WindowHandler.getWinObjById(n.chid)) && ce.updatePlatformMsg(n);
            if ("301" === n.addldatatype)
                if (ce = WindowHandler.getWinObjById(n.chid)) {
                    var yt = n.msg,
                        _t = JSON.parse(yt.addldata);
                    ce.updateReactionData(yt.msguid, _t), ce.updateReactionFragment(yt.msguid), $WC.CustomMsg.msgobj[n.chid] && $WC.CustomMsg.msgobj[n.chid][n.msguid.split("%")[0]] && ($WC.CustomMsg.msgobj[n.chid][n.msguid.split("%")[0]].reactions = JSON.parse(n.msg.addldata))
                }
        } else if (+e.mtype === CT_MSG_REACT) {
            if ("301" === (n = e.msg).addldatatype)
                if (ce = WindowHandler.getWinObjById(n.chid)) {
                    yt = n.msg, _t = JSON.parse(yt.addldata);
                    ce.updateReactionData(yt.msguid, $WC.Util.cloneObject(_t, !0)), ce.updateReactionFragment(yt.msguid), ce.checkAndUpdateThreadReaction(yt.msguid, $WC.Util.cloneObject(_t, !0), CT_MSG_REACT), $WC.CustomMsg.msgobj[n.chid] && $WC.CustomMsg.msgobj[n.chid][n.msguid.split("%")[0]] && ($WC.CustomMsg.msgobj[n.chid][n.msguid.split("%")[0]].reactions = JSON.parse(n.msg.addldata))
                }
        } else if (+e.mtype === CT_MSG_REACT_CURR) {
            if ("301" === (n = e.msg).addldatatype)
                if (ce = WindowHandler.getWinObjById(n.chid)) {
                    yt = n.msg;
                    (_t = JSON.parse(yt.addldata))[301] && "true" == _t.current_user && (ce.updateCurrentUserReactionData(yt.msguid, $WC.Util.cloneObject(_t, !0)), ce.checkAndUpdateThreadReaction(yt.msguid, $WC.Util.cloneObject(_t, !0), CT_MSG_REACT_CURR))
                }
        } else if (+e.mtype === WM_WEBRTC_MSG) {
            silent || "undefined" == typeof MediacallManager || MediacallManager.handleWmsMessage(e.msg, e.mtype);
            n = e.msg;
            WmsImplHandler.invoke(Collaboration.handleWebRTCMessage, n)
        } else if (+e.mtype === CT_MSG_READRECEIPT) {
            o = (n = e.msg).chid, ce = WindowHandler.getWinObjById(o);
            n.msguid && ce && WebMessanger.isReadReceiptEnabled() && !WebMessanger.isExclusiveChat() && !WebMessanger.isRTCChat() && ("8" !== ce.ctype || ce.partcount <= 1e3) && ce.markMsgsRead(n.msguid)
        } else if ("_" === e) "function" == typeof WebMessanger.RTT_callback && WebMessanger.RTT_callback(Date.now() - WebMessanger.RTT_senttime);
        else if (+e.mtype === RTC_CUSTOMCHAT_CLOSE) {
            if ("CHAT_CLOSED" === e.msg.changedconfig)(ce = WindowHandler.getWinObjById(e.msg.chid)) && ce.disableComposerOptions($WC.I18N("rtc.chatclose.info"))
        } else +e.mtype >= 900 && +e.mtype <= 999 && 12 == e.msg.ctype && WmsImplHandler.invoke(WmsChatUIImpl.handleRTCEventMsg, e)
    }, WebMessanger.mapChat = function(e) {
        try {
            if ("5" === e.ctype) return;
            var t, s = e.users,
                i = e.chid,
                n = e.recipients && e.recipients.split(",");
            if (t = 2 == e.pcount ? s ? $WC.Util.isLocalUser(s[0].zuid) ? s[1].zuid : s[0].zuid : $WC.Util.isLocalUser(n[0]) ? n[1] : n[0] : e.addinfo.split(":")[3], null != WebMessanger.chatmap[i] && !t && t != WebMessanger.chatmap[i]) return delete WebMessanger.ucmap[WebMessanger.chatmap[i]], void delete WebMessanger.chatmap[i];
            t && i && (WebMessanger.ucmap[t] = i, WebMessanger.chatmap[i] = t, WebMessanger.waitchats[t] = "JOIN")
        } catch (e) {}
    }, WebMessanger.callClearNotification = function() {
        $WC.Ajax.postRequestToChat("clearnotifications.do")
    }, WebMessanger.ClearNotificationById = function(e) {
        var t = "nid=" + encodeURIComponent(e);
        $WC.Ajax.postRequest("clearlivenotifications" + dext, t)
    }, WebMessanger.getChatForUser = function(e) {
        return WebMessanger.ucmap[e]
    }, WebMessanger.loadTranscript = function(e, t, s, i, n, a, o, r) {
        if (Message.constructAndInsertChatContent(e, i, t, n, a, o), Message.toggleLiveZomoji(Message.getScrollableParent(i)), Message.checkAndRemoveUrlImage(Message.getScrollableParent(i)), Message.checkAndLoadAudioPlayer(Message.getScrollableParent(i)), Message.loadUrlThumbnail(Message.getScrollableParent(i)), WMSUI.checkAndLoadCustomEmojis(Message.getScrollableParent(i)), i.clientHeight < i.parentElement.clientHeight && WMSUI.loadImages(Message.getScrollableParent(i)), null != WMSUI.pending_thread_replies[t]) {
            var l = WMSUI.pending_thread_replies[t];
            r || (r = WindowHandler.getWinObjById(t));
            var d = r.ctrlcomp.querySelector('[data-link_msgid="' + l + '"]');
            !d && r.ctrlcomp.querySelector('[data-parentmsguid="' + l + '"]') && (d = r.ctrlcomp.querySelector('[data-parentmsguid="' + l + '"]').closest("[data-type]")), r.showReplyPreview(d), WMSUI.removePendingThreadReply(t)
        }
    }, WebMessanger.wmsAjaxDispatcher = function(e, t, s) {
        if ("unreadmessage" == e) {
            if (!WebMessanger.isCliqUser() && "NODATA" !== s) {
                var i = s.tableToRowList && s.tableToRowList.ZohoMessages;
                $WC.RecentChats.setUnreadFeedsCount(i ? i.length : 0), $WC.HybridSearch.populateRecentChats(), WmsMainUI.updateUnreadChatsCount()
            }
        } else if ("zohomessage" == e) ZMSGUI.fillHistory(s.tableToRowList);
        else if ("zohomsgcount" == e) {
            var n = "NODATA" === s ? $WC.RecentChats.getUnreadFeedsCount() : JSON.parse(s);
            ZMSGUI.fillNavigation(n)
        } else if ("zohomessageapi" == e) ZohoFeedImpl.handleFeedHistory(s.tableToRowList);
        else if ("zohomsgcountapi" == e) ZohoFeedImpl.handleFeedHistoryCount(JSON.parse(s));
        else if ("zohofeedsinrange" == e) ZohoFeedImpl.handleFeedsInRange(s.tableToRowList);
        else if ("unreadmessageapi" == e) ZohoFeedImpl.handleUnreadFeeds(s.tableToRowList);
        else if ("onlinestatus" == e) WmsImplHandler.invoke(Collaboration.handleIsOnline, s);
        else if ("getdefaultstatus" == e) WebMessanger.smsg = s.smsg, WebMessanger.scode = s.scode, WmsImplHandler.invoke(WmsContactImpl.handleStatusMessage, s.scode, s.smsg);
        else if ("getcustomstatus" == e) silent || WMSUI.populateCustomStatus(s.getRowsForTable("UserStatus")), WmsImplHandler.invoke(WmsContactImpl.handeAllStatusMessages, s.getRowsForTable("UserStatus"));
        else if ("clearcustomstatus" == e);
        else if ("addcontact" == e) {
            if (!silent) {
                if ("errorList" == t) {
                    var a = "",
                        o = "",
                        r = "",
                        l = "",
                        d = !1,
                        c = "",
                        u = new $WC.ConfirmationDialog,
                        m = [{
                            text: $WC.I18N("common.ok"),
                            onclick: function() {
                                u.unmountComponent()
                            },
                            buttonstyle: "confirmation_button"
                        }],
                        h = [{
                            text: $WC.I18N("chat.member.invite"),
                            onclick: function() {},
                            buttonstyle: "confirmation_button"
                        }, {
                            text: $WC.I18N("common.cancel"),
                            onclick: function() {
                                u.unmountComponent()
                            },
                            buttonstyle: "cancel_button"
                        }];
                    for (var g in s) o = s[a = g];
                    var p = WmsContacts.getDisplayName(a);
                    p || "undefined" == typeof WmsProfileInfo || (p = WmsProfileInfo.profileinfo[a] && WmsProfileInfo.profileinfo[a].dname), !p && WebMessanger.ucmap[a] && (p = WindowHandler.getWinObjById(WebMessanger.ucmap[a]).title), "Same user" == o ? r = [$WC.I18N("contact.invite.sameuser", a), a] : "Contact already exists" == o ? r = p ? [$WC.I18N("contact.invite.exists", p), p] : [$WC.I18N("contact.invite.userexists")] : (p ? (r = [$WC.I18N("invite.invalid.id", '"' + p + '"'), p], l = $WC.Util.safeHTML(p)) : (r = [$WC.I18N("contact.invite.externaluser"), ""], d = !0), m = [{
                        text: $WC.I18N("chat.member.invite"),
                        onclick: function() {
                            var e = document.querySelector('[id="wms_contact_mailid"]').value;
                            WmsContacts.add("zoho", e), u.unmountComponent()
                        },
                        buttonstyle: "confirmation_button"
                    }, {
                        text: $WC.I18N("common.cancel"),
                        onclick: function() {
                            u.unmountComponent()
                        },
                        buttonstyle: "cancel_button"
                    }], c = $WC.WmsContacts.getUserPhoto(a, "38"));
                    var f = {
                        actions: m,
                        heading: r,
                        headerimgsrc: c,
                        inputcontent: l,
                        errorCallbackActions: h,
                        userInfoUnavailable: d
                    };
                    u.mountComponent(f)
                } else WMSUI.showInfoMsg($WC.I18N("contact.invite.sent"));
                if (!_WMSEMPTYBAR && !silent && !$WC.Config.get("customContacts")) {
                    var v = {
                        suggestions: "show_suggestions"
                    };
                    WmsHybridSearch.populateContactListInMainUI(!0, v)
                }
            }
        } else if ("reinvitecontactbyemailid" == e) silent || s && (WMSUI.statusbar.innerHTML = $WC.I18N("Contact_successfully_reinvited"));
        else if ("gettranscript" == e) silent || ZMSGUI.populate(s);
        else if ("deletechat" == e) silent || ZMSGUI.handleDeleteChat();
        else if ("deleteselectedchat" == e) silent || ZMSGUI.handleDeleteChat();
        else if ("addmember" == e) silent || "Error adding member" == s.errorMessage && alert($WC.I18N("The_email_address_you_entered_is_invaild"));
        else if ("createim" === e || "joinchat" === e || "attachsession" === e) y(s);
        else if ("wmsupdsettings" === e || "updsettings" === e) silent || WmsSettings.handleUpdateWmsSettings(s);
        else if ("joinchannel" === e && !silent) {
            if ($WC.Channels.get(s.CHAT.chid)) $WC.Channels.updateChannel(s.CHAT.chid, "joined", 1);
            else {
                var C = {
                    joined: [s.CHANNEL]
                };
                $WC.Channels.updateList({
                    data: C
                })
            }
            y(s.CHAT);
            var b = WindowHandler.getWinObjById(s.CHAT.chid);
            b && (b.updateChannelInfo(s.CHANNEL), s.CHAT.users && b.updateParticipantsFromJoin(s.CHAT.users), s.CHANNEL.mutedinterval && b.updateMuteInfo(s.CHANNEL.mutedinterval))
        }

        function y(e) {
            var t = e.ctype,
                s = e.chid;
            if (("1" === t || "5" === t || "8" === t || "9" === t || "11" === t || "10" === t && e.entityid) && (!silent || WebMessanger.isExclusiveChat() || WMSUI.getServiceChatContainer(s, msgObj)) && ("5" !== t || !CustomChat.isActive(s, e.addinfo))) {
                if (WmsChatUIImpl.isActive(s) || "true" === e.silent) return;
                if (e.pcount = +e.pcount, 2 === e.pcount) {
                    WindowHandler.updateInactiveUserStatus(s, e);
                    var i = e.recipants.split(",");
                    if (i.splice(i.indexOf(myMsgObj.zuid), 1), e.sender = i[0], !WmsContacts.getDisplayName(e.sender)) return
                }
                Chat.isExists(s) || ("11" == e.ctype && WebMessanger.wrapThreadsDataFromJoin(e), WMSUI.createNewChatWindow(e));
                var n = WindowHandler.getWinObjById(s);
                if (WindowHandler.updateInactiveUserStatus(s, e), n && (n.showPinnedMsg(e), e.users && (n.updateRecipientInfo(JSON.parse(e.users)), n.restrictFileSharingForExternalUser()), "1" == t && "true" != e.customgroup || !e.recipants || (n.recipant = e.recipants), (e.restricted_message || e.restricted_attachments) && n.handleChatRestrictions(e), "1" == t && 2 === e.pcount && Message.handlePrivateReply(n.recipant)), "8" === t && e.users) {
                    var a = "string" == typeof e.users ? JSON.parse(e.users) : e.users;
                    n.updateParticipantsFromJoin(a)
                }
            }
        }
    }, WebMessanger.wrapThreadsDataFromJoin = function(e) {
        e.recipants = e.creator, e.thread_msgid = e.threadmsguid, e.thread_parentid = e.parentchatid, e.thread_follower = e.is_follower || "" + e.isfollower;
        var t = {
            msguid: e.threadmsguid,
            thread_chid: e.chid,
            msgcount: e.totalmsgs,
            is_follower: "true" == e.thread_follower ? $WC.I18N("thread.unfollow") : $WC.I18N("thread.follow"),
            chid: e.parentchatid
        };
        WebMessanger.getParentThreadMsg(null, null, t)
    }, WebMessanger.presenceDispatcher = function(e, t, s) {}, WebMessanger.clearWaitChat = function(e) {
        try {
            "WAIT" == WebMessanger.waitchats[e] && (WebMessanger.waitchats[e] = "CLEARED")
        } catch (e) {}
    }, WebMessanger.openUserChat = function(e, t, s, i, n) {
        WebMessanger.createChat(e, t, s, i, n)
    }, WebMessanger.setLastAvailableTimeFromResponse = function(e) {
        if (e && e.presence && WmsSettings.isLastSeenEnabled()) {
            var t = Object.values(JSON.parse(e.presence))[0];
            t.lstime && ($WC.WmsContacts.getContactsList(t.wmsid) ? $WC.WmsContacts.setLastAvailableTime(t.wmsid, t.lstime) : $WC.WmsOrgContacts.getOrgContactsList(t.wmsid) && $WC.WmsOrgContacts.setLastAvailableTime(t.wmsid, t.lstime))
        }
    }, WebMessanger.createChat = function(e, t, s, i, n) {
        var a = "autojoin=true&attach=true";
        a = t ? a + "&type=nim" : a + "&type=im", a += "&userList=" + e, s && (a += "&title=" + encodeURIComponent(s)), i && (a += "&msg=" + encodeURIComponent(i)), silent || (a += "&sid=" + encodeURIComponent(WebMessanger.getSid())), n && (a += "&src=" + n);
        $WC.Ajax.postRequestToChat("createim.do", a, (function(e) {
            if (e && (WebMessanger.setLastAvailableTimeFromResponse(e), WindowHandler.updateInactiveUserStatus(e.chid, e), e.restricted_message)) {
                var t = JSON.parse(e.restricted_message);
                if ("disabled" == t.actual_status && "disabled" == t.status) {
                    var s = WindowHandler.getWinObjById(e.chid);
                    s && s.disableComposerOptions(t.message)
                }
            }
        }))
    }, WebMessanger.chat = function(e, t, s, i, n) {
        var a = WebMessanger.ucmap[e];
        if (WebMessanger.isChatPaused() || silent && 0 == WMSUI.dmchat_obj.length) {
            var o = "function" == typeof s;
            if (silent && "function" == typeof WebMessanger.apiInvocationCallback) {
                var r = {
                    methodname: "chat",
                    params: e
                };
                WebMessanger.apiInvocationCallback(r)
            } else WebMessanger.checkAndEnableChatBar(e, "", !0, s, o)
        } else {
            a && Chat.isExists(a) && WMSUI.handleChatExist(a), WmsMainUI.scheduleAutoFocus(e);
            try {
                if ("WAIT" == WebMessanger.waitchats[e]) return
            } catch (e) {}
            WebMessanger.waitchats[e] = "WAIT", setTimeout(WebMessanger.clearWaitChat.bind(this, e), 5e3), ChatBlink.stopRepeat();
            var l = "type=im&autojoin=true&userList=" + e;
            silent && 0 == WMSUI.dmchat_obj.length || (l = l + "&sid=" + encodeURIComponent(WebMessanger.getSid())), t && (l += "&src=" + t), $WC.Ajax.postRequestToChat("createim.do", l, i, n)
        }
    }, WebMessanger.joinCollab = function(e) {
        isNaN(e) || "" == e.trim() || setTimeout((function() {
            var t = "uname=" + myMsgObj.sender + "&chid=" + e;
            t = t + "&sid=" + encodeURIComponent(WebMessanger.getSid()), $WC.Ajax.postRequest("joinchat" + dext, t)
        }), 100)
    }, WebMessanger.createChatWindowFromCache = function(e, t, s, i, n) {
        var a = WindowHandler.getWinObjById(e);
        if (!(silent && (!WMSUI.dmchat_obj.length || WMSUI.dmchat_obj[0].chid !== e) || a && a.attached))
            if (Chat.isExists(e)) WmsMainUI.isAutoFocusScheduled(e) && WmsMainUI.removeAutoFocusSchedule(e);
            else {
                var o, r = $WC.RecentChats.get(e),
                    l = $WC.RecentChats.getFromPinnedChatList(e),
                    d = $WC.Chats.get(e),
                    c = {};
                if ($WC.Util.isChannelChid(e) && (o = $WC.Channels.get(e)), s) c = s;
                else if (o) {
                    if (c.pcount = o.pc, c.title = o.dn, c.ctype = $WC.WmsConstants.CTYPES.CHANNEL, c.addinfo = o.addinfo, r || l || d) {
                        var u = r || l || d;
                        c.addinfo = u.ADDINFO
                    }
                } else if (r || d) {
                    (u = r || d).CTYPE != $WC.WmsConstants.CTYPES.CHATLET && (c.pcount = "" + u.PARTICIPANTSCOUNT, c.title = u.TITLE, c.ctype = "" + u.CTYPE, c.addinfo = u.ADDINFO, c.mutedinterval = u.MUTEDINTERVAL ? "" + u.MUTEDINTERVAL : u.MUTEDINTERVAL, c.customgroup = u.CUSTOMGROUP ? "" + u.CUSTOMGROUP : u.CUSTOMGROUP, c.users = u.PARTICIPANTS, !c.customgroup && u.PARTICIPANTSCOUNT > 2 && u.CTYPE == $WC.WmsConstants.CTYPES.CHAT && (c.customgroup = "true"), "11" == c.ctype && u.THREAD_MESSAGE_ID && (c.thread_msgid = u.THREAD_MESSAGE_ID, c.thread_parentid = u.THREAD_PARENT_CHID || $WC.Util.getParentThreadId(u.CHATID), c.thread_state = u.THREAD_STATE, c.thread_follower = u.THREAD_FOLLOWER, c.thread_parent_title = u.THREAD_PARENT_TITLE || $WC.Channels.getChannelName(c.thread_parentid)))
                }
                if (!$WC.Util.isEmptyObject(c) && !$WC.Util.isBotChid(e)) c.chid = e, WMSUI.createNewChatWindow(c), (a = WindowHandler.getWinObjById(e)) && 8 != a.ctype && 9 != a.ctype && 11 != a.ctype && a.updateParticipantsFromJoin(c.users, !0);
                WebMessanger.attachSession(e, "", i, n)
            }
    }, WebMessanger.closeThread = function(e) {
        var t = {
            "Content-Type": "application/json",
            "x-consents-version": "1",
            "X-XHR-exception": !0,
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        };
        $WC.Ajax.putRequestToChat("v2/threads/" + e, {
            action: "close"
        }, (function() {
            WMSUI.showInfoMsg($WC.I18N("thread.closed.info"));
            var t = WindowHandler.getWinObjById(e);
            if (t) t.updateThreadState("THREAD_CLOSED");
            else {
                var s = $WC.RecentChats.get(e);
                s && (s.THREAD_STATE = "closed");
                var i = WindowHandler.getWinObjById($WC.Util.getParentChidFromThreadChid(e));
                if (i) {
                    var n = i.ctrlcomp.querySelector('[data-thread_chid="' + e + '"]');
                    n && n.setAttribute("data-thread_state", "closed")
                }
            }
            WebMessanger.makeChatUnPinned(e)
        }), null, null, null, t)
    }, WebMessanger.reopenThread = function(e) {
        var t = "v2/threads/" + e,
            s = {
                "Content-Type": "application/json",
                "x-consents-version": "1",
                "X-XHR-exception": !0,
                "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
            };
        $WC.Ajax.putRequestToChat(t, {
            action: "reopen"
        }, (function() {
            WMSUI.showInfoMsg($WC.I18N("thread.reopen.info"));
            var t = WindowHandler.getWinObjById(e);
            if (t) t.updateThreadState("THREAD_REOPENED"), t.focus();
            else {
                var s = $WC.RecentChats.get(e);
                s && (s.THREAD_STATE = "open");
                var i = WindowHandler.getWinObjById($WC.Util.getParentChidFromThreadChid(e));
                if (i) {
                    var n = i.ctrlcomp.querySelector('[data-thread_chid="' + e + '"]');
                    n && n.setAttribute("data-thread_state", "open")
                }
            }
        }), null, null, null, s)
    }, WebMessanger.attachSession = function(e, t, s, i) {
        var n = void 0 !== t ? t : 2,
            a = "&sid=" + encodeURIComponent(WebMessanger.getSid()),
            o = "chid=" + e + a,
            r = function() {
                var t = WindowHandler.getWinObjById(e);
                t && t.showErrorMsg($WC.I18N("message.error.openchatwindow")), "function" == typeof i && i(this.response)
            };
        $WC.Ajax.postRequestToChat("attachsession.do", o, (function() {
            var t = JSON.parse(this.response),
                i = t[0].objString;
            if ("false" == i.chatavailable && n > 0 && !$WC.Util.isThreadChid(e)) WebMessanger.attachSession(e, n - 1);
            else {
                if ($WC.Util.isThreadChid(e) && !$WC.Channels.get($WC.Util.getParentChidFromThreadChid(i.chid)) || !WebMessanger.isRTCChat() && $WC.Util.isChannelChid(e) && !$WC.Channels.get(e)) {
                    var a = {
                        data: {
                            joined: [JSON.parse(i.channelData)]
                        }
                    };
                    $WC.Channels.updateList(a)
                }
                if (!Chat.isExists(e)) {
                    if ($WC.Util.isThreadChid(e)) {
                        if ("false" == i.chatavailable) return void("false" == i.parent_participant && r());
                        WebMessanger.wrapThreadsDataFromJoin(i)
                    }
                    WMSUI.createNewChatWindow(i)
                }
                $WC.Util.isChannelChid(e) && (WebMessanger.isRTCChat() || ($WC.Channels.updateChannelMetaData(i), $WC.Channels.updateAddinfoData(i.chid, i.addinfo)), WindowHandler.getWinObjById(i.chid) && WindowHandler.getWinObjById(i.chid).showPinnedMsg(i), WindowHandler.updateChannelProperties());
                var o = WindowHandler.getWinObjById(i.chid);
                o && (o.updateCWInfoFromAttachSession(i), o.restrictFileSharingForExternalUser()), WindowHandler.updateChatRestrictions(i), "function" == typeof s && s(t[0].objString)
            }
        }), r)
    }, WebMessanger.join = function(e, t) {
        var s, i = "";
        silent || (i = "&sid=" + encodeURIComponent(WebMessanger.getSid())), s = "uname=" + myMsgObj.sender + "&chid=" + e + i;
        var n = {
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        };
        $WC.Ajax.postRequest("joinchat" + dext, s, t, t, null, null, n)
    }, WebMessanger.joinChannel = function(e) {
        var t = "",
            s = "";
        silent || (t = "&sid=" + encodeURIComponent(WebMessanger.getSid()));
        s = "chid=" + e + t;
        s += "&attach=true", $WC.Ajax.postRequestToChat("joinchannel.do", s)
    }, WebMessanger.approveChannel = function(e) {
        $WC.Ajax.postRequestToChat("v1/channels/" + e + "/approve", null, (function() {
            WMSUI.showInfoMsg($WC.I18N("channel.approved", [this.response.data.cn]))
        }), (function() {
            WMSUI.showErrorMSg($WC.I18N("event.status.update.error"))
        }))
    }, WebMessanger.rejectChannel = function(e) {
        $WC.Ajax.postRequestToChat("v1/channels/" + e + "/reject", null, (function() {
            WMSUI.showInfoMsg($WC.I18N("channel.rejected", [this.response.data.cn]))
        }), (function() {
            WMSUI.showErrorMSg($WC.I18N("event.status.update.error"))
        }))
    }, WebMessanger.handleCalendarEvents = function(e) {
        var t = "api=" + e;
        $WC.Ajax.postRequestToChat("executesystemfunction.do", t, (function() {
            var e = this.response ? JSON.parse(this.response)[0].objString : "";
            e.message ? WMSUI.showInfoMsg(e.message) : e.errorMessage && WMSUI.showErrorMsg(e.errorMessage)
        }), (function() {
            WMSUI.showErrorMsg($WC.I18N("event.status.update.error"))
        }))
    }, WebMessanger.fetchTeamChannelMembers = function(e) {
        var t = $WC.Channels.get(e),
            s = [];
        if (t.scid.forEach((function(e) {
                $WC.Channels.getTeamMembersList(e) || s.push(e)
            })), s.length) {
            var i = "groupid=" + s.join(",");
            $WC.Ajax.requestToChat("getgroupmembers.do", i, (function() {
                var t = JSON.parse(this.response)[0].objString;
                for (var s in t) $WC.Channels.insertTeamMemberslist(s, t[s]);
                var i = WindowHandler.getWinObjById(e);
                i && (Commands.hideLoadingIcon(e), WMSUI.atMentions.init(e, i.composer))
            }))
        }
    }, WebMessanger.fetchChannelMembers = $WC.Util.debounce((function(e, t, s, i) {
        $WC.Channels.get(e);
        var n = WindowHandler.getWinObjById(e);

        function a(e, t) {
            for (var s in t)
                if (0 === e.indexOf(s) && null === t[s]) return !0;
            return !1
        }

        function o(e, t) {
            return -1 !== t.indexOf(e)
        }
        var r = function() {
                var t = JSON.parse(this.response).data;
                if (n) {
                    var i = s === $WC.WmsConstants.TRIGGERS.ADDMEM ? n.allowedmembers : n.allowedmentions,
                        a = i.members.length ? i.members : [];
                    t.users.length ? t.users.forEach((function(e) {
                        if (!$WC.Util.isLocalUser(e.zuid)) {
                            var t = {};
                            t.DNAME = e.dname, t.EMAILID = e.email, t.USERID = e.uname, WmsContacts.get(e.zuid) ? (t.STATUS = WmsContacts.get(e.zuid).STATUS, t.STYPE = WmsContacts.get(e.zuid).STYPE, t.UC = WmsContacts.get(e.zuid).UC) : t.UC = "0", a.push(t)
                        }
                    })) : this.opts.callbackargs.result_mapping.push(this.opts.callbackargs.searchterm);
                    var o = {};
                    i.members = a.filter((function(e) {
                        return !o[e.USERID] && (o[e.USERID] = !0)
                    }));
                    var r = this.opts.callbackargs.token_mapping;
                    t.next_token ? r[this.opts.callbackargs.search_term] = t.next_token : r[this.opts.callbackargs.search_term] = null, Commands.hideLoadingIcon(e), WMSUI.atMentions.init(e, n.composer)
                }
            },
            l = "",
            d = {};
        if (s === $WC.WmsConstants.TRIGGERS.ADDMEM) {
            if (!1 === a(t, n.allowedmembers.token_mapping) && !o(t, n.allowedmembers.result_mapping)) {
                var c = e;
                $WC.Util.isThreadChid(e) ? (c = n.thread_parentid, l = "search=" + t) : l = "search=" + t + "&mode=allowed", d.token_mapping = n.allowedmembers.token_mapping, d.search_term = t, d.result_mapping = n.allowedmembers.result_mapping, $WC.Ajax.requestToChat("v1/chats/" + c + "/participants", l, r, null, d)
            }
        } else if (s === $WC.WmsConstants.TRIGGERS.ATMENTION) {
            var u, m = !1,
                h = !1,
                g = !1;
            !1 !== a(t, n.allowedmentions.token_mapping.participants) || o(t, n.allowedmentions.result_mapping.participants) || (m = !0, u = "participants"), !1 === m && $WC.Channels.isTeamChannel(e) && !1 === a(t, n.allowedmentions.token_mapping.team) && !o(t, n.allowedmentions.result_mapping.team) && "false" == WmsSettings.restrict_non_participant_mention && (h = !0, l = "mode=mention&category=team", u = "team"), !1 !== m || !1 !== h || !1 !== a(t, n.allowedmentions.token_mapping.org) || o(t, n.allowedmentions.result_mapping.org) || "false" != WmsSettings.restrict_non_participant_mention || (g = !0, l = "mode=mention&category=organization", u = "org"), d.token_mapping = n.allowedmentions.token_mapping[u], d.search_term = t, d.result_mapping = n.allowedmentions.result_mapping[u], (m || h || g) && (t && (l += "&search=" + t), $WC.Ajax.requestToChat("v1/chats/" + e + "/participants", l, r, null, d))
        } else {
            $WC.Ajax.requestToChat("v1/chats/" + e + "/participants", null, (function() {
                var t = this.response ? JSON.parse(this.response).data.users : "";
                WindowHandler.getWinObjById(e) && (n.updateParticipantsFromJoin(t), i && i())
            }))
        }
    }), null, 500, !0), WebMessanger.joinChannelWithUID = function(e, t) {
        WebMessanger.prefetch_channels && null === $WC.Channels.getLastFetchedTime() && $WC.Channels.initChannels();
        var s, i = "v1/channels/" + e + "/join";
        t && (s = "attach=true&sid=" + encodeURIComponent(WebMessanger.getSid()));
        $WC.Ajax.postRequestToChat(i, s, (function() {
            var e = JSON.parse(this.response);
            WebMessanger.wmsAjaxDispatcher("joinchannel", "object", e.data)
        }))
    }, WebMessanger.quit = function(e) {
        isNaN(e) || "" == e.trim() || $WC.Ajax.postRequest("quitchat" + dext, "close=true&uname=" + myMsgObj.sender + "&sid=" + encodeURIComponent(WebMessanger.getSid()) + "&chid=" + e)
    }, WebMessanger.verifyUserStatus = function(e, t) {
        var s = "czuid=" + e + "&ccode=" + t;
        $WC.Ajax.postRequest("verifystatus" + dext, s)
    }, WebMessanger.setIdle = function() {
        WmsImplHandler.invoke(WmsUIImpl.handleDocumentIdle);
        var e = 0,
            t = "useridle" + dext,
            s = "sid=" + encodeURIComponent(WebMessanger.getSid());

        function i() {
            function e() {
                if (WMSUI.changedscode = WebMessanger.scode, WMSUI.changedsmsg = WebMessanger.smsg, WebMessanger.scode = 4, "Available" == WebMessanger.smsg || "Busy" == WebMessanger.smsg) {
                    WebMessanger.smsg = "Idle"
                }
                WebMessanger.isIdle = !0, WebMessanger.setIdleStatusInClient(WebMessanger.isIdle)
            }
            null == WebMessanger.scode && null == WebMessanger.smsg ? $WC.Ajax.requestToChat("getdefaultstatus.do", null, (function() {
                var t = null;
                "" !== this.responseText && (t = JSON.parse(this.responseText)[0].objString), null != t ? (WebMessanger.scode = t.scode, WebMessanger.smsg = t.smsg) : (WebMessanger.scode = 1, WebMessanger.smsg = WebMessanger.statusarr[WebMessanger.scode]), e()
            })) : null == WebMessanger.smsg && null != WebMessanger.scode ? (WebMessanger.smsg = WebMessanger.statusarr[WebMessanger.scode], e()) : e()
        }
        $WC.Config.get("isStatusConfigEnabledInClient") && WmsSettings.isAllowedStatusConfigEnabled() && -1 == WmsSettings.getAllowedStatuses().indexOf("idle") || $WC.Ajax.postRequest(t, s, i, (function n() {
            var a = setTimeout((function() {
                $WC.Ajax.postRequest(t, s, i, n)
            }), 5e3);
            3 === ++e && clearTimeout(a)
        }))
    }, WebMessanger.setActive = function() {
        var e = 0,
            t = "useractive" + dext,
            s = "sid=" + encodeURIComponent(WebMessanger.getSid());

        function i() {
            null != WMSUI.changedscode && null != WMSUI.changedsmsg ? (WebMessanger.scode = WMSUI.changedscode, WebMessanger.smsg = WMSUI.changedsmsg) : (WMSUI.changedscode = 1, WebMessanger.scode = 1), null == WebMessanger.smsg && (WebMessanger.smsg = WebMessanger.statusarr[WebMessanger.scode]), WebMessanger.isIdle = !1, WebMessanger.setIdleStatusInClient(WebMessanger.isIdle)
        }
        $WC.Ajax.postRequest(t, s, i, (function n() {
            var a = setTimeout((function() {
                $WC.Ajax.postRequest(t, s, i, n)
            }), 5e3);
            3 === ++e && clearTimeout(a)
        }))
    }, WebMessanger.setTimeZoneOffset = function(e) {
        _TZOFFSET = e, $WC.Config.set({
            _TZOFFSET: _TZOFFSET
        })
    }, WebMessanger.getTranscript = function(e, t, s, i) {
        var n = e.chid,
            a = e.partial,
            o = e.fromtime,
            r = e.totime,
            l = e.mentionmsgid,
            d = e.salesiqchat,
            c = e.unreadchat,
            u = e.type,
            m = e.msgarr,
            h = e.lineslimit || 50;
        if (l) var g = t.querySelector('[data-marker="' + l + '"]');
        else o ? g = t.querySelector('[data-marker="' + o + '"]') : r ? g = t.querySelector('[data-marker="' + r + '"]') : t.querySelector('[data-marker="latestchunk"]') && (g = t.querySelector('[data-marker="latestchunk"]'));
        var p = "gettranscriptfromrsasjson.do",
            f = {
                "X-Reader-Version": 1
            };

        function v(e) {
            var s = Message.getScrollHeight(t),
                i = Message.getScrollTop(t);
            if (Message.restoreScrollPosition(t, s, i), e = WebMessanger.isGuestUser() ? this.responseText && this.responseText.slice(1, -2) : e || this.responseText && this.responseText.slice(0, -1), (e = JSON.parse("[" + e + "]")).length > 0) {
                if (l || "insert" == u) {
                    if (l) {
                        if (o || r) {
                            var a = o,
                                d = r,
                                c = e.some((function(e) {
                                    return (CT_DELETED_MSG === +e.mtype || CT_EDITED_MSG === +e.mtype ? e.origin_time : e.time) == a
                                })),
                                h = e.some((function(e) {
                                    return (CT_DELETED_MSG === +e.mtype || CT_EDITED_MSG === +e.mtype ? e.origin_time : e.time) == d
                                }));
                            if (c) {
                                var p = [];
                                "more" === e[0].mode && e.shift(), e.forEach((function(e) {
                                    var t = CT_DELETED_MSG === +e.mtype || CT_EDITED_MSG === +e.mtype ? e.origin_time : e.time;
                                    ("more" === e.mode || t > o) && p.push(e)
                                })), e = p
                            }
                            h && (e = e.filter((function(e) {
                                return (CT_DELETED_MSG === +e.mtype || CT_EDITED_MSG === +e.mtype ? e.origin_time : e.time) < r
                            })))
                        }
                        "insert" === u && g !== g.parentNode.firstChild && "more" === e[0].mode && e.shift()
                    }
                    var f = e[e.length - 1];
                    "more" === f.mode && (f = e[e.length - 2]), f.meta && f.meta.edit_info && f.meta.edit_info.type && "system" === f.meta.edit_info.type && void 0 === f.mtype && (f.translatedCustomMessage = !0);
                    var v = "more" === e[0].mode ? e[1] : e[0];
                    if (r === +f.time || (CT_DELETED_MSG === +f.mtype || CT_EDITED_MSG === +f.mtype || CT_SYSTEM_EDIT === +f.mtype) && r === +f.origin_time || f.translatedCustomMessage && r === +f.lmsgtime) {
                        var C = e.indexOf(f),
                            b = t.querySelector('[data-msgid][data-msgtime="' + r + '"]'),
                            y = !1;
                        if (e[C - 1] && e[C - 1].sender == f.sender ? y = !0 : b ? b.previousSibling && b.previousSibling.getAttribute("data-senderzuid") ? y = !0 : b.getAttribute("data-sender") && (y = !0) : (l && 2 !== l.split("|").length || "16" === f.mtype) && (y = !0), y) "more" === e.pop().mode && e.pop()
                    }
                    if (o === +v.time || (CT_DELETED_MSG === +v.mtype || CT_EDITED_MSG === +v.mtype || CT_SYSTEM_EDIT === +v.mtype) && o === +v.origin_time) "more" === e.shift().mode && e.shift();
                    if (r && g !== g.parentNode.lastChild && g !== g.parentNode.firstChild && !g.parentNode.firstChild.getAttribute("data-thread_parentmsg")) {
                        var _ = $WC.Util.getAdjacentNode(g, !0, "data-msgid").getAttribute("data-msgtime") || "";
                        e.some((function(e) {
                            return (CT_DELETED_MSG === +e.mtype || CT_EDITED_MSG === +e.mtype ? e.origin_time : e.time) == _
                        })) && (e = e.filter((function(e) {
                            return (CT_DELETED_MSG === +e.mtype || CT_EDITED_MSG === +e.mtype ? e.origin_time : e.time) > _
                        })))
                    }
                    1 != e.length && (e[e.length - 1] && "more" === e[e.length - 1].mode && g !== g.parentNode.lastChild && (e[e.length - 1].mode = "morebutton"), e[0] && "more" === e[0].mode && g !== g.parentNode.firstChild && !g.parentNode.firstChild.getAttribute("data-thread_parentmsg") && (e[0].mode = "morebutton"))
                }
                var W = WindowHandler.getWinObjById(n);
                if (WebMessanger.loadTranscript(e, n, u, t, g, o, r, W), W) {
                    if (4 == W.scode && W.updateLastseenStatus(), !WebMessanger.isGuestUser()) {
                        W.restoreDraftedMsg();
                        var S = $WC.Drafts.get(n);
                        if (S && S.replied_to) {
                            var w = S.replied_to.split("_")[1];
                            if (n + "|" + w === l) var M = !0
                        }
                    }
                    W.lastmsg_uid = e.length && e[e.length - 1] && e[e.length - 1].msguid || ""
                }
                var I = $WC.RecentChats.getLastSeenTime(n);
                if (I)
                    if (W = WindowHandler.getWinObjById(n)) {
                        var T = W.win.querySelector('[data-msgtime="' + I + '"]'),
                            A = W.win.querySelector("[data-unread]");
                        if (T && !A) {
                            var E = !r;
                            W.showUnreadMsgs(E)
                        }
                        l && I === l.split("|")[1] && $WC.RecentChats.get(n) && $WC.RecentChats.get(n).uc_useropened && (W.makeNormal(!0, !0), $WC.RecentChats.get(n).uc_useropened = !1)
                    }
                if (l && !I && !M || l && "wmschshtransmsg" === t.id && "" != ZMSG_SEARCHVALUE) {
                    var U = decodeURIComponent(l).split("|")[2];
                    2 === l.split("|").length && (U = decodeURIComponent(l).split("|")[1], Message.getScrollableParent(t).scrollTop = 0, t.setAttribute("data-glowtime", U)), Message.glowBubble(U, Message.getScrollableParent(t), n)
                }
                W && W.toggleUnreadThreadBanner()
            }
            g && $WC.Util.removeElement(g), m && Message.sendmsg(n, m)
        }

        function C() {
            if (m) Message.sendmsg(n, m);
            else {
                if (!l && !o && !r) var e = "true";
                var s = [{
                    messagetype: Message.types.TRANSERR,
                    msg: {
                        prevtime: o,
                        nexttime: r,
                        mentionmsgid: l,
                        latestchunk: e
                    }
                }];
                WebMessanger.loadTranscript(s, n, u, t, g), g && $WC.Util.removeElement(g)
            }
        }
        if (e = "chid=" + n + "&tzoffset=" + _TZOFFSET + "&lang=" + WebMessanger.language + "&ccode=" + WebMessanger.countrycode, s || WebMessanger.isRTCChat() ? (p = "gettranscriptasjsonforweb.do", e = "chid=" + n + "&tzoffset=" + _TZOFFSET, l && (e += "&mentionmsgid=" + encodeURIComponent(l)), c && (e += "&makeread=true")) : "boolean" == typeof a && (e += "&partial=" + a), void 0 !== $WC.Config.get("dateformat") && (e += "&dateformat=" + encodeURIComponent($WC.Config.get("dateformat"))), !0 !== i && (e += "&lineslimit=" + h), o && (e += "&fromtime=" + o), r && (e += "&totime=" + r), !d) return WebMessanger.isGuestUser() ? (e = "guest_id=" + WebMessanger.guest_info.encrypt_id + "&lineslimit=" + h + "&", o && (e += "&fromtime=" + o), r && (e += "&totime=" + r), f = {
            "x-consents-version": "1",
            "X-XHR-exception": !0,
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
            "x-cliq-guid": WebMessanger.guest_info.encrypt_id
        }, $WC.Ajax.requestToChat("guestapi/v2/chats/" + n + "/transcript", e, v, C, null, null, f)) : $WC.Ajax.requestToChat(p, e, v, C, null, null, f);
        "undefined" != typeof WmsUIImpl && (e = {
            chatid: n,
            fromtime: o,
            totime: r
        }, WmsImplHandler.invoke(WmsUIImpl.getTranscript, e, v, C))
    }, WebMessanger.renderTranscript = function(e, t, s, i, n) {
        ZMSGUI.viewChatTranscript(t, e, null, s, i, n), WebMessanger.isCliqUser() && $WC.Bots.initBots()
    }, WebMessanger.renderDM = function(e, t, s, i, n) {
        WMSUI.dmchat_obj.push({
            zuid: e,
            container: t,
            remove_header: n
        });
        var a = function(t) {
                if (!$WC.Util.isEmptyObject(t)) {
                    for (var i = t.chid, n = t && JSON.parse(t.users), a = "", o = "", r = 0; r < n.length; r++) n[r].zuid == e && (a = n[r].status);
                    for (r = 0; r < WMSUI.dmchat_obj.length; r++) WMSUI.dmchat_obj[r].zuid == e && (WMSUI.dmchat_obj[r].chid = i);
                    if (WindowHandler.updateInactiveUserStatus(i, t), t.restricted_message) {
                        var l = JSON.parse(t.restricted_message);
                        if ("disabled" == l.actual_status && "disabled" == l.status) {
                            var d = WindowHandler.getWinObjById(i);
                            d && d.disableComposerOptions(l.message), o = l.message
                        }
                    }
                    "function" == typeof s && s({
                        chid: i,
                        user_status: a,
                        success_response: !0,
                        external_user_restrictedmsg: o
                    })
                }
            },
            o = function(e) {
                var t = e && !$WC.Util.isEmptyObject(e) ? e[0].objString : "",
                    s = {
                        error_status: this.status,
                        error_code: t.ERRCODE,
                        error_msg: t.ERRMSG,
                        failure_response: !0
                    };
                "function" == typeof i && i(s)
            },
            r = WebMessanger.getChatForUser(e);
        if (r) {
            WmsMainUI.scheduleAutoFocus(r);
            for (var l = 0; l < WMSUI.dmchat_obj.length; l++) WMSUI.dmchat_obj[l].zuid == e && (WMSUI.dmchat_obj[l].chid = r);
            WebMessanger.createChatWindowFromCache(r, "", "", a, o)
        } else WebMessanger.chat(e, null, null, a, o)
    }, WebMessanger.clearTranscript = function(e, t) {
        e.innerHTML = "", $WC.VideoPlayerFactory.removeAllComponents(t)
    }, WebMessanger.sendMessage = function(e, t, s) {
        var i = "chid=" + e + "&sender=" + myMsgObj.sender + "&msg=" + encodeURIComponent(t) + "&dname=" + encodeURIComponent(WebMessanger.getNickName()) + "&sid=" + encodeURIComponent(WebMessanger.getSid());
        try {
            null != s && "" != s && (i += "&style=" + encodeURIComponent(s))
        } catch (e) {}
        $WC.Ajax.postRequest("sendmessage" + dext, i), $WC.Util.consoleWarn("WebMessanger.sendMessage javascript method is deprecated and it will be removed in upcoming release. Use WebMessanger.sendMessage java api instead")
    }, WebMessanger.sendFormattedMessage = function(e, t, s, i, n, a, o, r, l, d, c, u, m, h, g, p) {
        var f, v = WindowHandler.getWinObjById(e),
            C = "chid=" + e + "&msg=" + encodeURIComponent(t) + "&dname=" + encodeURIComponent(WebMessanger.getNickName()) + "&sid=" + encodeURIComponent(WebMessanger.getSid()) + "&msgid=" + s + "&unfurl=" + v.unfurlmsg,
            b = {
                "x-consents-version": "1",
                "X-XHR-exception": !0,
                "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
            };

        function y(e) {
            -1 !== _WMS_REQLOG.indexOf(e) && _WMS_REQLOG.splice(_WMS_REQLOG.indexOf(e), 1)
        }
        r && (C += "&reply_to=" + encodeURIComponent(r)), m && (C += "&reply_from=" + encodeURIComponent(m)), l && (C += "&msguid=" + encodeURIComponent(l) + "&notifyedit=" + d), c && (C += "&post_in_parent=" + c), u && (C += "&thread_message_id=" + encodeURIComponent(u), c || (C += "&post_in_parent=false")), v.unfurldata_cache_id && (C += "&unfurl_cache_id=" + v.unfurldata_cache_id, v.unfurldata_cache_id = ""), _WMS_REQLOG.push(s), WMSUI.atMentions.isLocationAllowedForMentionedBots(e) && (f = !0), Commands.getCommandId(t) && Commands.isCommandMsg(t) && (n = Commands.getCommandId(t), a = a || "&commandid=" + n, o = !0, Commands.isLocationAllowedForExecution(n) && (f = !0), Commands.recent_commands.push({
            msg: t,
            commandid: n
        }), v.is_lastmsg_commands = !0, b["X-SID"] = WebMessanger.getSid()), h && g && (C += "&action=" + g);
        var _ = function() {
            if (y(s), this.response) {
                var t = JSON.parse(this.response)[0].objString;
                if (t.dreResponse) {
                    var i = WindowHandler.getWinObjById(e);
                    if (t.dreResponse.output && t.dreResponse.output.msg) i.updateMessage(t.dreResponse.output);
                    else if ("Consent" === t.dreResponse.status || "Failure" === t.dreResponse.status && !$WC.Util.isEmpty(t.dreResponse.resumeUrl)) {
                        (new $WC.Consents).mountComponent(e, t.dreResponse, null, i.composer)
                    } else if ("Success" === t.dreResponse.status && t.dreResponse.output && t.dreResponse.output.actions && !p) {
                        (new $WC.Forms).mountComponent(t.dreResponse, Commands.showResponse, (function() {
                            var t = WindowHandler.getWinObjById(e);
                            t && t.composer.focus()
                        }))
                    }
                }
                if (t.mtype == CT_TXT_MSG && (i = WindowHandler.getWinObjById(t.chid))) {
                    var n = JSON.parse(this.response)[0];
                    if (n.objString.meta && n.objString.meta.mentions) {
                        var a = [];
                        for (var o in n.objString.meta.mentions) n.objString.meta.mentions[o].isparticipant || a.push(n.objString.meta.mentions[o]);
                        i.showAddUserPrompt(a)
                    }
                }
            }
            WmsImplHandler.invoke(WmsUIImpl.onMessageSent, e, WebMessanger.zuid, !!l)
        };
        if (i && i.length) _ = function() {
            y(s), Message.sendmsg(e, i), WmsImplHandler.invoke(WmsUIImpl.onMessageSent, e, WebMessanger.zuid, !!l)
        };
        var W = function() {
            y(s);
            var t = WebMessanger.zuid + "_" + s,
                n = WindowHandler.getWinObjById(e),
                a = n.ctrlcomp,
                o = "";
            0 == this.status ? o = Message.retryErrors.network_failure : 400 == this.status && (o = Message.retryErrors.cliq_api_failure), WMSUI.handleMessageFailure(a, t, o), n.scrollDisplay(!0, a), i && i.length && Message.sendmsg(e, i);
            var r = "string" == typeof this.response && "" != this.response ? JSON.parse(this.response) : this.response;
            r[0] && r[0].objString && n && n.handleChatRestrictions(r[0].objString)
        };
        if (o) _ = function() {
            if (y(s), this.response) {
                var t = JSON.parse(this.response)[0].objString;
                if ("Consent" === t.dreResponse.status) Commands.removeProgressBar(e), (new $WC.Consents).mountComponent(e, t.dreResponse, Commands.consentsCallback, v.composer);
                else t.dreResponse.output && (t.dreResponse.output.isTempResponse = !0), Commands.showResponse(e, n, t.dreResponse)
            }
            WmsImplHandler.invoke(WmsUIImpl.onMessageSent, e, WebMessanger.zuid, !!l)
        }, W = function() {
            y(s), Commands.removeProgressBar(e)
        };
        if (a && (C += a), WebMessanger.isGuestUser()) {
            var S = {
                    sid: WebMessanger.sid,
                    id: s,
                    text: t
                },
                w = "guestapi/v2/chats/" + e + "/message";
            l && (w = "guestapi/v2/chats/" + e + "/messages/" + l, S.notify_edit = d), r && (S.reply_to = r), b["Content-Type"] = "application/json", b["x-cliq-guid"] = WebMessanger.guest_info.encrypt_id, l ? $WC.Ajax.putRequestToChat(w, S, _, W, null, null, b) : $WC.Ajax.postRequestToChat(w, S, _, W, null, null, b)
        } else f ? $WC.Ajax.postRequestToChatWithLocation("sendofficechatmessage.do", C, _, W, null, null, b) : $WC.Ajax.postRequestToChat("sendofficechatmessage.do", C, _, W, null, null, b)
    }, WebMessanger.muteChat = function(e, t, s) {
        var i = "chatid=" + e + "&mute=" + s;
        null !== t && (i += "&time=" + t);
        $WC.Ajax.postRequestToChat("mutechat.do", i, "", (function() {
            var t = WindowHandler.getWinObjById(e);
            t && (t.showErrorMsg($WC.I18N("chat.mute.failed")), t.updateMuteInfo(!s))
        }))
    }, WebMessanger.leaveChat = function(e) {
        $WC.Ajax.postRequestToChat("v2/chats/" + e + "/leave")
    }, WebMessanger.followThread = function(e, t) {
        var s = WindowHandler.getWinObjById(e),
            i = "true" == t ? "false" : "true",
            n = function() {
                WMSUI.showInfoMsg($WC.I18N("thread.follow.success")), $WC.$CUtil.setInnerText(s.followernode, $WC.I18N("thread.unfollow")), s.thread_follower = i, s.updateThreadFollowerInfo(!0, 1), $WC.RecentChats.updateLocalThreadFollower(e, !0)
            };
        "false" === t ? $WC.Ajax.postRequestToChat("v2/threads/" + e + "/follow", null, n) : (n = function() {
            WMSUI.showInfoMsg($WC.I18N("thread.unfollow.success")), $WC.$CUtil.setInnerText(s.followernode, $WC.I18N("thread.follow")), s.thread_follower = i, s.updateThreadFollowerInfo(!0, null, 1), $WC.RecentChats.updateLocalThreadFollower(e, !1)
        }, $WC.Ajax.postRequestToChat("v2/threads/" + e + "/unfollow", null, n))
    }, WebMessanger.serverup = function(e) {
        WebMessanger.hideBanner(), "undefined" != typeof AcsApi && WmsImplHandler.invoke(AcsApi.handleServerUP), WebMessanger.updateDebugInfo("Called serverup"), WmsImplHandler.invoke(Collaboration.serverup, e), $WC.Util.pubsub.publish("/wmsevents/serverup", e), _WMS_RETRY_COUNT = 0, WebMessanger.pause_printlog_requests = !1, WebMessanger.systemdown = !1, e && e.t && WebMessanger.set_server_sync_timediff(e.t), _WMSEMPTYBAR || silent || (WmsChatCache.removeAll(), Message.deletedMessages.removeAll(), WmsMainUI.updateUserName(), Commands.sync = !0, WmsMainUI.updateChatInvitationCount(), !$WC.Config.get("localUserData") && WebMessanger.isCliqUser() && $WC.Config.get("getUserDataOnServerUp") && WebMessanger.getUserCheckinStatus(WMSUI.checkAndShowStatusChangePopup))
    }, WebMessanger.serverdown = function(e, t) {
        WebMessanger.systemdown = !0, WebMessanger.updateDebugInfo("Called serverdown"), WmsImplHandler.invoke(Collaboration.serverdown), $WC.Util.pubsub.publish("/wmsevents/serverdown"), e ? (clearTimeout(retryregistertimer), WebMessanger.showBanner(e, t)) : iswmsframemonitorrunning || WebMessanger.showBanner(), WindowHandler.resetAllTypingStatus(), WmsContacts.removeInvitations()
    }, WebMessanger.feedhistory = function() {
        ZMSGUI.launchHistory()
    }, WebMessanger.enableSST = function() {}, WebMessanger.enableTokenPairAuth = function() {
        this.tokenpairauth = !0, this.authtype = 10
    }, WebMessanger.documentready = function() {
        WmsContacts.init(), WindowHandler.init()
    }, WebMessanger.setCSRFParamName = function(e) {
        _WMSCFPARAMNAME = e, $WC.WmsConstants.WMSCFPARAMNAME = e, $WC.Config.set({
            WMSCFPARAMNAME: _WMSCFPARAMNAME
        })
    }, WebMessanger.setCSRFTokenCookieName = function(e) {
        _WMSCFCOOKIENAME = e, $WC.WmsConstants.WMSCFCOOKIENAME = e, $WC.Config.set({
            WMSCFCOOKIENAME: _WMSCFCOOKIENAME
        })
    }, WebMessanger.setChatCSRFCookieName = function(e) {
        _CHATCFTOKEN = e, $WC.WmsConstants.CHATCFCOOKIENAME = e, $WC.Config.set({
            CHATCFCOOKIENAME: _CHATCFTOKEN
        })
    }, WebMessanger.setChatCSRFParamName = function(e) {
        _CHATCFPARAMNAME = e, $WC.Config.set({
            CHATCFPARAMNAME: _CHATCFPARAMNAME
        })
    }, WebMessanger.setBarSettingsValue = function(e) {
        for (var t in e)
            if (null != t || null != e[t])
                for (var s in WmsSettings.bsettings) t == s && e[t] && (WmsSettings.bsettings[s] = e[t]);
        var i = $WC.Util.createElement("script");
        i.type = "text/javascript";
        var n = this.rebrand ? this.rebrand + "_" : "";
        if (this.loadlocalfiles) {
            var a = "",
                o = document.querySelector('script[src*="wms.js"]');
            if (o) {
                var r = o.src.split("/");
                a = r[0] + "//" + r[2]
            }
            $WC.Config.set({
                builddomain: a
            }), i.src = a + "/" + _WMSCONT + "/javascript/resource/" + n + WebMessanger.language + ".js"
        } else {
            var l = "https:" == window.location.protocol ? window.location.protocol : "https:",
                d = "https:" === l ? wmsjsversion + "_https" : wmsjsversion,
                c = this.jsstaticdomain + "/ichat/" + d + "/js/resource/" + n + WebMessanger.language + ".js";
            if (WebMessanger.fp_hash && (c = this.jsstaticdomain + "/ichat/js/" + WebMessanger.fp_hash["resource/" + n + WebMessanger.language + ".js"]), WebMessanger.getClientSRIValues(WebMessanger.language + ".js")) {
                var u = WebMessanger.getClientSRIValues(WebMessanger.language + ".js");
                i.crossOrigin = "anonymous", i.integrity = u
            }
            i.src = l + "//" + c
        }
        EventsUtil.attachonload.call(i, (function() {
            WebMessanger.resourceloaded = !0, WebMessanger.updateDebugInfo("Resource loaded"), WebMessanger.initializeConnectivity(), Smiley = new $WC.Zomoji({
                default_size: "24",
                animation: {
                    default_size: "24"
                }
            }), Smiley.init = function() {}, Smiley.extrasmiley_lookup = Smiley.symbol_lookup, Smiley.defaultsmiley_lookup = Smiley.symbol_lookup, Message.reactions = new $WC.Zomoji({
                default_size: "24",
                animation: {
                    default_size: "24"
                },
                customemoji_size: "small"
            }), WmsSettings.populate(), WMSUI.updateResourceInAnnouncementBanner(), $WC.Config.set({
                isUDSDownloadEnabled: function() {
                    if (void 0 !== WebMessanger) return WebMessanger.isUDSDownloadEnabled()
                }
            }), $WC.Config.set({
                getUserDataOnServerUp: !1
            }), WmsSettings.adminsettings && WmsSettings.adminsettings.service_configurations && ("niclabs" == WmsSettings.adminsettings.service_configurations.dc || "nic" == WmsSettings.adminsettings.service_configurations.dc) && WebMessanger.disableNotebookWidget()
        })), document.body.appendChild(i)
    }, WebMessanger.isResourceLoaded = function() {
        return WebMessanger.resourceloaded
    };
var wmsUserConfig = {};

function getWMSRTCAccessToken() {
    return _WMSRTCATOKEN
}

function isLongPollingForced() {
    return _WMS_LP
}

function populateSpecialWMSAnnouncement(e) {
    WebMessanger.populateSpecialWMSAnnouncement(e)
}
WebMessanger.setUserConfig = function(e) {
    wmsUserConfig = e
}, WebMessanger.appendGlobalSearch = function(e) {
    if (!_isGSearchAppended && WMSUI.globalsearchenabled) {
        function t() {
            var t = {
                onZSReady: function() {
                    0 == WMSUI.hidegsicon && (document.getElementById("wmsglobalsearch").style.display = "block"), _isGSearchAppended = !0, e && e()
                }
            };
            zgssearch.initZGSHandler(t)
        }
        var s = document.getElementsByTagName("head");
        if (s && 0 != s.length || (s = [$WC.Util.createElement("head")], document.insertBefore(document.body, s[0])), WmsSettings.bsettings.adminsettings && WmsSettings.bsettings.adminsettings.service_configurations && "niclabs" == WmsSettings.bsettings.adminsettings.service_configurations.dc) {
            var i = new XMLHttpRequest,
                n = window.location.protocol + "//" + window.location.hostname + "/zgssearch/fetchHandlerInfo";
            i.open("GET", n, !0), i.withCredentials = !0, i.onreadystatechange = function() {
                if (4 === i.readyState) {
                    var e = JSON.parse(i.response)["gshandler.js"],
                        s = e.filename,
                        n = e.integrity;
                    $WC.Util.loadFiles(window.location.protocol + "//" + WebMessanger.jsstaticdomain + s, "script", t, null, {
                        integrity: n
                    })
                }
            }, i.send(null)
        } else $WC.Util.loadFiles(window.location.protocol + "//" + WebMessanger.jsstaticdomain + "/zohosearch/h1/js/gshandler.js?_T=" + (new Date).getTime(), "script", t)
    }
}, WebMessanger.appendPhoneBridge = function() {
    var e = WMSUI.phonebridgeconfig;
    if (WMSUI.phonebridgeenabled) {
        var t = {};
        t.parts = location.hostname.split("."), t.subdomain = t.parts.shift(), t.uplvldom = t.parts.join("."), t.server = "https://phonebridge." + t.uplvldom, null != e.pbDomain && "" != e.pbDomain && (t.server = e.pbDomain);
        var s = new XMLHttpRequest;
        s.open("GET", t.server + "/phonebridge/users/loadJS", !0), s.withCredentials = !0, s.onreadystatechange = function() {
            if (4 === s.readyState) {
                var t = "https:" + s.response;
                $WC.Util.loadFiles(t, "script", (function() {
                    PB.jsurl = t.substring(0, t.lastIndexOf("/")), PB.init(e)
                }))
            }
        }, s.send(null)
    }
}, WebMessanger.appendSMSBridge = function() {
    var e = WebMessanger.smsbridgeconfig;
    if (e) {
        var t = {};
        t.parts = location.hostname.split("."), t.subdomain = t.parts.shift(), t.uplvldom = t.parts.join("."), t.server = "https://phonebridge." + t.uplvldom, null != e.smsDomain && "" != e.smsDomain && (t.server = e.smsDomain), xhr = new XMLHttpRequest, xhr.open("GET", t.server + "/smsbridge/v3/notificationsms/sdk_meta", !0), xhr.withCredentials = !0, xhr.onreadystatechange = function() {
            if (4 === xhr.readyState) {
                var t = JSON.parse(xhr.response);
                $WC.Util.loadFiles("https:" + t.sdk_url, "script", (function() {
                    SMS.init(e)
                }))
            }
        }, xhr.send(null)
    }
}, WebMessanger.lazyLoadGlobalSearchFiles = function(e) {
    return _WMS_LAZYLOAD_SCRIPT = !0, WebMessanger.appendGlobalSearch.bind(this, e)
}, WebMessanger.setReminder = function(e) {
    var t = WindowHandler.getWinObjById(e.chat_id),
        s = {
            "Content-Type": "application/json",
            "X-XHR-exception": "true",
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        };
    $WC.Ajax.postRequestToChat("v2/reminders", e, (function() {
        t.showInfoMsg($WC.I18N("reminders.add.success"))
    }), (function() {
        t.showErrorMsg($WC.I18N("reminders.add.failed"))
    }), null, null, s)
}, WebMessanger.markReminderAsComplete = function(e, t) {
    var s = WindowHandler.getWinObjById(t.chid),
        i = {
            "X-XHR-exception": "true",
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        };
    $WC.Ajax.putRequestToChat("v2/reminders/" + e + "/complete", null, (function() {
        s.showInfoMsg($WC.I18N("reminders.complete.success"))
    }), null, null, null, i)
}, WebMessanger.snoozeReminder = function(e, t, s) {
    var i = WindowHandler.getWinObjById(s.chid),
        n = {
            "Content-Type": "application/json",
            "X-XHR-exception": "true",
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        },
        a = {
            time: t
        };
    $WC.Ajax.putRequestToChat("v2/reminders/" + e + "/snooze", a, (function() {
        i.showInfoMsg($WC.I18N("reminders.snooze.success"))
    }), null, null, null, n)
}, WebMessanger.parseReminderTime = function(e, t) {
    if (!WebMessanger.isGuestUser() && !WebMessanger.isRTCChat()) {
        var s = e.closest("[data-msgtime]").getAttribute("data-msgtime");
        if (!WebMessanger.getReminderInfo(s)) {
            var i = "time=" + s,
                n = {
                    time: s
                },
                a = {
                    "X-XHR-exception": "true",
                    "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
                };
            $WC.Ajax.requestToChat("v1/chats/" + t + "/parsetime", i, (function() {
                var e = JSON.parse(this.response).data.time,
                    s = {};
                s[this.opts.callbackargs.time] = e, WebMessanger.updateReminderInfo(s);
                var i = WindowHandler.getWinObjById(t);
                e > 0 && i.remindercomponent && i.remindercomponent.updateReminderTime(e)
            }), null, n, null, a)
        }
    }
}, WebMessanger.fork = function(e, t) {
    var s = {
        "Content-Type": "application/json",
        "X-XHR-exception": "true",
        "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
    };
    $WC.Ajax.postRequestToChat("v1/chats/" + e + "/fork", t, null, (function() {
        WMSUI.showErrorMsg($WC.I18N("fork.chat.failed"))
    }), null, null, s)
}, WebMessanger.createChannel = function(e, t, s, i, n) {
    var a = "name=" + e;
    a += "&scope=" + t, a += "&sid=" + encodeURIComponent(WebMessanger.getSid()), a += "&open_to_all=" + s, a += i ? "&userids=" + i : "", a += "&config=" + JSON.stringify(n), a += "&zchat_csrparam=" + $WC.Util.getCSRF().split("=")[1];
    var o = {
        "X-XHR-exception": "true",
        "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
    };
    $WC.Ajax.postRequestToChat("v1/channels", a, null, (function() {
        WMSUI.showErrorMsg($WC.I18N("channel.create.failed"))
    }), null, null, o)
}, WebMessanger.setChatTitle = function(e, t, s) {
    var i = "chid=" + e + "&uname=" + WebMessanger.zuid;
    t && (i += "&title=" + encodeURIComponent(t));
    $WC.Ajax.postRequestToChat("settitle.do", i, (function() {
        var t = JSON.parse(this.response)[0].objString,
            s = t.cntid,
            i = t.title;
        "contact_rename" === t.module ? WmsContacts.getContactsList(s).DNAME = i : "user_rename" === t.module && (WmsOrgContacts.getOrgContactsList(s).DNAME = i), WindowHandler.getWinObjById(e).setTitle(i), $WC.RecentChats.updateTitle(e, i)
    }), (function() {
        var t = WindowHandler.getWinObjById(e),
            i = t.partcount > 2 ? "chat.settitle.error" : "contact.rename.errormsg";
        t.showErrorMsg($WC.I18N(i)), t.setTitle(s)
    }))
}, WebMessanger.inviteToChannel = function(e, t) {
    var s = $WC.Channels.get(e).oc_id,
        i = "ulist=" + encodeURIComponent(t);
    $WC.Ajax.postRequestToChat("v1/channels/" + s + "/invite", i)
}, WebMessanger.addBotToChannel = function(e, t) {
    var s = $WC.Channels.get(e).oc_id,
        i = {
            bot_id: t
        },
        n = {
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
            "Content-Type": "application/json"
        };
    $WC.Ajax.postRequestToChat("company/" + _WMSAPPACCOUNTID + "/v2/channels/" + s + "/bots", i, (function() {
        var t = WindowHandler.getWinObjById(e);
        t && (t.showErrorMsg($WC.I18N("bots.addtochannel.success"), "info"), t.updatePartCount(+t.partcount + 1))
    }), (function() {
        var t = WindowHandler.getWinObjById(e);
        t ? t.showErrorMsg($WC.I18N("event.status.update.error")) : WMSUI.showErrorMsg($WC.I18N("event.status.update.error"))
    }), null, null, n)
}, WebMessanger.addMember = function(e, t, s) {
    for (var i = s, n = (t.split(","), 0), a = s.length - 1; n < a; n++) - 1 == t.indexOf(WmsContacts.getEmailId(i[n])) && s.splice(n, 1);
    for (var o = [], r = (n = 0, s.length - 1); n <= r; n++) o.push(s[n]);
    if (0 != o.length) {
        var l = "chid=" + e + "&ulist=" + encodeURIComponent(o);
        $WC.Ajax.postRequestToChat("addmember.do", l, null, (function() {
            2005 == JSON.parse(this.response)[0].objString.ERRCODE && WMSUI.showErrorMsg($WC.I18N("useradd.not.groupadmin"))
        }), null, null, {
            "X-XHR-exception": "true"
        })
    }
}, WebMessanger.deleteMember = function(e, t, s, i) {
    var n = "chid=" + e + "&ulist=" + encodeURIComponent(t);
    i && (n += "&entity_id=" + i);
    var a = {
        "X-XHR-exception": "true"
    };
    if (s) {
        n = {
            user_ids: [t]
        }, a = {
            "Content-Type": "application/json",
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        };
        $WC.Ajax.deleteRequestToChat("v2/threads/" + e + "/followers", n, (function() {
            WMSUI.showInfoMsg($WC.I18N("thread.followers.remove"))
        }), null, null, null, a)
    } else if ($WC.Util.isChannelChid(e)) {
        var o = $WC.Channels.get(e).oc_id;
        n = "ulist=" + encodeURIComponent(t), a = {
            "X-XHR-exception": "true",
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        }, $WC.Ajax.postRequestToChat("v1/channels/" + o + "/deletemember", n, null, null, null, null, a)
    } else $WC.Ajax.postRequestToChat("deletemember.do", n, null, (function() {
        2005 == JSON.parse(this.response)[0].objString.ERRCODE && WMSUI.showErrorMsg($WC.I18N("userdelete.not.groupadmin"))
    }), null, null, a)
}, WebMessanger.setZIndex = function(e) {
    var t = Math.pow(2, 31) - 2;
    e > t && (e = t), this.setzindex = e;
    var s = isNaN(e) ? e : +e + 1;
    $WC.Config.set({
        zindex: s
    })
}, WebMessanger.getZIndex = function() {
    return this.setzindex
}, WebMessanger.disableWMSStatus = function() {}, WebMessanger.setServiceStatus = function(e) {
    WebMessanger.isServiceStatusSet = !0, WMSUI.setServiceStatus(e)
}, WebMessanger.disableNetworkDownBanner = function() {
    this.disablenetworkdownbanner = !0
}, WebMessanger.clearTicket = function(e) {
    var t;
    null != e && (t = "lgtticket=" + e), $WC.Ajax.request("cleariamcache" + dext, t)
}, WebMessanger.isPresenceEnabled = function() {
    return 4 == (4 & getWmsConfig()) || 8 == (8 & getWmsConfig())
}, WebMessanger.makeChatPinned = function(e, t) {
    var s = WindowHandler.getWinObjById(e);
    s && (s.updatePinnedInfo(!0), $WC.Util.isThreadChid(e) && "true" !== s.thread_follower && s.updateThreadFollowerInfo(!0, null, null, !0)), $WC.RecentChats.updatePinnedChat(e, !0, null, t), $WC.HybridSearch.populateRecentChats()
}, WebMessanger.makeChatUnPinned = function(e) {
    var t = WindowHandler.getWinObjById(e);
    t && t.updatePinnedInfo(!1), $WC.RecentChats.updatePinnedChat(e, !1), $WC.HybridSearch.populateRecentChats()
}, WebMessanger.removeLiveChat = function(e) {
    var t = $WC.Util.indexOf(WebMessanger.liveChats, e); - 1 != t && WebMessanger.liveChats.splice(t, 1)
}, WebMessanger.setHistoryStorage = function(e, t) {
    var s = "option=" + e + "&chid=" + t;
    $WC.Ajax.postRequest("sethistorystorage.do", s)
}, WebMessanger.pinChat = function(e, t) {
    t ? $WC.Ajax.postRequestToChat("v2/chats/" + e + "/pin") : $WC.Ajax.postRequestToChat("v2/chats/" + e + "/unpin")
}, WebMessanger.leaveChannel = function(e) {
    var t = $WC.Channels.get(e).oc_id;
    $WC.Ajax.postRequestToChat("v1/channels/" + t + "/leave")
}, WebMessanger.makeChannelRead = function(e) {
    var t = "chid=" + e;
    $WC.Ajax.postRequestToChat("makechannelread.do", t)
}, WebMessanger.closeTicketAnnouncement = function() {
    $WC.Ajax.request("sendsystemmsg.do?key=closeann"), WMSUI.closeTicketAnnouncement()
}, WebMessanger.turnOffChat = function() {
    $WC.Util.checkSessionConfig("CHAT") && ("undefined" != typeof WmsUIImpl && WmsImplHandler.invokeSynchronously(WmsUIImpl.handleTurnOffChat), _WMSCONFIG &= ~WMSSessionConfig.CHAT, _isGSearchAppended = !1, WmsChatCache.removeAll(), Message.deletedMessages.removeAll(), $WC.WmsSessionStorage.removeItem("wms_openchats"), WindowHandler.exist = [], WebMessanger.sid = null, !1 === WebMessanger.chatdisabled && !1 === WebMessanger.allprdchatdeactivated && !1 === WebMessanger.chatdeactivated && WmsSettings.updateWmsSettings("bchatsettings", "deact", null, "add"), WebMessanger.clearAndRegister())
}, WebMessanger.turnOnChat = function(e, t) {
    $WC.Util.checkSessionConfig("CHAT") || ("undefined" != typeof WmsUIImpl && WmsImplHandler.invokeSynchronously(WmsUIImpl.handleTurnOnChat), _WMSCONFIG |= WMSSessionConfig.CHAT, _isGSearchAppended = !1, WebMessanger.sid = null, !0 === WebMessanger.allprdchatdeactivated ? WmsSettings.updateWmsSettings("bchatsettings", "deact", "ALL", "rem", e, t) : !0 === WebMessanger.chatdeactivated && WmsSettings.updateWmsSettings("bchatsettings", "deact", null, "rem", e, t), WebMessanger.clearAndRegister())
}, WebMessanger.unPauseChat = function(e, t) {
    var s = function() {
        WmsImplHandler.invoke(t)
    };
    WebMessanger.turnOnChat((function() {
        var t = JSON.parse(this.responseText)[0].objString;
        if (WmsSettings.handleUpdateWmsSettings(t), !0 === WebMessanger.chatdeactivated) {
            WebMessanger.turnOnChat((function() {
                var t = JSON.parse(this.responseText)[0].objString;
                WmsSettings.handleUpdateWmsSettings(t), WmsImplHandler.invoke(e)
            }), s)
        } else WmsImplHandler.invoke(e)
    }), s)
}, WebMessanger.isOrgUser = function() {
    return !(!WebMessanger.orgid || "-1" === WebMessanger.orgid)
}, WebMessanger.isActiveChatBarUser = function() {
    return WebMessanger.isactivechatbaruser
}, WebMessanger.isMediaCallEnabled = function(e) {
    var t = "voice" === e ? "audio_call" : "video" === e ? "video_call" : "screen_sharing";
    return !_WMSDISABLEAVCHAT && $WC.SecurityManager.hasPermission(t) || !1
}, WebMessanger.isMessageDeletionEnabled = function() {
    return WebMessanger.isCliqUser() ? WebMessanger.isRTCChat() || WmsSettings.adminsettings.moduleconfig && WmsSettings.adminsettings.moduleconfig.messaging && WmsSettings.adminsettings.moduleconfig.messaging.configs && "true" === WmsSettings.adminsettings.moduleconfig.messaging.configs.delete_messages : WebMessanger.isRTCChat() || WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.DeleteMessage && WmsSettings.adminsettings.features.DeleteMessage.enabled
}, WebMessanger.getDeleteMessageTimeFrame = function() {
    return WebMessanger.isCliqUser() ? WmsSettings.adminsettings.moduleconfig && WmsSettings.adminsettings.moduleconfig.messaging && WmsSettings.adminsettings.moduleconfig.messaging.configs && WmsSettings.adminsettings.moduleconfig.messaging.configs.delete_messages_time_frame : WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.DeleteMessage && WmsSettings.adminsettings.features.DeleteMessage.properties && WmsSettings.adminsettings.features.DeleteMessage.properties.timeframe
}, WebMessanger.isMessageEditingEnabled = function() {
    return WebMessanger.isCliqUser() ? WebMessanger.isRTCChat() || WmsSettings.adminsettings.moduleconfig && WmsSettings.adminsettings.moduleconfig.messaging && WmsSettings.adminsettings.moduleconfig.messaging.configs && "true" === WmsSettings.adminsettings.moduleconfig.messaging.configs.edit_messages : WebMessanger.isRTCChat() || WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.EditMessage && WmsSettings.adminsettings.features.EditMessage.enabled
}, WebMessanger.getEditMessageTimeFrame = function() {
    return WebMessanger.isCliqUser() ? WmsSettings.adminsettings.moduleconfig && WmsSettings.adminsettings.moduleconfig.messaging && WmsSettings.adminsettings.moduleconfig.messaging.configs && WmsSettings.adminsettings.moduleconfig.messaging.configs.edit_messages_time_frame : WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.EditMessage && WmsSettings.adminsettings.features.EditMessage.properties && WmsSettings.adminsettings.features.EditMessage.properties.timeframe
}, WebMessanger.isSpecialMentionEnabled = function() {
    return WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.specialmention && WmsSettings.adminsettings.features.specialmention.enabled
}, WebMessanger.isReactionsEnabled = function() {
    return WebMessanger.isRTCChat() || WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.reactions && WmsSettings.adminsettings.features.reactions.enabled
}, WebMessanger.isUDSUploadEnabled = function() {
    return !(!_UPLOADSERVERURL || WebMessanger.isGuestUser() || _WMS_SAMEDOMAIN)
}, WebMessanger.isUDSDownloadEnabled = function() {
    return !(!_DOWNLOADSERVERURL || WebMessanger.isGuestUser() || _WMS_SAMEDOMAIN)
}, WebMessanger.getFileUploadLimit = function() {
    return WmsSettings.adminsettings.moduleconfig && WmsSettings.adminsettings.moduleconfig.messaging && WmsSettings.adminsettings.moduleconfig.messaging.configs && WmsSettings.adminsettings.moduleconfig.messaging.configs.upload_limit
}, WebMessanger.isPaginationEnabledForParticipantsSearch = function() {
    return WmsSettings.adminsettings.features.channel_participants_search
}, WebMessanger.isRegistered = function() {
    return WebMessanger.registered
}, WebMessanger.systemApiHandler = function(e, t) {
    var s = e.split("/"),
        i = s[0],
        n = s.slice(1);
    switch (i) {
        case "joinchannel":
            var a = n[0];
            !1 === $WC.Channels.isJoinedChannel(a) && WebMessanger.joinChannel(a);
            break;
        case "startchat":
            var o = n[0],
                r = WindowHandler.getWinObjById(o);
            r ? r.highlight() : WebMessanger.openUserChat(o, null, null, null, "systemapi");
            break;
        case "audiocall":
            o = n[0];
            WMSUI.makeMediaCall(WMSUI.avCall.CALL_TYPE_VOICE, o);
            break;
        case "videocall":
            o = n[0];
            WMSUI.makeMediaCall(WMSUI.avCall.CALL_TYPE_VIDEO, o);
            break;
        case "videobroadcast":
            var l = n[0];
            t.sender !== WebMessanger.zuid && window.open(_WMSCHATURL + "joinprimetime.do?key=" + encodeURIComponent(l));
            break;
        case "invite":
            o = n[0];
            WMSUI.inviteMember(o);
            break;
        case "approvechannel":
            a = n[0];
            WebMessanger.approveChannel(a);
            break;
        case "rejectchannel":
            a = n[0];
            WebMessanger.rejectChannel(a);
            break;
        case "acceptevent":
        case "declineevent":
            WebMessanger.handleCalendarEvents(e);
            break;
        case "locationpermission":
            var d = $WC.Config.get("LOCATION_INFO").PERMISSIONSTATE;
            if ("granted" === d) WMSUI.showInfoMsg($WC.I18N("functions.location.granted"));
            else {
                if ("undefined" != typeof navigator && void 0 !== navigator.geolocation) {
                    var c = function(e) {
                        navigator.permissions.query({
                            name: "geolocation"
                        }).then((function(e) {
                            $WC.Config.get("LOCATION_INFO").PERMISSIONSTATE = e.state, "granted" === e.state ? WMSUI.showInfoMsg($WC.I18N("functions.location.allowed")) : WMSUI.showInfoMsg($WC.I18N("functions.location.allowed.once"))
                        }))
                    };
                    navigator.geolocation.getCurrentPosition(c, (function(e) {
                        WMSUI.showErrorMsg($WC.I18N("functions.location.denied.now")), void 0 === d && ($WC.Config.get("LOCATION_INFO").PERMISSIONSTATE = "denied")
                    }))
                }
                "denied" === d && WMSUI.showErrorMsg($WC.I18N("functions.location.denied"))
            }
            break;
        case "markreminderascomplete":
            WebMessanger.markReminderAsComplete(n[0], t);
            break;
        case "snoozereminder":
            WebMessanger.snoozeReminder(n[0], n[1], t);
            break;
        default:
            var u = "api=" + e + "&chid=" + t.chid;
            c = function() {
                var e = this.response ? JSON.parse(this.response)[0].objString : "",
                    s = WindowHandler.getWinObjById(t.chid);
                "message" === e.type && e.info && (e.info.isTempMsg = !0, Message.constructAndAppendChatContent([e.info], s.msgdisp, t.chid))
            };
            $WC.Ajax.postRequestToChat("executesystemaction.do", u, c)
    }
}, WebMessanger.executeButtonResponseHandler = function() {
    var e = {
        renderResponse: function(e, t) {
            if (e.info)
                if (e.info.widget) {
                    var s = JSON.parse(e.info.widget);
                    $WC.Widgets.construct(s)
                } else if ("message" === e.type) {
                var i = WindowHandler.getWinObjById(t.chid);
                e.info.isTempMsg = !0, Message.constructAndAppendChatContent([e.info], i.msgdisp, t.chid), i.scrollDisplay()
            }
        },
        handleSystemResponse: function(e, t) {
            if ("banner" === e.type) {
                var s = "failure" === e.info.type ? "error" : "info";
                WMSUI.showErrorMsg(e.info.text, s)
            }
        }
    };
    return function(t, s, i) {
        "function" == typeof e[t] && e[t](s, i)
    }
}(), WebMessanger.disableSmartChatKeyboardShortcut = function() {
    WebMessanger.smartchatshortcutdisabled = !0
}, WebMessanger.enableSmartChatKeyboardShortcut = function() {
    WebMessanger.smartchatshortcutdisabled = !1
}, WebMessanger.replaceChatWindowHeaderHTML = function(e, t) {
    var s = WindowHandler.getWinObjById(e);
    s && (s.headernode.innerHTML = t)
}, WebMessanger.closeAnnBanner = function() {
    WMSUI.clearBannerAndUpdate()
}, WebMessanger.setFrameOrigin = function(e) {
    WebMessanger.frameorigin = e || window.location.origin
}, WebMessanger.updateTourSettings = function(e, t) {
    var s = "settings=" + e + "&exitdetails=" + t;
    $WC.Ajax.postRequestToChat("updatetoursettings.do", s)
}, WebMessanger.useLongPolling = function() {
    _WMS_LP = "true"
}, WebMessanger.startAudioCall = function(e) {
    if (silent && "undefined" == typeof MediacallManager) {
        if ("function" == typeof WebMessanger.apiInvocationCallback) {
            var t = {
                methodname: "startAudioCall",
                params: e
            };
            WebMessanger.apiInvocationCallback(t)
        }
    } else WMSUI.makeMediaCall(WMSUI.avCall.CALL_TYPE_VOICE, e)
}, WebMessanger.startVideoCall = function(e) {
    if (silent && "undefined" == typeof MediacallManager) {
        if ("function" == typeof WebMessanger.apiInvocationCallback) {
            var t = {
                methodname: "startVideoCall",
                params: e
            };
            WebMessanger.apiInvocationCallback(t)
        }
    } else WMSUI.makeMediaCall(WMSUI.avCall.CALL_TYPE_VIDEO, e)
}, WebMessanger.startScreenShare = function(e) {
    WMSUI.makeMediaCall(WMSUI.avCall.CALL_TYPE_SCREENSHARE, e)
}, WebMessanger.rePopulateCustomContacts = function() {
    WmsHybridSearch.populateCustomContactListInMainUI()
}, WebMessanger.localPush = push, WebMessanger.updateContactMenuCount = function(e) {
    WmsMainUI.updateChatInvitationCount(e)
}, WebMessanger.deleteMessage = function(e, t) {
    var s = e.getAttribute("data-msguid"),
        i = {
            msgack_key: e.getAttribute("data-msgtime"),
            sid: WebMessanger.sid
        },
        n = {
            "X-XHR-exception": "true",
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
            "Content-Type": "application/json"
        };
    $WC.Ajax.deleteRequestToChat("v2/chats/" + t + "/messages/" + s, i, null, null, null, null, n)
}, WebMessanger.updateReaction = function(e, t, s, i, n) {
    var a = {
        "Content-Type": "application/json",
        "X-XHR-exception": "true",
        "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
    };

    function o() {
        var n = WindowHandler.getWinObjById(e);
        n.showErrorMsg($WC.I18N("reactions.failureinfo")), n.updateMyReactionData(t, s, !i);
        var a = "string" == typeof this.response && "" != this.response ? JSON.parse(this.response) : this.response;
        a && n.handleChatRestrictions(a)
    }
    var r = "v2/chats/" + e + "/messages/" + t + "/reactions";
    WebMessanger.isGuestUser() && (a["x-cliq-guid"] = WebMessanger.guest_info.encrypt_id, r = "guestapi/" + r);
    var l = !!n;
    i ? $WC.Ajax.deleteRequestToChat(r, {
        emoji_code: s,
        is_linked_message: l
    }, null, o, null, null, a) : $WC.Ajax.postRequestToChat(r, {
        emoji_code: s,
        is_linked_message: l
    }, null, o, null, null, a)
}, WebMessanger.syncAdminSettings = function() {
    $WC.Ajax.requestToChat("chatbarsync.do", null, (function(e) {
        var t = e && e.features;
        t.chatdraft_lmtime && WmsSettings.adminsettings.features.chatdrafts && $WC.Drafts.checkAndUpdateLMTime(t.chatdraft_lmtime), WebMessanger.sync_adminsettings_onfocus = !1, $WC.Drafts.getFromServer()
    }))
}, WebMessanger.markAsUnread = function(e, t, s) {
    var i = {
        "Content-Type": "application/json",
        "X-XHR-exception": "true",
        "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
    };
    $WC.Ajax.putRequestToChat("v2/chats/" + e + "/unread", {
        message_id: t,
        time: s
    }, null, (function() {
        WMSUI.showErrorMsg($WC.I18N("message.error.markasunread"))
    }), null, null, i)
}, WebMessanger.getPinnedMsg = function(e, t) {
    $WC.Ajax.requestToChat("v2/chats/" + e + "/stickymessage", null, (function() {
        var t = WindowHandler.getWinObjById(e);
        t && t.showPinnedMsg(JSON.parse(this.response))
    }))
}, WebMessanger.pinMsg = function(e, t, s, i) {
    var n = WindowHandler.getWinObjById(e);
    i = i || !1, s = s || "-1", s = parseInt(s);
    var a = {
            "Content-Type": "application/json",
            "X-XHR-exception": "true",
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
            "x-consents-version": 1
        },
        o = {
            id: t,
            expiry_time: s,
            notify: i
        };
    $WC.Ajax.postRequestToChat("v2/chats/" + e + "/stickymessage", o, null, (function() {
        n.showErrorMsg($WC.I18N("msg.pin.error"))
    }), null, null, a)
}, WebMessanger.unpinMsg = function(e) {
    var t = WindowHandler.getWinObjById(e),
        s = {
            "X-XHR-exception": "true",
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        };
    $WC.Ajax.deleteRequestToChat("v2/chats/" + e + "/stickymessage", null, (function() {
        t.showInfoMsg($WC.I18N("msg.unpin.success"))
    }), (function() {
        t.showErrorMsg($WC.I18N("msg.unpin.error"))
    }), null, null, s)
}, WebMessanger.disableCreateChannelLink = function() {
    WebMessanger.is_create_channel_link_disabled = !0
}, WebMessanger.disableCopyMessageLink = function() {
    WebMessanger.is_copy_message_link_disabled = !0
}, WebMessanger.disableSetReminderOption = function() {
    WebMessanger.is_set_reminder_option_disabled = !0
}, WebMessanger.preFetchChannels = function() {
    WebMessanger.prefetch_channels = !0
}, WebMessanger.disableZohoLinksSettings = function() {
    WebMessanger.is_zoho_links_settings_disabled = !0
}, WebMessanger.disableGroupCall = function() {
    WebMessanger.is_group_call_disabled = !0
}, WebMessanger.disableCliqFeatures = function() {
    WebMessanger.disableCreateChannelLink(), WebMessanger.disableCopyMessageLink(), WebMessanger.disableZohoLinksSettings(), WebMessanger.disableGroupCall()
}, WebMessanger.disableMsgPinOption = function() {
    WebMessanger.is_msgpin_option_disabled = !0
}, WebMessanger.storeUserInfoAndUpdateTitle = function(e, t) {
    var s = WindowHandler.getWinObjById(t);
    s && $WC.Users.getInfo(e) && $WC.Users.getInfo(e).dname !== s.title && WindowHandler.updateChatTitle(t, $WC.Users.getInfo(e).dname)
}, WebMessanger.checkAndEnableChatBar = function(e, t, s, i, n) {
    var a;
    if (e ? a = _WMSCHATURL + "users/" + e : t && (a = _WMSCHATURL + "chats/" + t), s && silent) n ? i(a) : window.open(a, "_blank", "toolbar=1,menubar=1,location=1,status=1,scrollbars=1,noopener");
    else {
        var o = new $WC.ConfirmationDialog,
            r = [{
                text: $WC.I18N("chat.enable.click"),
                onclick: function() {
                    WebMessanger.turnOnChat(), WebMessanger.methodsInCallbackQueue.push(i), o.unmountComponent()
                },
                buttonstyle: "confirmation_button"
            }, {
                text: $WC.I18N("common.cancel"),
                onclick: function() {
                    o.unmountComponent()
                },
                buttonstyle: "cancel_button"
            }],
            l = [$WC.I18N("chat.disabled.info")];
        s && _WMSOPENINCLIQ && (WebMessanger.isCliqUser() || WebMessanger.isOrgUser()) && (l = [$WC.I18N("chat.disabled.info2")], r = [{
            text: $WC.I18N("chats.cliq.open"),
            onclick: {
                callback: function() {
                    i(a), o.unmountComponent()
                }
            },
            buttonstyle: "confirmation_button"
        }, {
            text: $WC.I18N("chat.enable.click"),
            onclick: function() {
                WebMessanger.turnOnChat(), o.unmountComponent()
            },
            buttonstyle: "confirmation_button"
        }], n || (r[0].onclick = {
            callback: function() {
                "function" == typeof WebMessanger.apiInvocationCallback ? !WebMessanger.apiInvocationCallback({
                    redirect_link: a,
                    action_name: "chat"
                }) && window.open(a, "_blank", "toolbar=1,menubar=1,location=1,status=1,scrollbars=1,noopener") : window.open(a, "_blank", "toolbar=1,menubar=1,location=1,status=1,scrollbars=1,noopener");
                o.unmountComponent()
            }
        }));
        var d = {
            actions: r,
            heading: l
        };
        o.mountComponent(d)
    }
}, WebMessanger.showChatsListDialog = function(e, t, s, i, n, a) {
    if (WebMessanger.isChatPaused()) WebMessanger.checkAndEnableChatBar(null, null, null, WebMessanger.showChatsListDialog.bind(this, e, t, s, i, n, a));
    else {
        $WC.Util.isEmptyObject($WC.Channels.get()) && $WC.Channels.initChannels();
        var o = [{
                text: s,
                onclick: function(e) {
                    var t = [];
                    e.forEach((function(e) {
                        var s = {
                            id: e
                        };
                        WmsMainUI.scheduleAutoFocus(e), WmsContacts.getContactsList(e) || WmsOrgContacts.getOrgContactsList(e) ? (s.type = "userid", l(n) && WebMessanger.openUserChat(e)) : (s.type = "chatid", l(n) && WebMessanger.createChatWindowFromCache(e)), t.push(s)
                    })), i(t)
                }
            }],
            r = [$WC.WmsConstants.HYBRIDSEARCH.ORGCONTACT, $WC.WmsConstants.HYBRIDSEARCH.JOINEDCHANNEL, $WC.WmsConstants.HYBRIDSEARCH.CHAT];
        $WC.Participants.showChatsList(null, e, t, o, r, a, (function() {
            WMSUI.showErrorMsg($WC.I18N("chats.selection.limit"))
        }))
    }

    function l(e, t) {
        if (e) return silent ? void WebMessanger.checkAndEnableChatBar("", t, !0) : !Chat.isExists(t) || void WMSUI.handleChatExist(t)
    }
}, WebMessanger.getChatsList = function(e, t, s) {
    $WC.HybridSearch.generateChatsListWithSearch(e, (function(e, s, i) {
        0 == e.length && s && i ? t([], i) : e.length > 0 && (e = (e = e.filter((function(e) {
            if (!$WC.Util.isBotChid(e.id)) return !0
        }))).map((function(e) {
            var t = {
                title: e.title,
                imgsrc: e.imgsrc
            };
            return 10 == e.filtertype || 3 == e.filtertype || 2 == e.pcount && WmsMainUI.getZuidForPrivateChat(e.id) ? (e = function(e) {
                var t = "",
                    s = "";
                3 != e.filtertype && 10 != e.filtertype || !e.desc ? t = WmsMainUI.getZuidForPrivateChat(e.id) : (t = e.id, s = e.desc, delete e.desc);
                t && WmsContacts.get(t) ? s = WmsContacts.get(t).EMAILID : t && WmsOrgContacts.getOrgContactsList(t) && (s = WmsOrgContacts.getOrgContactsList(t).EMAILID);
                return e.zuid = t, e.email = s, e
            }(e), t.zuid = e.zuid, t.email = e.email) : (t.chid = e.id, t.pcount = e.pcount), t
        })), t(e, i))
    }), s)
}, WebMessanger.sendMessageToMultipleRecipients = function(e, t, s, i) {
    if (t.length > 5) throw new Error("Selection Limit exceeded");
    var n = 0,
        a = e,
        o = {
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
            "Content-Type": "application/json"
        };

    function r() {
        var e = {
            status: this.status,
            id: this.opts.callbackargs.id,
            type: this.opts.callbackargs.type
        };
        s(e)
    }

    function l() {
        var e = {
            status: this.status,
            id: this.opts.callbackargs.id,
            type: this.opts.callbackargs.type
        };
        i(e)
    }
    t.forEach((function(e) {
        setTimeout((function() {
            var t = "",
                s = {
                    id: e.id,
                    type: e.type
                };
            "userid" === e.type ? t = "v2/buddies/" + e.id + "/message" : (t = "v2/chats/" + e.id + "/message", WebMessanger.isGuestUser() && (t = "guestapi/v2/chats/" + e.id + "/message")), $WC.Ajax.postRequestToChat(t, a, r, l, s, null, o)
        }), n), n += 500
    }))
}, WebMessanger.subscribeToUnreadChatDetails = function(e, t) {
    $WC.Util.pubsub.subscribe("/chats/unreadchatdetails", (function() {
        e(WebMessanger.getUnreadChatDetails(t))
    }))
}, WebMessanger.subscribeToAttachmentPreviewEvents = function(e, t, s, i) {
    if ("function" == typeof e && $WC.Util.pubsub.subscribe("uievent/attachmentpreviewopen", e), "function" == typeof t && $WC.Util.pubsub.subscribe("uievent/attachmentpreviewclose", t), "function" == typeof s) {
        $WC.Util.pubsub.subscribe("uievent/videoplayerviewchange", (function(e, t) {
            s(t)
        }))
    }
    "function" == typeof i && $WC.Util.pubsub.subscribe("uievent/fileuploaduiopen", i)
}, WebMessanger.subscribeToCrossProductMessages = function(e) {
    "function" == typeof e && $WC.Util.pubsub.subscribe("/wmsevents/crossproduct", (function(t, s, i) {
        e(s, i)
    }))
}, WebMessanger.subscribeToServerUp = function(e) {
    "function" == typeof e && $WC.Util.pubsub.subscribe("/wmsevents/serverup", (function(t, s) {
        e(s)
    }))
}, WebMessanger.subscribeToServerDown = function(e) {
    "function" == typeof e && $WC.Util.pubsub.subscribe("/wmsevents/serverdown", (function() {
        e()
    }))
}, WebMessanger.subscribeToMentions = function(e, t) {
    "function" == typeof e && $WC.Util.pubsub.subscribe("/chats/mentions", (function(s, i) {
        if (!t || "chatlets" != t || "10" == i.ctype) {
            var n = i.mtype == CT_ATT_MSG || i.current_mtype == CT_ATT_MSG ? i.msg : i,
                a = i.msg;
            (i.mtype == CT_EDITED_MSG || i.msg && i.msg[0].mtype == CT_EDITED_MSG || i.msg && i.msg[0] && i.msg[0].msg && i.msg[0].msg.mtype == CT_EDITED_MSG) && ((n = i.msg[0].msg).mtype != CT_ATT_MSG && i.current_mtype != CT_ATT_MSG || (n = n.msg), a = i.msg[0].msg.msg);
            var o = {
                chid: i.threadchid || i.chid,
                title: i.title,
                sender: i.sender,
                dname: i.dname,
                ctype: i.ctype,
                mtype: i.mtype,
                msguid: i.msguid,
                msg: {
                    msg: a,
                    formatted_msg: $WC.Util.formatMentions(n, !0),
                    html_msg: $WC.Util.formatMentions(n)
                },
                mentions: i.meta.mentions
            };
            10 == i.ctype && (i.entityid ? o.entityid = i.entityid : i.addinfo && -1 !== i.addinfo.indexOf("ENTITYID") && (o.entityid = i.addinfo.split(":")[i.addinfo.indexOf("ENTITYID") + 1])), e(o)
        }
    }))
}, WebMessanger.getUnreadChatDetails = function(e) {
    for (var t = $WC.RecentChats.getUnreadChatList(), s = [], i = 0; i < t.length; i++) {
        var n = t[i],
            a = n.CTYPE,
            o = n.PARTICIPANTSCOUNT,
            r = n.CUSTOMGROUP;
        if ((!e || !("chatlets" == e && "10" != a || "dmchat" == e && ("1" != a || "true" == r || o > 2))) && (s.push({
                title: n.TITLE,
                chid: n.CHATID,
                last_msg: {
                    html_msg: $WC.HybridSearch.createLastMsgInfoHtml(n),
                    raw_msg: n.LASTMSGINFO.msg,
                    mtype: n.LASTMSGINFO.mtype,
                    sender_zuid: n.LASTMSGINFO.sender,
                    sender_dname: n.LASTMSGINFO.dname,
                    msg_time: n.LMTIME
                },
                unread_count: WmsMainUI.getUnreadCount(n.CHATID)
            }), 10 == a && n.ENTITYID && (s[s.length - 1].entityid = n.ENTITYID), 1 == a && 2 == o && n.PARTICIPANTS))
            for (var l = 0; l < n.PARTICIPANTS.length; l++) n.PARTICIPANTS[l].zuid !== WebMessanger.zuid && (s[s.length - 1].zuid = n.PARTICIPANTS[l].zuid)
    }
    return s
}, WebMessanger.isGuestUser = function() {
    return !!WebMessanger.guest_info.verification_url
}, WebMessanger.setGuestURL = function(e) {
    WebMessanger.guest_info.verification_url = e
}, WebMessanger.verifyGuestAndGetChatDetails = function() {
    if (!WebMessanger.guest_info.chat_info_fetched) {
        var e = WebMessanger.guest_info.verification_url,
            t = function(e) {
                WebMessanger.guest_info.chat_info_fetched = !1, "function" == typeof WebMessanger.exclusive_chat_info.failure_callback && WebMessanger.exclusive_chat_info.failure_callback(e)
            };
        $WC.Ajax.requestToChat(e, null, (function() {
            var e = "string" == typeof this.response && "" !== this.response ? JSON.parse(this.response) : this.response;
            if (e) {
                if (!e.data || !e.data.chat_id) return void t(e);
                WebMessanger.guest_info.chat_info = e, WebMessanger.guest_info.encrypt_id = e.data.id, WebMessanger.guest_info.id = WebMessanger.zuid, WebMessanger.exclusive_chat_info.chat_id = e.data.chat_id, WebMessanger.guest_info.chat_info_fetched = !0, e.data._CHATCSRFCOOKIENAME && $WC.Config.set({
                    GUEST_CHATCFCOOKIENAME: e.data._CHATCSRFCOOKIENAME
                }), WebMessanger.openGuestChat()
            }
        }), t)
    }
}, WebMessanger.openGuestChat = function() {
    if (WebMessanger.guest_info.chat_info_fetched) {
        if (WebMessanger.guest_info.chat_info.data && WebMessanger.guest_info.chat_info.data.CHAT) {
            var e;
            2 == (e = WebMessanger.guest_info.chat_info.data.CHAT.recipants.split(",")).length && (WebMessanger.guest_info.chat_info.data.CHAT.pcount = e.length);
            var t = WebMessanger.guest_info.chat_info.data.CHAT.chid;
            WindowHandler.getWinObjById(t) && null != document.getElementById(t) || WMSUI.createNewChatWindow(WebMessanger.guest_info.chat_info.data.CHAT)
        }
    } else WebMessanger.verifyGuestAndGetChatDetails()
}, WebMessanger.logoutGuestUser = function(e, t) {
    WebMessanger.guest_info && WebMessanger.guest_info.encrypt_id && $WC.Ajax.postRequestToChat("guestapi/v2/guests/" + WebMessanger.guest_info.encrypt_id + "/logout", null, e, t, null, null, {
        "X-XHR-exception": "true",
        "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
        "x-cliq-guid": WebMessanger.guest_info.encrypt_id
    })
}, WebMessanger.enableExclusiveChatMode = function() {
    WebMessanger.is_exclusive_chat = !0
}, WebMessanger.isExclusiveChat = function() {
    return WebMessanger.is_exclusive_chat
}, WebMessanger.addAllowedExclusiveChatID = function(e) {
    -1 === WebMessanger.exclusive_chat_info.allowedchids.indexOf(e) && WebMessanger.exclusive_chat_info.allowedchids.push(e)
}, WebMessanger.removeAllowedExclusiveChatID = function(e) {
    WebMessanger.exclusive_chat_info.allowedchids = WebMessanger.exclusive_chat_info.allowedchids.filter((function(t) {
        return t != e
    }))
}, WebMessanger.isChatAllowedAsExclusiveChat = function(e) {
    return WebMessanger.exclusive_chat_info.chat_id == e || -1 !== WebMessanger.exclusive_chat_info.allowedchids.indexOf(e)
}, WebMessanger.getGuestPhotoUrl = function(e, t) {
    if (e = e || WebMessanger.guest_info.id && WebMessanger.guest_info.id.split("$")[1]) {
        if (t) {
            var s = "/" + _CHATCONT + "/guestimg/" + e + "/photo.do";
            return WebMessanger.isGuestUser() && (s += "?guest_id=" + WebMessanger.guest_info.encrypt_id), s
        }
        var i = e.split("-")[0].replace("$", "");
        return i = BigInt(i) % BigInt(33) + BigInt(1), window.location.protocol + "//" + WebMessanger.staticdomain + "/chat/source/officechat/images/default/guestchat/dp-" + i + ".png"
    }
}, WebMessanger.joinChatlet = function(e) {
    var t = !1;
    for (var s in WindowHandler.openedChats) {
        var i = WindowHandler.getWinObjById(s);
        i && i.entityid == WebMessanger.getPrd() + "." + e && (t = WMSUI.handleChatExist(s))
    }
    if (0 == t) {
        var n = {
                session_id: WebMessanger.sid,
                product_id: WebMessanger.prd
            },
            a = {
                "Content-Type": "application/json"
            };
        void 0 !== WebMessanger.glowOnOpen && (WebMessanger.glowOnOpen[WebMessanger.prd + "." + e] = !0);
        var o = "function" == typeof WebMessanger.exclusive_chat_info.failure_callback ? WebMessanger.exclusive_chat_info.failure_callback : null,
            r = 1 == silent ? WMSUI.getServiceChatContainer(null, {
                entityid: WebMessanger.prd + "." + e
            }) : null;
        !r && "undefined" != typeof CrmPlusImpl && CrmPlusImpl.isLoadedInCrmplus() || !r && window.zmwp && void 0 !== window.zmwp && "undefined" !== window.zmwp.WpCommunicator ? WebMessanger.getTopWindowSid((function(t) {
            n.session_id = t, $WC.Ajax.postRequestToChat("v2/chatlets/" + encodeURIComponent(e) + "/join", n, null, o, null, null, a)
        })) : $WC.Ajax.postRequestToChat("v2/chatlets/" + encodeURIComponent(e) + "/join", n, null, o, null, null, a)
    }
}, WebMessanger.setExclusiveEntityId = function(e) {
    e && (WebMessanger.exclusive_chat_info.entity_id = e)
}, WebMessanger.setExclusiveChatDetails = function(e, t, s, i) {
    WebMessanger.enableExclusiveChatMode(), WebMessanger.is_free_user_exclusive_chat = !!WmsSettings.is_free_user, t && WebMessanger.setGuestURL(t), WebMessanger.setExclusiveEntityId(e), s && (WebMessanger.exclusive_chat_info.failure_callback = s), i && (WebMessanger.guest_info.chat_info_fetched = !1), 14 == _WMSCONFIG && WebMessanger.is_free_user_exclusive_chat && ($WC.Util.checkSessionConfig("CHAT") || (_WMSCONFIG |= WMSSessionConfig.CHAT, WebMessanger.sid = null, WebMessanger.clearAndRegister()))
}, WebMessanger.getExclusiveChatDetails = function() {
    return WebMessanger.exclusive_chat_info
}, WebMessanger.setColors = function(e) {
    if (e && !$WC.Util.isEmptyObject(e)) {
        var t = $WC.Util.createElement("style"),
            s = "";
        t.type = "text/css", e.primary_color && (s = " --wms-primary-colorcode: " + $WC.Util.hexToRGB(e.primary_color) + ";"), e.chat_bg && (s += " --wms-chat-bg-colorcode: " + $WC.Util.hexToRGB(e.chat_bg) + ";"), e.chat_bubble && (s += " --wms-bubble-colorcode: " + $WC.Util.hexToRGB(e.chat_bubble) + ";"), e.otheruser_chat_bubble && (s += " --wms-otheruser-bubble-colorcode: " + $WC.Util.hexToRGB(e.otheruser_chat_bubble) + ";"), e.border_color && (s += " --wms-border-colorcode: " + $WC.Util.hexToRGB(e.border_color) + ";"), e.primary_text_color && (s += " --wms-primary-text-colorcode: " + $WC.Util.hexToRGB(e.primary_text_color) + ";"), e.secondary_text_color && (s += " --wms-secondary-text-colorcode: " + $WC.Util.hexToRGB(e.secondary_text_color) + ";"), e.chatwindow_strip_color && (s += " --wms-chatwin-strip-colorcode: " + $WC.Util.hexToRGB(e.chatwindow_strip_color) + ";"), e.chatwindow_glow_color && (s += " --wms-chatwin-glow-colorcode: " + $WC.Util.hexToRGB(e.chatwindow_glow_color) + ";"), e.chatwindow_glow_shadow && (s += " --wms-chatwin-glow-shadowcode: " + $WC.Util.hexToRGB(e.chatwindow_glow_shadow) + ";"), e.secondary_bg_color && (s += " --wms-secondary-chat-bg-colorcode: " + $WC.Util.hexToRGB(e.secondary_bg_color) + ";"), e.secondary_bubble_color && (s += " --wms-secondary-bubble-colorcode: " + $WC.Util.hexToRGB(e.secondary_bubble_color) + ";"), t.innerHTML = WebMessanger.isDarkModeEnabled ? ":root .zmNightMode {" + s + "}" : ":root {" + s + "}", document.head.appendChild(t)
    }
}, WebMessanger.editAttachmentComments = function(e, t, s, i, n) {
    var a = {
        id: e,
        msguid: t,
        comment: encodeURIComponent(i),
        notifyedit: s
    }; - 1 !== n.indexOf("&x-cli-msg=%7Bthumbnail%3Atrue%7D") ? n = n.replace("&x-cli-msg=%7Bthumbnail%3Atrue%7D", "") : -1 !== n.indexOf("/thumbnail") && (n = n.replace("/thumbnail", ""));
    var o = {
        "Content-Type": "application/json",
        "x-consents-version": "1",
        "X-XHR-exception": !0,
        "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
    };
    return $WC.Ajax.putRequestToChat("v1/attachments/" + n, a, null, null, null, null, o), !0
}, WebMessanger.getSenderFromMsgobj = function(e) {
    if (e.t121t && (e.temp_info || e.includesenderinunread)) {
        var t = JSON.parse(e.t121t);
        for (var s in t)
            if (s !== $WC.Config.get("zuid")) return s
    }
}, WebMessanger.isReadReceiptSettingEnabled = function() {
    var e = WmsSettings.adminsettings.user_read_receipt && WmsSettings.adminsettings.user_read_receipt.split(":");
    return e && 2 === e.length ? e[0] > e[1] : "1" == WmsSettings.adminsettings.user_read_receipt
}, WebMessanger.isReadReceiptEnabled = function() {
    var e = WebMessanger.isReadReceiptSettingEnabled(),
        t = WmsSettings.adminsettings.moduleconfig && WmsSettings.adminsettings.moduleconfig.messaging && WmsSettings.adminsettings.moduleconfig.messaging.configs,
        s = !(!t || "true" != t.read_receipt),
        i = !(!t || "true" != t.custom_read_receipt);
    return s && (!i || e)
}, WebMessanger.showReadReceipt = function(e, t) {
    var s = WindowHandler.getWinObjById(e),
        i = !(!s || "1" !== s.ctype || s.isZohoGroupChat()),
        n = {
            msg_time: t.time,
            msg: t.msg,
            chid: e,
            msguid: t.msguid,
            is_121_chat: i,
            onListItemClick: function(e, t, s) {
                var i = t.getAttribute("data-zcprofileid") ? t : t.querySelector("[data-zcprofileid]");
                i && WebMessanger.showProfileInfo(i), s && (s.stopPropagation(), s.preventDefault())
            }
        };
    (new $WC.ReadReceiptList).mountComponent(n)
}, WebMessanger.markUserOpenedChat = function(e, t) {
    var s, i;
    if (t) i = $WC.RecentChats.get(t), s = t;
    else if (e)
        if (WebMessanger.is_exclusive_chat && WebMessanger.exclusive_chat_info.entity_id == e) i = $WC.RecentChats.get(WebMessanger.exclusive_chat_info.chat_id), s = WebMessanger.exclusive_chat_info.chat_id;
        else
            for (var n = $WC.RecentChats.getList(""), a = 0; a < n.length; a++) "string" != typeof n[a].ADDINFO || -1 == n[a].ADDINFO.indexOf("ENTITYID") || -1 == n[a].ADDINFO.indexOf(e) || (i = n[a]);
    if (i && i.LASTSEEN && (i.uc_useropened = !0, s = i.CHATID), s) {
        var o = WindowHandler.getWinObjById(s);
        o && "" !== o.lastmsg_uid && o.unread && o.makeNormal(!0, !0)
    }
}, WebMessanger.openNotebookWidget = function() {
    var e = document.getElementById("wms_notebook_container");
    if (!WebMessanger.isNotebookFrameLoaded || !document.getElementById("wms_notebook_iframe")) {
        var t = wmsUserConfig.notebook_iframe_url + "?serviceOrigin=" + window.location.origin + "&frameorigin=" + window.location.origin,
            s = $WC.Util.createElement("iframe", "wms_notebook_iframe", "wms_notebook_iframe", {
                src: t
            });
        s.onload = function() {
            WebMessanger.isNotebookFrameLoaded = !0, document.getElementById("wms_notebook_loader").style.display = "none"
        }, e.appendChild(s)
    }
    var i = e.parentNode;
    e && i && ("false" === i.getAttribute("data-shown") ? i.setAttribute("data-shown", "true") : i.setAttribute("data-shown", "false"))
}, WebMessanger.getParentThreadMsg = function(e, t, s) {
    if (!s) {
        s = {}, e.parentNode.previousSibling || e.parentNode;
        s.msguid = e.getAttribute("data-thread_msgid"), s.thread_chid = e.getAttribute("data-thread_chid"), s.msgcount = e.getAttribute("data-thread_msgcnt"), s.is_follower = "true" == e.getAttribute("data-thread_follower") ? $WC.I18N("thread.unfollow") : $WC.I18N("thread.follow"), s.chid = e.getAttribute("data-thread_parentid") || t
    }
    var i = {
            "X-XHR-exception": "true",
            "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
        },
        n = "chid=" + s.chid + "&msguid=" + encodeURIComponent(s.msguid) + "&lineslimit=1&tzoffset=" + _TZOFFSET;
    $WC.Ajax.requestToChat("gettranscriptasjsonforweb.do", n, (function() {
        var e = WindowHandler.getWinObjById(s.thread_chid);
        if (e && !e.followernode) {
            var i = this.responseText && this.responseText.slice(0, -1);
            if ((i = JSON.parse("[" + i + "]")).length > 0) {
                var n = "more" === i[0].mode ? i[1] : i[0];
                msgcount = s.msgcount || n.thread_information && n.thread_information.message_count || "", delete n.thread_information;
                var a = msgcount > 1 ? $WC.I18N("message.threads.count", [msgcount]) : $WC.I18N("message.thread.count", [msgcount]),
                    o = Message.getScrollHeight(e.ctrlcomp),
                    r = Message.getScrollTop(e.ctrlcomp),
                    l = '<div id="wms_threadsheaderwrapper" class="wms_threadheaderwrapper"><div id="wms_threadsheader" class="wms_threadsheader">' + a + '</div><div id="wms_threadfollower_button" class="wms_threadfollow">' + s.is_follower + "</div></div>";
                e.ctrlcomp.insertAdjacentHTML("beforebegin", l);
                var d = '<div data-thread_parentmsg="true" class="wms_threadparentmsg" data-chid="' + s.chid + '">' + Message.constructChatContent([n], null, t || s.chid || s.thread_chid) + "</div>";
                e.msgdisp.insertAdjacentHTML("afterbegin", d), Message.restoreScrollPosition(e.ctrlcomp, o, r + 39), e.parentmsg_container = e.msgdisp.querySelector("[data-thread_parentmsg]"), e.followernode = e.mainwin.querySelector('[id="wms_threadfollower_button"]'), e.followernode.onclick = function() {
                    WebMessanger.followThread(e.objId, e.thread_follower)
                }, n.reactions && e.updateReactionData(n.msguid, $WC.Util.extend(!0, {}, n.reactions)), e.pinmsgdetails && e.pinmsgdetails.msg_pinned && (e.floating_containers.style.top = "122px"), Message.addEventListenersForMessage(e.parentmsg_container, s.thread_chid)
            }
            Message.checkAndLoadAudioPlayer(e.parentmsg_container)
        }
    }), null, null, null, i)
}, WebMessanger.overrideSilentForGlobalSearch = function() {
    WMSUI.hidegsicon = !0, WMSUI.globalsearchenabled = !0, WebMessanger.appendGlobalSearch()
}, WebMessanger.enableMessageActionsAsPopUp = function() {
    WebMessanger.show_message_actions_as_popup = !0
}, WebMessanger.enableQuickMessageActions = function() {
    WebMessanger.quickmessageactions = !0
}, WebMessanger.enableMessageActions = function() {
    WebMessanger.messageactionsdisabled = !1
}, WebMessanger.disableMessageActions = function() {
    WebMessanger.messageactionsdisabled = !0, WindowHandler.deleteAllMessageActionNodes()
}, WebMessanger.openThreadWindowFromCache = function(e, t, s) {
    WebMessanger.getParentThreadMsg(e, t);
    var i = e.getAttribute("data-thread_parentid") || t,
        n = e.getAttribute("data-thread_title"),
        a = e.getAttribute("data-thread_followercnt"),
        o = e.getAttribute("data-thread_creator"),
        r = e.getAttribute("data-thread_msgid"),
        l = e.getAttribute("data-thread_follower"),
        d = e.getAttribute("data-thread_chid"),
        c = e.getAttribute("data-thread_state"),
        u = {
            chid: d,
            title: n,
            ctype: $WC.WmsConstants.CTYPES.THREAD,
            pcount: a,
            recipants: o,
            thread_msgid: r,
            thread_parentid: i,
            thread_follower: l,
            thread_state: c,
            add_welcome_note: s
        };
    WmsMainUI.isAutoFocusScheduled(u.chid) || WmsMainUI.scheduleAutoFocus(u.chid), WebMessanger.createChatWindowFromCache(d, "threads", u), $WC.RecentChats.get(d) && $WC.RecentChats.get(d).LASTSEEN && ($WC.RecentChats.get(d).uc_useropened = !0)
}, WebMessanger.fetchThreadDetails = function(e) {
    var t = {
        "X-XHR-exception": "true",
        "Content-Type": "application/json",
        "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
    };
    $WC.Ajax.requestToChat("v2/threads/" + e, null, (function() {
        var t = JSON.parse(this.response).data,
            s = WindowHandler.getWinObjById(t.parent_chat_id),
            i = s && s.win.querySelector('[data-threadmsg_post="' + e + '"]');
        i && (i.setAttribute("data-parent_chat_id", t.parent_chat_id), i.setAttribute("data-thread_followercnt", t.follower_count), i.setAttribute("data-thread_follower", t.is_follower), i.setAttribute("data-thread_creator", t.parent_message_sender))
    }), null, null, null, t)
}, WebMessanger.getIAMServiceName = function(e) {
    return WebMessanger.servicelist[e]
}, WebMessanger.populateSpecialWMSAnnouncement = function(e) {
    if ("success" == e.result) {
        var t = e.response,
            s = JSON.parse(wmsUserConfig.infomsg);
        if (0 == t.banner_status) return;
        WMSUI.processAnnMsg(s[t.banner_status], wmsUserConfig.infomsgtype)
    }
}, WebMessanger.processSpecialAnnouncement = function(e) {
    if (e.apiurl) {
        if (!1 === WebMessanger.silentOverriddenForAnnouncement && silent) return;
        if (WMSUI.isAnnBlocked()) return;
        var t = e.apiurl + "?zuid=" + WebMessanger.zuid + "&iam_service=" + WebMessanger.getIAMServiceName(WebMessanger.prd) + "&callback=populateSpecialWMSAnnouncement",
            s = $WC.Util.createElement("script");
        s.src = t, document.body.appendChild(s)
    }
}, WebMessanger.enableRTLMode = function() {
    WebMessanger.rtlmode = !0
}, WebMessanger.set_server_sync_timediff = function(e) {
    e && (e = parseInt(e), WebMessanger.server_sync_time_diff = Date.now() - e)
}, WebMessanger.getWMSRTT = function(e) {
    WebMessanger.RTT_callback = e, WebMessanger.RTT_senttime = Date.now(), WebMessanger.triggerRTTPing()
}, WebMessanger.isPortalUser = function() {
    return !!_WMSZAID
}, WebMessanger.setRTCChatDetails = function(e) {
    WebMessanger.rtc_chat_details.chat_id = e
}, WebMessanger.isRTCChat = function() {
    return !!WebMessanger.rtc_chat_details.chat_id
}, WebMessanger.isRTCUser = function(e) {
    return e || (e = WebMessanger.zuid), 0 === e.indexOf("RT_") || 0 === e.indexOf("RTC_")
}, WebMessanger.focusChatComposer = function(e) {
    WebMessanger.isRTCChat() && (e = WebMessanger.rtc_chat_details.chat_id);
    var t = WindowHandler.getWinObjById(e);
    t && (t.unread && t.scrollToUnread(), t.focus())
}, WebMessanger.setRTCAccessToken = function(e) {
    _WMSRTCATOKEN = e
}, WebMessanger.setAdminSettingsForRTCChat = function(e) {
    WmsSettings.bsettings.adminsettings = e
}, WebMessanger.enableScreenGrabber = function() {
    WebMessanger.is_screen_grabber_enabled = !0, $WC.Util.addEvent(window, "message", (function(e) {
        function t(e) {
            var t = e.split(".");
            return (t = t.slice(t.length - 2)).join(".")
        }
        t(e.origin) === t(document.location.host) && e.data && e.data.load_screen_grabber && WebMessanger.loadScreenGrabberLib()
    }))
}, WebMessanger.loadScreenGrabberLib = function() {
    if (WebMessanger.is_screen_grabber_enabled && !WebMessanger.is_screengrabber_js_loaded && wmsUserConfig.screengrabber_library_url) {
        var e = document.getElementsByTagName("head");
        e && 0 != e.length || ((e = [])[0] = $WC.Util.createElement("head"), document.insertBefore(doc.body, e[0])), $WC.Util.loadFiles(wmsUserConfig.screengrabber_library_url, "script", (function() {
            WebMessanger.is_screengrabber_js_loaded = !0
        }))
    }
}, WebMessanger.isScreenGrabberLibLoaded = function() {
    return WebMessanger.is_screengrabber_js_loaded
}, WebMessanger.showProfileInfo = function(e, t) {
    if (!WmsContacts.isAnnonUser(t || e.getAttribute("data-zcprofileid")) && "disable" !== $WC.Config.get("profile_info")) {
        e = "click" === e.type ? $WC.Util.getEventTarget(e) : e, !WebMessanger.isProfileInfoAllowed(null, e) || e.closest('[data-pc="true"]') || e.closest('[data-baravatar="true"]') || e.closest('[class~="wms_menu_item_msg"]') || WmsProfileInfo.mountComponent(e, t, (function(e, t) {
            if ($WC.Bots.isBotId(t)) {
                var s = $WC.Bots.get(t).CHID;
                if (Chat.isExists(s)) return void WMSUI.handleChatExist(s);
                WebMessanger.createChatWindowFromCache(s)
            } else WmsMainUI.scheduleAutoFocus(t), WmsHybridSearch.parseAndOpenChat(e)
        }), WebMessanger.startAudioCall, WebMessanger.startVideoCall, WmsMainUI.handleProfileActions)
    }
}, WebMessanger.isProfileInfoAllowed = function(e, t) {
    e = e || t && t.closest("[data-chid]") && t.closest("[data-chid]").getAttribute("data-chid");
    var s = WindowHandler.getWinObjById(e);
    return !s || !s.disable_profileinfo
}, WebMessanger.fetchChannelDetails = function(e) {
    $WC.Ajax.requestToChat("v1/channelsbyname/" + e, "tzoffset=330&getrecentconv=true", (function(e) {
        var t = JSON.parse(e);
        WmsHybridSearch.showJoinChannelDialog(t)
    }), null, null, {
        "Content-Type": "application/json"
    })
}, WebMessanger.enableDarkTheme = function() {
    for (var e = document.querySelectorAll("#wmstoolbar,#wmschshtransmsg,.wms_chatwindow, #wms-actionsmountpoint"), t = 0; t < e.length; t++) $WC.Util.addClass(e[t], "zmNightMode");
    WebMessanger.isDarkModeEnabled = !0
}, WebMessanger.disableDarkTheme = function() {
    for (var e = document.querySelectorAll("#wmstoolbar,#wmschshtransmsg,.wms_chatwindow, #wms-actionsmountpoint"), t = 0; t < e.length; t++) $WC.Util.removeClass(e[t], "zmNightMode");
    WebMessanger.isDarkModeEnabled = !1
}, WebMessanger.setNetworkDetails = function(e) {
    WebMessanger.network_info.id = e.id, WebMessanger.network_info.user_id = "o-" + WebMessanger.prd + "-" + e.id + "-" + WebMessanger.zuid, WebMessanger.network_info.url = e.url;
    var t = e.url.split("network/");
    return WebMessanger.network_info.screen_name = t[1], WebMessanger.network_info.details = e, WebMessanger.network_info.user_id
}, WebMessanger.isNetworkUser = function() {
    return WebMessanger.network_info && WebMessanger.network_info.user_id
}, WebMessanger.isDNDBackupIconEnabled = function() {
    return WmsSettings.adminsettings.dnd_backupicon_enabled || !1
}, WebMessanger.toggleMenuInCustomContainer = function(e, t) {
    e && WmsMainUI.toggleMenu(e, t)
}, WebMessanger.enableCustomMenuOption = function() {
    WebMessanger.is_custom_menu_opted = !0
}, WebMessanger.disableSoundNotification = function() {
    WebMessanger.external_sound_notification_config_state = !1
}, WebMessanger.isNotificationAllowedExternally = function() {
    return WebMessanger.external_sound_notification_config_state
}, WebMessanger.listenLinkClicks = function() {
    window.addEventListener("message", (function(e) {
        if (e.origin == document.location.origin) try {
            var t = JSON.parse(e.data);
            1 == t.event_from_wms_iframe && Message.handleMessageLinkClick(null, t.link)
        } catch (e) {}
    }))
}, WebMessanger.enableCrossOriginIsolation = function() {
    WebMessanger.crossoriginisolation = !0
}, WebMessanger.initCrossOrigin = function() {
    function e(e) {
        var t;
        try {
            t = JSON.parse(e.data)
        } catch (e) {
            return
        }
        var s = t.opr,
            i = t.params;
        if ("push" === s) push.apply(null, i);
        else if ("serverup" === s) WebMessanger.serverup.apply(null, i);
        else if ("serverdown" === s) WebMessanger.serverdown.apply(null, i);
        else if ("updateDebugInfo" === s) WebMessanger.updateDebugInfo.apply(null, i);
        else if ("disablewms" === s) disablewms();
        else if ("getrtcauthdetails" === s) {
            var n = {
                opr: "rtcauthdetails",
                params: {
                    authtype: WebMessanger.authtype,
                    rtcatoken: _WMSRTCATOKEN,
                    tabid: getWmsTabId(),
                    nname: getNickName()
                }
            };
            WebMessanger.pconnectframe.contentWindow.postMessage(JSON.stringify(n), "*")
        } else if ("getClientSRIValues" === s) {
            n = {
                opr: "clientSRIValues",
                params: {
                    bridgesrihash: WebMessanger.getClientSRIValues(i)
                }
            };
            WebMessanger.pconnectframe.contentWindow.postMessage(JSON.stringify(n), "*")
        }
    }
    return function() {
        WebMessanger.isCrossOriginAllowed() && (WebMessanger.triggerbind = function() {
            var e = {
                opr: "triggerbind",
                params: {
                    zuid: WebMessanger.zuid,
                    rawsid: WebMessanger.rawsid,
                    sid: WebMessanger.sid
                }
            };
            WebMessanger.pconnectframe.contentWindow.postMessage(JSON.stringify(e), "*")
        }, window.removeEventListener("message", e), window.addEventListener("message", e))
    }
}(), WebMessanger.isCrossOriginAllowed = function() {
    if (WebMessanger.crossoriginallowed && ("$" === this.zuid.charAt(0) || 0 === this.zuid.indexOf("RT_2"))) return !0
}, WebMessanger.allowCrossOrigin = function(e) {
    WebMessanger.crossoriginallowed = !0, WebMessanger.hosturl = e
}, WebMessanger.getChatType = function(e) {
    var t = $WC.RecentChats.get(e);
    return $WC.Util.isChannelChid(e) ? "channel" : "2" == t.PARTICIPANTSCOUNT && ($WC.Util.isLocalUser(t.PARTICIPANTS[0].zuid) || $WC.Util.isLocalUser(t.PARTICIPANTS[1].zuid)) ? "onetoone" : "adhoc"
}, WebMessanger.joinChat = function(e, t) {
    var s = "chid=" + e + "&sid=" + encodeURIComponent(WebMessanger.getSid());
    $WC.Ajax.postRequestToChat("joinchat.do", s, (function() {
        var s = JSON.parse(this.response),
            i = WindowHandler.getWinObjById(e),
            n = s[0].objString.users ? JSON.parse(s[0].objString.users) : null,
            a = s[0].objString;
        if (WebMessanger.setLastAvailableTimeFromResponse(a), i) n && n.length && (i.updateRecipientInfo(n), i.restrictFileSharingForExternalUser(), i.updateLastseenStatus(), WindowHandler.updateInactiveUserStatus(e, s[0].objString));
        else {
            if ("8" == a.ctype && ($WC.Channels.updateChannelMetaData(a), WMSUI.createNewChatWindow(a)), "11" == a.ctype) {
                n && n.length && (a.followersinfo = {}, a.is_follower = "false", n.forEach((function(e) {
                    a.followersinfo[e.zuid] = e, $WC.Util.isLocalUser(e.zuid) && (a.is_follower = "true")
                })));
                var o = JSON.parse(a.channelData);
                if (a.thread_parentid = a.parentchatid, a.thread_follower = a.is_follower, a.thread_parent_title = o.cn, !$WC.Channels.get(a.thread_parentid)) {
                    var r = {
                        data: {
                            joined: [o]
                        }
                    };
                    $WC.Channels.updateList(r)
                }
                WebMessanger.wrapThreadsDataFromJoin(a), WMSUI.createNewChatWindow(a)
            }
            n && (WMSUI.storeChatUsersObj(e, n), 1 == a.ctype && 2 == a.pcount && WindowHandler.updateInactiveUserStatus(e, s[0].objString)), WindowHandler.updateChatRestrictions(a)
        }
        "function" == typeof t && t()
    }), (function() {
        "function" == typeof t && t()
    }))
}, WebMessanger.getMyMentions = function(e, t, s) {
    var i = "limit=100";
    e && (i += "&totime=" + e);
    $WC.Ajax.requestToChat("getmymentions.do", i, (function() {
        if ("function" == typeof t) {
            var e = this.response && JSON.parse(this.response),
                s = e && e.data && e.data.mentions,
                i = e && e.meta && e.meta.userdnames;
            t(s, i)
        }
    }), (function() {
        if ("function" == typeof s) {
            var e = this.response && JSON.parse(this.response);
            s(e)
        }
    }), null, null, {
        "x-xhr-exception": "true"
    })
}, WebMessanger.enableChatletGlowOnOpen = function() {
    WebMessanger.glowOnOpen = {}
}, WebMessanger.clearWmsDataFromStorage = function() {
    $WC.Util.clearBrowserStorage()
}, WebMessanger.enableAllowedStatusConfig = function() {
    $WC.Config.set({
        isStatusConfigEnabledInClient: !0
    })
}, WebMessanger.disableVideoPlayerControls = function(e, t) {
    $WC.Config.set({
        videoPlayerControls: {
            miniplayer: e ? "disable" : null,
            fullscreen: t ? "disable" : null
        }
    })
}, WebMessanger.disableChatwindowCloseOnMarkAsUnread = function() {
    $WC.Config.set({
        disableChatwindowCloseOnMarkAsUnread: !0
    })
}, WebMessanger.disableOpeningForwardMessageRecipientChat = function() {
    $WC.Config.set({
        disableOpeningForwardMessageRecipientChat: !0
    })
}, WebMessanger.disableComposerFocusOnChatwindowFocus = function() {
    $WC.Config.set({
        disableComposerFocusOnChatwindowFocus: !0
    })
}, WebMessanger.disableAttachmentComposerAutoFocus = function() {
    $WC.Config.set({
        disableAttachmentComposerAutoFocus: !0
    })
}, WebMessanger.sendMessageInComposer = function(e) {
    WebMessanger.isExclusiveChat() && (e = WebMessanger.exclusive_chat_info.chat_id);
    var t = WindowHandler.getWinObjById(e);
    t && t.composer && t.composer.value && (Message.send(e, t.composer.value), t.composer.value = "", t.composer.focus())
}, WebMessanger.focusExclusiveChatComposer = function() {
    if (WebMessanger.isExclusiveChat() && WebMessanger.exclusive_chat_info.chat_id) {
        var e = WindowHandler.getWinObjById(WebMessanger.exclusive_chat_info.chat_id);
        e && e.composer.focus()
    }
}, WebMessanger.showSendMessageButton = function() {
    $WC.Config.set({
        showSendMessageButton: !0
    })
}, WebMessanger.emulateUIAction = function(e, t, s) {
    if ("attachmentbutton" === t && "click" === e) {
        var i = WindowHandler.getWinObjById(s);
        i && i.mainwin.querySelector("[data-attachment] #wms-file").click()
    } else if ("addfiles" === t && "click" === e) {
        if (o = document.getElementById("wms-fileupldwin")) {
            var n = o.querySelector("#wms-file1");
            n && n.click()
        }
    } else if ("sharefiles" === t && "click" === e) {
        (o = document.getElementById("wms-fileupldwin")) && WmsFileUploadUI.uploadFile(s)
    } else if ("closeattachmentdialogbutton" === t && "click" === e) {
        if (o = document.getElementById("wms-fileupldwin")) {
            var a = o.querySelector('[data-purpose="cancel"]');
            a && a.click()
        }
    } else if ("attachmentcomment" === t && "focus" === e) {
        var o;
        if (o = document.getElementById("wms-fileupldwin")) {
            var r = o.querySelector('[data-purpose="keyupload"]');
            r && r.focus()
        }
    } else if ("previewnext" === t && "click" === e) WMSUI.imgPreview.next();
    else if ("previewprevious" === t && "click" === e) WMSUI.imgPreview.prev();
    else if ("previewdownload" === t && "click" === e) {
        var l = document.getElementById("wms-imgpreviewcontainer");
        if (l) {
            var d = l.querySelector('[data-purpose="download"]');
            d && d.click()
        }
    } else "previewclose" === t && "click" === e && WMSUI.imgPreview.removeOverlay()
}, WebMessanger.getAllowedStatuses = function() {
    return WmsSettings.getAllowedStatuses()
}, WebMessanger.getAllowedStatusesDetails = function() {
    return WmsSettings.getAllowedStatusesDetails()
}, WebMessanger.isQuickStatusConfigEnabled = function() {
    return WmsSettings.isQuickStatusConfigEnabled()
}, WebMessanger.getAllowedQuickStatusList = function() {
    return WmsSettings.getAllowedQuickStatusList()
}, WebMessanger.isCurrentActivityStatusOverrideDisabled = function() {
    return WmsSettings.isCurrentActivityStatusOverrideDisabled()
}, WebMessanger.setStatusSettingsChangeCallback = function(e) {
    $WC.SecurityManager.registerCallbacks({
        activity_status: e
    })
}, WebMessanger.enableChatSwitcher = function(e, t) {
    WindowHandler.enableChatSwitcher(e, t)
}, WebMessanger.setClientSRIValues = function(e) {
    "string" == typeof e ? WebMessanger.SRIvalues = JSON.parse(e) : e && (WebMessanger.SRIvalues = e), WebMessanger.SRIvalues && $WC.Config.set({
        clientsrivalues: WebMessanger.SRIvalues
    })
}, WebMessanger.getClientSRIValues = function(e) {
    return WebMessanger.SRIvalues ? e ? WebMessanger.SRIvalues[e] || "" : WebMessanger.SRIvalues : ""
}, WebMessanger.listenToApiInvocation = function(e) {
    e && (WebMessanger.apiInvocationCallback = e)
}, WebMessanger.triggerJSApi = function(e, t) {
    var s = ["chat", "startAudioCall", "startVideoCall"]; - 1 !== s.indexOf(e) && (e == s[0] ? WebMessanger.chat(t) : e == s[1] ? WebMessanger.startAudioCall(t) : WebMessanger.startVideoCall(t))
}, WebMessanger.trackClientAction = function(e) {
    var t = "actionkey=" + e;
    $WC.Ajax.postRequestToChat("systemaction/v2/mics", t)
}, WebMessanger.getTopWindowSid = function(e) {
    WebMessanger.sidListener = "function" == typeof e ? e : "";
    window.top.postMessage({
        action: "get_sid",
        module: "wmsbar"
    }, "*")
}, window.addEventListener("message", (function(e) {
    var t = e.data;
    if (window.top == window.self && t && "wmsbar" == t.module && -1 !== ["get_sid", "get_paused_status", "get_prd"].indexOf(t.action) && e.source) {
        var s = {};
        "get_sid" == t.action ? s = {
            top_window_sid: "" + WebMessanger.sid
        } : "get_paused_status" == t.action ? s = {
            top_window_paused_status: WebMessanger.isChatPaused() ? "true" : "false"
        } : "get_prd" == t.action && (s = {
            top_window_prd: WebMessanger.prd
        }), "zoho" == e.origin.split(".").slice(-2, -1)[0] ? e.source.postMessage(s, "*") : e.origin.endsWith("zoho.com.cn") ? e.source.postMessage(s, "*") : e.origin == document.location.protocol + "//" + location.hostname ? e.source.postMessage(s, "*") : "localzoho" == e.origin.split(".").slice(-2, -1)[0] && e.source.postMessage(s, "*")
    }(window.top != window.self || t && t.top_window_sid) && (t && t.top_window_sid ? "function" == typeof WebMessanger.sidListener && WebMessanger.sidListener(t.top_window_sid) : t && t.top_window_paused_status ? "function" == typeof WebMessanger.pausedStatusListener && WebMessanger.pausedStatusListener(t.top_window_paused_status) : t && t.top_window_prd && "function" == typeof WebMessanger.prdListener && WebMessanger.prdListener(t.top_window_prd))
})), WebMessanger.getMediasessionsHistory = function(e, t, s) {
    "undefined" != typeof MediaUtil && MediaUtil.isNewAVDomainRoutingEnabled() && "undefined" != typeof MediacallManager && "undefined" != typeof MediaAPI && "function" == typeof MediaAPI.request && MediaAPI.request({
        data: e,
        success: function(e) {
            "function" == typeof t && t(e, this)
        },
        error: function(e) {
            "function" == typeof s && s(e, this)
        },
        type: "GET",
        url: "/v2/mediasessions"
    })
}, WebMessanger.getCalendarSettings = $WC.Util.throttle((function() {
    if (!$WC.Config.get("weekstart_index") && WebMessanger.calendar_settings_retrycount < 5 && !WebMessanger.isNetworkUser()) {
        WebMessanger.calendar_settings_retrycount++;
        $WC.Ajax.requestToChat("v2/calendars/settings", null, (function(e) {
            if (e) {
                var t = JSON.parse(e),
                    s = t.data && t.data.week_start;
                $WC.Config.set({
                    weekstart_index: s
                })
            }
        }))
    }
}), null, 1e3), WebMessanger.subscribeToTopFrameChatPauseStatus = function(e) {
    WebMessanger.pausedStatusListener = "function" == typeof e && e;
    window.top.postMessage({
        action: "get_paused_status",
        module: "wmsbar"
    }, "*")
}, WebMessanger.getTopWindowPrd = function(e) {
    WebMessanger.prdListener = "function" == typeof e ? e : "";
    window.top.postMessage({
        action: "get_prd",
        module: "wmsbar"
    }, "*")
}, WebMessanger.prefetchWmsBridgeJS = function() {
    var e, t = document.createElement("link"),
        s = WebMessanger.fp_hash ? WebMessanger.fp_hash["wmsbridge.js"] : "wmsbridge.js";
    e = WebMessanger.fp_hash ? "https://" + WebMessanger.jsstaticdomain + "/ichat/js/" + s : "https://" + WebMessanger.jsstaticdomain + "/ichat/" + wmsjsversion + "_https/js/" + s, t.href = e, t.rel = "prefetch", WebMessanger.getClientSRIValues("wmsbridge.js") && (t.integrity = WebMessanger.getClientSRIValues("wmsbridge.js"), t.crossOrigin = "anonymous"), document.head.appendChild(t)
};
wmsjsversion = "Jun_01_2024_8452405";
! function() {
    var e, t = 0,
        s = 0,
        i = {},
        n = {};

    function a(s, i, n) {
        return "_root" == i ? n : s !== n ? function(t) {
            return e || (e = t.matches ? t.matches : t.webkitMatchesSelector ? t.webkitMatchesSelector : t.mozMatchesSelector ? t.mozMatchesSelector : t.msMatchesSelector ? t.msMatchesSelector : t.oMatchesSelector ? t.oMatchesSelector : d.matchesSelector)
        }(s).call(s, i) ? s : s.parentNode ? (t++, a(s.parentNode, i, n)) : void 0 : void 0
    }

    function o(e, t, s, n, a) {
        i[e.id] || (i[e.id] = {}), i[e.id][t] || (i[e.id][t] = {}), i[e.id][t][s] || (i[e.id][t][s] = []), i[e.id][t].globalcallback || (i[e.id][t].globalcallback = a), i[e.id][t][s].push(n)
    }

    function r(e, t, s, a) {
        if (i[e.id])
            if (t) {
                if (!a && !s) return i[e.id][t] = {}, void n[e.id].element.removeEventListener(t, i[e.id][r].globalcallback);
                if (a) {
                    if (i[e.id][t][s])
                        for (var o = 0; o < i[e.id][t][s].length; o++)
                            if (i[e.id][t][s][o] === a) {
                                i[e.id][t][s].splice(o, 1);
                                break
                            }
                } else delete i[e.id][t][s]
            } else {
                for (var r in i[e.id]) i[e.id].hasOwnProperty(r) && (n[e.id].element.removeEventListener(r, i[e.id][r].globalcallback), i[e.id][r] = {});
                delete n[e.id]
            }
    }

    function l(e, s, l, c) {
        if (this.element) {
            e instanceof Array || (e = [e]), l || "function" != typeof s || (l = s, s = "_root");
            var u, m = this.id;
            for (u = 0; u < e.length; u++) c ? r(this, e[u], s, l) : (i[m] && i[m][e[u]] || d.addEvent(this, e[u], h(e[u])), o(this, e[u], s, l));
            return this
        }

        function h(e) {
            return function(s) {
                ! function(e, s, o) {
                    if (i[e][o]) {
                        var r, l, c = s.target || s.srcElement,
                            u = {},
                            m = 0,
                            h = 0;
                        for (r in t = 0, i[e][o]) i[e][o].hasOwnProperty(r) && (l = a(c, r, n[e].element)) && d.matchesEvent(o, n[e].element, l, "_root" == r, s) && (t++, i[e][o][r].match = l, u[t] = i[e][o][r]);
                        for (s.stopPropagation = function() {
                                s.cancelBubble = !0
                            }, m = 0; m <= t; m++)
                            if (u[m])
                                for (h = 0; h < u[m].length; h++) {
                                    if (!1 === u[m][h].call(u[m].match, s)) return void d.cancel(s);
                                    if (s.cancelBubble) return
                                }
                    }
                }(m, s, e)
            }
        }
    }

    function d(e, t) {
        if (!(this instanceof d)) {
            for (var i in n)
                if (n[i].element === e) return n[i];
            return s++, n[s] = new d(e, s), n[s]
        }
        this.element = e, this.id = t
    }
    d.prototype.on = function(e, t, s) {
        return l.call(this, e, t, s)
    }, d.prototype.off = function(e, t, s) {
        return l.call(this, e, t, s, !0)
    }, d.matchesSelector = function() {}, d.cancel = function(e) {
        e.preventDefault(), e.stopPropagation()
    }, d.addEvent = function(e, t, s) {
        var i = "blur" == t || "focus" == t;
        e.element.addEventListener(t, s, i)
    }, d.matchesEvent = function() {
        return !0
    }, "undefined" != typeof module && module.exports && (module.exports = d), window.Gator = d
}();
var WmsMainUI = {
    _populatestatus: {
        contactlist: !0,
        grouplist: !0,
        chatlist: !0
    },
    starmessagelistinstance: null,
    populate: function() {
        document.getElementById("wmstoolbar") && $WC.Util.removeElement(document.getElementById("wmstoolbar"));
        var e = WMSUI.smartchatenabled ? "" : "display: none",
            t = '<div id="wms_menubar" class="wms_menubar"><span data-menuname="chat" class="wms-menubutton wms_chatsicon" data-title="' + $WC.I18N("menuname.chats") + '" title="' + $WC.I18N("menuname.chats") + '"><span id="wms_menu_unreadchats_cnt" class="wms_menu_chat_unreadcnt"></span></span><span data-menuname="channel" class="wms-menubutton wms_groupicon" data-title="' + $WC.I18N("menuname.channelsandgroups") + '" title="' + $WC.I18N("menuname.channelsandgroups") + '"></span><span data-menuname="contact" class="wms-menubutton wms_contacticon" data-title="' + $WC.I18N("Contacts") + '" title="' + $WC.I18N("Contacts") + '"><span id="wms_menu_invitations_cnt" class="wms_menu_chat_unreadcnt"></span></span></div>',
            s = '<div class="wms-chatwindowcontainer" id="wms-chatwindowcontainer">' + ('<span class="wms_bar_movablehint" id="wmsbarmovablehint" style="' + e + '">' + $WC.I18N("hint.smartchat") + "</span>") + "</div>",
            i = '<div id="wms_menu_header" class="wms_menuheader"><span id="wms_menu_userstatusiconwrapper" class="wms_menu_userstatusiconwrapper"><img src="' + _WMSPHOTOSERVER + "/file?fs=thumb" + $WC.Util.nocachefix(!0) + '"/></span><div id="wms_menu_username" class="wms_menu_username wms-truncate-ellipsis"></div><span data-minimize=true class="wms_minimizeicon wms_menu_minimize"></span><div id="wms_menu_userstatus" data-statuseditor="false" class="wms_menu_userstatus wms-truncate-ellipsis"></div><span id="wms_settings_dropdownicon" class="wms_settings" data-settings="true"></span></div>',
            n = '<div id="wms_menu_searchcontainer" class="wms_menu_searchcontainer"><span class="wms_menu_searchicon wms_searchicon"></span><input id="wms_menu_search" type="text" class="wms_menu_searchinput" autocomplete="off" placeholder="' + $WC.I18N("search.commontitle") + '"></div>',
            a = '<div id="zoho_links_privacy" class="wms_settings_general"><span class="wms_settings_header">' + $WC.I18N("urlconsent.zoholinkprivacy") + '</span><div id="wms_zoholinks_settings" class="wms_zoholinks_settings"><div id="zoholinks_loading_div" class="wms_loading_div"></div></div></div>';
        WebMessanger.is_zoho_links_settings_disabled && (a = "");
        var o = '<div id="wms_settings_translation" class="wms_settings_general" data-translation-feature="enabled" style="{{TRANSLATION_ENABLED}}"><div class="wms_settings_header"><span>' + $WC.I18N("chat.translationsetting") + '</span><label class="wms_toggle_switch"><input {{TRANSLATIONCHECK}} id="wms_settings_showtranslation" data-setting="messagetranslation" type="checkbox"><span data-type="custom" class="{{TRANSLATION}}"></span></label></div><div class="wms_translation_settings" data-expanded="{{TRANSLATION_SETTINGS}}"><div class="wms_select_translation" style="{{AUTOTRANSLATION_ENABLED}}"><select class="wms_translation_select" id="translationpermission" data-select="translationpermission" ><option id="wms_settings_manualtranslation" value="1" data-value="1"  name="translation" data-setting="manual_translation">' + $WC.I18N("chat.translate.manual") + '</option><option id="wms_settings_autotranslation"  name="translation" data-setting="auto_translation" value="2" data-value="2">' + $WC.I18N("chat.translate.auto") + '</options></select><span class="wms_settings_openicon"></span></div></div></div>',
            r = '<div id="wms_settingscontainer" style="display:none" data-showsettings="false"><div id="wms_settings_header" class="wms_settings_header"><span id="wms_settingsnavigator" data-navigator="settings" class="wms_settingsnavigator wms_menu_floatl"></span><span class="wms_settings_menu">' + $WC.I18N("Settings") + '</span></div><div id="wms_settings_general" class="wms_settings_general"><span class="wms_settings_header">' + $WC.I18N("settings.general") + '</span><div class="wms_settings_chckbx"><label class="wms_settings_label" for="wms_settings_pausechat">' + $WC.I18N("chat.pause") + '</label><label class="wms_toggle_switch"><input id="wms_settings_pausechat" type="checkbox"><span data-type="custom" class="wms_settings_togglebutton"></span></label></div></div><div id="wms_settings_soundnotification" class="wms_settings_general" data-global-sound="enabled"><div class="wms_settings_header"><span>' + $WC.I18N("notification.sound") + '</span><label class="wms_toggle_switch"><input {{SOUND_GLOBAL_CHECK}} id="wms_settings_sound_global" data-setting="globalsoundnotify" type="checkbox"><span data-type="custom" class="{{SOUND_GLOBAL}}"></span></label></div><div class="wms_settings_list" data-expanded="{{SOUND_SETTING_ENABLED}}"><div class="wms_settings_chckbx wms_sound_setting"><label class="wms_settings_label" for="wms_settings_sound_mymsg">' + $WC.I18N("notification.mymsg") + '</label><label class="wms_toggle_switch"><input {{SOUND_MYMESSAGE_CHECK}} id="wms_settings_sound_mymsg" data-setting="mymsgsoundnotify" type="checkbox"><span data-type="custom" class="{{SOUND_MYMESSAGE}}"></span></label></div><div class="wms_settings_chckbx wms_sound_setting"><label class="wms_settings_label" for="wms_settings_sound_mention">' + $WC.I18N("notification.mentionmsg") + '</label><label class="wms_toggle_switch"><input {{SOUND_MENTION_CHECK}} id="wms_settings_sound_mention" data-setting="mentionsoundnotify" type="checkbox"><span data-type="custom" class="{{SOUND_MENTION}}"></span></label></div><div class="wms_settings_chckbx wms_sound_setting"><label class="wms_settings_label" for="wms_settings_sound_groupmsg">' + $WC.I18N("notification.groupmsg") + '</label><label class="wms_toggle_switch"><input {{SOUND_GROUPMESSAGE_CHECK}} id="wms_settings_sound_groupmsg" data-setting="groupmessage_sound_notify" type="checkbox"><span data-type="custom" class="{{SOUND_GROUPMESSAGE}}"></span></label></div><div class="wms_settings_chckbx wms_sound_setting"><label class="wms_settings_label" for="wms_settings_sound_channelmsg">' + $WC.I18N("menuname.channelsandgroups") + '</label><label class="wms_toggle_switch"><input {{SOUND_CHANNELMESSAGE_CHECK}} id="wms_settings_sound_channelmsg" data-setting="channelmessage_sound_notify" type="checkbox"><span data-type="custom" class="{{SOUND_CHANNELMESSAGE}}"></span></label></div><div class="wms_settings_chckbx wms_sound_setting"><label class="wms_settings_label" for="wms_settings_sound_pinnedchats">' + $WC.I18N("notification.pinnedchat") + '</label><label class="wms_toggle_switch"><input {{SOUND_PINNEDCHATS_CHECK}} id="wms_settings_sound_pinnedchats" data-setting="pinnedchats_sound_notify" type="checkbox"><span data-type="custom" class="{{SOUND_PINNEDCHATS}}"></span></label></div><div class="wms_settings_chckbx wms_sound_setting"><label class="wms_settings_label" for="wms_settings_sound_reminders">' + $WC.I18N("notification.reminders") + '</label><label class="wms_toggle_switch"><input {{SOUND_REMINDERS_CHECK}} id="wms_settings_sound_reminders" data-setting="reminders_sound_notify" type="checkbox"><span data-type="custom" class="{{SOUND_REMINDERS}}"></span></label></div><div class="wms_settings_chckbx wms_sound_setting"><label class="wms_settings_label" for="wms_settings_sound_botmsg">' + $WC.I18N("notification.botmsg") + '</label><label class="wms_toggle_switch"><input {{SOUND_BOTMESSAGE_CHECK}} id="wms_settings_sound_botmsg" data-setting="botmessage_sound_notify" type="checkbox"><span data-type="custom" class="{{SOUND_BOTMESSAGE}}"></span></label></div><div class="wms_settings_chckbx wms_sound_setting"><label class="wms_settings_label" for="wms_settings_sound_avcalls">' + $WC.I18N("notification.avcalls") + '</label><label class="wms_toggle_switch"><input {{SOUND_AVCALLS_CHECK}} id="wms_settings_sound_avcalls" data-setting="av_call_sound_notify" type="checkbox"><span data-type="custom" class="{{SOUND_AVCALLS}}"></span></label></div><div class="wms_settings_chckbx wms_sound_setting"><label class="wms_settings_label" for="wms_settings_sound_screenshare">' + $WC.I18N("notification.screenshare") + '</label><label class="wms_toggle_switch"><input {{SOUND_SCREENSHARE_CHECK}} id="wms_settings_sound_screenshare" data-setting="screen_call_sound_notify" type="checkbox"><span data-type="custom" class="{{SOUND_SCREENSHARE}}"></span></label></div></div></div><div id="wms_settings_visualnotification" class="wms_settings_general" ><span class="wms_settings_header">' + $WC.I18N("notification.desktop") + '</span><div class="wms_settings_chckbx"><label class="wms_settings_label" for="wms_settings_visual_mymsg">' + $WC.I18N("notification.mymsg") + '</label><label class="wms_toggle_switch"><input {{VMYMESSAGECHECK}} id="wms_settings_visual_mymsg" data-setting="vmymessage" type="checkbox"><span data-type="custom" class="{{VMYMESSAGE}}"></span></label></div><div class="wms_settings_chckbx"><label class="wms_settings_label" for="wms_settings_visual_mentionmsg">' + $WC.I18N("notification.mentionmsg") + '</label><label class="wms_toggle_switch"><input {{VMENTIONCHECK}} id="wms_settings_visual_mentionmsg" data-setting="vmention" type="checkbox"><span data-type="custom" class="{{VMENTION}}"></span></label></div><div class="wms_settings_chckbx"><label class="wms_settings_label" for="wms_settings_visual_groupmsg">' + $WC.I18N("notification.groupmsg") + '</label><label class="wms_toggle_switch"><input {{GROUPMSGCHECK}} id="wms_settings_visual_groupmsg" data-setting="groupmessage_visual_notify" type="checkbox"><span data-type="custom" class="{{GROUPMESSAGE}}"></span></label></div><div class="wms_settings_chckbx"><label class="wms_settings_label" for="wms_settings_visual_channelmsg">' + $WC.I18N("menuname.channelsandgroups") + '</label><label class="wms_toggle_switch"><input {{CHANNELMSGCHECK}} id="wms_settings_visual_groupmsg" data-setting="channelmessage_visual_notify" type="checkbox"><span data-type="custom" class="{{CHANNELMESSAGE}}"></span></label></div><div class="wms_settings_chckbx"><label class="wms_settings_label" for="wms_settings_visual_pinnedchats">' + $WC.I18N("notification.pinnedchat") + '</label><label class="wms_toggle_switch"><input {{PINNEDCHATSCHECK}} id="wms_settings_visual_pinnedchats" data-setting="pinnedchats_visual_notify" type="checkbox"><span data-type="custom" class="{{PINNEDCHATS}}"></span></label></div><div class="wms_settings_chckbx"><label class="wms_settings_label" for="wms_settings_visual_reminders">' + $WC.I18N("notification.reminders") + '</label><label class="wms_toggle_switch"><input {{REMINDERSCHECK}} id="wms_settings_visual_reminders" data-setting="reminders_visual_notify" type="checkbox"><span data-type="custom" class="{{REMINDERS}}"></span></label></div><div class="wms_settings_chckbx"><label class="wms_settings_label" for="wms_settings_visual_botmsg">' + $WC.I18N("notification.botmsg") + '</label><label class="wms_toggle_switch"><input {{BOTMSGCHECK}} id="wms_settings_visual_botmsg" data-setting="botmessage_visual_notify" type="checkbox"><span data-type="custom" class="{{BOTMESSAGE}}"></span></label></div><div class="wms_settings_chckbx"><label class="wms_settings_label" for="wms_settings_visual_statuschange">' + $WC.I18N("notification.status.change") + '</label><label class="wms_toggle_switch"><input {{VUSTATUSCHECK}} id="wms_settings_visual_statuschange" data-setting="vustatus" type="checkbox"><span data-type="custom" class="{{VUSTATUS}}"></span></label></div></div><div id="wms_settings_readreceipt" class="wms_settings_general"><span class="wms_settings_header">' + $WC.I18N("readreceipt.title") + '</span><div class="wms_settings_chckbx"><label class="wms_settings_label" for="wms_settings_read_receipt">' + $WC.I18N("readreceipt.setting") + '</label><label class="wms_toggle_switch"><input {{READRECEIPTCHECK}} id="wms_settings_read_receipt" data-setting="read_receipt" type="checkbox"><span data-type="custom" class="{{READRECEIPT}}"></span></label></div></div><div id="wms_settings_lastseen" class="wms_settings_general"><span class="wms_settings_header" >' + $WC.I18N("lst_seen") + '</span><div class="wms_settings_chckbx"><label class="wms_settings_label" for="wms_settings_show_lastseen" >' + $WC.I18N("last_seen_settings_message") + '</label><label class="wms_toggle_switch"><input {{LASTSEENCHECK}} id="wms_settings_show_lastseen" data-setting="show_lastseen" type="checkbox"><span data-type="custom" class="{{LASTSEEN}}"></span></label></div></div>' + o + a + "</div>";
        r = $WC.template.replace(r, {
            SOUNDSETTING: "1" === WmsSettings.sound ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            VMYMESSAGE: "1" === WmsSettings.vmymessage ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            VMENTION: "1" === WmsSettings.vmention ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            GROUPMESSAGE: "1" === WmsSettings.groupmessage_visual_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            CHANNELMESSAGE: "1" === WmsSettings.adminsettings.channelmessage_visual_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            PINNEDCHATS: "1" === WmsSettings.adminsettings.pinnedchats_visual_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            REMINDERS: "1" === WmsSettings.adminsettings.reminders_visual_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            BOTMESSAGE: "1" === WmsSettings.botmessage_visual_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            VUSTATUS: "1" === WmsSettings.vustatus ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            READRECEIPT: WebMessanger.isReadReceiptSettingEnabled() ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            LASTSEEN: WmsSettings.isLastSeenEnabled() ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            TRANSLATION: "1" == WmsSettings.show_translate ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            SOUND_MYMESSAGE: "1" == WmsSettings.adminsettings.mymsgsoundnotify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            SOUND_MENTION: "1" == WmsSettings.adminsettings.mentionsoundnotify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            SOUND_GROUPMESSAGE: "1" == WmsSettings.adminsettings.groupmessage_sound_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            SOUND_CHANNELMESSAGE: "1" == WmsSettings.adminsettings.channelmessage_sound_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            SOUND_PINNEDCHATS: "1" == WmsSettings.adminsettings.pinnedchats_sound_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            SOUND_REMINDERS: "1" == WmsSettings.adminsettings.reminders_sound_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            SOUND_BOTMESSAGE: "1" == WmsSettings.adminsettings.botmessage_sound_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            SOUND_AVCALLS: "1" == WmsSettings.adminsettings.av_call_sound_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            SOUND_SCREENSHARE: "1" == WmsSettings.adminsettings.screen_call_sound_notify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            SOUND_GLOBAL: "1" == WmsSettings.adminsettings.globalsoundnotify ? "wms_settings_togglebuttonsel" : "wms_settings_togglebutton",
            SOUNDCHECK: "1" === WmsSettings.sound ? "checked" : "",
            VMYMESSAGECHECK: "1" === WmsSettings.vmymessage ? "checked" : "",
            VMENTIONCHECK: "1" === WmsSettings.vmention ? "checked" : "",
            GROUPMSGCHECK: "1" === WmsSettings.groupmessage_visual_notify ? "checked" : "",
            CHANNELMSGCHECK: "1" === WmsSettings.adminsettings.channelmessage_visual_notify ? "checked" : "",
            PINNEDCHATSCHECK: "1" === WmsSettings.adminsettings.pinnedchats_visual_notify ? "checked" : "",
            REMINDERSCHECK: "1" === WmsSettings.adminsettings.reminders_visual_notify ? "checked" : "",
            BOTMSGCHECK: "1" === WmsSettings.botmessage_visual_notify ? "checked" : "",
            VUSTATUSCHECK: "1" === WmsSettings.vustatus ? "checked" : "",
            READRECEIPTCHECK: WebMessanger.isReadReceiptSettingEnabled() ? "checked" : "",
            LASTSEENCHECK: WmsSettings.isLastSeenEnabled() ? "checked" : "",
            TRANSLATION_ENABLED: "0" == WmsSettings.message_translation_source ? "display: none" : "",
            TRANSLATIONCHECK: "1" == WmsSettings.show_translate ? "checked" : "",
            SOUND_MYMESSAGE_CHECK: "1" === WmsSettings.adminsettings.mymsgsoundnotify ? "checked" : "",
            SOUND_MENTION_CHECK: "1" === WmsSettings.adminsettings.mentionsoundnotify ? "checked" : "",
            SOUND_GROUPMESSAGE_CHECK: "1" === WmsSettings.adminsettings.groupmessage_sound_notify ? "checked" : "",
            SOUND_CHANNELMESSAGE_CHECK: "1" === WmsSettings.adminsettings.channelmessage_sound_notify ? "checked" : "",
            SOUND_PINNEDCHATS_CHECK: "1" === WmsSettings.adminsettings.pinnedchats_sound_notify ? "checked" : "",
            SOUND_REMINDERS_CHECK: "1" === WmsSettings.adminsettings.reminders_sound_notify ? "checked" : "",
            SOUND_BOTMESSAGE_CHECK: "1" === WmsSettings.adminsettings.botmessage_sound_notify ? "checked" : "",
            SOUND_AVCALLS_CHECK: "1" === WmsSettings.adminsettings.av_call_sound_notify ? "checked" : "",
            SOUND_SCREENSHARE_CHECK: "1" === WmsSettings.adminsettings.screen_call_sound_notify ? "checked" : "",
            SOUND_GLOBAL_CHECK: "1" == WmsSettings.adminsettings.globalsoundnotify ? "checked" : "",
            SOUND_SETTING_ENABLED: "1" == WmsSettings.adminsettings.globalsoundnotify ? "true" : "false",
            TRANSLATION_SETTINGS: "1" == WmsSettings.show_translate ? "true" : "false",
            AUTOTRANSLATION_ENABLED: 1 == WmsSettings.auto_translation ? "" : "display: none"
        });
        var l = '<div id="wms-pasteCapture" class="wms-pastediv" contenteditable="true"></div>',
            d = $WC.Config.get("customContacts") && $WC.Config.get("customContacts").welcomemsg ? $WC.Config.get("customContacts").welcomemsg : $WC.I18N("contacts.welcomemessage"),
            c = WebMessanger.is_create_channel_link_disabled ? $WC.I18N("channel.create.new") : '<a class="wms_welcome_msg_href" target="blank" href="' + _WMSCHATURL + 'officechat/index.do#createchannel">' + $WC.I18N("channel.create.new") + "</a>",
            u = '<div id="wms_menu_listcontainer" class="wms_menu_listcontainer"><div data-menuname="chat" id="wms_menu_chatlist"><div id="wms_menu_chatlist_def" class="wms_menu_chatlist_def"><div id="wms_welcome_recentchatsmsg"><div class="wms-welcome-img wms-welcome-recentchatsimg wms-halign"></div><div class="wms-welcome-msg wms-halign">' + $WC.I18N("recentchats.welcomemessage", ['<span data-menuredirect="contact">' + $WC.I18N("chat.contact") + "</span>", '<span data-menuredirect="channel">' + $WC.I18N("chat.channel") + "</span>"]) + '</div></div></div><div id="wms_menu_chatlist_searchres" class="wms_menu_chatlist_searchres"></div></div><div data-menuname="channel" id="wms_menu_grouplist"><div id="wms_menu_grouplist_def" class="wms_menu_grouplist_def"><div class="wms-welcome-img wms-welcome-channelsimg wms-halign"></div><div class="wms-welcome-msg wms-halign">' + $WC.I18N("channels.welcomemessage", c) + '</div></div><div id="wms_menu_grouplist_searchres" class="wms_menu_grouplist_searchres"></div></div><div data-menuname="contact" id="wms_menu_contactlist"><div id="wms_menu_contactlist_def" class="wms_menu_contactlist_def"><div class="wms-welcome-img wms-welcome-contactsimg wms-halign"></div><div class="wms-welcome-msg wms-halign">' + $WC.I18N("contacts.welcomemessage") + '</div></div><div id="wms_menu_contactlist_searchres" class="wms_menu_contactlist_searchres"></div></div><div data-menuname="customcontact" id="wms_menu_customcontactlist"><div id="wms_menu_customcontactlist_def" class="wms_menu_customcontactlist_def"><div class="wms-welcome-img wms-welcome-contactsimg wms-halign"></div><div class="wms-welcome-msg wms-halign">' + d + '</div></div><div id="wms_menu_customcontactlist_searchres" class="wms_menu_customcontactlist_searchres"></div></div></div>',
            m = "";
        m = WebMessanger.is_custom_menu_opted ? '<div id="wms_menu" class="wms-menu wms_custom_menu">' + n + u + "</div>" : '<div id="wms_menu" class="wms-menu">' + i + '<div id="wms_menu_settingsdropdown" data-settingsdropdown="true" class="wms_menu_settingsdropdown"></div><div id="wms_cstatus" data-showstatus="false" class="wmspd1" style="display:none; overflow-x: hidden;"></div>' + n + r + u + "</div>";
        var h = '<div class="wms-turnoffinfo" id="chatturnoffinfo" style="display: none;">' + $WC.I18N("chat.paused") + ' <a style="cursor: pointer;" data-unpausechat="true" >' + $WC.I18N("chat.unpause") + "</a></div>",
            g = '<div id="wms_incomingcall"class="wms_incomingcall"><div id="wms_caller_container" class="wms_caller_container"><img id="wms_callerimg" class="wms_caller_img"></img><span id="wms_calltype" class="wms_calltype wms-halign"></span><span id="wms_callername" class="wms_callername wms-halign"></span><div class="wms_videocall_buttons_list wms_incomingcall_buttons"><div id="wms_answercall_button"class="wms_videocall_button wms_answercall_button" call-action="acceptcall" title="' + $WC.I18N("mediacall.incoming.accept") + '"></div><div class="wms_videocall_button wms_replymsg_button" call-action="replycall" style="display: none;"></div><div id="wms_rejectcall_button" class="wms_videocall_button wms_rejectcall_button" call-action="rejectcall" title="' + $WC.I18N("mediacall.incoming.reject") + '"></div></div></div></div>',
            p = '<div id="wmsglobalsearch" title="' + $WC.I18N("GS_Search_across_zoho") + '" class="wms-gssearch"><span class="wms_searchicon"></span></div>',
            f = isNaN($WC.Config.get("zindex")) ? "1" : $WC.Config.get("zindex"),
            v = '<div id="wms_notebook_icon" class="wms_notebook_icon" data-notebook-icon="true" data-shown="false" style=" ' + (WMSUI.notebook_widget_disabled ? "display: none" : "") + ' "><div id="wms_notebook_container" class="wms_notebook_container" style="z-index: ' + f + '"><div class="wms_notebook_header"><span class="wms_notebook_widget_heading">' + $WC.I18N("notebook.widget.name") + '</span><div class="wms_notebook_widget_button" data-action="close"></div></div><div class="wms_notebook_loader wms-hvalign" id="wms_notebook_loader"></div></div></div>',
            C = l + '<div id="wms-menucontainer" class="wms-menucontainer">' + m + t + "</div>";
        _WMSEMPTYBAR && (C = l + '<div id="wms-menucontainer" class="wms-menucontainer" style="width:0px;"></div>', s = '<div class="wms-chatwindowcontainer" id="wms-chatwindowcontainer"></div>'), WebMessanger.is_custom_menu_opted && (C = m), C += '<div id="wmsnotificationholder" class="wms-nh"></div>', WMSUI.globalsearchenabled && (C += p), WebMessanger.isPortalUser() || (C += v), WMSUI.phonebridgeenabled && (C += '<div id="wmsphonebridge" class="wms_phonebridgecontainer"></div>'), C += '<div id="wmsstatusbar" class="wmsstatusbar"></div>', C += h, C += g, C += s;
        var b = $WC.Util.createElement("div", "wmstoolbar", "wms-mainui");
        if (WmsImplHandler.invokeSynchronously(WmsUIImpl.getCustomMenuListContainer) && (C = m, b = WmsImplHandler.invokeSynchronously(WmsUIImpl.getCustomMenuListContainer)), b.style.zIndex = WebMessanger.setzindex, b.innerHTML = $WC.template.replace(C), WebMessanger.rtlmode && (b.className += " wms-rtl"), WebMessanger.isDNDBackupIconEnabled() && (b.className += " wms_dnd_backup_icon"), WmsImplHandler.invokeSynchronously(WmsUIImpl.getCustomMenuListContainer) || document.body.appendChild(b), WmsMainUI.applyChatBarOptions(), WindowHandler.chatbar = document.getElementById("wms-chatwindowcontainer"), WmsMainUI.maincontainer = document.getElementById("wmstoolbar"), WmsMainUI.menucontainer = document.getElementById("wms-menucontainer"), WmsMainUI.menubar = document.getElementById("wms_menubar"), WmsMainUI.menusearchcontainer = document.getElementById("wms_menu_searchcontainer"), WmsMainUI.statuscontainer = document.getElementById("wms_cstatus"), WmsMainUI.settingsdropdown = document.getElementById("wms_menu_settingsdropdown"), WmsMainUI.settingsdropdownicon = document.getElementById("wms_settings_dropdownicon"), WmsMainUI.settingscontainer = document.getElementById("wms_settingscontainer"), WmsMainUI.menulistcontainer = document.getElementById("wms_menu_listcontainer"), WmsMainUI.settingsnavigator = document.getElementById("wms_settingsnavigator"), WmsMainUI.menu = document.getElementById("wms_menu"), WmsMainUI.menuheader = document.getElementById("wms_menu_header"), WmsMainUI.searchdiv = document.getElementById("wms_menu_search"), WmsMainUI.usernamediv = document.getElementById("wms_menu_username"), WmsMainUI.statusmsgdiv = document.getElementById("wms_menu_userstatus"), WmsMainUI.statusiconwrapper = document.getElementById("wms_menu_userstatusiconwrapper"), WmsMainUI.chatlist = document.getElementById("wms_menu_chatlist"), WmsMainUI.defaultcontactlist = document.getElementById("wms_menu_contactlist_def"), WmsMainUI.searchrescontactlist = document.getElementById("wms_menu_contactlist_searchres"), WmsMainUI.defaultchatlist = document.getElementById("wms_menu_chatlist_def"), WmsMainUI.searchreschatlist = document.getElementById("wms_menu_chatlist_searchres"), WmsMainUI.defaultgrouplist = document.getElementById("wms_menu_grouplist_def"), WmsMainUI.searchresgrouplist = document.getElementById("wms_menu_grouplist_searchres"), WmsMainUI.unreadchatcntdiv = document.getElementById("wms_menu_unreadchats_cnt"), WmsMainUI.invitationscntdiv = document.getElementById("wms_menu_invitations_cnt"), WmsMainUI.customcontactscntdiv = document.getElementById("wms_menu_customcontacts_cnt"), WmsMainUI.servicestatusdiv = document.getElementById("wmsstatusbar"), WmsMainUI.contactdetailsdiv = document.getElementById("wms_contactdetails"), WmsMainUI.notificationholder = document.getElementById("wmsnotificationholder"), function() {
                if (Gator(WmsMainUI.menubar).on("click", "[data-menuname]", (function(e) {
                        if ("chat" == this.getAttribute("data-menuname") && ChatTour.isTourNotificationShown()) {
                            var t, s = {
                                    welcome: {
                                        title: "",
                                        elemid: 'id="wms_menubar"',
                                        align: "horizontal",
                                        content: "tourinfo.intro",
                                        position: "fixed",
                                        icon: "wms_chattour_icon"
                                    },
                                    contacts: {
                                        title: "Contacts",
                                        elemid: 'data-title="' + $WC.I18N("Contacts") + '"',
                                        align: "horizontal",
                                        content: "contacts.welcomemessage",
                                        position: "fixed",
                                        icon: "wms_contacts_icon"
                                    },
                                    channels: {
                                        title: "menuname.channelsandgroups",
                                        elemid: 'data-title="' + $WC.I18N("menuname.channelsandgroups") + '"',
                                        align: "horizontal",
                                        content: "tourinfo.channels",
                                        position: "fixed",
                                        icon: "wms_channels_icon"
                                    },
                                    chats: {
                                        title: "menuname.chats",
                                        elemid: 'data-title="' + $WC.I18N("menuname.chats") + '"',
                                        align: "horizontal",
                                        content: "tourinfo.chats",
                                        icon: "wms_chats_icon"
                                    },
                                    cliq: {
                                        pointer: "none",
                                        align: "center",
                                        sethtml: '<div class="wms-hysearch wms-hvalign wms_chattour_container"><div data-operation="close" class="wms_chattour_close"></div><img src="' + $WC.Config.get("staticserverpath") + '/images/bar/2caf0f0d_chatbar_onboard.png" class="wms_chattour_img"><div class="wms_chattour_info">{{CONTENT}}</div><div><button class="wms_chattour_button" data-operation="visitcliq">{{TEXT}}</button></div></div>',
                                        replacetext: {
                                            CONTENT: "tourinfo.onboarding",
                                            TEXT: "visit.cliq"
                                        }
                                    }
                                },
                                i = $WC.RecentChats.getRecentChatTime(),
                                n = !1,
                                a = WebMessanger.isCliqUser();
                            if (i) {
                                i > (new Date).getTime() - 432e6 && (n = !0)
                            }
                            if (!1 === a && !1 === n && (t = [s.welcome, s.contacts, s.channels, s.chats, s.cliq]), !0 === a && !1 === n && (t = [s.welcome, s.contacts, s.channels, s.chats]), !1 !== WebMessanger.isOrgUser() && "disable" != $WC.Config.get("channels") || t.splice(t.indexOf(s.channels), 1), $WC.Config.get("customContacts") && t.splice(t.indexOf(s.contacts), 1), !1 === a && !0 === n && (t = [s.cliq]), t && "disable" !== $WC.Config.get("chattour")) return void ChatTour.init(t, document.getElementById("wmstoolbar"))
                        }
                        WmsMainUI.toggleMenu(this.getAttribute("data-menuname")), WmsMainUI.updateUnreadChatsCount()
                    })), WmsMainUI.bindRecentChatEvents(), Gator(WmsMainUI.menubar).on("mouseenter", (function() {
                        null === $WC.RecentChats.getPinnedChatsLastFetchedTime() && WebMessanger.getPinnedChats()
                    })), Gator(WmsMainUI.settingscontainer).on("click", "[data-navigator]", (function() {
                        WmsMainUI.settingsdropdownicon.setAttribute("data-settings", "false"), WmsMainUI.settingsdropdown.style.display = "block", WmsMainUI.settingsdropdownicon.setAttribute("class", "wms_settings_close"), WmsMainUI.toggleSettings()
                    })), Gator(WmsMainUI.settingsdropdown).on("click", "[data-operation]", (function() {
                        var e = this.getAttribute("data-operation");
                        "wms_menu_settings" === e ? (WmsMainUI.settingsdropdown.style.display = "none", WmsMainUI.settingsdropdownicon.setAttribute("class", "wms_settings_close"), WmsMainUI.toggleSettings(), WebMessanger.is_zoho_links_settings_disabled || WmsMainUI.setLinkPreviewSettings(), "1" == WmsSettings.show_translate && (document.getElementById("translationpermission").selectedIndex = "1" == WmsSettings.translation_mode ? "0" : "1")) : "wms_menu_status" === e ? (WmsMainUI.settingsdropdown.style.display = "none", WmsMainUI.settingsdropdownicon.setAttribute("class", "wms_settings_close"), WmsMainUI.toggleStatus()) : "wms_menu_chathistory" === e ? (WmsMainUI.settingsdropdown.style.display = "none", WmsMainUI.settingsdropdownicon.setAttribute("class", "wms_settings"), WmsMainUI.settingsdropdownicon.setAttribute("data-settings", "true"), $WC.Channels.initChannels(), ZMSGUI.showChatHistory()) : "wms_menu_feedhistory" === e ? (WmsMainUI.settingsdropdown.style.display = "none", WmsMainUI.settingsdropdownicon.setAttribute("class", "wms_settings"), WmsMainUI.settingsdropdownicon.setAttribute("data-settings", "true"), ZMSGUI.launchHistory()) : "wms_menu_pendinginvitations" === e ? (WmsMainUI.settingsdropdown.style.display = "none", WmsMainUI.settingsdropdownicon.setAttribute("class", "wms_settings"), WmsMainUI.settingsdropdownicon.setAttribute("data-settings", "true"), WmsMainUI.showPendingInvitations()) : "wms_menu_starredmsg" === e && (WmsMainUI.settingsdropdown.style.display = "none", WmsMainUI.settingsdropdownicon.setAttribute("class", "wms_settings"), WmsMainUI.settingsdropdownicon.setAttribute("data-settings", "true"), WmsMainUI.showStarredMessages())
                    })), Gator(WmsMainUI.searchdiv).on("keydown", (function(e) {
                        if (e.keyCode === $WC.WmsConstants.KEYCODES.ESCAPE) WmsMainUI.hideMenu();
                        else {
                            if (e.keyCode === $WC.WmsConstants.KEYCODES.TAB && e.shiftKey) return WindowHandler.moveFocus("", !0), !1;
                            if (e.keyCode === $WC.WmsConstants.KEYCODES.TAB) return WindowHandler.moveFocus(), !1;
                            WmsHybridSearch.handleEvent(e)
                        }
                    })), Gator(WmsMainUI.searchdiv).on("keyup", (function(e) {
                        WmsHybridSearch.handleKeyUp(e), $WC.Util.loadOriginalImage($WC.HybridSearch.getNode("searchresultdiv", $WC.HybridSearch.getCurrentModule()))
                    })), Gator(WmsMainUI.searchdiv).on("focus", (function() {
                        WindowHandler.lastViewed = -1
                    })), Gator(WmsMainUI.menu).on("click", "[data-zcprofileid]", (function(e) {
                        WebMessanger.showProfileInfo(this)
                    })), Gator(WmsMainUI.maincontainer).on("click", "[data-zcprofileid]", (function(e) {
                        WebMessanger.showProfileInfo(this)
                    })), Gator(WindowHandler.chatbar).on("click", "[data-zcprofileid]", (function(e) {
                        WebMessanger.showProfileInfo(this)
                    })), Gator(document).on("click", "[custom_message]", (function(e) {
                        $WC.CustomMsgUI.handleMoreMessage(e)
                    })), Gator(WmsMainUI.menuheader).on("click", "[data-minimize]", (function() {
                        WmsMainUI.hideMenu()
                    })), Gator(WmsMainUI.menuheader).on("click", "[data-settings]", (function() {
                        if ("true" === this.getAttribute("data-settings")) {
                            this.setAttribute("data-settings", "false");
                            var e = '<div id="wms_menu_chathistory" data-operation="wms_menu_chathistory" class="wms_menu_settingsdropdown_item"><span class="wms_menu_userstatusiconwrapper"><div class="wms_chathistory_icon"></div></span><div class="wms_menu_settingsname wms-hvalign">' + $WC.I18N("Chat_History") + "</div></div>";
                            (WebMessanger.isCliqUser() || WebMessanger.isNetworkUser()) && (e = '<div id="wms_menu_chathistory" data-operation="wms_menu_chathistory" class="wms_menu_settingsdropdown_item"><span class="wms_menu_userstatusiconwrapper"><div class="wms_chathistory_icon"></div></span><div class="wms_menu_settingsname wms-hvalign">' + $WC.I18N("chat.message.search") + "</div></div>");
                            var t = "disable" == $WC.Config.get("changestatus") ? "display: none" : "",
                                s = "disable" == $WC.Config.get("starredmsg") ? "display: none" : "",
                                i = "disable" == $WC.Config.get("settings") ? "display: none" : "",
                                n = e + '<div id="wms_menu_status" data-operation="wms_menu_status" class="wms_menu_settingsdropdown_item" style="' + t + '"><span class="wms_menu_userstatusiconwrapper"><div class="wms_statuschange_icon"></div></span><div class="wms_menu_settingsname wms-hvalign">' + $WC.I18N("user.status.change") + '</div></div><div id="wms_menu_starredmsg" data-operation="wms_menu_starredmsg" class="wms_menu_settingsdropdown_item" style="' + s + '"><span class="wms_menu_userstatusiconwrapper"><div class="wms_menu_staricon"></div></span><div class="wms_menu_settingsname wms-hvalign">' + $WC.I18N("chat.message.star") + '</div></div><div id="wms_menu_settings" data-operation="wms_menu_settings" class="wms_menu_settingsdropdown_item" style="' + i + '"><span class="wms_menu_userstatusiconwrapper"><div class="wms_settings_icon"></div></span><div class="wms_menu_settingsname wms-hvalign">' + $WC.I18N("Settings") + "</div></div>";
                            (WebMessanger.isCliqUser() || WebMessanger.isNetworkUser()) && $WC.SecurityManager.hasPermission("taz") || (n += '<div id="wms_menu_feedhistory" data-operation="wms_menu_feedhistory" class="wms_menu_settingsdropdown_item"><span class="wms_menu_userstatusiconwrapper"><div class="wms_feedhistory_icon"></div></span><div class="wms_menu_settingsname wms-hvalign">' + $WC.I18N("Feed_History") + "</div></div>"), WmsContacts.getPendingInvitedContactsList().length && (n += '<div id="wms_menu_pendinginvitations" data-operation="wms_menu_pendinginvitations" class="wms_menu_settingsdropdown_item"><span class="wms_menu_userstatusiconwrapper"><div class="wms_pendinginv_icon"></div></span><div class="wms_menu_settingsname wms-hvalign">' + $WC.I18N("chat.pending.invitations") + "</div></div>"), WmsMainUI.settingsdropdown.innerHTML = n, WmsMainUI.settingsdropdown.style.display = "block", this.setAttribute("class", "wms_settings_close")
                        } else this.setAttribute("data-settings", "true"), WmsMainUI.settingsdropdown.style.display = "none", this.setAttribute("class", "wms_settings"), WmsMainUI.hideStatus();
                        WmsMainUI.hideSettings()
                    })), Gator(WmsMainUI.menuheader).on("click", "[data-statuseditor='false']", (function() {
                        WmsMainUI.showStatusEditor()
                    })), Gator(WmsMainUI.menuheader).on("blur", "[data-statuseditor]", (function() {
                        WmsMainUI.statusmsgdiv.setAttribute("data-statuseditor", "false"), $WC.$CUtil.setInnerText(WmsMainUI.statusmsgdiv, $WC.Util.unescapeHTML(WebMessanger.smsg))
                    })), Gator(WmsMainUI.settingscontainer).on("change", "input[type=checkbox]", (function(e) {
                        WmsMainUI.updateSettings(e)
                    })), Gator(WmsMainUI.settingscontainer).on("change", "select[data-select]", (function(e) {
                        WmsMainUI.updateSettings(e)
                    })), document.getElementById("wmsglobalsearch") && Gator(document.getElementById("wmsglobalsearch")).on("click", (function() {
                        zgssearch.toggleGlobalsearch()
                    })), document.getElementById("wms_notebook_icon") && Gator(document.getElementById("wms_notebook_icon")).on("click", (function(e) {
                        "wms_notebook_icon" !== e.target.id && "close" !== e.target.getAttribute("data-action") || WebMessanger.openNotebookWidget()
                    })), _WMSEMPTYBAR || ($WC.Util.addEvent(WmsMainUI.defaultchatlist, "scroll", $WC.Util.debounce(WmsHybridSearch.checkScrollAndloadMoreChatlist, null, 300)), $WC.Util.addEvent(WmsMainUI.defaultcontactlist, "scroll", $WC.Util.loadImageWithDebounce(WmsMainUI.defaultcontactlist)), $WC.Util.addEvent(WmsMainUI.searchrescontactlist, "scroll", $WC.Util.loadImageWithDebounce(WmsMainUI.searchrescontactlist)), $WC.Util.addEvent(WmsMainUI.defaultgrouplist, "scroll", $WC.Util.debounce((function(e) {
                        $WC.Util.loadImageWithDebounce(WmsMainUI.defaultgrouplist), WmsHybridSearch.checkScrollAndloadMoreChannels(e)
                    }), null, 300)), $WC.Util.addEvent(WmsMainUI.searchresgrouplist, "scroll", $WC.Util.loadImageWithDebounce(WmsMainUI.searchresgrouplist)), $WC.Util.addEvent(WmsMainUI.defaultchatlist, "scroll", $WC.Util.loadImageWithDebounce(WmsMainUI.defaultchatlist)), $WC.Util.addEvent(WmsMainUI.searchreschatlist, "scroll", $WC.Util.loadImageWithDebounce(WmsMainUI.searchreschatlist))), _WMSDRAGDROP && $WC.Util.isMacOS() && ("WP" === WebMessanger.getPrd() || "ZN" === WebMessanger.getPrd() || "CP" === WebMessanger.getPrd())) {
                    var e = document.querySelector("body");
                    e.addEventListener("dragover", $WC.Util.debounce((function() {
                        $WC.Util.removeClass(e, "wms_disable_pointer_events")
                    }), null, 300)), e.addEventListener("mouseenter", (function() {
                        $WC.Util.removeClass(e, "wms_disable_pointer_events")
                    }))
                }
                "WP" === WebMessanger.prd && void 0 !== window.zmwp && window.zmwp.WpCommunicator && window.zmwp.WpCommunicator.getInstance && (WMSUI.zhShareInstance = window.zmwp.WpCommunicator.getInstance("chatbar"), WmsFileForwardUI.handleDragDrop())
            }(), ("disable" == $WC.Config.get("channels") || WebMessanger.isPortalUser()) && WmsMainUI.removeChannelMenu(), $WC.Config.get("customContacts") && !$WC.Config.get("customContacts").separatePane) {
            var y = $WC.Config.get("customContacts"),
                _ = WmsMainUI.menubar.querySelector('[data-menuname="contact"]');
            y.title && _.setAttribute("data-title", y.title)
        }
        "disable" == $WC.Config.get("changestatus") && WmsMainUI.statusmsgdiv && (WmsMainUI.statusmsgdiv.style.pointerEvents = "none"), _WMSEMPTYBAR || WebMessanger.registerAnnonUser || WebMessanger.is_custom_menu_opted || setTimeout((function() {
            WebMessanger.appendGlobalSearch()
        }), 1), $WC.Util.isEmpty(WmsSettings.adminsettings.moduleconfig) && WmsSettings.initModulesPermissions(), WebMessanger.isDarkModeEnabled && WebMessanger.enableDarkTheme(), WmsMainUI.updateUserName(), "undefined" != typeof WmsUIImpl && WmsImplHandler.invoke(WmsUIImpl.UIReady)
    },
    applyChatBarOptions: function() {
        var e = WmsImplHandler.invokeSynchronously(WmsUIImpl.getChatBarOptions),
            t = {};
        if (t.customContacts = WmsImplHandler.invokeSynchronously(WmsUIImpl.customContactsConfig), $WC.Config.set(e), $WC.Config.set(t), $WC.Config.get("customContacts") && $WC.Config.get("customContacts").separatePane && null === WmsMainUI.menubar.querySelector('[data-menuname="customcontact"]')) {
            var s = $WC.Config.get("customContacts").title ? $WC.Config.get("customContacts").title : $WC.I18N("Contacts");
            WmsMainUI.menubar.insertAdjacentHTML("beforeend", '<span data-menuname="customcontact" class="wms-menubutton wms_contacticon ' + $WC.Config.get("customContacts").customContactsIconClassName + '" data-title="' + s + '" title="' + s + '"><span id="wms_menu_customcontacts_cnt" class="wms_menu_chat_unreadcnt"></span></span>')
        } else "disable" == $WC.Config.get("smartchat") && WebMessanger.disableSmartChat()
    },
    handleSettings: function(e, t) {
        var s = t.parentNode.querySelector('[data-type="custom"]');
        t && "1" == e ? s.setAttribute("class", "wms_settings_togglebuttonsel") : s.setAttribute("class", "wms_settings_togglebutton")
    },
    showStatusEditor: function() {
        if ($WC.Config.get("isStatusConfigEnabledInClient")) {
            if (WmsSettings.isCurrentActivityStatusOverrideDisabled()) return;
            if (WmsSettings.isAllowedStatusConfigEnabled())
                if (-1 === WmsSettings.getAllowedStatuses().indexOf("custom")) return
        }
        var e = $WC.Util.getInnerText(WmsMainUI.statusmsgdiv);
        WmsMainUI.statusmsgdiv.innerHTML = '<textarea data-editor="true" id="wms_menu_statuseditor" class="wms_menu_userstatus_textarea"></textarea>', document.getElementById("wms_menu_statuseditor").value = e, document.getElementById("wms_menu_statuseditor").focus(), Gator(WmsMainUI.menuheader).on("keydown", "[data-editor='true']", (function(e) {
            if (e.keyCode === $WC.WmsConstants.KEYCODES.ENTER || e.keyCode === $WC.WmsConstants.KEYCODES.ESCAPE) {
                WmsMainUI.statusmsgdiv.setAttribute("data-statuseditor", "false");
                var t = e.target.value;
                e.keyCode !== $WC.WmsConstants.KEYCODES.ESCAPE && t ? WebMessanger.smsg !== t ? WMSUI.handleStatusChange(t, e) : $WC.$CUtil.setInnerText(WmsMainUI.statusmsgdiv, $WC.Util.unescapeHTML(t)) : $WC.$CUtil.setInnerText(WmsMainUI.statusmsgdiv, $WC.Util.unescapeHTML(WebMessanger.smsg))
            }
        })), WmsMainUI.statusmsgdiv.setAttribute("data-statuseditor", "true")
    },
    updateSettings: function(e) {
        var t = $WC.Util.getEventTarget(e),
            s = t.getAttribute("id");
        if ("wms_settings_pausechat" === s) WebMessanger.chatdeactivated ? WebMessanger.turnOnChat() : WebMessanger.turnOffChat();
        else if (-1 !== s.indexOf("wms_settings_sound")) {
            var i = t.getAttribute("data-setting");
            WMSUI.toggleSoundSetting(i)
        } else if (-1 !== s.indexOf("wms_settings_visual")) {
            i = t.getAttribute("data-setting");
            WMSUI.reqNotificationPermAndToggle(i)
        } else if ("zoholinkspermission" === s) $WC.updateLinkPreviewSettings(t.selectedOptions[0].value);
        else if (-1 !== s.indexOf("wms_settings_read_receipt")) {
            var n = WmsSettings.adminsettings.moduleconfig && WmsSettings.adminsettings.moduleconfig.messaging && WmsSettings.adminsettings.moduleconfig.messaging.configs;
            if (n && "true" == n.read_receipt && "true" == n.custom_read_receipt) {
                var a = WebMessanger.isReadReceiptSettingEnabled() ? "0" : "1";
                $WC.Ajax.postRequestToChat("updbsettings.do", "read_reciept=" + a)
            } else WMSUI.showErrorMsg($WC.I18N("settings.disabled.admin"))
        } else if ("wms_settings_show_lastseen" === s) {
            var o = "last_seen=" + ("1" == WmsSettings.isLastSeenEnabled() ? "0" : "1");
            $WC.Ajax.postRequestToChat("updbsettings.do", o)
        } else if ("wms_settings_showtranslation" == s) {
            o = "show_translate_option=" + ("1" == WmsSettings.show_translate ? "0" : "1");
            $WC.Ajax.postRequestToChat("updbsettings.do", o)
        } else if ("translationpermission" == s) {
            var r = "translation_mode=" + t.selectedOptions[0].value;
            $WC.Ajax.postRequestToChat("updbsettings.do", r)
        }
    },
    updateUserName: function() {
        WmsMainUI.usernamediv && WebMessanger.nname && (WmsMainUI.usernamediv.setAttribute("title", WebMessanger.nname), $WC.$CUtil.setInnerText(WmsMainUI.usernamediv, WebMessanger.nname))
    },
    updateUserStatusIcon: function() {
        var e = WebMessanger.scode;
        if (e) {
            var t = WmsContacts.getStatusClassName(WebMessanger.zuid, WebMessanger.scode, WebMessanger.stype) || {
                    0: "offline",
                    1: "available",
                    2: "offline",
                    3: "busy",
                    4: "idle",
                    5: "dnd",
                    7: "away"
                }[e],
                s = "";
            parseInt(WebMessanger.stype) > 100 && (s = " wms_badge_statusicon_" + t + "_cutout"), WmsMainUI.statusiconwrapper && (WmsMainUI.statusiconwrapper.className = "wms_menu_userstatusiconwrapper wms_badge_statusicon_" + t + s)
        }
        WmsMainUI.checkAndToggleDNDMode()
    },
    updateUserStatusMsg: function() {
        WmsMainUI.statusmsgdiv && (WmsMainUI.statusmsgdiv.setAttribute("title", $WC.Util.unescapeHTML(WebMessanger.smsg)), $WC.$CUtil.setInnerText(WmsMainUI.statusmsgdiv, $WC.Util.unescapeHTML(WebMessanger.smsg)))
    },
    updateContactHTML: function(e, t) {
        var s = e.USERID,
            i = WmsMainUI.defaultcontactlist.querySelector('[data-id="' + s + '"]') || WmsMainUI.searchrescontactlist.querySelector('[data-id="' + s + '"]');
        if (i) {
            var n = i.previousSibling,
                a = i.parentNode;
            $WC.Util.removeElement(i);
            var o = $WC.HybridSearch.generateContactHtml(e.USERID, e.DNAME, e.STATUSMSG, "", t);
            n ? n.insertAdjacentHTML("afterend", o) : a.insertAdjacentHTML("afterbegin", o)
        }
    },
    updateChatHTML: function(e) {
        var t = WmsMainUI.chatlist.querySelector('[data-userid="' + e + '"]') || WmsMainUI.searchreschatlist.querySelector('[data-userid="' + e + '"]');
        if (t) {
            var s = t.getAttribute("data-id"),
                i = $WC.RecentChats.get(s),
                n = $WC.HybridSearch.generateImageHtml(s, $WC.WmsConstants.HYBRIDSEARCH.CHAT, i);
            $WC.Util.removeElement(t.firstChild), t.insertAdjacentHTML("afterbegin", n)
        }
    },
    toggleMenu: function(e, t) {
        var s = WmsMainUI.menubar && WmsMainUI.menubar.querySelector("[data-menuname=" + e + "]");
        t || s && "true" === s.getAttribute("data-selected") ? WmsMainUI.hideMenu() : WmsMainUI.showMenu(e)
    },
    hideMenu: function() {
        if (WmsMainUI.resetToDefaultUI(), WmsMainUI.menubar) {
            var e = WmsMainUI.menubar.querySelector("[data-selected=true]");
            e && e.setAttribute("data-selected", "false")
        }
        WmsMainUI.menu.style.display = "none", WebMessanger.is_custom_menu_opted || (WmsMainUI.settingsdropdown.style.display = "none", WmsMainUI.updateUnreadChatsCount())
    },
    toggleSmartChatButton: function(e) {
        var t = document.getElementById("wmsbarmovablehint");
        t && (t.style.display = e || "disable" == $WC.Config.get("smartchat") ? "none" : "inline")
    },
    removeChannelMenu: function() {
        if (WmsMainUI.menubar) {
            var e = WmsMainUI.menubar.querySelector('[data-menuname="channel"]');
            e && WmsMainUI.menubar.removeChild(e)
        }
    },
    toggleSettings: function() {
        "true" === WmsMainUI.settingscontainer.getAttribute("data-showsettings") ? WmsMainUI.hideSettings() : (WmsMainUI.menusearchcontainer.style.display = "none", WmsMainUI.menulistcontainer.style.display = "none", WmsMainUI.settingscontainer.style.display = "block", WmsMainUI.settingscontainer.setAttribute("data-showsettings", "true"))
    },
    toggleStatus: function() {
        "true" === WmsMainUI.statuscontainer.getAttribute("data-showstatus") ? WmsMainUI.hideStatus() : (WebMessanger.getAllStatusMessage(), WmsMainUI.statuscontainer.style.display = "block", WmsMainUI.statuscontainer.setAttribute("data-showstatus", "true"))
    },
    hideSettings: function() {
        WmsMainUI.menusearchcontainer.style.display = "block", WmsMainUI.menulistcontainer.style.display = "block", WmsMainUI.settingscontainer.style.display = "none", WmsMainUI.settingscontainer.setAttribute("data-showsettings", "false")
    },
    hideStatus: function() {
        WmsMainUI.statuscontainer.style.display = "none", WmsMainUI.statuscontainer.setAttribute("data-showstatus", "false"), WmsMainUI.settingsdropdownicon.setAttribute("class", "wms_settings"), WmsMainUI.settingsdropdownicon.setAttribute("data-settings", "true"), $WC.Util.removeClass(WmsMainUI.statuscontainer, "wms_statuschange_disabled")
    },
    filterUnreadChats: function(e, t) {
        var s = document.getElementById("wms_menu_chatlist_recentchats"),
            i = $WC.RecentChats.getUnreadChatList("unmuted");
        i.sort($WC.Util.sortBy("LMTIME", !0));
        var n = $WC.RecentChats.getUnreadChatList("muted");
        n.sort($WC.Util.sortBy("LMTIME", !0));
        var a = i.concat(n);
        a = a.length > 99 ? a.slice(0, 99) : a;
        var o = "unreadchats";
        (e || 0 === a.length) && (a = $WC.RecentChats.getChats(), o = "recentchats"), -1 === s.className.indexOf("wms_menu_dynamic_pos") && ($WC.Util.convertToArray(s.childNodes).forEach((function(e, t) {
            e.style.transition = "initial", e.style.transform = "translateY(" + 54 * t + "px)"
        })), s.offsetTop, $WC.Util.addClass(s, "wms_menu_dynamic_pos")), $WC.Util.convertToArray(s.childNodes).forEach((function(e) {
            e.style.transition = "initial";
            var t = a.length ? 54 * (a.length - 1) : 0;
            e.style.transform = "translateY(" + t + "px)", e.style.opacity = "0", e.style.zIndex = "-1"
        })), a.map((function(e) {
            return e.CHATID
        })).forEach((function(e, i) {
            var n = s.querySelector('[data-id="' + e + '"]');
            n && (t && (n.style.transition = "transform 300ms, opacity 300ms"), n.style.transform = "translateY(" + 54 * i + "px)", n.style.opacity = "1", n.style.zIndex = "")
        }));
        var r = document.getElementById("wms_menu_heading_recentchats");
        r.setAttribute("data-heading", o), r.querySelector(".wms_menu_filter_icon").title = $WC.I18N(o + ".filtertitle"), $WC.$CUtil.setInnerText(r.firstChild, $WC.I18N(o + ".title"));
        var l = s.querySelector("#wms-chat-loadstatus");
        l && (e ? (l.style.display = "block", l.style.opacity = 1, l.style.transform = "translateY(" + 54 * a.length + "px)") : l.style.display = "none"), setTimeout((function() {
            $WC.Util.loadOriginalImage(WmsMainUI.defaultchatlist)
        }), 300), WmsMainUI.updateCountDependentUI()
    },
    showMenu: function(e) {
        function t(e, t) {
            if (e) {
                var s = e.querySelector("[data-menuname=" + t + "]");
                s.setAttribute("data-selected", "true"), $WC.Util.convertToArray(e.children).forEach((function(e) {
                    e !== s && e.setAttribute("data-selected", "false")
                }))
            }
        }
        WebMessanger.is_custom_menu_opted || (WmsMainUI.hideSettings(), WmsMainUI.settingsdropdownicon.setAttribute("class", "wms_settings"), WmsMainUI.settingsdropdownicon.setAttribute("data-settings", "true"), WmsMainUI.settingsdropdown.style.display = "none", "" === WmsMainUI.searchdiv.value && WmsMainUI.resetToDefaultUI()), WmsMainUI.menu.style.display = WebMessanger.is_custom_menu_opted ? "flex" : "block", t(WmsMainUI.menubar, e), t(WmsMainUI.menulistcontainer, e), void 0 !== WmsMainUI && (WmsMainUI.menu && "block" !== WmsMainUI.menu.style.display ? (WebMessanger.is_custom_menu_opted || WmsMainUI.updateUnreadChatsCount(), WmsMainUI.updateCountDependentUI()) : ($WC.Util.pubsub.publish("/recentchats/updateui", $WC.WmsConstants.REQSTATUS.SUCCESS), $WC.Util.pubsub.publish("/channels/updateui", {}))), "contact" === e ? ($WC.Bots.initBots(), $WC.Config.get("customContacts") ? WmsMainUI.searchdiv.setAttribute("placeholder", $WC.Config.get("customContacts").searchTitle ? $WC.Config.get("customContacts").searchTitle : $WC.I18N("Search_Contacts")) : WmsMainUI.searchdiv.setAttribute("placeholder", $WC.I18N("Search_Contacts")), setTimeout((function() {
            $WC.Config.get("customContacts") && !$WC.Config.get("customContacts").separatePane ? WmsHybridSearch.populateCustomContactListInMainUI() : WmsHybridSearch.populateContactListInMainUI(), $WC.Util.loadOriginalImage(WmsMainUI.defaultcontactlist)
        }), 1), WebMessanger.trackClientAction("Cliq Mini - Contacts menu")) : "channel" === e ? (WmsMainUI.searchdiv.setAttribute("placeholder", $WC.I18N("search.channelsandgroups")), setTimeout((function() {
            ($WC.Config.get("isOrgUser")() || WebMessanger.isNetworkUser()) && "disable" != $WC.Config.get("channels") && null === $WC.Channels.getLastFetchedTime() && $WC.Channels.initChannels(), WmsHybridSearch.populateGroupResultInMainUI(), $WC.Util.loadOriginalImage(WmsMainUI.defaultgrouplist)
        }), 1), WebMessanger.trackClientAction("Cliq Mini - Channels menu")) : "chat" === e ? (WmsMainUI.getUnreadChatsCount() && ("enable" == $WC.Config.get("showrecentchats") ? WmsMainUI.filterUnreadChats(!0, !0) : WmsMainUI.filterUnreadChats()), $WC.RecentChats.initRecentChats(), $WC.Bots.initBots(), $WC.Config.get("isOrgUser")() && "disable" != $WC.Config.get("channels") ? WmsMainUI.searchdiv.setAttribute("placeholder", $WC.I18N("search.commontitle")) : WmsMainUI.searchdiv.setAttribute("placeholder", $WC.I18N("search.contactsandchats")), $WC.Util.loadOriginalImage(WmsMainUI.defaultchatlist), WebMessanger.trackClientAction("Cliq Mini - Chats menu")) : "customcontact" === e && ($WC.Config.get("customContacts") && WmsMainUI.searchdiv.setAttribute("placeholder", $WC.Config.get("customContacts").searchTitle ? $WC.Config.get("customContacts").searchTitle : $WC.I18N("Search_Contacts")), WmsHybridSearch.populateCustomContactListInMainUI()), "" !== WmsMainUI.searchdiv.value && WmsHybridSearch.parseTextInput(WmsMainUI.searchdiv.value), WmsMainUI.searchdiv.focus()
    },
    updateLoadingForPinnedChats: function(e) {
        if (!silent) {
            var t = document.getElementById("wms_menu_chatlist_def"),
                s = document.getElementById("wms_menu_chatlist_searchres"),
                i = !(!s || "block" != s.style.display),
                n = document.getElementById("wms_menu_chatlist_loading");
            if (e) n || i || (t.insertAdjacentHTML("afterend", '<div id="wms_menu_chatlist_loading" class="wms_menu_chatlist_def" style="display: block;"></div>'), t.style.display = "none", $WC.HybridSearch.updateLoadingStatus(document.getElementById("wms_menu_chatlist_loading"), $WC.WmsConstants.REQSTATUS.SUCCESS, "chat"), $WC.HybridSearch.updateLoadingStatus(document.getElementById("wms_menu_chatlist_loading"), $WC.WmsConstants.REQSTATUS.LOADING, "chat"));
            else if (n) $WC.Util.removeElement(n), i || (t.style.display = "block"), t.scrollHeight > t.clientHeight && $WC.HybridSearch.updateLoadingStatus($WC.HybridSearch.getNode("defaultresultdiv", 3), $WC.WmsConstants.REQSTATUS.LOADING, "chat")
        }
    },
    resetToDefaultUI: function() {
        WmsMainUI.searchdiv.value = "", WmsMainUI.searchrescontactlist.style.display = "none", WmsMainUI.searchreschatlist.style.display = "none", WmsMainUI.searchresgrouplist.style.display = "none", WmsMainUI.defaultcontactlist.style.display = "block", WmsMainUI.defaultchatlist.style.display = "block", WmsMainUI.defaultgrouplist.style.display = "block", $WC.HybridSearch.resetHover()
    },
    setRePopulateStatus: function(e, t) {
        WmsMainUI._populatestatus[e] = t
    },
    decideRepopulate: function(e) {
        return WmsMainUI._populatestatus[e]
    }
};
(function() {
    var e = {},
        t = {},
        s = {};
    WmsMainUI.getParentThreadId = function(e) {
        for (var t in s)
            if (-1 != s[t].indexOf(e)) return t
    }, WmsMainUI.incrementUnreadCount = function(t, i) {
        e[t] || (e[t] = {
            count: 0
        }), i ? (s[t] && -1 == s[t].indexOf(i) ? s[t].push(i) : s[t] || (s[t] = [i]), e[t][i] || (e[t][i] = 0), e[t][i]++) : (e[t].count || (e[t].count = 0), e[t].count++)
    }, WmsMainUI.decrementUnreadCount = function(t, i) {
        i && e[t] && void 0 !== e[t][i] ? 0 != e[t][i] && (e[t][i]--, s[t] && -1 != s[t].indexOf(i) && s[t].splice(s[t].indexOf(i), 1)) : e[t] && 0 != e[t].count && e[t].count--
    }, WmsMainUI.resetUnreadCount = function(i, n, a) {
        var o = n ? t : e;
        o[i] ? a ? (o[i][a] && 0 != o[i][a] && $WC.Util.pubsub.publish("/chats/unreadchatdetails"), o[i][a] = 0, s[i] && -1 != s[i].indexOf(a) && s[i].splice(s[i].indexOf(a), 1), delete WebMessanger.unreadthreadmap[a]) : (o[i].count && 0 != o[i].count && $WC.Util.pubsub.publish("/chats/unreadchatdetails"), o[i].count = 0) : o[i] = {
            count: 0
        }
    }, WmsMainUI.getUnreadCount = function(s, i, n, a) {
        var o = i ? t : e;
        if (o[s]) {
            if (n) return parseInt(o[s][n]) || 0;
            if (a) return o[s].count || 0;
            var r = o[s].count || 0;
            for (var n in o[s]) $WC.Util.isThreadChid(n) && (r += parseInt(o[s][n]));
            return r
        }
    }, WmsMainUI.getUnreadChatsCount = function(s) {
        var i = 0,
            n = s ? t : e,
            a = $WC.RecentChats.getChatIdList($WC.RecentChats.getUnreadChatList());
        for (var o in n)
            if (WmsMainUI.getUnreadCount(o, s)) {
                !1 === WmsMainUI.getMuteStatus(o) && -1 !== a.indexOf(o) && (n[o].entity_id ? !1 === $WC.Util.checkIfChatletHidden(n[o].entity_id) && i++ : WmsMainUI.getUnreadCount(o, s, null, !0) && i++);
                var r = WmsMainUI.getUnreadThreads(o);
                r && r.forEach((function(e) {
                    -1 !== a.indexOf(e) && i++
                }))
            }
        return i
    }, WmsMainUI.getUnreadChatsLog = function(i) {
        var n = 0,
            a = i ? t : e,
            o = $WC.RecentChats.getChatIdList($WC.RecentChats.getUnreadChatList());
        for (var r in a)
            if (WmsMainUI.getUnreadCount(r, i)) {
                !1 === WmsMainUI.getMuteStatus(r) && -1 !== o.indexOf(r) && (a[r].entity_id ? !1 === $WC.Util.checkIfChatletHidden(a[r].entity_id) && n++ : WmsMainUI.getUnreadCount(r, i, null, !0) && n++);
                var l = WmsMainUI.getUnreadThreads(r);
                l && l.forEach((function(e) {
                    -1 !== o.indexOf(e) && n++
                })), console.log(r, a[r], s[r])
            }
        return n
    }, WmsMainUI.getUnreadThreads = function(e) {
        if (s[e]) return s[e]
    }, WmsMainUI.setUnreadCount = function(i, n, a, o, r) {
        var l = a ? t : e;
        if (r) {
            s[i] && -1 == s[i].indexOf(r) ? s[i].push(r) : s[i] || (s[i] = [r]);
            var d = {};
            d[r] = n, l[i] ? l[i][r] = n : l[i] = d
        } else if (l[i]) {
            var c = l[i].count || 0;
            l[i].count = parseInt(c) + parseInt(n)
        } else l[i] = {
            count: n
        };
        o && (l[i].entity_id = o)
    }, WmsMainUI.resetAllUnreadCount = function() {
        e = {}, s = {}, WebMessanger.unreadthreadmap = {}
    }, WmsMainUI.setMuteStatus = function(t, s) {
        e[t] ? e[t].mutestatus = s : e[t] = {
            mutestatus: s
        }
    }, WmsMainUI.getMuteStatus = function(t) {
        return !(!e[t] || !e[t].mutestatus)
    }, WmsMainUI.setZuidForPrivateChat = function(t, s) {
        e[t] ? e[t].privatechatzuid = s : e[t] = {
            privatechatzuid: s
        }
    }, WmsMainUI.getZuidForPrivateChat = function(t) {
        if (e[t] && e[t].privatechatzuid) return e[t].privatechatzuid
    }
})(), WmsMainUI.updateUnreadCountInUI = function(e) {
        var t = WmsMainUI.getUnreadCount(e) || "";
        $WC.Util.isChannelChid(e) ? t = WmsMainUI.getUnreadCount(e, null, null, !0) || "" : $WC.Util.isThreadChid(e) && (t = WmsMainUI.getUnreadCount(WmsMainUI.getParentThreadId(e), null, e) || "");
        for (var s = WmsMainUI.getMuteStatus(e), i = [WmsMainUI.defaultchatlist, WmsMainUI.searchreschatlist, document.getElementById("wms-hysearch-rchats"), document.getElementById("wms-hysearch-searchres")], n = 0; n < i.length; n++)
            if (i[n]) {
                var a = i[n].querySelector('[data-id="' + e + '"]>[data-unreadcount]');
                if (a)
                    if (a.title = t, t = t > 99 ? "99+" : t, $WC.$CUtil.setInnerText(a, t), a.style.display = t ? "flex" : "none", s) i[n].querySelector('[data-id="' + e + '"]').setAttribute("data-muted", "true")
            }
    }, WmsMainUI.updateUnreadChatsCount = function() {
        if (!_WMSEMPTYBAR && !silent) {
            if (WmsMainUI.updateCountDependentUI(), WebMessanger.is_custom_menu_opted) return;
            var e = $WC.RecentChats.getUnreadFeedsCount() + WmsMainUI.getUnreadChatsCount();
            e ? (ChatTour.removeTourNotifier(), WmsMainUI.unreadchatcntdiv.title = e, e = e > 99 ? "99+" : e, $WC.$CUtil.setInnerText(WmsMainUI.unreadchatcntdiv, e), WmsMainUI.unreadchatcntdiv.style.display = "flex") : ($WC.$CUtil.setInnerText(WmsMainUI.unreadchatcntdiv, ""), WmsMainUI.unreadchatcntdiv.style.display = "none")
        }
    }, WmsMainUI.updateCountDependentUI = function() {
        if (!silent) {
            var e = "",
                t = WmsMainUI.getUnreadChatsCount();
            t && $WC.RecentChats.getUnreadChatList("unmuted").length ? e = "unmuted" : $WC.RecentChats.getUnreadChatList("muted").length && (e = "muted");
            var s = WmsMainUI.defaultchatlist.querySelector('[data-heading="recentchats"]'),
                i = WmsMainUI.defaultchatlist.querySelector('[data-heading="unreadchats"]');
            if (e ? ($WC.Util.setAttribute(s, "data-uctype", e), $WC.Util.setAttribute(i, "data-uctype", e)) : (s && s.removeAttribute("data-uctype"), i && i.removeAttribute("data-uctype")), !WebMessanger.is_custom_menu_opted) {
                var n, a = WmsMainUI.menubar.querySelector('[data-menuname="chat"]'),
                    o = !1;
                t ? (n = $WC.I18N("unreadchats.title"), o = !0) : n = $WC.I18N("menuname.chats"), $WC.Util.setAttribute(a, "title", n), $WC.Util.setAttribute(a, "data-title", n), $WC.Util.setAttribute(a, "data-uc", o)
            }
        }
    }, WmsMainUI.getUnreadCountForMenu = function(e, t) {
        var s = 0;
        return e.forEach((function(e) {
            WmsMainUI.getUnreadCount(e.CHATID) && !WmsMainUI.getMuteStatus(e.CHATID) && -1 == t.indexOf(e.CHATID) && (s += 1)
        })), s
    }, WmsMainUI.updateChatInvitationCount = function(e) {
        var t = $WC.Config.get("customContacts"),
            s = t ? document.getElementById("wms_menu_customcontacts_cnt") : WmsMainUI.invitationscntdiv;
        t || (e = $WC.Util.getObjectLength(WmsContacts.getInvitedContactsList())), s && ($WC.$CUtil.setInnerText(s, e || ""), s.style.display = e ? "flex" : "none")
    }, WmsMainUI.showPendingInvitations = function() {
        ZMSGUI.createOverlay();
        var e = '<div class="wms_pendinginv_header">' + $WC.I18N("chat.pending.invitations") + '<span data-operation="close" class="wms_invitations_close"></span></div><div class="wms_pendinginv_container">';
        if (WmsContacts.getPendingInvitedContactsList().length)
            for (var t = 0; t < WmsContacts.getPendingInvitedContactsList().length; t++) {
                var s = WmsContacts.getPendingInvitedContactsList()[t];
                e += '<div data-id="' + s + '" class="wms_pendinginv_content"><input data-operation="reject" type="button" value="Reject" class="wms_pendinginv_rejctbtn"><input data-operation="accept" type="button" value="Accept" class="wms_pendinginv_acptbtn"><span class="wms_pendinginv_img wms-valign-mid-block"><img src="' + WmsContacts.getUserPhoto(s) + '"></span><div class="wms_pendinginv_name wms-truncate-ellipsis wms-valign-mid-block">' + $WC.Util.getContactName(s, "", !0) + "</div></div>"
            } else e += '<div class="wms_pendinginv_infocontent"><div class="wms_pendinginv_infotxt">' + $WC.I18N("chat.pendinginv.infotxt") + "</div></div>";
        e += "</div>";
        var i = WebMessanger.isDarkModeEnabled ? "wms-hvalign zmNightMode" : "wms-hvalign";
        i += WebMessanger.isDNDBackupIconEnabled() ? " wms_dnd_backup_icon" : "";
        var n = $WC.Util.createElement("div", "wms_pendinginv_container", i, null, e);
        n.style.zIndex = $WC.Config.get("zindex"), n.style.display = "block", document.body.appendChild(n), Gator(n).on("click", "[data-operation]", (function(e) {
            var t = $WC.Util.getEventTarget(e),
                i = t.getAttribute("data-operation");
            "close" === i ? ZMSGUI.hidependinginv() : "reject" === i ? (WMSUI.rejectContact(s, s, "inv"), WmsMainUI.hidePendingInvitations(t.parentNode), $WC.Util.removeElementFromArray(WmsContacts.getPendingInvitedContactsList(), s)) : "accept" === i && (WmsContacts.accept("zoho", s, $WC.Config.get("zuid")), WmsMainUI.hidePendingInvitations(t.parentNode), $WC.Util.removeElementFromArray(WmsContacts.getPendingInvitedContactsList(), s))
        }))
    }, WmsMainUI.hidePendingInvitations = function(e) {
        1 === WmsContacts.getPendingInvitedContactsList().length ? ZMSGUI.hidependinginv() : $WC.Util.removeElement(e)
    }, WmsMainUI.removeFromContactList = function(e) {
        var t = WmsMainUI.defaultcontactlist.querySelector('[data-id="' + e + '"]'),
            s = WmsMainUI.searchrescontactlist.querySelector('[data-id="' + e + '"]');
        $WC.Util.removeElement(t), $WC.Util.removeElement(s)
    }, WmsMainUI.handleProfileActions = function(e, t) {
        var s = e.getAttribute("data-operation"),
            i = WmsContacts.getDisplayName(t) || WmsProfileInfo.profileinfo[t] && WmsProfileInfo.profileinfo[t].dname;
        if ("deletecontact" == s) {
            var n = [$WC.I18N("chat.contact.deleteinfo", i)],
                a = new $WC.ConfirmationDialog,
                o = {
                    actions: [{
                        text: $WC.I18N("common.delete"),
                        onclick: function() {
                            WmsContacts.remove("zoho", t), a.unmountComponent()
                        },
                        buttonstyle: "destructive_button"
                    }, {
                        text: $WC.I18N("common.cancel"),
                        onclick: function() {
                            a.unmountComponent()
                        },
                        buttonstyle: "cancel_button"
                    }],
                    heading: n,
                    bodytitle: $WC.I18N("dialogue.info.header"),
                    headerimgsrc: $WC.WmsContacts.getUserPhoto(t, "38"),
                    content: [$WC.I18N("info.contact.delete.info1"), $WC.I18N("info.contact.delete.info2.external")]
                };
            a.mountComponent(o)
        } else "invite" == s && (t ? WMSUI.inviteMember(t, i) : WMSUI.inviteMember(i, i));
        WmsProfileInfo.unmountComponent()
    }, $WC.Util.pubsub.subscribe("/orgcontacts/listview", (function(e, t) {
        var s;
        if (t.stat !== $WC.WmsConstants.REQSTATUS.FAILED || t.callbackargs.silentload) {
            if (t && t.callbackargs) {
                var i = t.callbackargs.params;
                if (s = t.callbackargs.chid, i && WmsOrgContacts.isEmptyResultReq(i.split("=")[2]) && !t.callbackargs.silentload) Commands.hideLoadingIcon(t.callbackargs.chid);
                else if (s && WindowHandler.getWinObjById(s)) {
                    t.callbackargs.silentload || Commands.hideLoadingIcon(s);
                    var n = document.getElementById("wms-fileupldcmt") || WindowHandler.getWinObjById(s).composer;
                    WMSUI.atMentions.init(s, n, t, WMSUI.atMentions.invisiblediv, WMSUI.atMentions.autocompletediv)
                }
            }
        } else s = t && t.chid, Commands.hideLoadingIcon(s)
    })), $WC.Util.pubsub.subscribe("/orgcontacts/userslistview", (function(e, t) {
        (WebMessanger.userslist || WebMessanger.forkedlist).showList(t)
    })),
    function() {
        var e = {};
        WmsMainUI.scheduleAutoFocus = function(t) {
            e[t] = !0
        }, WmsMainUI.isAutoFocusScheduled = function(t) {
            return !!e[t]
        }, WmsMainUI.removeAutoFocusSchedule = function(t) {
            delete e[t]
        }
    }(),
    function() {
        var e = {};
        WmsMainUI.scheduleAutoJoin = function(t) {
            e[t] = !0
        }, WmsMainUI.joinScheduledChannels = function() {
            for (var t in e) WebMessanger.attachSession(t), delete e[t]
        }
    }(), ie ? (document.onfocusout = function() {
        _WMSWINFOCUS = !1
    }, document.onfocusin = function() {
        _WMSWINFOCUS = !0
    }) : (window.addEventListener("blur", (function() {
        _WMSWINFOCUS = !1
    })), window.addEventListener("focus", (function() {
        _WMSWINFOCUS = !0, $WC.Channels.getChannelsIfFocussed() && $WC.Channels.getChannels(), WebMessanger.sync_adminsettings_onfocus && WebMessanger.syncAdminSettings(), WebMessanger.get_pinmsg_onfocus && WindowHandler.getPinMsgForOpenedChats(), $WC.Drafts.getFromServerIfFocussed(), $WC.Bots.getFromServerIfFocussed()
    }))), WmsMainUI.bindRecentChatEvents = function() {
        Gator(WmsMainUI.menulistcontainer).off(), Gator(WmsMainUI.menulistcontainer).on("click", "[data-id],[data-operation],[data-menuredirect],[data-retry],[data-heading]", (function(e) {
            var t = $WC.Util.getEventTarget(e);
            if (t.getAttribute("data-customoperation") && $WC.Config.get("customContacts") && $WC.Config.get("customContacts").invitationActions) {
                var s = t.getAttribute("data-customoperation"),
                    i = t.getAttribute("title"),
                    n = $WC.Config.get("customContacts").invitationActions,
                    a = this;
                n.forEach((function(e) {
                    e.label !== s && e.label !== i || e.action(a)
                }))
            } else if (this.getAttribute("data-operation")) WmsContacts.handleInviteOperation(this);
            else if (this.getAttribute("data-retry")) WmsOrgContacts.fetchFromServer({
                searchtext: "",
                topicname: "suggestionui"
            }, "");
            else if (this.getAttribute("data-menuredirect")) {
                var o = this.getAttribute("data-menuredirect");
                ("channel" != o || WebMessanger.isOrgUser()) && WmsMainUI.showMenu(o)
            } else if ("recentchats" === this.getAttribute("data-heading") || "unreadchats" === this.getAttribute("data-heading")) {
                if (this.getAttribute("data-uctype")) {
                    if ("unreadchats" === this.getAttribute("data-heading")) var r = !0;
                    WmsMainUI.filterUnreadChats(r, !0)
                }
            } else if ("pinnedchats" === this.getAttribute("data-heading")) {
                var l = WmsMainUI.defaultchatlist.querySelector('[data-menu="pinnedchats"]'),
                    d = Math.floor((l.lastChild.getBoundingClientRect().width - 16) / 40);
                if ($WC.RecentChats.getPinnedChats().length > d)
                    if ("true" === l.getAttribute("data-expanded")) l.lastChild.style.height = "50px", l.setAttribute("data-expanded", "false"), l.querySelector(".wms_menu_filter_icon").title = $WC.I18N("pinnedchats.shrinked.filtertitle");
                    else {
                        var c = Math.ceil($WC.RecentChats.getPinnedChats().length / d);
                        l.lastChild.style.height = 50 * c + "px", l.setAttribute("data-expanded", "true"), l.querySelector(".wms_menu_filter_icon").title = $WC.I18N("pinnedchats.expanded.filtertitle")
                    }
            } else if ("suggestions" !== this.getAttribute("data-heading")) {
                var u = $WC.Util.getEventTarget(e);
                if (u.getAttribute("data-zcprofileid") && !this.getAttribute("data-pc") && !u.closest('[class~="wms_menu_item_msg"]')) return;
                WmsHybridSearch.handleSelection(this), $WC.Util.removeElement(this.querySelector("[data-unreadcnt]"))
            }
            WmsProfileInfo.unmountComponent()
        }))
    }, WmsMainUI.updateStatusInCustomContactMenu = function(e, t) {
        var s = $WC.HybridSearch.getNode("defaultresultdiv", $WC.WmsConstants.HYBRIDSEARCH.modules.CUSTOMCONTACTMENU).querySelector('[data-id="' + e + '"]');
        $WC.$CUtil.setInnerText(s.querySelector("[data-smsg]"), t)
    }, WmsMainUI.removeListComponent = function() {
        var e = WindowHandler.openedChats;
        for (var t in e) {
            var s = WindowHandler.getWinObjById(t);
            s && s.participantsdialog && s.participantsdialog.unmountComponent()
        }
    }, WmsMainUI.setLinkPreviewSettings = function() {
        var e = '<div class="wms_urlconsent_parent"><select class="wms_settings_select" id="zoholinkspermission" data-select="zoholinkspermission" ><option  id="wms_settings_allowlinks" value="1" data-value="1"  name="zoholinks" data-setting="allow_links">' + $WC.I18N("urlconsent.always") + '</option><option id="wms_settings_askeverytime"  name="zoholinks" data-setting="ask_askeverytime" value="0" data-value="0">' + $WC.I18N("urlconsent.askeverytime") + '</options><option id="wms_settings_restrictlinks" value="-1" data-value="-1" name="zoholinks" data-setting="restrict_links" class="wms_settings_label" >' + $WC.I18N("urlconsent.restrict") + '</option> </select><span class="wms_settings_openicon"></span></div>',
            t = function() {
                s.removeChild(s.childNodes[0]), s.innerHTML = e, s.querySelector("#zoholinkspermission").value = $WC.Config.get("zoholinks_auth")
            },
            s = WmsMainUI.settingscontainer.querySelector("#wms_zoholinks_settings");
        if (isNaN($WC.Config.get("zoholinks_auth"))) {
            $WC.Ajax.requestToChat("getlinkpreviewsettings.do", null, (function(e) {
                var s = e.authentication_consent || 0;
                $WC.Config.set({
                    zoholinks_auth: s
                }), t()
            }))
        } else t()
    }, WmsMainUI.showStarredMessages = function() {
        WmsMainUI.StarMessageListInstance = new $WC.MessageList;
        WmsMainUI.StarMessageListInstance.mountComponent({
            type: "starredmsg",
            constructMessageFragment: Message.constructMessageFragment,
            getMessageType: Message.getMessageType,
            getDeletedMsgInfo: Message.getDeletedMsgInfo,
            getThumbnailImageUrl: Message.getThumbnailImageUrl,
            loadOriginalImages: WMSUI.loadImages,
            closeCallBack: function() {
                WmsMainUI.StarMessageListInstance = null
            },
            constructChatContent: Message.constructChatContent,
            glowBubble: Message.glowBubble,
            attachSession: WMSUI.attachSession,
            addEventListenersForTranscript: Message.addEventListenersForTranscript,
            showMessageFragmentInView: Message.showMessageFragmentInView
        })
    }, WmsMainUI.updateStarMsgList = function(e, t) {
        WmsMainUI.StarMessageListInstance && WmsMainUI.StarMessageListInstance.updateListItem(e, t)
    }, WmsMainUI.checkAndToggleDNDMode = function() {
        WmsMainUI.maincontainer && ("5" === WebMessanger.scode ? $WC.Util.setAttribute(WmsMainUI.maincontainer, "data-dnd-enabled", "true") : WmsMainUI.maincontainer.removeAttribute("data-dnd-enabled"))
    };
var myMsgObj = {};

function WMSUI() {}
myMsgObj.sender = "", WMSUI.triggers = ["@", ":", "+", "-", "/"], WMSUI.curtrigger = "", WMSUI.hidegsicon = !1, WMSUI.errormsgtimer = null, WMSUI.loadedimg = {}, WMSUI.deletedattachments = {}, WMSUI.eventreminderinstance = {}, WMSUI.notebook_widget_disabled = !1, WMSUI.annonUserDesktopNotification = !1, WMSUI.show_imgedit_icon = !1, WMSUI.isEmailVisibilityHidden = !1, WMSUI.dmchat_obj = [], WMSUI.zhShareInstance = null, WMSUI.isLoadedImg = function(e) {
    return !0 === WMSUI.loadedimg[e]
}, WMSUI.staroption_instancestore = {}, WMSUI.chatUsersObj = {}, WMSUI.pending_thread_replies = {}, WMSUI.get_emailid_count = 0, WMSUI.annotator_req_retrycount = 0, WMSUI.chatletsSearch = {
    results: [],
    noresults: [],
    mediaresult: {}
}, WMSUI.avCall = {
    CALL_TYPE_VOICE: "voice",
    CALL_TYPE_VIDEO: "video",
    CALL_TYPE_SCREENSHARE: "screen",
    notification_close_timer: 3e4,
    GROUP_CALL_TYPE_START: "start",
    GROUP_CALL_TYPE_SCHEDULE: "schedule",
    GROUP_CALL_TYPE_BROADCAST: "broadcast"
}, WMSUI.loadImages = function(e) {
    for (var t = e.getBoundingClientRect().top, s = e.querySelectorAll("img[originalsrc]"), i = 0; i < s.length; i++) {
        var n = s[i],
            a = n.parentNode.getBoundingClientRect().top,
            o = a + n.parentNode.offsetHeight;
        (a > t || o > t) && WMSUI.loadOriginalImgSrc(n)
    }
}, WMSUI.loadOriginalImgSrc = function(e) {
    var t = e.getAttribute("originalsrc");
    if (!WMSUI.deletedattachments[t]) {
        e.removeAttribute("originalsrc"), null !== e.nextSibling && $WC.Util.removeElement(e.nextSibling);
        var s = e.cloneNode();
        s.removeAttribute("src"), s.src = t, s.className = "", e.parentNode.insertBefore(s, e.nextSibling), s.onload = function() {
            this.style.display = "", $WC.Util.removeElement(e), WMSUI.loadedimg[t] = !0
        }, s.onerror = function() {
            var i = {
                    "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
                    "X-XHR-exception": !0
                },
                n = t,
                a = "";

            function o() {
                e.setAttribute("originalsrc", t), s.style.display = "none"
            }
            WebMessanger.isGuestUser() && (n = t.split("?")[0], a = t.split("?")[1]), $WC.Ajax._getRequest(null, n, a, o, (function() {
                this.status >= 400 ? this.getResponseHeader("x-error") && (WMSUI.deletedattachments[t] = !0) : o()
            }), null, !0, i, {
                withCredentials: !0
            })
        }
    }
}, WMSUI.handleMessageFailure = function(e, t, s) {
    var i = e.querySelector('[data-msgid="' + t + '"]');
    i.setAttribute("data-msgfailure", "true"), i.setAttribute("data-msgfailure-reason", s), i.nextSibling && i.nextSibling.getAttribute("data-timefrag") && (i.nextSibling.innerText = $WC.I18N("common.status.failed"))
}, WMSUI.getStype = function(e) {
    if (e) return parseInt(e)
}, WMSUI.generateUI = function() {
    var e = '<span class="wms_cw_switchchat" data-switchchat="true" title="' + $WC.I18N("chat.switch") + '"><div class="wms_cw_switchchatlist" data-switchchatlist="true"></div></span><span id="wms_cw_videoinfo" class="wms_cw_videoinfo" data-videoinfo=true ><div id="wms_videoinfo_dropdown" class="wms_videoinfo_dropdown" data-videodropdown=true><div class="wms_cw_toolbar_actionitem" data-audioicon=true  style="display: none;">' + $WC.I18N("videochat.audiocall") + '</div><div class="wms_cw_toolbar_actionitem" data-videoicon=true  style="display: none;">' + $WC.I18N("chat.video.call") + '</div><div class="wms_cw_toolbar_actionitem" data-shareicon=true  style="display: none;">' + $WC.I18N("chat.screen.share") + '</div><div class="wms_cw_toolbar_actionitem" data-startmeeticon=true  style="display: none;">' + $WC.I18N("chat.start.meet") + '</div><div class="wms_cw_toolbar_actionitem" data-schedulemeeticon=true  style="display: none;">' + $WC.I18N("chat.schedule.meet") + '</div></div></span><span class="wms_cw_threadmsglink" data-threadmsglink="true" title="' + $WC.I18N("thread.msglink") + '"></span><span class="wms_cw_threadslist" data-threadslist="true" title="' + $WC.I18N("threads.all") + '"></span><span class="wms_cw_minimizeicon" data-minimizeicon="true" title="' + $WC.I18N("chat.minimize") + '"></span><span class="wms_cw_enlargeicon" data-enlargeicon="true" title="' + $WC.I18N("chat.enlarge") + '"></span><span class="wms_cw_closeicon" data-closeicon="true" title="' + $WC.I18N("common.close") + '"></span>',
        t = '<div class="wms_cw_header" data-header="true"><div class="wms_cw_header_avatar" data-avatar="true"></div><div class="wms_cw_header_main wms-truncate-ellipsis" data-titlecontainer="true"  data-main="true"><div><div data-title="true" class="wms_cw_header_name"></div><span data-edittitleicon="true" class="wms_cw_settitle"></span><span data-channelrestricted=false class="wms_cw_channellock" title="' + $WC.I18N("channel.inviteonly") + '"></span></span></div><div class="wms_cw_statusmsg" data-statusmsg="true" title="Offline">Offline</div></div><div class="wms_cw_header_actions" data-actions="true">' + e + "</div></div>",
        s = WebMessanger.isDarkModeEnabled ? " zmNightMode" : "",
        i = "disable" == $WC.Config.get("emoji") ? "wms_smiley_hide" : "",
        n = "",
        a = "";
    "WP" == WebMessanger.prd && null != WMSUI.zhShareInstance && (n = " zhshare-dest", a = 'data-zhshare-dest-meta="{{zhshare_dest_metaobj}}" data-zhshare-dest-allowed-size="{{maxsize}}"');
    var o = '<div id="{{chid}}" class="wms_cw_cont wms_chatwindow wms_bubbletheme' + s + n + '" ' + a + '><div data-main=true class="wms_cw" >' + t + '<div class="wms_mediacall_space" data-videospace=true media-action="maximize"><span class="wms_callstatus_text wms-halign"></span><div class="wms_mediacall_container"><div class="wms_outgoing_call_text wms-halign"></div><div class="wms_screenshare_container"><video class="wms_sharedscreen" media-action="switchvideo"></video></div><div class="wms_remotevideo_container"><video class="wms_remotestream" media-action="switchvideo"></video><div class="wms_remoteuserimg wms-hvalign"><img></img></div><div class="wms_mediaoff_notify"></div></div><div class="wms_localvideo_container" media-action="switchvideo" title="' + $WC.I18N("mediacall.switchvideo") + '"><video class="wms_localstream" autoplay="autoplay"></video><div class="wms_localuserimg"><img></img></div></div></div><div class="wms_videocall_button wms_options_button" media-action="options" title="' + $WC.I18N("mediacall.options") + '"><div class="wms_options_container"></div></div><div class="wms_videocall_button wms_minimize_button" media-action="minimize" title="' + $WC.I18N("minimize") + '"></div><div class="wms_videocall_button wms_fullscreen_button" media-action="togglefullscreen" title="' + $WC.I18N("mediacall.fullscreen") + '"></div><div class="wms_mediacall_timer"></div><div class="wms_videocall_buttons_list"><div class="wms_videocall_button wms_togglemic_button" media-action="togglemic" title="' + $WC.I18N("mediacall.mic.off") + '"></div><div class="wms_videocall_button wms_endcall_button" media-action="endcall" title="' + $WC.I18N("mediacall.end") + '"></div><div class="wms_videocall_button wms_togglevideo_button" media-action="togglecam" title="' + $WC.I18N("mediacall.cam.off") + '"></div></div></div><div data-pinmsg=true class="wms_pinmsg_column" data-show-options="true"><div class="wms_pinmsg_icon"></div><div class="wms_pinmsg_content"></div><div class="wms_pinmsg_options" data-pinmsg-options="false"><div id="wms_pinmsg_dropdown" class="wms_pinmsg_dropdown" data-pindropdown="false"><div class="wms_cw_toolbar_actionitem" data-msg-unpin="true">' + $WC.I18N("pinmsg.unpin") + '</div><div class="wms_cw_toolbar_actionitem" data-pinoption-duration="true">' + $WC.I18N("pinmsg.timeleft", [$WC.I18N("chat.forever")]) + '</div></div></div></div><div data-floating_containers="true" class="wms_cw_floating_containers"><div data-errormsg=true class="wms_cw_errormsg wms-halign"></div><div data-progressbar=true class="wms-loadingmn"><div class="wms_cw_progressbar_basic" data-progressbar-basic=false></div><div class="wms_cw_progressbar_advanced"><div class="wms_cw_progressholder" data-progressholder="true"><div class="wms-loading-sub" data-progressindicator="true"></div></div><div class="wms_fileuploaddetails" data-purpose="filecontainer"><div class="wms_fileuploadcnt"><span id="wmsloadingtxt" class="wms-loading-text" data-progresstext="true">' + $WC.I18N("Sharing_$1_of_$2") + '</span><span class="wms_file_errorinfo"></span><span class="wms_file_failurecount" id="wms_failcountbar"></span></div><div class="wms_fileuploadopts"><span id="retryall" data-purpose="retryall" class="wms_fileupld_resend"></span><span id="wms_fileexpandicon" data-purpose="expand" class="wms_fileupld_expand"></span><span data-purpose="uploadcancel" class="wms_fileupld_close"></span></div></div></div><div id="wms_expandfilescontainer" class="wms_filescontainer"></div></div><div data-newmsgbanner="false" class="wms_unread_banner wms-halign"><span class="wms_unread_banner_text">' + $WC.I18N("chat.newmessages") + '</span></div><div data-threadbanner="false" class="wms_unread_thread_banner wms-halign"><span class="wms_unread_banner_text">' + $WC.I18N("thread.msg.banner") + '</span><span class="wms_unread_thread_count"></span></div><div data-datecomp="true" class="wms_datehint wms-halign"></div></div><div data-ctrlcomp="true" class="wms_cw_main_parent"><div class="wms_cw_main" id="ctrlcomp" data-msgdisp="true"></div></div><div data-dragcomp="true" class="wms_cw_drag" style="display:none"><span>' + $WC.I18N("chat.file.drop") + '</span></div><div class="wms_cw_toolbar" data-toolbar=true><span class="wms_cw_typingstatus wms-truncate-ellipsis" data-typingstatusnode=true data-typingstatus=false></span><button class="wms_cw_toolbar_actionbutton" data-action=true >' + $WC.I18N("Actions") + '</button><div data-scrolldown="true" class="wms_scrolldown_button" title="' + $WC.I18N("chat.scroll.bottom") + '"></div><div class="wms_cw_toolbar_actionlist" data-actionlist=true></div></div><div class="wms-smileycontainer" data-smileycontainer=true></div><div class="wms-urlpreviewcontainer" data-urlpreviewcontainer=true></div><div class="wms_cw_footer" data-footer=true><div class="wms_editorreply" data-editorreply=true></div><div id="wms-autocomplete" class="wms-autocomplete" data-autocomplete=true style="display:none"></div><div data-footercont=true class="wms_cw_footer_cont"><div class="wms_composer_restriction_info"><span class="wms_composer_restriction_text" data-restriction-text=true></span></div><div data-attachment=true class="wms_cw_footer_att">';
    return o += '<form type="html5" name="uploads{{chid}}" enctype="multipart/form-data" class="wms_cw_actualfile" chid="{{chid}}" id="formsend" title="' + $WC.I18N("share.file") + '"><input name="file1" id="wms-file" type="file" multiple size="30"/></form>', o += '</div><div id="wms-wrapperdiv" class="wms-wrapperdiv"><div id="wms-editorscrolldiv" class="wms-invisiblediv wms_cw_footer_editor"></div><div id="wms-invisiblediv" class="wms-invisiblediv wms_cw_footer_editor" data-invisiblediv=true></div><textarea  class="wms_cw_footer_editor" data-composer=true chid={{chid}} ></textarea></div><div id="wms-smileyinvoker" class="wms-smileyinvoker wms-valign-mid-block ' + i + '" title="' + $WC.I18N("zomojicomponent.emoji") + '"></div><div id="wms-voicemsginvoker" class="wms-voicemsginvoker wms-valign-mid-block ' + i + '" data-voicemsg="true" title="' + $WC.I18N("voicemsg.invoker") + '"></div><div id="wms_sendmessageicon" data-sendmessagebutton="true" class="wms_sendmessageicon wms-valign-mid-block" title="' + $WC.I18N("common.send") + '"></div></div>', o += '<div class="wms_cw_footer_cont wms_cw_msgopr" data-msgoperation="true"><div data-fwdclose="true" class="wms_msgopr_close"></div><div class="wms-valign-mid-block wms_fwdmsg"><span data-msgselectcnt="true">' + $WC.I18N("msg.select.fwdcnt", [1]) + '</span></div><div data-fwdmsg="true" class="wms_msgforward wms-valign-mid-block"></div></div></div>', o += '<div class="wms-resendoverlay" data-resendoverlay="true"><div class="wms-resendmsgoptsdiv wms-hvalign"><div data-operation="wms-resend" class="wms-resendmsgopts"><span>' + $WC.I18N("chat.msg.resend") + '</span></div><div data-operation="wms-resendall" class="wms-resendmsgopts"><span></span></div><div data-operation="wms-resenddel" class="wms-resendmsgopts"><span>' + $WC.I18N("common.delete") + '</span></div><span data-operation="wms-resendcancel" class="wms_cw_overlay_close"></span></div></div></div><div class="wms_cw_bar " data-bar="true"><div class="wms_cw_bar_photo" data-baravatar=true /></div><span class="wms_cw_bar_msgcount" data-barmsgcount=true></span><span class="wms_cw_bar_typing_indicator wms_cw_bar_typing_online" data-typingsymbol="true"></span><span class="wms_cw_bar_name wms-truncate-ellipsis" data-bartitle=true>{{title}}</span><span class="wms_minimized_close wms_cw_opr_close" data-barclose="true"></span></div></div>'
}, WMSUI.handleSync = function(e) {
    e.parentNode.querySelector('[id="wms-invisiblediv"]').scrollTop = e.scrollTop
}, WMSUI.isBarVisible = function() {
    return !!WmsMainUI.maincontainer && "block" == getComputedStyle(WmsMainUI.maincontainer).display
}, WMSUI.handleKeyMovement = function(e, t, s) {
    var i = e.getElementsByClassName(s),
        n = null;
    40 === t ? n = i[0].nextSibling || e.firstChild : 38 === t && (n = i[0].previousSibling || e.lastChild), i[0] && $WC.Util.removeClass(i[0], s), $WC.Util.addClass(n, s)
}, WMSUI.createNewChatWindow = function(e, t) {
    function s(t) {
        var s, i = $WC.Util.isArray(e.users) ? e.users : e.users && JSON.parse(e.users);
        return i && i.forEach((function(e) {
            e.zuid !== WebMessanger.zuid && (s = e.zuid)
        })), s
    }

    function i(e) {
        if (e.t121t && (e.temp_info || e.includesenderinunread)) {
            var t = WebMessanger.getSenderFromMsgobj(e);
            return WmsContacts.getDisplayName(t) || s[t]
        }
        if ($WC.Util.isLocalUser(e.sender) && e.t121t) {
            var s = JSON.parse(e.t121t);
            for (var i in s)
                if (i !== $WC.Config.get("zuid")) return WmsContacts.getDisplayName(i) || s[i]
        } else {
            if (WmsContacts.getDisplayName(e.sender)) return WmsContacts.getDisplayName(e.sender);
            if (e.dname) return e.dname;
            if (e.users) {
                var n, a = $WC.Util.isArray(e.users) ? e.users : e.users && JSON.parse(e.users);
                return a && a.forEach((function(e) {
                    e.zuid !== WebMessanger.zuid && (n = e.dname)
                })), n
            }
        }
    }

    function n(t, i) {
        if (i <= 2) {
            if ("string" == typeof t) return (t = t.split(","))[0] === WebMessanger.zuid ? t[1] : t[0];
            if (t && t[0] && t[0].uname) return t[0].uname;
            if (e.sender !== WebMessanger.zuid || !e.t121t) return e.sender !== WebMessanger.zuid || e.sender == WebMessanger.zuid && e.includesenderinunread ? e.sender : s();
            var n = JSON.parse(e.t121t);
            for (var a in n)
                if (a !== $WC.Config.get("zuid")) return a
        } else if (i > 2 && "string" == typeof t) return -1 != (t = t.split(",")).indexOf(WebMessanger.zuid) && t.splice(t.indexOf(WebMessanger.zuid), 1), t
    }!e.sender && e.users && e.users.length && (e.sender = e.users[0].uname || s(e.users));
    var a = "11" == e.ctype && e.threadchatid ? e.threadchatid : e.chid,
        o = function(t, s, n, a) {
            return $WC.Util.isChannelChid(a) ? $WC.Channels.getChannelName(a) || n : $WC.Util.isBotChid(a) ? $WC.Bots.getBotName($WC.Bots.getBotId(a)) || n : !t && 2 != s || "false" != e.customgroup ? !$WC.RecentChats.get(a) || "" != n && n != $WC.RecentChats.get(a).TITLE ? n || (2 == s ? i(e) : s > 2 ? $WC.I18N("Group_Chat") : void 0) : $WC.RecentChats.get(a).TITLE : t && !$WC.Util.isLocalUser(t) ? $WC.Util.getContactName(t, n) : i(e)
        }(e.sender, e.pcount, e.title, a),
        r = e.pcount,
        l = e.sender,
        d = e.recipants ? n(e.recipants, r) : n(e.users, r);
    if (null == d && null != e.senderinfo && r <= 2) {
        var c = JSON.parse(e.senderinfo);
        for (var u in c) u !== WebMessanger.zuid && (d = u)
    }
    var m = "open";
    if (11 == e.ctype)
        if (e.addinfo) {
            var h = e.addinfo.split(":"),
                g = h.indexOf("PARENT_MESSAGE_SENDER");
            d = h[g + 1], m = -1 !== h.indexOf("THREAD_CLOSED") ? "closed" : "open"
        } else d = e.recipants;
    var p = null != e.presence ? JSON.parse(e.presence) : null,
        f = function(t, s, i, n) {
            if (s <= 2) {
                if ($WC.Util.isLocalUser(t)) return WmsContacts.status(i);
                if (WmsContacts.status(t)) return WmsContacts.status(t);
                if ($WC.Config.get("presence_keys")) {
                    if (e.users && e.users[0] && e.users[0].scode) return e.users[0].scode;
                    if (null != n) return n[t].scode
                }
            }
            return ""
        }(l, r, d, p),
        v = function(t, s, i, n) {
            if (s <= 2) {
                if ($WC.Util.isLocalUser(t)) return WmsContacts.getStatusType(i);
                if (WmsContacts.getStatusType(t)) return WmsContacts.getStatusType(t);
                if ($WC.Config.get("presence_keys")) {
                    if (e.users && e.users[0] && e.users[0].st) return null != e.users[0].st;
                    if (null != n) return n[t].st
                }
            }
            return ""
        }(l, r, d, p),
        C = function(t, s, i, n) {
            if (s <= 2) {
                if ($WC.Util.isLocalUser(t)) return WmsContacts.getStatusMsg(i);
                if (WmsContacts.getStatusMsg(t)) return WmsContacts.getStatusMsg(t);
                if ($WC.Config.get("presence_keys")) {
                    if (e.users && e.users[0] && e.users[0].smsg) return e.users[0].smsg;
                    if (null != n) return n[t].smsg
                }
            }
            return ""
        }(l, r, d, p),
        b = e.ctype,
        y = e.salesiqchat || !1,
        _ = $WC.WmsSessionStorage.getChatInfo(a, "state");
    _ = null === _ ? "min" : _, (WmsMainUI.isAutoFocusScheduled(e.chid) || 2 == r && WmsMainUI.isAutoFocusScheduled(d) || y && e.usertriggered) && (_ = "max"), 11 == b && e.isfirstthreadmessage && Message.isSameBrowser(e.sid) && $WC.Util.isLocalUser(e.sender) && (_ = "max");
    var W = $WC.WmsSessionStorage.getChatInfo(a, "text");
    if (e.add_welcome_note) {
        var S = Math.floor(5 * Math.random()) + 1;
        W = $WC.I18N("welcomenote.welcomeMessage" + S)
    }
    var w = "1" === e.a,
        M = e.prd,
        I = e.addinfo,
        T = e.context ? JSON.parse(e.context).weburl || JSON.parse(e.context).openurl : "",
        A = e.entityid,
        E = e.thread_parent_title;
    !E && $WC.Util.isThreadChid(a) && (E = $WC.Channels.getChannelName(e.thread_parentid) || $WC.RecentChats.get(a) && $WC.RecentChats.get(a).THREAD_PARENT_TITLE), $WC.Config.get("isViewTranscriptUI") && $WC.Config.set({
        isViewTranscriptUI: !1
    });
    var U = {
        addinfo: I,
        recipant: d,
        divId: a,
        title: o,
        scode: f,
        stype: v,
        smsg: C,
        ctype: b,
        winstate: _,
        composertext: W,
        historystorage: e.history,
        entityweburl: T,
        entityid: A,
        lastmsgtime: +e.time,
        attached: w,
        pcount: r,
        prdcode: M,
        mutedinterval: e.mutedinterval,
        salesiqchat: y,
        stickymessage: e.stickymessage,
        customgroup: e.customgroup,
        thread_msgid: e.thread_msgid,
        thread_parentid: e.thread_parentid,
        thread_follower: e.thread_follower,
        thread_state: e.thread_state || m,
        thread_parent_title: E,
        servicechatcontainer: t
    };
    Factory.createDialog(WMSUI.generateUI(), U)
}, WMSUI.rejectContact = function(e, t) {
    try {
        WmsContacts.reject("zoho", t, WebMessanger.uname)
    } catch (e) {}
}, WMSUI.setServiceStatus = function(e) {
    WmsMainUI.servicestatusdiv ? WmsMainUI.servicestatusdiv.innerHTML = e : WMSUI.serviceStatusHTML = e, WMSUI.deactivatedUIHidden && (WebMessanger.showChatBar(), WMSUI.deactivatedUIHidden = !1)
}, WMSUI.populateMainBar = function() {
    void 0 !== WMSUI.smartchatenabled || WebMessanger.is_custom_menu_opted || (WMSUI.smartchatenabled = !0), WebMessanger.registerAnnonUser || (wmsnotifyowner = new $WC.NotificationOwner("chat", !0), avcliqnotifyowner = new $WC.NotificationOwner("avcliq", !0)), "CP" == WebMessanger.prd && WebMessanger.listenLinkClicks(), WmsMainUI.populate(), WMSUI.serviceStatusHTML && WmsMainUI.servicestatusdiv && (WmsMainUI.servicestatusdiv.innerHTML = WMSUI.serviceStatusHTML, delete WMSUI.serviceStatusHTML), WMSUI.deactivatedUIHidden && (WebMessanger.showChatBar(), WMSUI.deactivatedUIHidden = !1), WebMessanger.is_custom_menu_opted || _WMSEMPTYBAR || (document.getElementById("wmsbarmovablehint").onclick = function() {
        WmsHybridSearch.toggleUI(), WebMessanger.trackClientAction("Cliq Mini - Smart chat")
    })
}, WMSUI.populate = function() {
    var e = document.createDocumentFragment(),
        t = $WC.Util.createElement("DIV", "annmsgstrip", "zread_strip");
    t.onclick = function() {
        WMSUI.annShowAnimate("wmsannmsg")
    };
    var s = $WC.Util.createElement("DIV", "wmsannmsg", "zread_olymn", null, '<span id="annmsg"></span><div id="hideinfo" class="zchdr_arw"></div><a id="clearannmsg" style="text-decoration:underline; float:right; font-size: 11px; margin: 2px 25px 0px 0px">Do not show again</a>');
    s.style.display = "none", s.onclick = function(e) {
        var t = $WC.Util.getEventTarget(e);
        t && "A" !== t.tagName ? WMSUI.hideAnnMsg(e) : "function" == typeof e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0
    }, s.style.zIndex = WebMessanger.setzindex, t.style.zIndex = WebMessanger.setzindex, t.appendChild(s), e.appendChild(t), document.body.appendChild(e), $WC.Util.addEvent(document.getElementById("hideinfo"), "click", WMSUI.hideAnnMsg), $WC.Util.addEvent(document.getElementById("clearannmsg"), "click", WMSUI.clearBannerAndUpdate)
}, WMSUI.updateResourceInAnnouncementBanner = function() {
    var e = document.getElementById("clearannmsg");
    $WC.$CUtil.setInnerText(e, $WC.I18N("announcement.close"))
}, WMSUI.clearBannerAndUpdate = function() {
    WMSUI.clearAnnBanner(), WmsSettings.updateWmsSettings("bchatsettings", "disann");
    var e = document.location.hostname.split("."),
        t = e[e.length - 2] + "." + e[e.length - 1];
    $WC.Cookie.set(wmsUserConfig.infomsgid, "true", 2592e6, t)
}, WMSUI.clearAnnBanner = function() {
    var e = document.getElementById("annmsgstrip");
    e && (e.style.display = "none")
}, WMSUI.addIndocClickcallbackQue = function(e, t, s, i) {
    ie && (WMSUI.handleDocumentClick(i), WMSKeyHandler.skipeventlistener = !0);
    var n = {};
    n.htmlObj = t, n.cbfunction = s, WMSUI.docClickcallbackQue[e] = n
}, WMSUI.handleDocumentClick = function(e) {
    try {
        var t = WMSUI.getEventSrc(e),
            s = WMSUI.docClickcallbackQue;
        for (var i in s) {
            s[i].cbfunction(t.id) || delete WMSUI.docClickcallbackQue[i]
        }
    } catch (e) {}
}, WMSUI.deleteParticipant = function(e, t, s, i, n, a) {
    if (!WMSUI.showErrorIfPermDenied(e)) {
        var o = [$WC.I18N("info.chat.participant.remove", s), s],
            r = new $WC.ConfirmationDialog,
            l = {
                actions: [{
                    text: $WC.I18N("chat.member.remove"),
                    onclick: function() {
                        WebMessanger.deleteMember(e, t, n, a), i(), r.unmountComponent()
                    },
                    buttonstyle: "destructive_button"
                }, {
                    text: $WC.I18N("common.cancel"),
                    onclick: function() {
                        r.unmountComponent()
                    },
                    buttonstyle: "cancel_button"
                }],
                heading: o,
                bodytitle: $WC.I18N("dialogue.info.header"),
                headerimgsrc: $WC.WmsContacts.getUserPhoto(t, "38"),
                content: [$WC.I18N("info.participant.remove.info1"), $WC.I18N("info.participant.remove.info2"), $WC.I18N("info.participant.remove.info3")]
            };
        r.mountComponent(l)
    }
}, WMSUI.leaveChat = function(e, t) {
    if (!WMSUI.showErrorIfPermDenied(e)) {
        var s = [$WC.I18N("chat.leave.subheader")],
            i = new $WC.ConfirmationDialog,
            n = {
                actions: [{
                    text: $WC.I18N("chat.action.leave"),
                    onclick: function() {
                        WebMessanger.leaveChat(e), i.unmountComponent()
                    },
                    buttonstyle: "destructive_button"
                }, {
                    text: $WC.I18N("chat.action.mute"),
                    onclick: function() {
                        WebMessanger.muteChat(e, "-1", !0), i.unmountComponent()
                    },
                    buttonstyle: "cancel_button"
                }],
                heading: s,
                bodytitle: $WC.I18N("dialogue.info.header"),
                customimg: "wms_customimg_leavechat",
                customheadercontent: [$WC.I18N("chat.leave.chattitle", t), t],
                content: [$WC.I18N("chat.leave.info1"), $WC.I18N("chat.leave.info2")],
                customStyles: {
                    customButtonWrapperStyle: "wms_buttonwrapper",
                    containerWrapperStyle: "wms_confirmation_dialog",
                    customFooterStyle: "wms_dialog_footer"
                }
            };
        i.mountComponent(n)
    }
}, WMSUI.makeMediaCall = function(e, t, s) {
    if (WebMessanger.isMediaCallEnabled(e) && WmsSettings.getAdminSetting("isMediacallAllowed")) {
        if ($WC.Util.isEmpty(t)) return;
        if ($WC.VoiceRecorderApi.isVoiceRecordingActive()) return void WMSUI.showMediaSessionErrorDialog({
            content: $WC.I18N("voicerecorder.endrecording")
        }, function() {
            $WC.VoiceRecorderApi.closeAndRemoveRecordingSession(), WMSUI.makeMediaCall(e, t, s)
        }.bind(this));
        var i = !1;
        "undefined" != typeof WmsUIImpl && (i = WmsImplHandler.invokeSynchronously(WmsUIImpl.handleMediaCall, e, t)), !i && MediacallManager && ("voice" === e ? MediacallManager.startCall(MediaCallConstants.types.AUDIO, t) : "video" === e ? MediacallManager.startCall(MediaCallConstants.types.VIDEO, t) : "screen" === e && MediacallManager.startCall(MediaCallConstants.types.SCREEN_SHARE_WITH_AUDIO, t))
    }
}, WMSUI.makeGroupCallInCliq = function(e, t) {
    if (WmsSettings.getAdminSetting("isMediacallAllowed") && WebMessanger.isCliqUser()) {
        var s = _WMSCHATURL + "company/" + _WMSAPPACCOUNTID;
        "start" === e ? s += "/groupcall?chat_id=" + t : "schedule" === e ? s += "/events?chat_id=" + t : "broadcast" === e && (s += "/broadcast?chat_id=" + t), window.open(s, "_blank").opener = null
    }
}, WMSUI.regenerateStatus = function() {
    WebMessanger.getAllStatusMessage()
}, WMSUI.clearCustomStatus = function() {
    WmsMainUI.statuscontainer.style.display = "none", WebMessanger.clearCustomStatus(), WebMessanger.scode = "1", WebMessanger.smsg = "Available", $WC.Util.removeClass(WmsMainUI.settingsdropdownicon, "wms_settings_close"), $WC.Util.addClass(WmsMainUI.settingsdropdownicon, "wms_settings"), WmsMainUI.settingsdropdownicon.setAttribute("data-settings", "true")
}, WMSUI.updateStatus = function(e, t) {
    WebMessanger.scode = e, WebMessanger.smsg = t, WebMessanger.registerAnnonUser || setTimeout((function() {
        WMSUI.regenerateStatus()
    }), 500)
}, WMSUI.initI18NUserStatus = function() {
    WMSUI.i18Nuserstatus = {
        Available: $WC.I18N("Available"),
        Invisible: $WC.I18N("Invisible"),
        Busy: $WC.I18N("Busy"),
        Away: $WC.I18N("userstatus.away"),
        DoNotDisturb: $WC.I18N("userstatus.dnd"),
        Idle: $WC.I18N("Idle")
    }
}, WMSUI.geti18NUserStatus = function(e, t) {
    var s = {};
    return t = t.trim(), null == WMSUI.i18Nuserstatus && WMSUI.initI18NUserStatus(), t == WMSUI.i18Nuserstatus.Available || 0 == t.length ? (t = "Available", e = 1) : t == WMSUI.i18Nuserstatus.Busy ? (t = "Busy", e = 3) : t == WMSUI.i18Nuserstatus.Away ? (t = "Away", e = 7) : t == WMSUI.i18Nuserstatus.Idle ? (t = "Idle", e = 4) : t == WMSUI.i18Nuserstatus.Invisible ? (t = "Invisible", e = 2) : t == WMSUI.i18Nuserstatus.DoNotDisturb && (t = WMSUI.i18Nuserstatus.DoNotDisturb, e = 5), s.scode = e, s.smsg = t, s
}, WMSUI.setStatus = function(e, t, s) {
    try {
        if (t = WMSUI.geti18NUserStatus(e, t).smsg, s && (t = unescape(t), t = $WC.Util.unescapeHTML(t)), WebMessanger.smsg != t || WebMessanger.scode != e) {
            var i = WebMessanger.smsg,
                n = WebMessanger.scode;
            WebMessanger.scode = e, WebMessanger.smsg = t, WmsMainUI.statuscontainer.style.display = "none", WmsMainUI.statuscontainer.setAttribute("data-showstatus", "false"), WebMessanger.setStatus(e, t, null, null, (function() {
                WebMessanger.smsg = i, WebMessanger.scode = n, $WC.$CUtil.setInnerText(WmsMainUI.statusmsgdiv, $WC.Util.unescapeHTML(WebMessanger.smsg))
            }))
        }
        $WC.Util.removeClass(WmsMainUI.settingsdropdownicon, "wms_settings_close"), $WC.Util.addClass(WmsMainUI.settingsdropdownicon, "wms_settings"), WmsMainUI.settingsdropdownicon.setAttribute("data-settings", "true")
    } catch (e) {}
    return !1
}, WMSUI.inviteMember = function(e, t) {
    var s = $WC.Config.get("inviteaction");
    if (t = $WC.Util.unescapeHTML(t), "function" == typeof s) WmsImplHandler.invoke(s, e);
    else {
        var i = new $WC.ConfirmationDialog,
            n = {
                actions: [{
                    text: $WC.I18N("chat.contact.add"),
                    onclick: function() {
                        WmsContacts.add("zoho", e, WebMessanger.uname), i.unmountComponent()
                    },
                    buttonstyle: "confirmation_button"
                }, {
                    text: $WC.I18N("common.cancel"),
                    onclick: function() {
                        i.unmountComponent()
                    },
                    buttonstyle: "cancel_button"
                }],
                heading: t ? [$WC.I18N("chat.contact.addinfo", t), t] : [$WC.I18N("chat.contact.inviteinfo")]
            };
        t && e !== t && (n.headerimgsrc = $WC.WmsContacts.getUserPhoto(e, "38")), i.mountComponent(n)
    }
}, WMSUI.showReadReceiptLimitationDialog = function() {
    var e = new $WC.ConfirmationDialog,
        t = {
            actions: [{
                text: $WC.I18N("common.done"),
                onclick: function() {
                    e.unmountComponent()
                },
                buttonstyle: "confirmation_button"
            }],
            heading: [$WC.I18N("chat.info.readreceiptmsg")],
            headercontent: $WC.I18N("dialog.readreceipt.msg")
        };
    e.mountComponent(t)
}, WMSUI.showFileInfectedDialog = function(e, t) {
    var s = new $WC.ConfirmationDialog,
        i = t ? $WC.I18N("message.actions.forward") : $WC.I18N("chat.download"),
        n = t ? $WC.I18N("virus.forward.sub") : $WC.I18N("virus.download.sub"),
        a = {
            actions: [{
                text: i,
                onclick: function() {
                    if (t) WmsFileForwardUI.handlePreview(e);
                    else {
                        var i = e.getAttribute("download"),
                            n = e.getAttribute("href");
                        WmsFileUploadUI.handleDownload(i, n)
                    }
                    s.unmountComponent()
                },
                buttonstyle: "confirmation_button"
            }, {
                text: $WC.I18N("common.cancel"),
                onclick: function() {
                    s.unmountComponent()
                },
                buttonstyle: "cancel_button"
            }],
            heading: [$WC.I18N("virus.detected")],
            headercontent: n
        };
    s.mountComponent(a)
}, WMSUI.getEventSrc = function(e) {
    var t;
    return e || (e = window.event), e.target ? t = e.target : e.srcElement && (t = e.srcElement), 3 == t.nodeType && (t = t.parentNode), t
}, WMSUI.handleStatusChange = function(e, t) {
    t || (t = window.event);
    var s = window.event ? t.keyCode : t.which;
    if (13 == s) {
        mz && t.preventDefault(), ie && (t.cancelBubble = !0, t.returnValue = !1);
        var i = e.trim();
        WebMessanger.smsg != i && WMSUI.setStatus(WebMessanger.scode, i, !1)
    } else 27 == s && (mz && t.preventDefault(), ie && (t.cancelBubble = !0, t.returnValue = !1))
}, WMSUI.populateCustomStatus = function(e) {
    if (null != e) {
        if ($WC.Config.get("isStatusConfigEnabledInClient") && WmsSettings.isAllowedStatusConfigEnabled()) {
            var t = WmsSettings.getAllowedStatuses(),
                s = [];
            for (let i = 0; i < e.length; i++) 1 == e[i].SYSTEM && -1 !== t.indexOf(e[i].ENC_STATUSMSG.toLowerCase()) ? s.push(e[i]) : 0 == e[i].SYSTEM && -1 !== t.indexOf("custom") && s.push(e[i]);
            e = s
        }
        var i = e.length;
        if (!(i <= 0)) {
            for (var n = document.createDocumentFragment(), a = document.createDocumentFragment(), o = document.createDocumentFragment(), r = document.createDocumentFragment(), l = function(e, t, s) {
                    s = "Available" === s || "Busy" === s || "Invisible" === s ? WMSUI.i18Nuserstatus[s] : s;
                    var i = '<span data-staticon class="wms_cstatusicon wms-valign-mid-block wms-statusicon-' + (1 == t ? "available" : 3 == t ? "busy" : 7 == t ? "away" : "offline") + '"></span><span data-statmsg class="wms-stat wms-truncate-ellipsis" title="' + $WC.Util.escapeHTML(s) + '"></span>',
                        n = $WC.Util.createElement("p", null, "wms-stp", {
                            "data-smsg": s
                        }, i);
                    $WC.Util.addEvent(n, "click", (function() {
                        WMSUI.setStatus(t, this.getAttribute("data-smsg"))
                    })), e.appendChild(n), $WC.$CUtil.setInnerText(n.querySelector("[data-statmsg]"), s)
                }, d = 0; d < i; d++) {
                var c = $WC.Util.unescapeHTML(e[d].ENC_STATUSMSG || e[d].STATUSMSG);
                null != WMSUI.i18Nuserstatus && null != WMSUI.i18Nuserstatus || WMSUI.initI18NUserStatus(), 1 == e[d].SYSTEM && "Available" != c || l(n, 1, c), 1 == e[d].SYSTEM && "Busy" != c || l(a, 3, c), 1 == e[d].SYSTEM && "Away" != c || l(o, 7, c), 1 == e[d].SYSTEM && "Invisible" == c && l(r, 2, c)
            }
            var u = $WC.Util.createElement("p", null, null, null, '<p class="wms-stp" ><span class="wms-stat">' + $WC.I18N("Clear_status_message") + "</span></p>");
            u.onclick = WMSUI.clearCustomStatus;
            var m = WmsMainUI.statuscontainer;
            if (m.innerHTML = "", $WC.Config.get("isStatusConfigEnabledInClient") && WmsSettings.isCurrentActivityStatusOverrideDisabled()) {
                $WC.Util.addClass(m, "wms_statuschange_disabled");
                var h = $WC.Util.createElement("div", null, "wms_adminlockinfo", null, '<div class="wms_adminlockicon" ></div><div>' + WMSUI.getActivityStatusOverrideDisabledInfo() + "</div>");
                m.appendChild(h)
            }
            m.appendChild(n), m.appendChild(o), m.appendChild(a), m.appendChild(r), m.appendChild(u)
        }
    }
}, WMSUI.updateInvitations = function(e) {
    for (var t = 0; t < e.length; t++) {
        var s = e[t],
            i = WmsContacts.get(s);
        if (null != i) {
            var n = {};
            n.zuid = i.USERID, n.dname = i.DNAME, n.uname = i.USERID, n.email = i.EMAILID, WmsHybridSearch.showInvite(n)
        }
    }
};
var wmsCountDownTimer, naKeyCodes = new Array("33", "34", "36", "37", "39", "45", "144", "145", "16", "17", "18", "91");
WMSUI.handleStatus = function(e, t, s, n) {
    var a = WindowHandler.getWinObjById(s);
    if (a.salesiqchat) return !0;
    if (27 !== e.keyCode && $WC.WmsSessionStorage.setChatInfo({
            chid: s,
            text: t.value
        }), 27 != e.keyCode && 37 != e.keyCode && 39 != e.keyCode && 38 != e.keyCode && 40 != e.keyCode && 13 != e.keyCode) {
        var o = t.selectionStart,
            r = t.value,
            l = a.invisiblediv,
            d = a.autocompletediv;
        "" == r ? (l.innerHTML = "", t.removeAttribute("data-command"), d.style.display = "none", a.footernode.style.borderRadius = "5px", a.showVoiceMsgInvoker()) : a.hideVoiceMsgInvoker(), r = r.substring(0, o);
        var c = l.innerHTML,
            u = Message.getMsgCategory(c),
            m = "command" === u ? Commands.getAllowedTriggers(t) : Message.getCurtriggers(u),
            h = WindowHandler.getWinObjById(s);
        if (WMSUI.curtrigger = WMSUI.getCurtriggers(r, m), h.composer.scrollHeight > 56 && h.changeFooterHeight(), "-" === WMSUI.curtrigger && -1 != r.indexOf("/")) return Commands.show(s, !0), !0;
        if (!WebMessanger.isGuestUser() && (WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ATMENTION && "5" !== h.ctype || WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ADDMEM && ("10" !== h.ctype || "10" == h.ctype && h.allowAddMemberForEntityChat()) && ("1" !== h.ctype || h.isZohoGroupChat()))) WMSUI.atMentions.init(s, t);
        else if (WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.SMILEY) WMSUI.autoComplete.init(s, t);
        else {
            if (!WebMessanger.isGuestUser() && !0 !== h.salesiqchat && WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.SLASH && r.startsWith($WC.WmsConstants.TRIGGERS.SLASH)) return Commands.show(s), !0;
            "input" === e.type && "deleteContentBackward" === e.inputType && (clearTimeout(this.timeout), this.timeout = setTimeout((function() {
                h.hideUrlPreview()
            }), 500))
        }
        if ("11" == h.ctype && ("" === r && h.editorreplydiv.querySelector("#wms_notifyeditlabel") && h.editorreplydiv.querySelector("#wms_notifyeditlabel").getAttribute("post-in-channel-div") ? h.closeReplyPreview() : "block" !== h.editorreplydiv.style.display && h.showReplyPreview(null, null, !0)), h.checkAndDeleteDraft(), (t.value.indexOf("https://") > -1 || t.value.indexOf("http://") > -1) && (h.mainwin.querySelector("[data-editmsg]") || h.showUrlPreview()), e.keyCode >= 112 && e.keyCode <= 123) return !0;
        for (i = 0; i < naKeyCodes.length; i++)
            if (e.keyCode == naKeyCodes[i]) return !0;
        void 0 !== n || null != t.getAttribute("data-command") || "false" == h.showTypingStatus || $WC.Util.isChannelChid(s) && (!$WC.Channels.get(s) || $WC.Channels.isDefaultChannel(s)) || Self.status.active(s)
    }
}, WMSUI.getCurtriggers = function(e, t) {
    for (var s = 0, i = null, n = 0; n < t.length; n++) {
        var a = e.lastIndexOf(" " + t[n]) + 1;
        0 == a && (a = e.lastIndexOf("\n" + t[n]) + 1), 0 === a && 0 !== e.indexOf(t[n]) && (a = -1), -1 !== a && a >= s && (s = a, i = t[n])
    }
    return i || WMSUI.curtrigger
}, WMSUI.showErrorIfPermDenied = function(e) {
    var t = WindowHandler.getWinObjById(e);
    return !(!t || !t.permdenied) && (alert($WC.I18N("Permission_Denied_You_are_no_longer_member_of_this_chat")), !0)
}, WMSUI.handleEvent = function(e, t, s) {
    var i = WindowHandler.getWinObjById(s);
    if (i.salesiqchat) return !0;
    var n = !(!i.editorreplydiv || "true" !== i.editorreplydiv.getAttribute("data-editmsg"));
    try {
        try {
            if (13 == e.keyCode && $WC.Config.get("showSendMessageButton")) return !0;
            if (13 == e.keyCode && e.shiftKey) return !0
        } catch (e) {}
        if (e.keyCode >= 112 && e.keyCode <= 123) return !0;
        if (27 == e.keyCode) try {
            if (ChatBlink.stopRepeat(), WMSUI.handleChatWindowEscape(e, s)) return !1;
            if (!i.isdmchat) return WindowHandler.closeWinById(s), WMSKeyHandler.cancelEvent(e), !1
        } catch (e) {}
        if (9 == e.keyCode && !e.ctrlKey && !e.shiftKey) return WindowHandler.moveFocus(s), !1;
        if (9 == e.keyCode && e.shiftKey) return WindowHandler.moveFocus(s, !0), !1;
        var a = document.getElementById(s);
        if (86 == e.keyCode && (e.ctrlKey || e.metaKey) && "5" != i.ctype && "true" !== i.editorreplydiv.getAttribute("data-editmsg") && -1 != navigator.userAgent.indexOf("Firefox")) {
            var o = e.target,
                r = o.value.substring(0, o.selectionStart),
                l = o.value.substring(o.selectionEnd),
                d = document.getElementById("wms-pasteCapture");
            d.focus(), d.innerHTML = "", setTimeout((function() {
                var i;
                if (d.childNodes[0] && "IMG" == d.childNodes[0].nodeName) {
                    var n = d.childNodes[0].getAttribute("src");
                    if (n.match(/^data:image/)) {
                        var a = atob(n.split(",")[1]),
                            c = n.split(",")[0].split(":")[1].split(";")[0],
                            u = new ArrayBuffer(a.length),
                            m = new Uint8Array(u);
                        for (i = 0; i < a.length; i++) m[i] = a.charCodeAt(i);
                        var h = new Blob([m], {
                            type: c
                        });
                        h.name = c.replace("/", "."), WmsFileUploadUI.handlePreview(o.getAttribute("chid"), [h]), document.getElementById("wms-fileupldcmt").focus()
                    }
                } else if (d.childNodes) {
                    var g = d.querySelectorAll("br");
                    for (i = 0; i < g.length; i++) g[i].parentNode.replaceChild(document.createTextNode("\n"), g[i]);
                    var p = d.querySelectorAll("A");
                    for (i = 0; i < p.length; i++) p[i].parentNode.replaceChild(document.createTextNode(p[i].href), p[i]);
                    r += $WC.Util.getInnerText(d), o.value = r + l, $WC.Util.moveCaretPosition(o, r.length, r.length), WMSUI.handleStatus(e, t, s)
                }
            }), 10), e.stopPropagation()
        }
        var c = i.autocompletediv,
            u = i.invisiblediv,
            m = i.atmentions;
        if ("" == Message.trim(t.value) && (u.innerHTML = "", WMSUI.curtrigger = ""), 38 != e.keyCode && 40 != e.keyCode || !i.is_lastmsg_commands || "none" != c.style.display || Commands.getRecentlyUsedCommand(i, e.keyCode), 38 == e.keyCode && "" == Message.trim(t.value) && !WebMessanger.isGuestUser()) {
            for (var h = i.msgdisp.querySelectorAll(".wms-msgfrag[data-msguid]"), g = Array.prototype.slice.call(h), p = h[h.length - 1]; p && !1 === Message.isEditable(p);) g.pop(), p = g[g.length - 1];
            return i.showReplyPreview(p, !0), !1
        }
        if (13 == e.keyCode) {
            var f = !0;
            if ("block" == c.style.display && -1 !== WMSUI.triggers.indexOf(WMSUI.curtrigger)) return void e.preventDefault();
            mz && e.preventDefault();
            var v = t.value;
            if (i.isDoubleEnter() && !i.isEnterKeyOnhold) i.isEnterKeyOnhold = !0, i.setLastEnterKeyPressTime(-1), v = "---";
            else {
                if ("" == Message.trim(t.value)) {
                    if (i.setLastEnterKeyPressTime((new Date).getTime()), t.value = "", n) {
                        if (i.editorreplydiv.getAttribute("data-originalmsg") === v) return void i.showInfoMsg($WC.I18N("message.editprompt.nochange"));
                        var C = (w = i.editorreplydiv.querySelector("[data-msguid]")) && w.getAttribute("data-msguid"),
                            b = i.editorreplydiv.querySelector("[data-fileurl]"),
                            y = i.editorreplydiv.querySelector("#wms_notifyeditmsg").checked;
                        if (b) {
                            var _ = b.getAttribute("data-fileurl");
                            WebMessanger.editAttachmentComments(i.objId, C, y, "", _)
                        } else {
                            var W = a.querySelector('[data-msguid="' + C + '"]');
                            WMSUI.showDeleteConfirmationDialog(W, s)
                        }
                        i.closeReplyPreview()
                    }
                    return !1
                }
                i.setLastEnterKeyPressTime(-1)
            }
            if (m && (v = $WC.Util.unescapeHTML(WMSUI.atMentions.formatAtMentions(v, m, s, !0))), "addmem" === Message.getMsgCategory(u.innerHTML)) f = WMSUI.confirmAndAddMember(s, v);
            else if ("command" === Message.getMsgCategory(u.innerHTML)) {
                var S = t.value.substring(0, t.value.indexOf(" "));
                f = Commands.handle(S, t, s)
            } else if ("11" != i.ctype || i.editorreplydiv.getAttribute("data-editmsg")) {
                var w;
                C = (w = i.editorreplydiv.querySelector("[data-msguid]")) && w.getAttribute("data-msguid");
                if ("block" == i.editorreplydiv.style.display && C)
                    if (i.editorreplydiv.getAttribute("data-originalmsg") === v) i.showInfoMsg($WC.I18N("message.editprompt.nochange")), f = !1;
                    else if (i.editorreplydiv.querySelector("[data-fileurl]")) {
                    _ = i.editorreplydiv.querySelector("[data-fileurl]").getAttribute("data-fileurl"), y = i.editorreplydiv.querySelector("#wms_notifyeditmsg").checked;
                    var M = i.atmentions ? $WC.Util.unescapeHTML(WMSUI.atMentions.formatAtMentions(i.composer.value, i.atmentions, s, !0)) : i.composer.value;
                    M = Smiley.replaceTextToEnglishCodes(M), f = WebMessanger.editAttachmentComments(s, C, y, M, _), i.closeReplyPreview()
                } else {
                    y = i.editorreplydiv.querySelector("#wms_notifyeditmsg").checked;
                    f = Message.send(s, v, null, null, null, null, null, C, !0, y)
                } else if ("block" == i.editorreplydiv.style.display && i.editorreplydiv.getAttribute("data-threadmsgid")) {
                    A = i.editorreplydiv.querySelector("#wms_notifyeditmsg") && i.editorreplydiv.querySelector("#wms_notifyeditmsg").checked;
                    f = Message.send(s, v, null, null, null, null, null, null, !0, null, A, i.editorreplydiv.getAttribute("data-threadmsgid"))
                } else {
                    T = i.getReplyMessageId();
                    var I = "undefined" !== i.getReplyMessageId(!0) ? i.getReplyMessageId(!0) : null;
                    f = Message.send(s, v, null, null, null, null, T, null, !0, null, null, null, I)
                }
                "block" == c.style.display && (c.style.display = "none")
            } else {
                var T = i.getReplyMessageId(),
                    A = i.editorreplydiv.querySelector("#wms_notifyeditmsg") && i.editorreplydiv.querySelector("#wms_notifyeditmsg").checked;
                f = Message.send(s, v, null, null, null, null, T, null, !0, null, A), i.closeReplyPreview()
            }
            if ((i = WindowHandler.getWinObjById(s)).atmentions = "", $WC.WmsSessionStorage.setChatInfo({
                    chid: s,
                    atmentions: i.atmentions
                }), !n) {
                var E = WindowHandler.getWinObjById(s).ctrlcomp;
                E.scrollTop = E.scrollHeight - E.clientHeight
            }
            return f && (t.value = "", u.innerHTML = "", i.showVoiceMsgInvoker(), i.changeFooterHeight(), t.removeAttribute("data-command"), i.checkAndDeleteDraft()), WMSUI.handleStatus(e, t, s), !1
        }
    } catch (e) {}
}, WMSUI.confirmAndAddMember = function(e, t, s) {
    var i, n = WindowHandler.getWinObjById(e),
        a = s,
        o = [],
        r = [],
        l = n.atmentions.slice(0, -1) || s;
    if (n.atmentions && (a = n.atmentions.slice(0, -1).split(",")), 1 === a.length ? (o.push(WmsContacts.get(a[0], !0).DNAME), i = $WC.I18N("chat.contact.adduserinfo", [o])) : (a.forEach((function(e) {
            o.push(WmsContacts.get(e, !0).DNAME)
        })), o = o.join(", "), i = $WC.I18N("chat.contact.adduserinfo", [o])), "8" == n.ctype) WMSUI.inviteToChannel(e, a), WMSUI.handleMemberModificationCommand(e, l, t, !1);
    else {
        var d = new $WC.ConfirmationDialog,
            c = {
                actions: [{
                    text: $WC.I18N("chat.contact.adduser"),
                    onclick: function() {
                        WMSUI.addMem(e, a), WMSUI.handleMemberModificationCommand(e, l, t, !1), d.unmountComponent()
                    },
                    buttonstyle: "confirmation_button"
                }, {
                    text: $WC.I18N("chat.contact.createchat"),
                    onclick: function() {
                        var s = WindowHandler.getWinObjById(e).partinfo;
                        for (var i in s) a.push(i), r.push({
                            zuid: i,
                            dname: $WC.Util.getContactName(i) || s[i].dname
                        });
                        var n = WmsHybridSearch.createChatTitle(r);
                        WmsMainUI.scheduleAutoFocus(e), WMSUI.handleMemberModificationCommand(e, l, t, !0, a, n), d.unmountComponent()
                    },
                    buttonstyle: "cancel_button"
                }],
                heading: [i],
                bodytitle: $WC.I18N("dialogue.info.header"),
                content: [$WC.I18N("info.contact.add.info1"), $WC.I18N("info.contact.add.info2.external")]
            };
        1 === o.length && (l = Array.isArray(l) ? l[0] : l, c.headerimgsrc = $WC.WmsContacts.getUserPhoto(l, "38")), d.mountComponent(c)
    }
    return !0
}, WMSUI.showAddBotToChatDialog = function(e, t) {
    var s = $WC.Bots.get(e);
    if (s && t) {
        var i = s.DNAME,
            n = s.original_info && s.original_info.bot_participation,
            a = "";
        n.indexOf("LISTEN_MESSAGE") > -1 ? (a = "botconfig.listenmsg", n.indexOf("AUTO_FOLLOW_THREAD") > -1 && (a += ".autofollow"), n.indexOf("SEND_MESSAGE") > -1 && (a += ".sendmsg")) : n.indexOf("SEND_MESSAGE") > -1 && (a = "botconfig.sendmsg");
        var o = new $WC.ConfirmationDialog;

        function r() {
            o.unmountComponent(), o.removeParentNode(), o = null;
            var e = WindowHandler.getWinObjById(t);
            e && e.composer.focus()
        }
        var l = [{
                text: $WC.I18N("bots.addtochannel.dialog.confirm"),
                onclick: function() {
                    WebMessanger.addBotToChannel(t, e), r()
                },
                buttonstyle: "wms_confirmbutton wms_addbot_confirmation_button"
            }, {
                text: $WC.I18N("common.cancel"),
                onclick: function() {
                    r()
                },
                buttonstyle: "wms_deletedialogcancelbutton"
            }],
            d = [$WC.I18N("bots.addtochannel.dialog.title", [i]), i],
            c = $WC.I18N("dialogue.info.header"),
            u = [$WC.I18N(a)];
        o.mountComponent({
            heading: d,
            bodytitle: c,
            content: u,
            actions: l,
            customStyles: {
                customHeaderStyle: "wms_deletedialogheader",
                customButtonStyle: "wms_deletedialogclosebutton",
                headerTextStyle: "wms_addbotdialogheadertext",
                bodyTextStyle: "wms_addbotdialogbodytext",
                containerWrapperStyle: "wms_deletedialogcontainer wms_addbotdialogcontainer",
                customWrapperStyle: "wms_addbotdialogcontentwrapper"
            },
            keydownListener: function(s) {
                if (s.keyCode === $WC.WmsConstants.KEYCODES.ENTER) s.preventDefault(), s.stopPropagation(), WebMessanger.addBotToChannel(t, e), r();
                else if (s.keyCode === $WC.WmsConstants.KEYCODES.ESCAPE) {
                    var i = WindowHandler.getWinObjById(t);
                    i && (s.preventDefault(), s.stopPropagation(), i.composer.focus())
                }
            },
            customimgiconclass: "wms_addbotialogheaderimage"
        })
    }
}, WMSUI.handleMemberModificationCommand = function(e, t, s, i, n, a) {
    $WC.Util.isArray(t) || (t = t.split(","));
    for (var o = "", r = 0; r < t.length - 1; r++) {
        var l = $WC.Util.getContactName(t[r]);
        "+" === WMSUI.curtrigger && (o += "{addchatmember:" + t[r] + ":1:" + l + ":addchatmember} ")
    }
    return o = o.trim(), i ? s && s.trim() === o ? WebMessanger.openUserChat(n.join(","), "true", a) : WebMessanger.openUserChat(n.join(","), "true", a, s) : s && s.trim() !== o && Message.send(e, s), !0
}, WMSUI.inviteToChannel = function(e, t) {
    WebMessanger.inviteToChannel(e, t)
}, WMSUI.addMem = function(e, t) {
    var s = "";
    t.forEach((function(e) {
        if (e) {
            var t = WmsContacts.get(e, !0).EMAILID;
            s += t.concat(",")
        }
    })), WebMessanger.addMember(e, s, t)
}, WMSUI.init = function() {
    void 0 === WMSUI.hidden && (WMSUI.hidden = !1), WMSUI.docClickcallbackQue = {}, WMSUI.i18Nuserstatus = null, WMSUI.scode = 1;
    try {
        WmsSound.init(), WmsMediaPlayer.initSupportedAudioFormats(), WmsMediaPlayer.initSupportedVideoFormats(), WMSUI.openChatWindowDropUp = function(e, t, s) {
            var i = WindowHandler.getWinObjById(t),
                n = i.autocompletediv;
            s = s || {}, i.listcommon.showUI(e, s.defaultselect, s.sethtml, null, !0), n.style.display = "block"
        }, WMSUI.closeChatWindowDropUp = function(e) {
            var t = WindowHandler.getWinObjById(e),
                s = t.autocompletediv;
            t.listcommon.showUI(""), s.style.display = "none"
        }, WMSUI.disableComposerOptions = function(e, t) {
            var s = WindowHandler.getWinObjById(e);
            s.permdenied = !0, s.disableComposerOptions(t)
        }, WMSUI.enableComposerOptions = function(e) {
            WindowHandler.getWinObjById(e).enableComposerOptions()
        }, WMSUI.closeChatWindow = function(e) {
            var t = WindowHandler.getWinObjById(e);
            t && t.closeAndPropagate()
        }, WMSUI.closeEntityChatWindow = function(e) {
            for (chid in e = WebMessanger.getPrd() + "." + e, WindowHandler.openedChats) {
                var t = WindowHandler.getWinObjById(chid);
                t && t.entityid == e && WMSUI.closeChatWindow(t.objId)
            }
        }, WMSUI.updateMessageInComposer = function(e, t) {
            var s = WindowHandler.getWinObjById(e);
            s.composer.value += t, s.focus()
        }, $WC.Functions.isTempResponse = function(e, t, s) {
            var i = document.getElementById(t),
                n = i && i.querySelector('[data-msgtime="' + s + '"]'),
                a = e.closest('[class^="wms-msg"]') || n && n.querySelector('[class^="wms-msg"]');
            return !!a && a.querySelectorAll('[class="wms-cmdvisiblediv"]').length > 0
        }, $WC.Functions.init(), $WC.Functions.showResponse = function(e, t) {
            if ("banner" === e.type) "success" === e.status ? WMSUI.showInfoMsg(e.text) : "failure" === e.status && WMSUI.showErrorMsg(e.text);
            else {
                var s = WindowHandler.getWinObjById(t),
                    i = [];
                if (e.sender = WebMessanger.zuid, e.meta || (e.meta = {}), e.meta.isTempResponse = !0, !e.msg) return;
                i.push(e), s.updateMessage(i)
            }
        }, $WC.Functions.showErrorResponse = function(e, t) {
            if ("banner" === e.type) "success" === e.status ? WMSUI.showInfoMsg(e.text) : "failure" === e.status && WMSUI.showErrorMsg(e.text);
            else {
                var s = WindowHandler.getWinObjById(t),
                    i = [];
                e.meta && e.meta.message_source && e.meta.message_source.type ? e.sender = e.meta.message_source.id : (e.sender = WebMessanger.zuid, e.meta = {}), e.time = (new Date).getTime(), e.meta.shareIntegrationResponse = !0, i.push(e), s.updateMessage(i)
            }
        }
    } catch (e) {}
    WMSUI.populate(), WMSUI.inviteObj = [], $WC.template.setResource(WmsResource);
    var e = isNaN(WebMessanger.setzindex) ? WebMessanger.setzindex : +WebMessanger.setzindex + 1;
    $WC.Config.set({
        WMSCONT: _WMSCONT,
        CHATCONT: _CHATCONT,
        RTCCONT: _RTCCONT,
        PUREJS: !0,
        Resource: WmsResource,
        AjaxDispatcher: WebMessanger.wmsAjaxDispatcher,
        zuid: WebMessanger.zuid,
        zindex: e,
        photoserver: _WMSPHOTOSERVER,
        isOrgUser: WebMessanger.isOrgUser,
        isCliqUser: WebMessanger.isCliqUser,
        isGuestUser: WebMessanger.isGuestUser,
        isRegistered: WebMessanger.isRegistered,
        SystemApiHandler: WebMessanger.systemApiHandler,
        ExecuteButtonResponseHandler: WebMessanger.executeButtonResponseHandler,
        LOCATION_INFO: {},
        getSilentUserMention: WMSUI.atMentions.getSilentMentionHtml
    }), $WC.$CUtil.checkAndUpdateLocationPermissionStatus();
    var t = $WC.Util.createElement("style");
    t.type = "text/css", t.innerHTML = "#wmstoolbar *::-webkit-scrollbar, #zchhis *::-webkit-scrollbar, #wms_fork_container *::-webkit-scrollbar{ height:8px; width:8px } #wmstoolbar *::-webkit-scrollbar-thumb, #zchhis *::-webkit-scrollbar-thumb, #wms_fork_container *::-webkit-scrollbar-thumb{ background-color: #dcdcdc }", -1 !== navigator.userAgent.indexOf("Mac") && (t.innerHTML = "#wmstoolbar *::-webkit-scrollbar, #zchhis *::-webkit-scrollbar, #wms_fork_container *::-webkit-scrollbar{ height:5px; width: 5px } #wmstoolbar *::-webkit-scrollbar-thumb, #zchhis *::-webkit-scrollbar-thumb, #wms_fork_container *::-webkit-scrollbar-thumb{ background-color: #dcdcdc }"), document.body.appendChild(t)
}, WMSUI.removeNotificationHolder = function(e) {
    WmsSound.stop(), ChatBlink.stopRepeat(), WMSUI.eventreminderinstance[e] && (WMSUI.eventreminderinstance[e].unmountComponent(), delete WMSUI.eventreminderinstance[e])
}, WMSUI.showRemainder = function(e) {
    if ("" != _WMSCALENDARSERVER) {
        var t = $WC.Util.createElement("div", null, "wms-eventcontainer");
        WmsMainUI.notificationholder.appendChild(t), WMSUI.eventreminderinstance["reminder" + e.ALRM] = new $WC.ReminderPopup, WmsSound.playTune("newchat"), WMSUI.eventreminderinstance["reminder" + e.ALRM].mountComponent(t, e, (function(e) {
            WebMessanger.clearReminder(e), delete WMSUI.eventreminderinstance["reminder" + e]
        }))
    }
}, WMSUI.attachSession = function(e, t) {
    if (WMSUI.handleChatExist(e)) {
        var s = WindowHandler.getWinObjById(e);
        if (t && s)
            if (s.msgdisp.querySelector('.wms-msgfrag[data-msgtime="' + t + '"]')) Message.glowBubble(t, s.ctrlcomp, e);
            else {
                var i = Message.getMarkerElement(e + "|" + t, t, s.msgdisp);
                Message.loadSpecificTranscript(e, s.msgdisp, i)
            }
    } else t && (Message.mentionMsgInfo[e] = e + "|" + t), WmsMainUI.scheduleAutoFocus(e), WebMessanger.createChatWindowFromCache(e);
    ZMSGUI.hidechathis()
}, WMSUI.handleChatExist = function(e) {
    if (Chat.isExists(e) && !WMSUI.getServiceChatContainer(e)) {
        var t = WindowHandler.getWinObjById(e);
        return t.isMinimized() ? t.maximize() : t.unread && t.scrollToUnread(!0), t.titleGlow(), !0
    }
    return !1
}, WMSUI.handleChatWindowEscape = function(e, t) {
    var s = WindowHandler.getWinObjById(t),
        i = s.autocompletediv;
    s.invisiblediv;
    return WmsMainUI.contactdetailsdiv && WmsMainUI.contactdetailsdiv.firstChild ? (WmsProfileInfo.handleEscape(e), !0) : "none" != i.style.display ? (s.listcommon.showUI(""), i.style.display = "none", s.footernode.style.borderRadius = "5px", e.stopPropagation(), !0) : !(!s.editorreplydiv.style.display || "none" == s.editorreplydiv.style.display) && (s.closeReplyPreview(), e.stopPropagation(), !0)
}, WMSUI.handleDocumentEscape = function(e) {
    if (WmsProfileInfo.unmountComponent(), WebMessanger.userslist) return ZMSGUI.removeReminderDialog();
    ZMSGUI.removeOverlay();
    var t = document.getElementById("zfdshis"),
        s = document.getElementById("zchhis"),
        i = document.getElementById("wms-hysearch"),
        n = document.getElementById("wms-custmmsgcontainer"),
        a = document.getElementById("wms-dialog"),
        o = document.getElementById("wms_fork_container"),
        r = document.getElementById("wms_pendinginv_container"),
        l = document.getElementById("wms_msghistdiv"),
        d = $WC.Util.getEventTarget(e).getAttribute("chid"),
        c = document.getElementById(d);
    if ($WC.$Win.handleEscape());
    else {
        if (null != t && "block" == t.style.display) {
            try {
                ZMSGUI.hidehis()
            } catch (e) {}
            return !0
        }
        if (null != s) return ZMSGUI.hidechathis(), !0;
        if (null != r && "block" == r.style.display) return ZMSGUI.hidependinginv(), !0;
        if (null != n) return ZMSGUI.hidecustmmsg(), !0;
        if (null !== i) return WmsHybridSearch.hideUI(), !0;
        if (null !== a) return WmsDialog.removeModal(), !0;
        if (null !== l) return $WC.Util.removeElement(l), !0;
        null != c ? WMSUI.handleChatWindowEscape(e, d) : null != o && ZMSGUI.removeForkDialog()
    }
}, WMSUI.submitFile = function(e, t) {
    var s = document.getElementsByName("uploads" + e)[0];
    t = t || WindowHandler.getObjectInObject(s, "wms-file", "input").files;
    WmsFileUploadUI.handlePreview(e, t)
}, WMSUI.iframeUpload = function(e) {
    var t = WindowHandler.getWinObjById(e).getInnerObject("formsend", "form");
    if (isNaN(e)) {
        var s = $WC.Util.createElement("input");
        s.name = "type", s.value = 8, s.type = "hidden", t.appendChild(s)
    }
    var i = t.sid,
        n = t.sender;
    i.value = WebMessanger.getSid(), n.value = WebMessanger.getUserName();
    var a = $WC.Util.createElement("input");
    a.name = _CHATCFPARAMNAME, a.value = $WC.Cookie.get(_CHATCFTOKEN), a.type = "hidden", t.appendChild(a), t.submit(), document.getElementById("actiondiv").style.display = "none", document.getElementById("formsend").className = "wms-rigp", t.reset(), WMSUI.imgPreview.removeOverlay()
}, WMSUI.reinviteContByEmail = function(e) {
    var t = WmsContacts.get(e),
        s = t.DNAME,
        i = t.EMAILID;
    WmsContacts.reinvite("zoho", i, s, WebMessanger.uname)
}, WMSUI.showBanner = function(e) {
    if (!WebMessanger.disablenetworkdownbanner && !WebMessanger.isReuseSession()) {
        var t = '<span id="wmsbannertext" class="wmsbannertext">' + $WC.I18N("connectionerror.netfail") + '</span><span id="recntime"></span><span id="wms-retrybtn" class="wms-retrybutton"  title="' + $WC.I18N("Try_Now") + '"></span>',
            s = $WC.Util.createElement("DIV", "wms-netdownbanner", "wms-statesmsg", null, t);
        if (s.style.zIndex = WebMessanger.setzindex <= 9999 ? 9999 : WebMessanger.setzindex, this.isBannerShown("wms-netdownbanner")) {
            var i = document.getElementById("wms-netdownbanner");
            i.parentNode.removeChild(i)
        }
        document.body.appendChild(s), document.getElementById("wms-retrybtn").onclick = e
    }
}, WMSUI.showInfoMsg = function(e) {
    WMSUI.showErrorMsg(e, "info")
}, WMSUI.showErrorMsg = function(e, t) {
    _WMSCHATHIDDEN && !WMSUI.overrideSilentForBanners || $WC.Util.showErrorMsg(e, t)
}, WMSUI.updateTextInBanner = function(e) {
    var t, s;
    e > 60 ? ((t = e % 60) < 10 && (t = "0" + t), s = Math.floor(e / 60) + ":" + t) : s = t = e < 10 ? "0" + e : e;
    this.isBannerShown("wms-netdownbanner") && (document.getElementById("recntime").innerHTML = 0 === e ? $WC.I18N("connectionerror.reconnect") : $WC.I18N("connectionerror.reconnecttime", "" + s))
}, WMSUI.showCountDownInBanner = function(e, t) {
    clearTimeout(wmsCountDownTimer),
        function s() {
            if (WMSUI.updateTextInBanner(e), 0 === e) return clearTimeout(wmsCountDownTimer), void t();
            e--, wmsCountDownTimer = setTimeout(s, 1e3)
        }()
}, WMSUI.isBannerShown = function(e) {
    return null != document.getElementById(e)
}, WMSUI.hideBanner = function() {
    if (clearTimeout(wmsCountDownTimer), this.isBannerShown("wms-netdownbanner")) {
        var e = document.getElementById("wms-netdownbanner");
        e.parentNode.removeChild(e)
    }
}, WMSUI.runIdleTimer = function() {
    WebMessanger.registerAnnonUser || (clearTimeout(WMSUI.idletimer), WMSUI.idletimer = setTimeout((function() {
        WMSUI.handleDocumentIdle()
    }), WmsSettings.getMaxTimeToSetIdle()))
}, WMSUI.handleDocumentIdle = function() {
    WebMessanger.registerAnnonUser || WebMessanger.isRTCChat() || 2 != WebMessanger.scode && ($WC.Config.get("isStatusConfigEnabledInClient") && WmsSettings.isAllowedStatusConfigEnabled() && -1 == WmsSettings.getAllowedStatuses().indexOf("idle") || WebMessanger.isIdle || WebMessanger.offline || WebMessanger.setIdle())
}, WMSUI.checkDocumentActive = function() {
    ie ? (document.attachEvent("onkeydown", WMSUI.handleDocumentActive), document.attachEvent("onclick", WMSUI.handleDocumentActive), document.attachEvent("onkeypress", WMSUI.handleDocumentActive), document.attachEvent("onmouseout", WMSUI.handleDocumentActive), document.attachEvent("onmouseenter", WMSUI.handleDocumentActive)) : (document.addEventListener("keydown", WMSUI.handleDocumentActive, !0), document.addEventListener("keypress", WMSUI.handleDocumentActive, !0), document.addEventListener("mouseout", WMSUI.handleDocumentActive, !0), document.addEventListener("mouseenter", WMSUI.handleDocumentActive, !0), document.addEventListener("click", WMSUI.handleDocumentActive, !0))
}, WMSUI.handleDocumentActive = $WC.Util.throttle((function() {
    WebMessanger.registerAnnonUser || (clearTimeout(WMSUI.idletimer), WMSUI.idletimer = setTimeout((function() {
        WMSUI.handleDocumentIdle()
    }), WmsSettings.getMaxTimeToSetIdle()), WebMessanger.isIdle && !WebMessanger.offline && WebMessanger.setActive())
}), null, 1e4), WMSUI.toggleSoundSetting = function(e) {
    var t = e + (1 == WmsSettings.adminsettings[e] ? "=0" : "=1");
    $WC.Ajax.postRequestToChat("updbsettings.do", t)
}, WMSUI.reqNotificationPermAndToggle = function(e) {
    $WC.DesktopNotification.requestPermission(), 1 == WmsSettings[e] ? $WC.Ajax.postRequestToChat("updbsettings.do", e + "=0") : 1 == WmsSettings.adminsettings[e] ? $WC.Ajax.postRequestToChat("updbsettings.do", e + "=0") : $WC.Ajax.postRequestToChat("updbsettings.do", e + "=1")
}, WMSUI.checkAndNotifyStatus = function(e, t) {
    if (!_WMSWINFOCUS && 0 != WmsSettings.vustatus && !$WC.Util.isLocalUser(e.zuid)) {
        var s = +e.scode;
        if (2 === s && (s = 0), 0 === s && t > 0 || s > 0 && 0 === t) {
            var i = s ? $WC.I18N("Available") : $WC.I18N("Offline");
            WMSUI.desktopNotify(i, "status", e)
        }
    }
}, WMSUI.checkAndNotifyMsg = function(e) {
    if (!(_WMSWINFOCUS || $WC.Util.isLocalUser(e.zuid) && !e.includesenderinunread)) {
        var t = e.ctype;
        if ("1" == WmsSettings.vmention && WMSUI.atMentions.isLocalUserMentioned(e) || "11" === t || "1" === t && "2" == e.pcount && "1" == WmsSettings.vmymessage || e.pcount > "2" && "1" == WmsSettings.groupmessage_visual_notify || "8" === t && "1" == WmsSettings.channelmessage_visual_notify || "9" === t && "1" == WmsSettings.botmessage_visual_notify || "10" === t && WMSUI.annonUserDesktopNotification) {
            var s = e;
            "object" == typeof e.msg && e.msg.comment && (s = e.msg);
            var i = e.meta && e.meta.mentions ? $WC.Util.formatMentions(s, !0) : e.msg;
            "att" == e.mod ? i = $WC.I18N("chat.file.share") : "contact" == e.mod ? i = $WC.I18N("chat.contact.share") : "location" == e.mod ? i = $WC.I18N("chat.location.share") : "event" == e.mod ? i = $WC.I18N("chat.event.share") : "CALL_INFO" == e.mode ? i = $WC.MsgUtil.getCallNotificationMessage(e.msg, !0) : "EVENTNOTIFICATION" == e.mode && (i = $WC.MsgUtil.getInfoMsgString(e.msg));
            var n = e.sender + "_" + e.time;
            WMSUI.desktopNotify(i, n, e, (function() {
                var t = e.threadchatid || e.chid;
                Chat.isExists(t) ? WMSUI.handleChatExist(t) : ($WC.Util.isThreadChid(t) ? WebMessanger.attachSession(t) : WebMessanger.createChatWindowFromCache(t), WmsMainUI.scheduleAutoFocus(t))
            }))
        }
    }
}, WMSUI.desktopNotify = function(e, t, s, i) {
    if ("3" !== WebMessanger.scode && "5" !== WebMessanger.scode) {
        e = Message.isMentionMsg(e) || Message.isAddMsg(e) ? function(e) {
            var t = function(t, s) {
                e = "silentmention" === t ? $WC.Config.get("getSilentUserMention")(e) : $WC.Matcher.replace(t, e, (function(e, t, i) {
                    var n = Message.getDnameFromMetaDataFormat(i);
                    return s + "" + n
                }))
            };
            return t("atmention_for_transcript", "@"), t("addmember_for_transcript", "+"), t("silentmention"), e
        }(e) : e, e = $WC.Matcher.replace("removehtmltag", e, (function e(t, s, i) {
            return void 0 === i ? "" : $WC.Matcher.replace("removehtmltag", i, e)
        })), notifiymsg = Message.isCustomEmoji(e) ? Smiley.replaceCustomEmojiWithName(e) : e;
        var n = s.sender || s.zuid,
            a = "";
        a = $WC.Bots.isBotId(n) ? $WC.Bots.getPhoto(n) : s.meta && s.meta.usermessagedetails && s.meta.usermessagedetails.custom_sender_name ? s.meta.usermessagedetails.custom_sender_imageurl ? s.meta.usermessagedetails.custom_sender_imageurl : s.meta.usermessagedetails.custom_sender_imageid ? _WMSCHATURL + "v1/images/" + s.meta.usermessagedetails.custom_sender_imageid : $WC.Config.get("staticserverpath") + "/images/bar/ac31da36_customimg-default.png" : _WMSPHOTOSERVER + "/file?ID=" + n + "&t=user&exp=6000&fs=thumb", $WC.DesktopNotification.show({
            title: $WC.Util.unescapeHTML(WMSUI.getNotificationTitle(s)),
            body: $WC.Util.unescapeHTML(e),
            icon: a,
            checkownership: !s.a && wmsnotifyowner,
            duration: "5000",
            id: t,
            onclick: i || null
        })
    }
}, WMSUI.getNotificationTitle = function(e) {
    var t = "";
    if (t = e.meta && e.meta.usermessagedetails && e.meta.usermessagedetails.custom_sender_name ? e.meta.usermessagedetails.custom_sender_name : $WC.Util.getContactName(e.zuid, e.dname), e.chid) {
        var s = WindowHandler.getWinObjById(e.chid),
            i = s ? s.partcount : e.pcount,
            n = s ? s.getTitle() : e.title;
        if (i > 2 || n && n !== t) return t + (n.startsWith("@") ? " " : " @") + n
    }
    return t
}, WMSUI.RestartTimers = function() {
    WMSUI.runIdleTimer()
}, WMSUI.processAnnMsg = function(e, t) {
    if (!1 !== WebMessanger.silentOverriddenForAnnouncement || !silent) {
        var s = document.getElementById("wmsannmsg"),
            i = document.getElementById("annmsgstrip");
        t = t || "info", s.style.display = "none", i.style.display = "none", s.className = "zread_olymn", i.className = "zread_strip", "" === e || WMSUI.isAnnBlocked() || "undefined" != typeof WmsUIImpl && WmsUIImpl.handleAnnouncement && WmsUIImpl.handleAnnouncement(e, t) || ($WC.Util.addClass(i, "wmsann" + t + "_strip"), $WC.Util.addClass(s, "wmsann" + t + "_bg"), i.style.display = "block", document.getElementById("annmsg").innerHTML = e, WMSUI.annShowAnimate("wmsannmsg"))
    }
}, WMSUI.isAnnBlocked = function() {
    var e = WmsSettings.disann,
        t = wmsUserConfig.infomsgid;
    return !!$WC.Cookie.get(t) || !(!e || !e[WebMessanger.prd] && !e.All || !t) && (e[WebMessanger.prd] === t || e.All === t)
}, WMSUI.showAnnMsg = function() {
    document.getElementById("showinfo").setAttribute("class", "zread_olymn1"), WMSUI.annHideAnimate("showinfo")
}, WMSUI.annHideAnimate = function(e) {
    e = document.getElementById(e);
    var t = setInterval((function() {
        var s = e.offsetTop;
        e.style.top = s - 1 + "px", -s >= e.offsetHeight && (clearInterval(t), e.style.display = "none", e.style.top = "0px")
    }), 8)
}, WMSUI.annShowAnimate = function(e) {
    (e = document.getElementById(e)).style.display = "block";
    var t = -e.offsetHeight;
    e.style.top = t + "px";
    var s = setInterval((function() {
        e.style.top = (t += 1) + "px", t >= 3 && clearInterval(s)
    }), 8)
}, WMSUI.hideAnnMsg = function(e) {
    "function" == typeof e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0, WMSUI.annHideAnimate("wmsannmsg")
}, WMSUI.showTicketAnnouncement = function(e) {
    var t = document.getElementById("wmsiamann");
    t || (t = $WC.Util.createElement("div", "wmsiamann", "wmsiamann"), WmsMainUI.maincontainer.appendChild(t)), t.innerHTML = e
}, WMSUI.closeTicketAnnouncement = function() {
    var e = document.getElementById("wmsiamann");
    e && e.parentNode.removeChild(e)
}, WMSUI.selectGS = function() {}, WMSUI.unselectGS = function() {}, WMSUI.populateDeactivatedChatUI = function() {
    WmsMainUI.maincontainer && WmsMainUI.maincontainer.parentNode.removeChild(WmsMainUI.maincontainer), WmsChatCache.removeAll(), Message.deletedMessages.removeAll(), WmsMainUI.populate(), WmsMainUI.hideMenu(), WmsMainUI.menucontainer.style.display = "none", WmsMainUI.toggleSmartChatButton(!0), wmsnotifyowner || (wmsnotifyowner = new $WC.NotificationOwner("chat", !0), avcliqnotifyowner = new $WC.NotificationOwner("avcliq", !0));
    var e = document.getElementById("chatturnoffinfo");
    if (e.style.display = "block", !0 === WebMessanger.chatdisabled) {
        var t = !1 === WmsSettings.adminsettings.licenseduser ? "unlicensed" : !1 === WmsSettings.adminsettings.activeappaccountuser ? "nonappaccount" : "";
        if (t) e.innerHTML = $WC.I18N("chat.disabled." + t) + "</div>";
        else {
            e.style.display = "none";
            var s = document.getElementById("wmsbarmovablehint");
            s && (s.style.display = "none")
        }
    } else !0 === WebMessanger.allprdchatdeactivated && (e.innerHTML = $WC.I18N("chat.disabled.all") + ' <a style="cursor:pointer;" data-unpausechat="true"> ' + $WC.I18N("chat.enable.click") + "</a></div>");
    e.querySelector("[data-unpausechat]") && (e.querySelector("[data-unpausechat]").onclick = WebMessanger.turnOnChat), !WebMessanger.isServiceStatusSet && $WC.Util.isBetaOrg() && -1 !== WmsSettings.deact.indexOf("ALL") && (WMSUI.deactivatedUIHidden = !0, WebMessanger.hideChatBar())
}, WMSUI.populateEmptyBar = function() {
    document.getElementById("wmstoolbar") && _WMSCHATHIDDEN || (WmsMainUI.maincontainer && WmsMainUI.maincontainer.parentNode.removeChild(WmsMainUI.maincontainer), WMSUI.smartchatenabled = !1, WmsChatCache.removeAll(), WMSUI.populateMainBar())
}, WMSUI.showLoadingIcon = function(e, t, s) {
    var i = '<div class="wms_loading_container"><div></div><div></div><div></div></div>';
    s && (i = $WC.I18N("chat.loading") + " " + i);
    var n = e.getAttribute("data-same-height") && e.clientHeight ? e.clientHeight + "px" : "auto",
        a = $WC.Util.createElement("div", null, "wms-loadingicon", {
            "data-loading": "true",
            style: "height:" + n
        }, i);
    return "append" === t ? e.appendChild(a) : "prepend" === t ? e.insertBefore(a, e.firstChild) : "insert" === t ? (e.parentNode.replaceChild(a, e), a) : e.appendChild(a)
}, WMSUI.fetchParticipantsOptions = function(e, t) {
    var s = WindowHandler.getWinObjById(e);
    if (s && (s.isZohoGroupChat() || "11" === s.ctype && "true" === s.thread_follower || "10" === s.ctype && s.allowAddMemberForEntityChat())) return [{
        operation: "remove",
        name: $WC.I18N("chat.participants.remove")
    }];
    if (s && "8" === s.ctype) {
        var i = [];
        return t !== $WC.WmsConstants.USERROLES.ADMIN && $WC.Channels.isUserHasPermissionToChangeRole(e, $WC.WmsConstants.USERROLES.ADMIN, t) && i.push({
            operation: "assignadmin",
            name: $WC.I18N("channels.role.makeasadmin")
        }), t !== $WC.WmsConstants.USERROLES.MODERATOR && $WC.Channels.isUserHasPermissionToChangeRole(e, $WC.WmsConstants.USERROLES.MODERATOR, t) && i.push({
            operation: "assignmoderator",
            name: $WC.I18N("channels.role.makeasmoderator")
        }), t !== $WC.WmsConstants.USERROLES.PARTICIPANT && $WC.Channels.isUserHasPermissionToChangeRole(e, $WC.WmsConstants.USERROLES.PARTICIPANT, t) && i.push({
            operation: "assignmember",
            name: $WC.I18N("channels.role.makeasmember")
        }), $WC.Channels.isUserHasPermission(e, $WC.WmsConstants.USERPERMISSIONS.REMOVE_MEMBER) && i.push({
            operation: "remove",
            name: $WC.I18N("chat.participants.remove")
        }), 0 !== i.length ? i : null
    }
}, WMSUI.showParticipantsList = function(e, t, s) {
    var i = [],
        n = {
            allowfollowersaddition: !1,
            fetchthreadfollowers: !1
        },
        a = WindowHandler.getWinObjById(e),
        o = null == a || a.fetchparticipants,
        r = null == a || a.fetchfollowers;
    if ("11" == a.ctype && (n.fetchParentParticipants = function() {
            return Object.keys(a.partinfo).map((function(e) {
                return a.partinfo[e]
            }))
        }), o || r) {
        r && "11" == a.ctype && (n.fetchAndStoreFollowersList = function(e, t) {
            WindowHandler.getWinObjById(e);
            t.forEach((function(t) {
                WindowHandler.getWinObjById(e).followersinfo[t.uname] = t
            }))
        });
        var l = function(e, t) {
            var s = WindowHandler.getWinObjById(e);
            t.forEach((function(t) {
                WindowHandler.getWinObjById(e).partinfo[t.uname] = t
            })), s.fetchparticipants = !1
        }
    } else i = "11" == a.ctype ? Object.keys(a.followersinfo).map((function(e) {
        return a.followersinfo[e]
    })) : Object.keys(a.partinfo).map((function(e) {
        return a.partinfo[e]
    }));
    var d, c, u = !1;
    a && (a.isZohoGroupChat() || "8" === a.ctype && $WC.Channels.isUserHasPermission(a.objId, $WC.WmsConstants.USERPERMISSIONS.ADD_MEMBER) || a.allowAddMemberForEntityChat()) ? u = !0 : "11" === a.ctype && (n.fetchthreadfollowers = !0, n.parentid = a.thread_parentid, n.allowfollowersaddition = !0, n.showInfoMsg = WMSUI.showInfoMsg, n.parentchattitle = a.thread_parent_title || $WC.Channels.getChannelName(a.thread_parentid), t = t + " - " + n.parentchattitle), a && a.allowAddMemberForEntityChat() && (d = a.entityid, c = a.is_chatlet_cb_modify_enabled), a.participantsdialog = new $WC.ViewParticipants, a.participantsdialog.mountComponent(e, t, i, (function(t, s, i) {
        if (i)
            if ("8" === a.ctype) {
                var n = a.addinfo && a.addinfo.CHANNELUID,
                    o = "v1/channels/" + n + "/changeroles",
                    r = "";
                if ("assignadmin" == s.getAttribute("data-operation") ? r = $WC.WmsConstants.USERROLES.ADMIN : "assignmoderator" == s.getAttribute("data-operation") ? r = $WC.WmsConstants.USERROLES.MODERATOR : "assignmember" == s.getAttribute("data-operation") ? r = $WC.WmsConstants.USERROLES.PARTICIPANT : "remove" == s.getAttribute("data-operation") && WMSUI.deleteParticipant(e, t.id, t.title, i), n && t.id && r) {
                    var l = "role=" + r + "&admins=" + t.id;
                    $WC.Ajax.postRequestToChat(o, l, (function() {
                        WMSUI.showInfoMsg($WC.I18N("channels.role.updated")), i()
                    }))
                }
            } else "11" === a.ctype && "true" === a.thread_follower ? WMSUI.deleteParticipant(e, t.id, t.title, i, !0) : "10" == a.ctype && a.entityid && a.allowAddMemberForEntityChat() ? WMSUI.deleteParticipant(e, t.id, t.title, i, !1, a.entityid) : WMSUI.deleteParticipant(e, t.id, t.title, i);
        else(s.getAttribute("data-zcprofileid") || s.querySelector("[data-zcprofileid]")) && (s = null === s.getAttribute("data-zcprofileid") ? s.querySelector("[data-zcprofileid]") : s, WebMessanger.showProfileInfo(s))
    }), WMSUI.fetchParticipantsOptions, u, l, n, s, d, c)
}, WMSUI.getServiceChatContainer = function(e, t) {
    var s = WindowHandler.getWinObjById(e);
    if (s && 1 == s.ctype && (2 == s.partcount || "false" == s.customgroup) && 0 != WMSUI.dmchat_obj.length) {
        var i = WMSUI.dmchat_obj[WMSUI.dmchat_obj.length - 1];
        if (i.zuid == s.recipant) return WMSUI.dmchat_obj.splice(WMSUI.dmchat_obj.length - 1, 1), s.remove_header = !!i.remove_header && i.remove_header, s.isdmchat = !0, i.container
    }
    if (s && "undefined" != typeof WmsUIImpl && !t) return WmsImplHandler.invokeSynchronously(WmsUIImpl.getChatWindowContainer, s.objId, s.ctype, s.getChannelUID(), s.getChannelServiceCode(), s.getChannelSOID(), s.entityid);
    if (t && "undefined" != typeof WmsUIImpl) {
        var n = $WC.Channels.get(e) && $WC.Channels.get(e).oc_id,
            a = $WC.Channels.get(e) && $WC.Channels.get(e).service,
            o = $WC.Channels.get(e) && $WC.Channels.get(e).servicespecid;
        return WmsImplHandler.invokeSynchronously(WmsUIImpl.getChatWindowContainer, t.chid, t.ctype, n, a, o, t.entityid)
    }
}, WMSUI.showDeleteConfirmationDialog = function(e, t) {
    var s = {
        imghtml: '<div class="wms-dialog-imginner"><div class="wms-dialog-deleteimg"></div></div>',
        bodyhtml: '<div class="wms-dialog-txtcont">' + $WC.I18N("dialog.delete.msg") + "<p>" + $WC.I18N("dialog.delete.info") + "</p></div>",
        focusbutton: 1,
        operations: [{
            name: $WC.I18N("dialog.delete.confirm"),
            classname: "wms-dialog-rejectbtn",
            action: function() {
                WebMessanger.deleteMessage(e, t)
            }
        }]
    };
    WmsDialog.showModal(s)
}, WMSUI.handleDownloadLinkClickOnDesktop = function(e) {
    if ($WC.Util.isElectron()) {
        var t = e.target;
        if ("attdownload" == t.getAttribute("data-documentclick")) {
            var s = t.href || t.closest("[href]") && t.closest("[href]").href;
            if (s) $WC.Util.triggerDownloadInDesktopApp(s) && (e.stopPropagation(), e.preventDefault())
        }
    }
}, WMSUI.showMediaSessionErrorDialog = function(e, t) {
    var s = document.getElementById("zcwindows");
    s || ((s = $WC.Util.createElement("div", "zcwindows", "zcoverlay")).style.zIndex = WebMessanger.setzindex, document.body.appendChild(s)), $WC.$Dlg.confirm({
        id: "handlemediasessionsdialog",
        version: 2,
        class: "zcdalogbx zcbg_mask alert_dialog",
        headerhtml: $WC.$Dlg.frameHeaderHTML({
            imagehtml: '<div class="mheader_icn msi-alrt clr-green"></div>'
        }),
        bodyhtml: $WC.$Dlg.frameBodyInfoHTML({
            info: [e.content]
        }),
        buttons: [{
            text: e.buttontext,
            colour: $WC.$Dlg.GREEN_BUTTON,
            action: t
        }]
    })
}, WMSUI.checkAndSortReactions = function(e) {
    var t = Object.keys(e)[0],
        s = Object.keys(e);
    return s = $WC.Util.isArray(e[t]) ? s.sort((function(t, s) {
        return e[s].length - e[t].length
    })) : s.sort((function(t, s) {
        return e[s].count - e[t].count
    }))
}, WMSUI.showStarOptions = function(e, t) {
    var s = $WC.Util.createElement("div", "wms-staroptions", "wms_staroptions"),
        i = e.parentElement.previousElementSibling.getAttribute("data-msgid");
    if (e.className += " wms_stariconshow", WMSUI.getStarOptionInstance(t)) {
        var n = WMSUI.getStarOptionInstance(t).getCurrentMsgId();
        if (this.hideStarOptions(t), n == i) return
    }
    var a = function(e, t) {
            e.className += " wms_zoom_anim", WMSUI.hideStarOptions(t)
        }.bind(t),
        o = function(e, t) {
            var s = JSON.parse(t).data;
            $WC.Util.removeClass(e, "wms_zoom_anim"), $WC.Util.removeClass(e, "wms_stariconshow");
            var i = e.getAttribute("data-startype"),
                n = e.parentElement.previousElementSibling;
            i > 0 && $WC.Util.removeClass(e, "wms_starbg" + i), s.starredmessage ? ($WC.Util.addClass(e, "wms_starbg" + s.starredmessage.startype), $WC.Util.addClass(e, "wms_starsel"), $WC.Util.removeClass(e, "wms_staricon"), e.setAttribute("data-startype", s.starredmessage.startype), e.setAttribute("data-starselected", "true"), n.setAttribute("data-starselected", !0), n.setAttribute("data-startype", s.starredmessage.startype), WmsMainUI.updateStarMsgList(s.starredmessage, "STAR")) : ($WC.Util.removeClass(e, "wms_starsel"), $WC.Util.addClass(e, "wms_staricon"), e.setAttribute("data-starselected", "false"), e.setAttribute("data-startype", "0"), n.setAttribute("data-starselected", !1), n.setAttribute("data-startype", 0), WmsMainUI.updateStarMsgList(s, "UNSTAR"))
        }.bind(this, e),
        r = function(e, t) {
            e.className += e.className.replace("wms_zoom_anim", "")
        }.bind(this, e),
        l = function(e, t) {
            t && (t.stopPropagation(), t.preventDefault()), this.hideStarOptions(e)
        }.bind(this, t);
    e.parentElement.appendChild(s);
    var d = new $WC.StarOptions;
    WMSUI.checkAndStoreStarOptionIntance(d, t), d.mountComponent({
        mountpoint: s,
        msgid: i,
        chid: t,
        clickednode: e,
        onChangeCallBack: a,
        unmountComponent: l,
        successCallBack: o,
        failureCallBack: r,
        starselected: e.getAttribute("data-starselected"),
        startype: parseInt(e.getAttribute("data-startype"))
    })
}, WMSUI.getStarOptionInstance = function(e) {
    return WMSUI.staroption_instancestore[e]
}, WMSUI.checkAndStoreStarOptionIntance = function(e, t) {
    WMSUI.staroption_instancestore[t] && delete WMSUI.staroption_instancestore[t], WMSUI.staroption_instancestore[t] = e
}, WMSUI.hideStarOptions = function(e) {
    var t = WMSUI.getStarOptionInstance(e);
    $WC.Util.removeClass(t.clickednode, "wms_stariconshow"), t.unmountComponent(), delete WMSUI.staroption_instancestore[e]
}, WMSUI.checkAndLoadCustomEmojis = function(e) {
    for (var t = e.querySelectorAll("[data-customemojicode]"), s = t.length - 1; s >= 0; s--)
        if ($WC.Util.isScrolledIntoView(t[s], e) && t[s].getAttribute("data-originalemojisrc")) {
            var i = t[s].getAttribute("data-originalemojisrc");
            !0 === WMSUI.loadedimg[i] ? (t[s].style.backgroundImage = "url(" + i + ")", t[s].removeAttribute("data-originalemojisrc")) : !1 === WMSUI.loadedimg[i] ? WMSUI.handleDeletedEmoji(t[s]) : WMSUI.loadCustomEmojis(t[s])
        }
}, WMSUI.loadCustomEmojis = function(e) {
    var t = e.getAttribute("data-originalemojisrc"),
        s = function(e, t) {
            var s = this.getAttribute("data-originalemojisrc");
            s && (WMSUI.loadedimg[s] = !0, this.style.backgroundImage = "url(" + s + ")", this.removeAttribute("data-originalemojisrc"))
        }.bind(e),
        i = function(e, t) {
            this.getAttribute("data-originalemojisrc") && WMSUI.handleDeletedEmoji(this)
        }.bind(e),
        n = new Image;
    n.onload = s, n.onerror = i, n.src = t
}, WMSUI.handleDeletedEmoji = function(e) {
    e.removeAttribute("data-originalemojisrc"), e.getAttribute("data-customemojicode").endsWith("!$:") ? e.className += " wms_deletedsticker" : (e.className += " wms_deleted", e.innerText = e.getAttribute("data-emojiname"))
}, WMSUI.storeChatUsersObj = function(e, t) {
    WMSUI.chatUsersObj[e] = t
}, WMSUI.removeChatUserObj = function(e) {
    delete WMSUI.chatUsersObj[e]
}, WMSUI.storePendingThreadReply = function(e, t) {
    WMSUI.pending_thread_replies[e] = t
}, WMSUI.removePendingThreadReply = function(e) {
    delete WMSUI.pending_thread_replies[e]
}, WMSUI.getActivityStatusOverrideDisabledInfo = function() {
    if (WmsSettings.isCurrentActivityStatusOverrideDisabled()) {
        var e = {
            101: "call",
            102: "meeting",
            103: "calender",
            104: "showtime",
            105: "remote_session",
            106: "telephony",
            107: "salesiq",
            108: "webinar",
            109: "voice",
            110: "broadcast",
            111: "cliq_live_event"
        };
        return e[WebMessanger.stype] ? $WC.I18N("userstatus.activity.restrictedbyadmin." + e[WebMessanger.stype]) : $WC.I18N("userstatus.restrictedbyadmin")
    }
    return ""
}, WMSUI.checkAndShowStatusChangePopup = function(e, t) {
    if ($WC.Config.get("isStatusConfigEnabledInClient") && WmsSettings.isAllowedStatusConfigEnabled() && WebMessanger.stype < 100) {
        if (-1 == WmsSettings.getAllowedStatuses().indexOf({
                0: "offline",
                1: "available",
                2: "invisible",
                3: "busy",
                4: "idle",
                5: "dnd",
                7: "away"
            }[WebMessanger.scode]) && !document.getElementById("wms_statuschangepopup")) {
            WmsMainUI.menu.style.zIndex = "5";
            var s = $WC.Util.createElement("div", "wms_statuschangepopup", "wms_statuschangepopup");
            document.getElementById("wms_menu_header").appendChild(s);
            var i = new $WC.StatusChangeDialogComponent;
            i.mountComponent({
                node: s,
                userStatusMessage: WebMessanger.smsg,
                userStatusCode: WebMessanger.scode,
                userStatusType: WebMessanger.stype,
                openedOnStatusChange: e,
                showMinimized: t,
                onCloseCallback: function() {
                    i = null, WmsMainUI.menu.style.zIndex = ""
                }
            })
        }
    }
};
var ZMSG_translistloader, ZMSG_transmoreloader, ZMSG_CURRPAGE = 1,
    ZMSG_MSGPERPAGE = 10,
    ZMSG_HIS = !1,
    ZMSG_SEARCH = !1,
    ZMSG_SEARCHURL = "",
    ZMSG_MSGCNT = 0,
    ZMSG_DATAOBJ = {},
    ZMSG_CHATCOUNT = 15,
    ZMSG_SEARCHVALUE = "",
    ZMSG_CHATPGNO = 1,
    ZMSG_CHATS = [],
    ZMSG_CHATTOTALOBJ = 0,
    ZMSG_chhis = null,
    ZMSG_USERID = "",
    ZMSG_NO_MORE_CHATS = !1,
    ZMSG_MSGOBJ = [];

function ZMSGUI() {}

function ChatWindow() {
    this.atmentions = "", this.selectedoptions = "", this.win = null, this.partinfo = {}, this.followersinfo = {}, this.allowedmembers = {
        members: [],
        token_mapping: {},
        result_mapping: []
    }, this.allowedmentions = {
        members: [],
        token_mapping: {
            participants: {},
            team: {},
            org: {}
        },
        result_mapping: {
            participants: [],
            team: [],
            org: []
        }
    }, this.partcount = 0, this.top = 20, this.width = WindowHandler.cwsize, this.height = 200, this.scrollTop = 0, this.msgdisp, this.ftools, this.composer, this.headernode, this.scode, this.smsg, this.stype, this.recipant, this.objId, this.maximized, this.winIndex = -1, this.prevIndex = -1, this.imgurl = $WC.Config.get("staticserverpath") + "/images/bar/8ff234a1_contactphoto.gif", this.addinfo = {}, this.prechattime = null, this.offlinemessage = !1, this.ctype = -1, this.attached = !1, this.channelphotoid, this.channeldesc = "", this.channeltype, this.channelid, this.channelsoid, this.channelservicecode, this.mutedinterval = null, this.ispinned = !1, this.msgdelaytimer = null, this.msghidetimer = null, this.scrolltimer = null, this.addinfotemplate, this.deleteinfotemplate, this.titleinfotemplate, this.clickedfailurenode, this.lastEnterKeyTime = -1, this.reactions = {}, this.pinmsgdetails = {
        action_enabled: !0,
        msg_pinned: !1,
        info: {}
    }, this.unfurlmsg = !0, this.lastmsg_uid = "", this.recipientinfo = {}
}

function Factory() {}

function WindowHandler() {}

function Message() {}

function Chat() {}
ZMSGUI.showFeedSearchCategory = function(e) {
        var t = e.querySelector('[id="zmsgsearch"]');
        "none" === t.style.display || "" === t.style.display ? (e.style.borderBottomRightRadius = "0px", e.style.borderBottomLeftRadius = "0px", t.style.display = "block") : (e.style.borderRadius = "5px", t.style.display = "none")
    }, ZMSGUI.selectFeedSearchCategory = function(e) {
        var t = $WC.Util.getEventTarget(e),
            s = t.parentNode.previousSibling;
        if ("wms-selfeedcat" === s.id) {
            var i = $WC.Util.getInnerText(t);
            $WC.$CUtil.setInnerText(s, i)
        }
    }, ZMSGUI.generateHistoryUI = function() {
        return '<div id="wms-feedsheader" class="wms-feedsheader"><span class="wms-feedhiscontent wms-valign-mid-block">' + $WC.I18N("Feed_History") + '</span><span class="wms-feedsclose"></span></div><div class="wms-feedsearch"><form data-feedhisform="true"><div class="wms-feedsearchcat"><span id="wms-selfeedcat">' + $WC.I18N("All") + '</span><ul class="wms-feedhisselct" id="zmsgsearch"><li value="all">' + $WC.I18N("All") + '</li><li value="searchstr">' + $WC.I18N("Message") + '</li><li value="sender">' + $WC.I18N("Sender") + '</li></ul></div><input id="zmsgsearchtxt" type="text" placeholder="' + $WC.I18N("Search") + '"  class="wmsoptiontext wms-feedsearchtxt"><input type="button" value="' + $WC.I18N("Go") + '" class="wmsbtn wms-feedsearchbtn" data-gobtn="true"></form></div><div  id="zfdshis_cont" class="wms-feedhiscont"></div><div class="wms-feedhisnav" id="zmsghisnav"></div></div>'
    }, ZMSGUI.fillNavigation = function(e) {
        var t = "",
            s = (ZMSG_CURRPAGE = parseInt(ZMSG_CURRPAGE)) - 1,
            i = ZMSG_CURRPAGE + 1,
            n = e % ZMSG_MSGPERPAGE != 0 ? (e - e % ZMSG_MSGPERPAGE) / ZMSG_MSGPERPAGE + 1 : (e - e % ZMSG_MSGPERPAGE) / ZMSG_MSGPERPAGE,
            a = ZMSG_CURRPAGE * ZMSG_MSGPERPAGE > e ? e : ZMSG_CURRPAGE * ZMSG_MSGPERPAGE;
        t = ZMSG_CURRPAGE <= 1 ? '<input class="wmsleftashtext" type="button" value="' + $WC.I18N("First") + '">' : '<input class="wmsleftashtext" type="button" data-pgno="1" value="' + $WC.I18N("First") + '"><input type="button" data-pgno=' + s + ' value="' + $WC.I18N("Previous") + '" class="wmsleftashtext">', t += ZMSG_CURRPAGE * ZMSG_MSGPERPAGE >= e ? '<input type="button" value="' + $WC.I18N("Last") + '" class="wmsrightashtext" style="margin-right: 10px;">' : '<input type="button" value="' + $WC.I18N("Last") + '" class="wmsrightashtext" data-pgno="' + n + '" style="margin-right: 10px;"><input type="button" value="' + $WC.I18N("Next") + '" class="wmsrightashtext" data-pgno=' + i + " >", t += '<span class="wms-hvalign">' + $WC.I18N("feeds.count.show", [(ZMSG_CURRPAGE - 1) * ZMSG_MSGPERPAGE + 1, a, e]) + "</span>", document.getElementById("zmsghisnav").innerHTML = t
    }, ZMSGUI.getHisNav = function() {
        if (ZMSG_SEARCH) var e = ZMSG_SEARCHURL;
        $WC.Ajax.requestToChat("zmsgcount.do", e)
    }, ZMSGUI.HisMsgUIobj = function(e, t) {
        if (null != e) {
            try {
                e.ATTACHMENTS = JSON.parse(e.ATTACHMENTS)
            } catch (t) {
                e.ATTACHMENTS = null
            }
            ZMSG_DATAOBJ[t] = e;
            var s = '<div class="wms-feedhiswrapper"><div class="wms-feedhisrow"><div class="wms-feedmsgwrapper"><span class="wms-feedmsgtime">' + (e = ZMSGUI.formatMSG(e)).TIME + "</span>";
            return t < $WC.RecentChats.getUnreadFeedsCount() ? s += '<span class="wms-feedmsg" style="font-weight:bold">' + e.MSG + "</span>" : s += '<span class="wms-feedmsg">' + e.MSG + "</span>", s += "</div>", "" != ZMSGUI.trim(e.URL) && "" != ZMSGUI.trim(e.URLSTRING) ? s += '<div class="wms-feedurl"><a data-msgno="' + t + '" href="' + e.URL + '" target="_blank" data-feedlink="true">' + $WC.Util.safeHTML(e.URLSTRING) + "</a></div>" : "" != ZMSGUI.trim(e.URL) ? s += '<div class="wms-feedurl"><a data-msgno="' + t + '" href="' + e.URL + '" target="_blank" data-feedlink="true">' + $WC.Util.safeHTML(e.URL) + "</a></div>" : "" != ZMSGUI.trim(e.URLSTRING) && (s += '<div class="wms-feedurl">' + $WC.Util.safeHTML(e.URLSTRING) + "</div>"), s += "</div></div>"
        }
    }, ZMSGUI.openfeed = function(e, t) {
        var s = ZMSG_DATAOBJ[e];
        try {
            "push" == t && 1 == ZMSG_MSGCNT && ZMSGUI.hidenew()
        } catch (e) {}
        try {
            return Collaboration.openURL(s.URL, s.URLSTRING, s.ATTACHMENTS, s.PRODID)
        } catch (e) {
            return !0
        }
    }, ZMSGUI.formatMSG = function(e) {
        var t, s = "";
        try {
            if (null != (s = e.SENDER) && "" != s) {
                try {
                    t = e.DNAME
                } catch (e) {}
                t = isNaN(s) ? null != t && "" != t ? t : s : $WC.Util.getContactName(s, t)
            }
        } catch (e) {}
        if (e.MSG = $WC.Util.safeHTML(e.MSG), "" != e.PARAMS) e.MSG = null != t && "" != t ? WmsResource.getRealData(e.MSG, e.PARAMS) + "<span id='wmsfeedsender' class='wmsfeedsender'><span> - </span><a href='javascript:;' data-feedsender=\"" + s + '">' + $WC.Util.safeHTML(t) + "</a></span>" : WmsResource.getRealData(e.MSG, e.PARAMS);
        else {
            var i = new RegExp(s + " ", "i");
            e.MSG = 0 == e.MSG.search(i) ? e.MSG.replace(i, "") : e.MSG, e.MSG = null != t && "" != t ? WmsResource.getRealData(e.MSG) + "<span id='wmsfeedsender' class='wmsfeedsender'><span> - </span><a href='javascript:;' data-feedsender=\"" + s + '" >' + $WC.Util.safeHTML(t) + "</a></span>" : WmsResource.getRealData(e.MSG)
        }
        return e.TIME = $WC.DateUtil.formatDTTime(e.TIME), e
    }, ZMSGUI.launchHistory = function() {
        try {
            if (ZohoFeedImpl.handleFeedHistoryUI()) return
        } catch (e) {}
        null != document.getElementById("zchhis") && ZMSGUI.hidechathis();
        try {
            ZMSGUI.hidenew()
        } catch (e) {}
        ZMSG_CURRPAGE = 1, ZMSG_HIS || (ozfdshis = $WC.Util.createElement("div", "zfdshis", "wms-feedshis wms-hvalign"), ozfdshis.style.display = "none", document.body.appendChild(ozfdshis)), ozfdshis.innerHTML = ZMSGUI.generateHistoryUI(), ZMSGUI.createOverlay(), ZMSG_HIS = !0, ZMSG_SEARCH = !1, ZMSG_SEARCHURL = "", document.getElementById("zmsgsearch").selectedIndex = 0, document.getElementById("zmsgsearchtxt").value = "", ZMSGUI.bindFeedEvents(), ZMSGUI.refreshHis()
    }, ZMSGUI.fillHistory = function(e) {
        var t = document.getElementById("zfdshis_cont");
        if (t)
            if (t.innerHTML = "", ZMSG_SEARCH && (t.innerHTML = "", document.getElementById("zmsghisnav").innerHTML = ""), null != e) {
                var s = e.ZohoMessages;
                if (void 0 === s) return t.innerHTML = '<div class="wmsfdsempty">' + $WC.I18N("No_feeds_found") + "</div>", ZMSG_SEARCH && (a = document.getElementById("zmsgsearchtxt").value, t.innerHTML = '<div class="wmsfdsempty">' + $WC.I18N("No_results_match_for_your_search") + ' "' + $WC.Util.safeHTML(a) + '"</div>'), void ZMSGUI.showhis();
                var i = s.length;
                if (i <= 0) return t.innerHTML = '<div class="wmsfdsempty">' + $WC.I18N("No_feeds_found") + "</div>", ZMSG_SEARCH && (a = document.getElementById("zmsgsearchtxt").value, t.innerHTML = '<div class="wmsfdsempty">' + $WC.I18N("No_results_match_for_your_search") + ' "' + $WC.Util.safeHTML(a) + '"</div>'), void ZMSGUI.showhis();
                ZMSGUI.getHisNav();
                for (var n = 0; n < i; n++) t.insertAdjacentHTML("beforeend", ZMSGUI.HisMsgUIobj(s[n], n));
                ZMSGUI.showhis()
            } else {
                if (t.innerHTML = '<div class="wmsfdsempty">' + $WC.I18N("No_feeds_found") + "</div>", ZMSG_SEARCH) {
                    var a = document.getElementById("zmsgsearchtxt").value;
                    t.innerHTML = '<div class="wmsfdsempty">' + $WC.I18N("No_results_match_for_your_search") + ' "' + $WC.Util.safeHTML(a) + '"</div>'
                }
                ZMSGUI.showhis()
            }
    }, ZMSGUI.refreshHis = function() {
        var e = "pageno=" + ZMSG_CURRPAGE + "&limit=" + ZMSG_MSGPERPAGE;
        ZMSG_SEARCH && (e += "&" + ZMSG_SEARCHURL);
        $WC.Ajax.requestToChat("zmsg.do", e, (function(e) {
            if (WebMessanger.callClearNotification(), $WC.RecentChats.getUnreadFeedsCount() && "NODATA" === e) {
                var t = {
                    ZohoMessages: ZMSG_MSGOBJ
                };
                ZMSGUI.fillHistory(t), ZMSG_MSGOBJ = []
            } else ZMSGUI.fillHistory(e.tableToRowList)
        }))
    }, ZMSGUI.clearSearch = function() {
        ZMSG_SEARCH = !1, ZMSG_SEARCHURL = "", ZMSG_CURRPAGE = 1, document.getElementById("zmsgsearch").selectedIndex = 0, document.getElementById("zmsgsearchtxt").value = "", ZMSGUI.refreshHis()
    }, ZMSGUI.searchHis = function() {
        var e = "pageno=" + (ZMSG_CURRPAGE = 1) + "&limit=" + ZMSG_MSGPERPAGE,
            t = document.getElementById("wms-selfeedcat").innerHTML,
            s = document.getElementById("zmsgsearchtxt").value;
        if ("" == ZMSGUI.trim(s)) return ZMSG_SEARCH = !1, ZMSG_SEARCHURL = "", $WC.Ajax.requestToChat("zmsg.do", e), !1;
        var i = encodeURIComponent(s),
            n = "";
        switch (t) {
            case "Message":
                n = n + "searchstr=" + i;
                break;
            case "category":
                n = n + "category=" + i;
                break;
            case "Sender":
                n = n + "sender=" + i;
                break;
            case "All":
                n = (n = (n = n + "searchstr=" + i) + "&category=" + i) + "&sender=" + i
        }
        return ZMSG_SEARCH = !0, ZMSG_SEARCHURL = n, $WC.Ajax.requestToChat("zmsg.do", ZMSG_SEARCHURL), !1
    }, ZMSGUI.gotoPage = function(e) {
        ZMSG_CURRPAGE = e, ZMSGUI.refreshHis()
    }, ZMSGUI.hidenew = function() {
        ZMSGUI.removeOverlay(), ozfdsnewcont.innerHTML = "", document.getElementById("zfdscnt").innerHTML = 0, ZMSG_MSGCNT = 0, ozfdsnew.style.display = "none"
    }, ZMSGUI.showhis = function() {
        WmsImplHandler.invoke(WmsUIImpl.handleFeedHistory);
        var e = document.getElementById("zfdshis");
        try {
            e.style.zIndex = $WC.Config.get("zindex")
        } catch (e) {}
        e.style.display = "block"
    }, ZMSGUI.hidehis = function() {
        ZMSGUI.removeOverlay(), document.getElementById("zfdshis").style.display = "none"
    }, ZMSGUI.trim = function(e) {
        for (;
            " " == e.substring(0, 1) || "\n" == e.substring(0, 1);) e = e.substring(1, e.length);
        for (;
            " " == e.substring(e.length - 1, e.length) || "\n" == e.substring(e.length - 1, e.length);) e = e.substring(0, e.length - 1);
        return e
    }, ZMSGUI.markAllRead = function() {
        try {
            for (var e = ozfdsunreadcont.getElementsByTagName("LI"), t = 0; t < e.length; t++) e[t].getElementsByTagName("A")[0].className = "sel"
        } catch (e) {}
    }, ZMSGUI.showChatHistory = function(e) {
        if (null == document.getElementById("zchhis")) {
            null != document.getElementById("zfdshis") && ZMSGUI.hidehis(), e && (ZMSG_USERID = e), ZMSGUI.createOverlay();
            var t = WebMessanger.isDarkModeEnabled ? "wms-hvalign zmNightMode" : "wms-hvalign";
            WebMessanger.isDNDBackupIconEnabled() && (t += " wms_dnd_backup_icon"), ZMSG_chhis = $WC.Util.createElement("div", "zchhis", t), WebMessanger.rtlmode && (ZMSG_chhis.className += " wms-rtl"), ZMSG_chhis.style.width = "780px", ZMSG_chhis.style.zIndex = $WC.Config.get("zindex"), ZMSG_CHATPGNO = 1, ZMSG_NO_MORE_CHATS = !1, document.body.appendChild(ZMSG_chhis), $WC.Util.removeElement(WmsMainUI.contactdetailsdiv), WmsMainUI.contactdetailsdiv = $WC.Util.createElement("div", "wms_contactdetails", "wms_contactdetails"), document.body.appendChild(WmsMainUI.contactdetailsdiv), WmsMainUI.contactdetailsdiv.style.zIndex = isNaN(WebMessanger.setzindex) ? "1" : +WebMessanger.setzindex + 3, Gator(WmsMainUI.contactdetailsdiv).on("click", "[data-operation]", (function() {
                WmsMainUI.handleProfileActions(this)
            })), Gator(WmsMainUI.contactdetailsdiv).on("mouseout", (function(e) {
                WmsMainUI.handleProfileMouseOut(this, e)
            }));
            var s = '<div class="wmsouterdiv wmscomstl"><table cellpadding="0" cellspacing="0" width="100%" class="wmsoutertbl"><thead><th>';
            ZMSG_USERID ? s += '<div id="wms-recentchattitle" class="wms-recentchattitle"><span class="wmscloseicon" data-historyclose="true" title="' + $WC.I18N("common.close") + '"></span><span class="wmsheading wmscomstl">{{RECENTCHATTITLE}}' : WebMessanger.isCliqUser() ? s += '<div id="wms-histitle" class="wms-histitle"><span class="wmscloseicon" data-historyclose="true" title="' + $WC.I18N("common.close") + '" ></span><span class="wmsheading wmscomstl">' + $WC.I18N("chat.message.search") : s += '<div id="wms-histitle" class="wms-histitle"><span class="wmscloseicon" data-historyclose="true" title="' + $WC.I18N("common.close") + '" ></span><span class="wmsheading wmscomstl">' + $WC.I18N("Chat_History"), s += '</span></div><div id="wms-hismultisel" class="wms-hisdel"><input type="checkbox"  id="wmschhisselectcheckbox" style="margin: 7px 0 0px 6px;"><button  class="wms-chdel">' + $WC.I18N("common.delete") + '</button><button class="wms-chcan">' + $WC.I18N("common.cancel") + '</button></div></th></thead><tbody><tr><td ><div style="width:100%;height:39px; position:relative; display:inline-block;"><div class="wms-histrymn"><input id="zchathistorytxt" type="text" class="wms-bdrrhtn" placeholder="' + $WC.I18N("Search") + '" autocomplete="off"/></div><div class="wms-toprhtprt"  id="wmschatcontinue" ><div><a class="wmscontinuechatlink" href="javascript:;">' + $WC.I18N("Continue_Chat") + '</a></div></td></tr><tr><td><div class="wmsoffflowingdiv wmscomstl"  style="height:540px; overflow: hidden; padding-top:0" id="zchhis_cont"><div id="chathistorywin" class="wmsoffflowingdiv wmscomstl wmschatwin" style="height:537px" ><div id="translist" style="clear:both"></div></div><div id="wmschtranscontainer" style="width: 439px;overflow: auto;height: 100%;"><div style="margin-top:55%;text-align:center;color: #BCBCBC;font-size: 14px;">' + $WC.I18N("chat.trans.select") + "</div></div></div></div></td></tr></tbody></table></div>", s = $WC.template.replace(s, {
                RECENTCHATTITLE: $WC.Util.unescapeHTML($WC.I18N("recent.chats.user", [WmsContacts.getDisplayName(ZMSG_USERID)]))
            }), ZMSG_chhis.innerHTML = s, WebMessanger.getChatTranscript(), ZMSGUI.bindHistoryEvents(), document.getElementById("zchathistorytxt").focus(), $WC.Util.addEvent(document.getElementById("chathistorywin"), "scroll", $WC.Util.debounce((function() {
                if (!0 !== ZMSG_NO_MORE_CHATS) {
                    var e = document.getElementById("chathistorywin");
                    e.scrollTop + e.clientHeight > Math.floor(.75 * e.scrollHeight) && ZMSGUI.getNextPage()
                }
            }), null, 250)), ZMSG_transContent = document.getElementById("translist"), ZMSG_translistloader = ZMSGUI.showLoadingPage(ZMSG_transContent, !0), $WC.Util.addEvent(document.getElementById("wmschatcontinue"), "click", (function() {
                var e = ZMSG_transContent.getElementsByClassName("wms-readdiv-select");
                if (e && 1 === e.length) {
                    var t = e[0].getAttribute("cid"),
                        s = "" != ZMSG_SEARCHVALUE && WebMessanger.isCliqUser() ? e[0].getAttribute("lmtime") : null;
                    WMSUI.attachSession(t, s)
                }
            }))
        }
    }, ZMSGUI.showLoadingPage = function(e, t) {
        var s = $WC.I18N("chat.loading") + '<div class="wms_loading_container"><div></div><div></div><div></div></div>',
            i = $WC.Util.createElement("div", null, "wms-transloading wms-zmsginfo", null, s);
        if (t)
            for ($WC.Util.addClass(i, "wms-zmsg-lmiddle"); e.lastChild;) e.removeChild(e.lastChild);
        return e.appendChild(i)
    }, ZMSGUI.createOverlay = function() {
        if (null == document.getElementById("wms-overlay")) {
            var e = $WC.Util.createElement("div", "wms-overlay", "wms-overlay");
            e.onclick = WMSUI.handleDocumentEscape, e.style.zIndex = $WC.Config.get("zindex"), document.getElementById("wmstoolbar") ? document.body.insertBefore(e, document.getElementById("wmstoolbar").nextSibling) : document.body.appendChild(e)
        }
    }, ZMSGUI.removeOverlay = function() {
        var e = document.getElementById("wms-overlay");
        e && e.parentNode.removeChild(e)
    }, ZMSGUI.handleEvent = function(e) {
        e || (e = window.event);
        var t = window.event ? e.keyCode : e.which;
        40 == t || 38 == t ? ZMSGUI.checkChatHistory() && (mz && (e.preventDefault(), e.stopPropagation()), ie && (e.cancelBubble = !0, e.returnValue = !1), ZMSGUI.handleKeyEvent(t)) : 27 == t && ZMSG_chhis && (ZMSGUI.hidechathis(), WMSKeyHandler.cancelEvent(e))
    }, ZMSGUI.checkCheckBox = function(e) {
        e.className = "wmsselecthstryinput", e.checked ? ZMSGUI.selectChatDelete("all") : ZMSGUI.selectChatDelete("none")
    }, ZMSGUI.hidechathis = function() {
        ZMSG_chhis && (document.body.removeChild(ZMSG_chhis), ZMSGUI.removeOverlay(), ZMSG_chhis = null, ZMSG_SEARCHVALUE = "", ZMSG_USERID = "", ZMSG_CHATS = [])
    }, ZMSGUI.hidecustmmsg = function() {
        var e = document.getElementById("wms-custmmsgcontainer");
        e && (document.body.removeChild(e), ZMSGUI.removeOverlay())
    }, ZMSGUI.hidependinginv = function() {
        var e = document.getElementById("wms_pendinginv_container");
        e && (document.body.removeChild(e), ZMSGUI.removeOverlay())
    }, ZMSGUI.removeReminderDialog = function(e) {
        var t = document.getElementById("wms_reminderdiv"),
            s = document.getElementById("wms_remmemberslist");
        return s && "block" === s.style.display && !e ? s.style.display = "none" : t && (delete WebMessanger.userslist, t.datepicker.unmountComponent(), $WC.Util.removeElement(t), ZMSGUI.removeOverlay()), !0
    }, ZMSGUI.removeForkDialog = function() {
        var e = document.getElementById("wms_fork_container");
        e && (delete WebMessanger.forkedlist, $WC.Util.removeElement(e), ZMSGUI.removeOverlay())
    }, ZMSGUI.populate = function(e) {
        var t = e,
            s = 0;
        if (t)
            for (; s < t.length;) t[s] && t[s].lastmsginfo && (t[s].LASTMSGINFO = JSON.parse(t[s].lastmsginfo), t[s].LASTMSGINFO.msg = void 0 !== Message ? Message.formatLastMsgInfo(t[s].LASTMSGINFO.msg) : t[s].LASTMSGINFO.msg), t[s] && t[s].recipants && (t[s].PARTICIPANTS = JSON.parse(t[s].recipants)), s++;
        var i, n = ZMSG_CHATCOUNT,
            a = ZMSG_SEARCHVALUE,
            o = "";
        ZMSG_transContent.querySelector("[data-historyend]") || (o = "<div valign='middle' style='margin-top: 223px;margin-left: 30px;margin-right: 30px;' data-historyend='true' class='wms-zmsginfo wms-zmsg-lmiddle' >" + $WC.I18N("Chat_History_archives_all_your_chat_transcripts.You_can_search_history_for_past_chats") + "</div>"), "" == a || ZMSG_transContent.querySelector("[data-noresult]") || (o = '<div valign="middle" data-noresult="true" class="wms-zmsginfo wms-zmsg-lmiddle">' + $WC.I18N("No_results_match_for_your_search") + "</div>");
        var r = ZMSG_chhis.getElementsByTagName("INPUT");
        for (var l in r)
            if (null != r[l] && "wmschhisselectcheckbox" == r[l].id) {
                i = r[l];
                break
            }
        if (i && i.checked && (i.checked = !1), ZMSG_translistloader && (ZMSG_translistloader.parentNode.removeChild(ZMSG_translistloader), ZMSG_translistloader = null), t) {
            for (l = 0; l < t.length; l++)
                if (l != n && ("2" != t[l].pcount || $WC.SecurityManager.hasPermission("direct_message"))) {
                    var d = t[l];
                    ZMSG_CHATTOTALOBJ = l + 1;
                    var c = "",
                        u = "trans_" + d.chatid;
                    c = void 0 !== d.isunread && -1 !== d.isunread ? "wms-unreaddiv" : "wms-readdiv", d.CUSTOMGROUP = d.customgroup, d.TITLE = $WC.Util.unescapeHTML(d.title), d.ADDINFO = d.addinfo, d.PARTICIPANTSCOUNT = d.pcount, d.PARTICIPANTS = d.PARTICIPANTS || [];
                    var m = '<div id="' + u + '" lmtime="' + d.lmtime + '" tid="' + d.ctime + '" cid="' + d.chatid + '" class="' + c + '" purpose="chattrans"><input type="checkbox" id="input_' + d.chatid + '" data-checkbox="true" />IMAGES<div id="namedivCID" class="wms-namediv">' + $WC.Util.escapeHTML(d.title) + '</div><span class="wms-chhis-date">TRANSTIME</span><div class="wms-lastmsginfo">LASTMSGINFO</div></div>';
                    m = m.replace(/LASTMSGINFO/g, $WC.HybridSearch.createLastMsgInfoHtml(d)), m = "8" == d.chat_type || "8" == d.ctype ? m.replace(/IMAGES/g, $WC.Channels.getChannelImageHTML(d.chatid)) : m.replace(/IMAGES/g, $WC.HybridSearch.createImageCollageHtml(d));
                    try {
                        m = m.replace(/TRANSTIME/g, $WC.DateUtil.formatDateWithWords(d.lmtime))
                    } catch (e) {}
                    l > 0 ? o += m : o = m
                }
        } else ZMSG_transContent.hasChildNodes() && (ZMSG_NO_MORE_CHATS = !0, null === document.getElementById("wms-chtransnomore") && (o = '<div id="wms-chtransnomore" style="text-align: center;margin: 21px;">' + $WC.I18N("No more chats") + "</div>"));
        ZMSG_transmoreloader && ZMSG_transmoreloader.parentNode && ZMSG_transmoreloader.parentNode.removeChild(ZMSG_transmoreloader), 1 === ZMSG_CHATPGNO ? ZMSG_transContent.innerHTML = o : ZMSG_transContent.innerHTML += o, t && t.length >= 15 && (ZMSG_transmoreloader = ZMSGUI.showLoadingPage(ZMSG_transContent, !1)), $WC.Util.loadOriginalImage(ZMSG_transContent)
    }, ZMSGUI.selectMainChkbox = function() {
        var e, t = 0,
            s = ZMSG_transContent.getElementsByTagName("INPUT");
        for (var i in s) null != s[i] && "checkbox" == s[i].type && s[i].checked && t++;
        var n = ZMSG_chhis.getElementsByTagName("INPUT");
        for (i = 0; i < n.length; i++)
            if (null != n[i] && "wmschhisselectcheckbox" == n[i].id) {
                e = n[i];
                break
            }
        t >= 1 ? (e.checked = !0, e.className = t == ZMSG_CHATTOTALOBJ ? "wmschhischeckboxopacityhigh" : "wmschhischeckboxopacitylow", document.getElementById("wms-histitle") && (document.getElementById("wms-histitle").style.opacity = "0"), document.getElementById("wms-recentchattitle") && (document.getElementById("wms-recentchattitle").style.opacity = "0"), document.getElementById("wms-hismultisel").style.opacity = "1", document.getElementById("wms-hismultisel").style.visibility = "visible") : (e.checked = !1, ZMSGUI.hideDeleteMenu())
    }, ZMSGUI.resetTranscriptUI = function() {
        document.getElementById("wmschtranscontainer").innerHTML = '<div style="margin-top:55%;text-align:center;color: #BCBCBC;font-size: 14px;">' + $WC.I18N("chat.trans.select") + "</div>", document.getElementById("wmschatcontinue").style.display = "none"
    }, ZMSGUI.handleDelCancel = function() {
        ZMSGUI.hideDeleteMenu(), ZMSGUI.selectChatDelete("none")
    }, ZMSGUI.hideDeleteMenu = function() {
        document.getElementById("wms-histitle") && (document.getElementById("wms-histitle").style.opacity = "1"), document.getElementById("wms-recentchattitle") && (document.getElementById("wms-recentchattitle").style.opacity = "1"), document.getElementById("wms-hismultisel").style.opacity = "0", document.getElementById("wms-hismultisel").style.visibility = "hidden"
    }, ZMSGUI.showchhisDelete = function(e) {
        var t = e.getAttribute("cid");
        $WC.Util.isChannelChid(t) || $WC.Util.isThreadChid(t) || (e.getElementsByTagName("input")[0].style.visibility = "visible")
    }, ZMSGUI.hidechhisDelete = function(e) {
        var t = e.getElementsByTagName("input")[0];
        t.checked || (t.style.visibility = "hidden")
    }, ZMSGUI.handleEvents = function(e, t, s, i) {
        var n = $WC.Util.getEventTarget(e);
        "transdel" != n.id && "checkbox" != n.type && ZMSGUI.selectChat(t, s, i)
    }, ZMSGUI.selectChat = function(e, t, s) {
        try {
            document.getElementById("wmschatcontinue").style.display = "block";
            var i = t.parentNode.getElementsByClassName("wms-readdiv-select");
            if (i[0] && $WC.VideoPlayerFactory.removeAllComponents(i[0].getAttribute("cid")), i[0] && i[0] == t && "" != ZMSG_SEARCHVALUE) return void Message.glowBubble(t.getAttribute("lmtime"), document.getElementById("wmschtranscontainer"), e);
            if (0 !== i.length && (i[0].className = "wms-readdiv"), t.className = "wms-readdiv-select", "" != ZMSG_SEARCHVALUE && WebMessanger.isCliqUser()) var n = t.getAttribute("lmtime");
            ZMSGUI.viewChatTranscript(e, document.getElementById("wmschtranscontainer"), s, n)
        } catch (e) {}
    }, ZMSGUI.viewChatTranscript = function(e, t, s, i, n, a, o, r) {
        t.innerHTML = "";
        var l = WebMessanger.isDarkModeEnabled ? " zmNightMode" : "",
            d = WebMessanger.rtlmode ? " wms-rtl" : "";
        $WC.Config.set({
            isViewTranscriptUI: !0
        });
        var c = $WC.Util.createElement("div", "wmschshtransmsg", "wmsoffflowingdiv wmscomstl" + l + d, {
            "data-chid": e,
            "data-fromchat": !0,
            "data-unread": s
        });
        if (null != o && $WC.Util.isThreadChid(e)) {
            var u = $WC.Util.createElement("div", "zmsg_thread_parent", "zmsg_thread_parent", {
                "data-zmsg_thread_parent": !0
            });
            $WC.Util.addClass(c, "zmsg_thread_parent"), c.appendChild(u), ZMSGUI.constructThreadHeader(t, o, r), ZMSGUI.constructParentThreadMsg(u, o, r)
        }
        t.appendChild(c);
        var m = $WC.Util.createElement("div", null, null, {
            "data-latestchunk": "true"
        });
        i && (m = $WC.Util.createElement("div", null, null, {
            "data-mentionmsgid": e + "|" + i
        }), t.setAttribute("data-scrolldown", !0)), m.style = "display:none", n && (m.setAttribute("data-prevtime", n), c.setAttribute("data-preventloadmore", !0));
        var h, g = !1;
        c.appendChild(m), a && (n ? ((h = $WC.Util.createElement("div", null, null, {
            "data-msgtime": a,
            "data-msgid": a
        })).style = "display:none", c.appendChild(h), g = !0) : m.setAttribute("data-nexttime", a)), Message.loadSpecificTranscript(e, c, m, g), h && c.removeChild(h), Message.addEventListenersForTranscript(c, e), Gator(c).on("click", "[data-zcprofileid]", (function() {
            WebMessanger.showProfileInfo(this)
        }))
    }, ZMSGUI.deleteChat = function(e) {
        confirm($WC.I18N("Are_you_sure_you_wish_to_delete_this_chat")) && WebMessanger.deleteChat(e)
    }, ZMSGUI.handleDeleteChat = function() {
        WebMessanger.getChatTranscript()
    }, ZMSGUI.searchChatHistory = $WC.Util.debounce((function(e) {
        var t = document.getElementById("zchathistorytxt");
        if (t.value && ZMSG_SEARCHVALUE !== t.value || "" == t.value && 8 == e.keyCode) return ZMSG_SEARCHVALUE = t.value, ZMSG_CHATPGNO = 1, ZMSG_NO_MORE_CHATS = !1, ZMSG_APPEND_CONTENT = !1, ZMSG_translistloader = ZMSGUI.showLoadingPage(ZMSG_transContent, !0), ZMSGUI.resetTranscriptUI(), "" == t.value ? WebMessanger.getChatTranscript() : WebMessanger.isCliqUser() && !ZMSG_USERID ? ZMSGUI.searchMessage() : WebMessanger.getChatTranscript(), document.getElementById("zchathistorytxt").focus(), !1
    }), null, 300), ZMSGUI.getNextPage = function() {
        if ("End" != ZMSG_CHATPGNO) {
            ZMSG_CHATPGNO += 1;
            var e = ZMSG_transContent.lastChild && ZMSG_transContent.lastChild.previousSibling,
                t = e && parseInt(e.getAttribute("lmtime")) - 1;
            ZMSG_transmoreloader && !ZMSG_chhis.querySelector("[class^=wms-transloading]") && ZMSG_transContent.appendChild(ZMSG_transmoreloader), "" == ZMSG_SEARCHVALUE && t ? WebMessanger.getChatTranscript(t) : WebMessanger.isCliqUser() && !ZMSG_USERID ? ZMSGUI.searchMessage() : t && WebMessanger.getChatTranscript(t)
        }
    }, ZMSGUI.selectChatDelete = function(e) {
        var t = ZMSG_transContent,
            s = t.getElementsByTagName("input");
        for (i in s) s[i].checked = !1, s[i].style && (s[i].style.visibility = "hidden");
        if (0 != s.length) {
            if ("all" == e)
                for (var i in s) s[i].checked = "true", s[i].style && (s[i].style.visibility = "visible");
            else if ("read" == e) {
                var n, a = !1,
                    o = 0,
                    r = ZMSG_chhis.getElementsByTagName("INPUT");
                for (i in s) {
                    var l = s[i].parentNode;
                    null != l && null != l && ("wms-readdiv" != l.className && "wms-readdiv-select" != l.className || (s[i].checked = !0, a = !0, o += 1))
                }
                for (i in r)
                    if ("wmschhisselectcheckbox" == r[i].id) {
                        n = r[i];
                        break
                    }
                1 == a && (n.checked = !0, n.className = o == ZMSG_CHATTOTALOBJ ? "wmschhischeckboxopacityhigh" : "wmschhischeckboxopacitylow"), 0 == a && n.checked && (n.checked = !1)
            } else if ("unread" == e) {
                a = !1;
                var d = 0;
                for (i in r = ZMSG_chhis.getElementsByTagName("INPUT"), s) {
                    var c = s[i].parentNode;
                    null != c && null != c && ("wms-unreaddiv" == c.className && (s[i].checked = !0, a = !0, d += 1))
                }
                for (i in r)
                    if ("wmschhisselectcheckbox" == r[i].id) {
                        n = r[i];
                        break
                    }
                1 == a && (n.checked = !0, n.style.opacity = d == ZMSG_CHATTOTALOBJ ? 1 : .5), 0 == a && n.checked && (n.checked = !1)
            }
        } else {
            var u = "<div valign='middle' class='cntemptymsg' style='margin-top:50%' >" + Resource.getRealValue("No_Chat_History_available") + "</div>";
            t.innerHTML(u)
        }
    }, ZMSGUI.selectedChatIds = function() {
        var e = {};
        ZMSG_selectedids = new Array;
        for (var t = ZMSG_transContent.getElementsByTagName("input"), s = 0; s < t.length; s++)
            if (t[s].checked) {
                if (e[s] = t[s].id, null == e[s] || null == e[s]) continue;
                e[s] = e[s].replace(/input_/g, ""), ZMSG_selectedids.push(e[s])
            }
        if (1 == ZMSG_selectedids.length) {
            confirm($WC.I18N("Are_you_sure_want_to_delete_a_chat")) && WebMessanger.deleteSelectedChats(ZMSG_selectedids);
            var i = document.getElementById("trans_" + ZMSG_selectedids);
            i.parentNode.removeChild(i)
        } else {
            if (!(ZMSG_selectedids.length > 1)) return void alert($WC.I18N("please_select_a_chat"));
            for (var n in confirm($WC.I18N("Are_you_sure_want_to_delete_the_chats")) && WebMessanger.deleteSelectedChats(ZMSG_selectedids), ZMSG_selectedids)(i = document.getElementById("trans_" + ZMSG_selectedids[n])).parentNode.removeChild(i)
        }
        ZMSGUI.resetTranscriptUI(), ZMSGUI.hideDeleteMenu()
    }, ZMSGUI.clearAllUnreadChats = function() {
        "block" == zfdsunread.style.display ? ZMSGUI.markAllRead() : "block" == ZMSG_chhis.style.display && ZMSGUI.UpdateAllUnreadChatsInHistory()
    }, ZMSGUI.UpdateAllUnreadChatsInHistory = function() {
        try {
            for (var e = ZMSG_chhis.getElementsByTagName("DIV"), t = 0; t < e.length; t++) - 1 != e[t].id.indexOf("trans_") && (e[t].className = "wms-readdiv")
        } catch (e) {}
    }, ZMSGUI.deleteFeed = function() {
        try {
            "block" == document.getElementById("zfdshis").style.display && ZMSGUI.refreshHis()
        } catch (e) {}
    }, ZMSGUI.handleKeyEvent = $WC.Util.throttle((function(e) {
        var t = ZMSG_transContent.getElementsByClassName("wms-readdiv-select");
        if (1 === t.length) {
            if (t = Array.prototype.slice.call(t)[0], 40 == e) {
                if (!t.nextSibling || !t.nextSibling.getAttribute("cid")) return void s(t, !1);
                s(t.nextSibling, !0)
            } else if (38 == e) {
                if (!t.previousSibling) return void s(t, !1);
                s(t.previousSibling, !0)
            }
            t.className = "wms-readdiv"
        } else s(ZMSG_transContent.firstChild, !0);

        function s(e, t) {
            var s = e.getAttribute("cid"),
                i = !1;
            "wms-unreaddiv" === e.className && (i = !0), e.className = "wms-readdiv-select", t && ZMSGUI.selectChat(s, e, i)
        }
    }), null, 200), ZMSGUI.checkChatHistory = function() {
        return null != ZMSG_chhis
    }, ZMSGUI.bindHistoryEvents = function() {
        var e = document.getElementById("zchhis");
        Gator(e).on("click", "[data-historyclose=true]", ZMSGUI.hidechathis), Gator(e).on("click", "[data-checkbox=true]", ZMSGUI.selectMainChkbox), Gator(e).on("click", "[class^=wms-readdiv]", (function(e) {
            ZMSGUI.handleEvents(e, this.getAttribute("cid"), this)
        })), Gator(e).on("click", "#wmschhisselectcheckbox", (function(e) {
            ZMSGUI.checkCheckBox(this)
        })), Gator(e).on("click", "[class=wms-unreaddiv]", (function(e) {
            ZMSGUI.handleEvents(e, this.getAttribute("cid"), this, !0)
        })), Gator(e).on("mouseover", "[purpose=chattrans]", (function(e) {
            ZMSGUI.showchhisDelete(this)
        })), Gator(e).on("mouseout", "[purpose=chattrans]", (function(e) {
            ZMSGUI.hidechhisDelete(this)
        })), Gator(e).on("keyup", "#zchathistorytxt", ZMSGUI.searchChatHistory), Gator(e).on("click", "[class=wms-chdel]", ZMSGUI.selectedChatIds), Gator(e).on("click", "[class=wms-chcan]", ZMSGUI.handleDelCancel)
    }, ZMSGUI.bindFeedEvents = function() {
        var e = document.getElementById("zfdshis");
        Gator(e).on("click", "[class=wms-feedsclose]", ZMSGUI.hidehis), Gator(e).on("click", "#zfdshis_cont", ZMSGUI.showhis), Gator(e).on("click", "#zmsgsearch", ZMSGUI.selectFeedSearchCategory), Gator(e).on("click", "[class=wms-feedsearchcat]", (function() {
            ZMSGUI.showFeedSearchCategory(this)
        })), Gator(e).on("click", "[data-feedsender]", (function() {
            WebMessanger.chat(this.getAttribute("data-feedsender"))
        })), Gator(e).on("click", "[data-pgno]", (function() {
            ZMSGUI.gotoPage(this.getAttribute("data-pgno"))
        })), Gator(e).on("submit", "[data-feedhisform=true]", ZMSGUI.searchHis), Gator(e).on("submit", "[data-gobtn=true]", ZMSGUI.searchHis), Gator(e).on("click", "[data-feedlink]", (function() {
            return ZMSGUI.openfeed(this.getAttribute("data-msgno"), "history")
        }))
    }, ZMSGUI.searchMessage = function() {
        var e = "message=" + ZMSG_SEARCHVALUE + "&lim=" + ZMSG_CHATCOUNT + "&pno=" + ZMSG_CHATPGNO + "&raw_search_input=" + ZMSG_SEARCHVALUE;
        $WC.Ajax.requestToChat("v1/messagesearch", e, (function(e) {
            var t = [];
            if (!(e = JSON.parse(e)).data.messages && e.data.message_tokens[0]) return ZMSG_CHATS = [], ZMSGUI.populate([]), void(ZMSG_CHATPGNO = "End");
            for (var s = e.data.messages, i = 0; i < s.length; i++) {
                var n = s[i];
                n.lastmsginfo = JSON.stringify({
                    msg: n.message || n.fcomment || n.fname,
                    sender: n.sender,
                    dname: n.sendername
                }), n.recipants = n.recipientssumm, n.lmtime = n.time, n.chatid = n.chid, n.title = n.ctitle, t.push(n)
            }
            ZMSG_CHATS = t, ZMSGUI.populate(t)
        }), (function() {
            ZMSG_CHATS = [], ZMSG_transmoreloader && ZMSG_transmoreloader.parentNode && $WC.Util.removeElement(ZMSG_transmoreloader), ZMSGUI.showErrorMessage()
        }))
    }, ZMSGUI.showErrorMessage = function() {
        var e = '<div valign="middle" class="wms-zmsginfo wms-zmsg-lmiddle" errormsg="true">' + $WC.I18N("message.search.error") + "</div>";
        if (1 == ZMSG_CHATPGNO) ZMSG_transContent.innerHTML = e;
        else if (!ZMSG_transContent.querySelector("[errormsg=true]")) {
            var t = $WC.Util.createElement("div", null, "wms-zmsginfo wms-search-errormsg", {
                valign: "middle",
                errormsg: "true"
            });
            t.innerText = $WC.I18N("message.search.error"), ZMSG_transContent.appendChild(t)
        }
    }, ZMSGUI.constructThreadHeader = function(e, t, s) {
        var i = t.getAttribute("data-thread_parentid") || s,
            n = t.getAttribute("data-thread_title"),
            a = t.getAttribute("data-thread_followercnt"),
            o = '<div class="wms_zmsg_threadhead ' + (WebMessanger.isDarkModeEnabled ? " zmNightMode" : "") + '" data-header="true"><div class="wms_zmsg_threadbackicon_container"><div class="wms_zmsg_threadbackicon" data-action="closethread" data_thread_parentid="' + i + '"><span class="thread_leftarrow" data-action="closethread"></span></div></div><div class="wms_zmsg_header_avatar" data-avatar="true"></div><div class="wms_zmsg_header_main wms-truncate-ellipsis" data-titlecontainer="true"  data-main="true"><div><div data-title="true" class="wms_cw_header_name"></div><span data-channelrestricted=false class="wms_cw_channellock" title="' + $WC.I18N("channel.inviteonly") + '"></span></span></div></div><div class="wms_zmsg_partview"><span class="wms_zmsg_particon"></span><span class="wms_zmsg_partcount">' + a + "</span></div>";
        e.insertAdjacentHTML("afterbegin", o);
        var r = e.querySelector("[data-avatar]"),
            l = e.querySelector("[data-title]");
        r.innerHTML = $WC.HybridSearch.generateImageHtml(WebMessanger.getZuid(), $WC.WmsConstants.HYBRIDSEARCH.THREAD, {
            TITLE: n
        }), n = $WC.Util.unescapeHTML(n), $WC.$CUtil.setInnerText(l, n), l.setAttribute("title", n), e.querySelector("[data-action=closethread]").addEventListener("click", (function() {
            var e = document.getElementById("wmschshtransmsg").parentElement;
            ZMSGUI.viewChatTranscript(i, e, null, "", "", "")
        }))
    }, ZMSGUI.constructParentThreadMsg = function(e, t, s) {
        var i = {};
        t.parentNode.previousSibling || t.parentNode;
        i.msguid = t.getAttribute("data-thread_msgid"), i.thread_chid = t.getAttribute("data-thread_chid"), i.msgcount = t.getAttribute("data-thread_msgcnt"), i.is_follower = "true" == t.getAttribute("data-thread_follower") ? $WC.I18N("thread.unfollow") : $WC.I18N("thread.follow"), i.chid = t.getAttribute("data-thread_parentid") || s;
        var n = {
                "X-XHR-exception": "true",
                "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
            },
            a = "chid=" + i.chid + "&msguid=" + encodeURIComponent(i.msguid) + "&lineslimit=1&tzoffset=" + _TZOFFSET;
        $WC.Ajax.requestToChat("gettranscriptasjsonforweb.do", a, (function() {
            var t = this.responseText && this.responseText.slice(0, -1);
            if ((t = JSON.parse("[" + t + "]")).length > 0) {
                var n = "more" === t[0].mode ? t[1] : t[0];
                msgcount = i.msgcount || n.thread_information && n.thread_information.message_count || "", delete n.thread_information;
                var a = '<div data-thread_parentmsg="true" class="wms_threadparentmsg wms_zmsg_threadparent" data-chid="' + i.chid + '">' + Message.constructChatContent([n], null, s) + "</div>";
                e.insertAdjacentHTML("afterbegin", a), Message.addEventListenersForMessage(e, i.thread_chid)
            }
        }), null, null, null, n)
    }, $WC.Util.pubsub.subscribe("/channels/updateui", (function() {
        ZMSG_chhis && ZMSGUI.populate(ZMSG_CHATS)
    })), ChatWindow.prototype.create = function(e, t) {
        var s, i;
        s = t.divId, this.recipant = t.recipant, this.title = t.title, this.scode = t.scode, this.stype = t.stype, this.smsg = $WC.Util.unescapeHTML(t.smsg), this.ctype = t.ctype, this.savehistory = t.historystorage, this.attached = t.attached, this.partcount = t.pcount, this.prdcode = t.prdcode, this.mutedinterval = t.mutedinterval, this.entityweburl = t.entityweburl, this.entityid = t.entityid, this.salesiqchat = t.salesiqchat, this.smileyinstance = new $WC.ZomojiComponent, this.voicerecorderinstance = new $WC.VoiceRecorderApi.VoiceRecorder, this.smileyvisible = !1, this.urlpreviewvisible = !1;
        var n, a = t.winstate || "max",
            o = t.composertext,
            r = t.lastmsgtime;
        if (this.updateAddInfo(t.addinfo), this.fetchparticipants = !0, this.fetchfollowers = !0, this.messageactionsinstance = new $WC.MessageActions, this.customgroup = t.customgroup, this.pinmsg_duration_selector_instance = new $WC.DurationSelector, this.file_forward_restricted = !1, this.thread_msgid = t.thread_msgid, this.thread_parentid = t.thread_parentid, this.thread_follower = t.thread_follower, this.thread_state = t.thread_state, this.thread_parent_title = t.thread_parent_title, !(null == document.getElementById(s) || Chat.isExistsInCliqbar(s) && WMSUI.getServiceChatContainer(s))) {
            document.getElementById(s).style.display = "block";
            var l = WindowHandler.getWinObjById(s);
            return (WmsMainUI.isAutoFocusScheduled(this.objId) || 2 === this.partcount && WmsMainUI.isAutoFocusScheduled(this.recipant)) && l.getMeFront(), void(WmsMainUI.isAutoFocusScheduled(this.objId) ? WmsMainUI.removeAutoFocusSchedule(this.objId) : 2 === this.partcount && WmsMainUI.isAutoFocusScheduled(this.recipant) && WmsMainUI.removeAutoFocusSchedule(this.recipant))
        }
        if (i = $WC.Util.createElement("DIV", s), this.setObjId(s), $WC.Util.addEvent(i, "click", function() {
                this.makeNormalAndPropagate()
            }.bind(this)), "undefined" == typeof WmsUIImpl || t.servicechatcontainer || (n = WMSUI.getServiceChatContainer(s)), t.servicechatcontainer && (n = t.servicechatcontainer), n ? (this.maximized = !0, this.detached = !0, n.appendChild(i), Gator(n).on("click", "[data-zcprofileid]", (function(e) {
                WebMessanger.showProfileInfo(this)
            })), WebMessanger.rtlmode && $WC.Util.addClass(n, "wms-rtl")) : WindowHandler.chatbar.insertBefore(i, document.getElementById("wmsbarmovablehint")), $WC.Util.isBotChid(this.objId)) var d = $WC.Bots.getBotId(this.objId);
        var c = "",
            u = "";
        if ("WP" == WebMessanger.prd && null != WMSUI.zhShareInstance) {
            var m = this.ctype,
                h = Object.keys($WC.WmsConstants.CTYPES).find((function(e) {
                    return $WC.WmsConstants.CTYPES[e] == m
                })),
                g = 1 == this.ctype && 2 == this.partcount && "false" == this.customgroup ? WmsContacts.getEmailId(this.recipant) : "";
            c = JSON.stringify({
                id: this.objId,
                chat_type: h,
                chat_title: this.title,
                email_id: g,
                group_chat: this.customgroup
            }), u = "209715200"
        }
        i.outerHTML = $WC.template.replace(e, {
            chid: this.objId,
            title: this.title,
            photo: this.imgurl,
            statusmsg: this.smsg || "",
            winindex: this.winIndex,
            style: this.recipant || d ? "style=cursor:pointer" : "",
            zhshare_dest_metaobj: c,
            maxsize: u
        });
        var p = $WC.RecentChats.getFromPinnedChatList(this.objId);
        if (this.ispinned = !!p, i.className = "wms-cw", this.win = document.getElementById(this.objId), this.mainwin = this.win.querySelector("[data-main]"), this.barwin = this.win.querySelector("[data-bar]"), this.msgdisp = this.win.querySelector("[data-msgdisp]"), this.statusmsgnode = this.win.querySelector("[data-statusmsg]"), this.avatarnode = this.win.querySelector("[data-avatar]"), this.composer = this.win.querySelector("[data-composer]"), this.listcommon = new ListCommon(this.composer, this.getInnerObject("wms-autocomplete", "div")), this.ctrlcomp = this.win.querySelector("[data-ctrlcomp]"), this.floating_containers = this.win.querySelector("[data-floating_containers]"), this.datehintnode = this.win.querySelector("[data-datecomp]"), this.threadunreadbanner = this.win.querySelector("[data-threadbanner]"), this.newmsgbanner = this.win.querySelector("[data-newmsgbanner]"), this.scrolldownbutton = this.win.querySelector("[data-scrolldown]"), this.errormsgnode = this.win.querySelector("[data-errormsg]"), this.dragcomp = this.win.querySelector("[data-dragcomp]"), this.photo = this.win.querySelector("[data-photo]"), this.baravatarnode = this.win.querySelector("[data-baravatar]"), this.headernode = this.win.querySelector("[data-header]"), this.titlenode = this.win.querySelector("[data-titlecontainer]"), this.bartitlenode = this.win.querySelector("[data-bartitle]"), this.smileycontainer = this.win.querySelector("[data-smileycontainer]"), this.urlpreviewcontainer = this.win.querySelector("[data-urlpreviewcontainer]"), this.smileyinvoker = this.getInnerObject("wms-smileyinvoker", "DIV"), this.voicemsginvoker = this.win.querySelector("[data-voicemsg]"), this.msgdisp.setAttribute("data-chid", this.objId), this.progressbarnode = this.win.querySelector("[data-progressbar]"), this.pinmsgnode = this.win.querySelector("[data-pinmsg]"), this.pinmsgduration = this.win.querySelector("[data-pinoption-duration]"), this.actionlistnode = this.win.querySelector("[data-actionlist]"), this.actionbutton = this.win.querySelector("[data-action]"), this.typingstatusnode = this.win.querySelector("[data-typingstatusnode]"), this.typingindicatornode = this.win.querySelector("[data-typingsymbol]"), this.barmsgcountnode = this.win.querySelector("[data-barmsgcount]"), this.videoinfonode = this.win.querySelector("[data-videoinfo]"), this.videoiconnode = this.win.querySelector("[data-videoicon]"), this.videodropdownnode = this.win.querySelector("[data-videodropdown]"), this.audioiconnode = this.win.querySelector("[data-audioicon]"), this.shareiconnode = this.win.querySelector("[data-shareicon]"), this.startmeeticonnode = this.win.querySelector("[data-startmeeticon]"), this.schedulemeeticonnode = this.win.querySelector("[data-schedulemeeticon]"), this.switchchatnode = this.win.querySelector("[data-switchchat]"), this.attachmentnode = this.win.querySelector("[data-attachment]"), this.footernode = this.win.querySelector("[data-footercont]"), this.edittitleiconnode = this.win.querySelector("[data-edittitleicon]"), this.addmemberhiddeninputnode = this.win.querySelector("[data-addmemberhiddeninput]"), this.populateActionList(), this.recentchatsnode = this.win.querySelector("[data-recentchats]"), this.redirectnode = this.win.querySelector("[data-redirect]"), this.pinactionnode = this.win.querySelector("[data-pinchat]"), this.addmembernode = this.win.querySelector("[data-addparticipant]"), this.historyoffnode = this.win.querySelector("[data-historyoff]"), this.leavechannelnode = this.win.querySelector("[data-leavechannel]"), this.permalinknode = this.win.querySelector("[data-permalink]"), this.closethreadnode = this.win.querySelector("[data-closeThread]"), this.mutechatnode = this.win.querySelector('[data-mute="true"]'), this.minimizeiconnode = this.win.querySelector("[data-minimizeicon]"), this.closeiconnode = this.win.querySelector("[data-closeicon]"), this.resendoverlay = this.win.querySelector("[data-resendoverlay]"), this.resendallnode = this.win.querySelector('[data-operation="wms-resendall"]'), this.editorreplydiv = this.win.querySelector("[data-editorreply]"), this.autocompletediv = this.win.querySelector("[data-autocomplete]"), this.invisiblediv = this.win.querySelector("[data-invisiblediv]"), this.showmembersnode = this.win.querySelector("[data-showmembers]"), this.enlargeicon = this.win.querySelector("[data-enlargeicon]"), this.unsubscribebotnode = this.win.querySelector("[data-unsubscribe]"), this.msgoprnode = this.win.querySelector("[data-msgoperation]"), this.msgselectcntnode = this.win.querySelector("[data-msgselectcnt]"), this.leavechatnode = this.win.querySelector("[data-leavechat]"), this.threadmsglinknode = this.win.querySelector("[data-threadmsglink]"), this.threadslistnode = this.win.querySelector("[data-threadslist]"), this.sendmessagebutton = this.win.querySelector("[data-sendmessagebutton]"), this.updatePinnedInfo(this.ispinned), this.updateMuteInfo(this.mutedinterval), this.setTitle(this.title), this.avatarnode.innerHTML = $WC.HybridSearch.generateImageHtml("", $WC.WmsConstants.HYBRIDSEARCH.CONTACT), this.baravatarnode.innerHTML = $WC.HybridSearch.generateImageHtml("", $WC.WmsConstants.HYBRIDSEARCH.CONTACT), this.updateAvatar(), WindowHandler.switchchat && WindowHandler.switchchat.backstagechid) {
            var f = WindowHandler.getChatSwitcherTargetChid(this.objId),
                v = "",
                C = "";
            if (f) {
                var b = $WC.RecentChats.get(f),
                    y = "";
                b && b.PARTICIPANTS && 2 == b.PARTICIPANTS.length && (y = $WC.Util.isLocalUser(b.PARTICIPANTS[0].zuid) ? b.PARTICIPANTS[1].zuid : b.PARTICIPANTS[0].zuid), v = f == WindowHandler.switchchat.backstagechid && "LIVEEVENT" == WindowHandler.switchchat.type ? '<div class="wms_cw_avatar_liveevent"></div>' : $WC.Util.isChannelChid(f) ? $WC.HybridSearch.generateImageHtml(f, $WC.WmsConstants.HYBRIDSEARCH.CHANNEL) : $WC.Util.isBotChid(f) ? $WC.HybridSearch.generateImageHtml($WC.Bots.getBotId(f), $WC.WmsConstants.HYBRIDSEARCH.BOT) : $WC.Util.isThreadChid(f) && b ? $WC.HybridSearch.generateImageHtml(f, $WC.WmsConstants.HYBRIDSEARCH.THREAD, {
                    TITLE: b.TITLE
                }) : !b || 1 != b.CTYPE || 2 != b.PARTICIPANTSCOUNT || b.CUSTOMGROUP && "false" != b.CUSTOMGROUP ? b ? $WC.HybridSearch.generateImageHtml(f, $WC.WmsConstants.HYBRIDSEARCH.CHAT, {
                    TITLE: b.TITLE,
                    SALESIQCHAT: !1
                }, !0) : $WC.HybridSearch.generateImageHtml("", $WC.WmsConstants.HYBRIDSEARCH.CONTACT) : $WC.HybridSearch.generateImageHtml(y, $WC.WmsConstants.HYBRIDSEARCH.CONTACT), b && (C = $WC.Util.safeHTML($WC.Util.unescapeHTML(b.TITLE)));
                var _ = '<div class="wms_cw_header_avatar wms_cw_otherchatavatar" data-otherchid="' + f + '"data-easychatswitch="true" title="' + C + '">' + v + "</div>";
                this.avatarnode.insertAdjacentHTML("beforebegin", _);
                var W = this.avatarnode.previousElementSibling;
                W && W.querySelector("[data-zcprofileid]") && W.querySelector("[data-zcprofileid]").removeAttribute("data-zcprofileid")
            }
        }
        if ("11" === this.ctype && this.updateUserStatus(this.scode, this.smsg, this.stype), "8" === this.ctype || "11" === this.ctype || "1" === this.ctype && "true" === this.customgroup ? this.updatePartCount(this.partcount) : this.updateUserStatus(this.scode, this.smsg, this.stype), -1 == navigator.userAgent.indexOf("Firefox") && (this.composer.onpaste = function(e) {
                var t = this.getAttribute("chid"),
                    i = WindowHandler.getWinObjById(t),
                    n = WMSUI.zhShareInstance && WMSUI.zhShareInstance.isWpAttachmentPasteEvent(e);
                if (n || "5" == i.ctype || "true" === i.editorreplydiv.getAttribute("data-editmsg") || i.permdenied) {
                    if ("WP" == WebMessanger.prd && "5" != i.ctype && !i.permdenied && n) {
                        var a = {
                            destMeta: {
                                id: s,
                                allowedSize: "209715200"
                            }
                        };
                        WMSUI.zhShareInstance.shareAttachmentviaPasteEvent(e, a)
                    }
                } else WmsFileUploadUI.handlePaste(e);
                e.stopPropagation()
            }), o) {
            if (this.composer.focus(), this.atmentions = $WC.WmsSessionStorage.getChatInfo(this.objId, "atmentions"), this.composer.value = o, this.atmentions) {
                var S = WMSUI.atMentions.formatAtMentions(o, this.atmentions, this.objId);
                this.invisiblediv.innerHTML = S
            }
            this.hideVoiceMsgInvoker()
        }
        if ("4" === this.ctype && this.salesiqchat && (this.edittitleiconnode.style.display = "none", this.videoinfonode.style.display = "none"), "8" === this.ctype) {
            if ($WC.Channels.get(this.objId)) {
                var w = $WC.Channels.get(this.objId);
                this.updateMuteInfo(w.muted_interval)
            }!1 === $WC.Channels.isUserHasPermission(this.objId, $WC.WmsConstants.USERPERMISSIONS.ADD_MEMBER) && (this.addmembernode.style.display = "none"), 0 == $WC.Channels.isUserHasPermission(this.objId, $WC.WmsConstants.USERPERMISSIONS.STICKY_MESSAGE) && (this.pinmsgdetails.action_enabled = !1), 1 == $WC.Channels.isUserHasPermission(this.objId, $WC.WmsConstants.USERPERMISSIONS.LEAVE_ALLOWED) && (this.leavechannelnode.style.display = "block"), "undefined" !== navigator.clipboard && (this.permalinknode.style.display = "block"), this.historyoffnode.style.display = "none", this.edittitleiconnode.style.display = "none", this.titlenode.style.cursor = "default", $WC.Channels.get(this.objId) && $WC.Channels.isDefaultChannel(this.objId) ? this.statusmsgnode.style.cursor = "default" : this.statusmsgnode.style.cursor = "pointer", this.threadslistnode.style.display = "inline-flex", this.videoinfonode.className = "wms_cw_videoinfo wms_cw_groupcallicon", (this.addinfo && "1" == this.addinfo.CHANNEL_SCOPE && WmsSettings.attachment_disabled_for_orgchannels || "2" == this.addinfo.CHANNEL_SCOPE && WmsSettings.attachment_disabled_for_teamchannels || "3" == this.addinfo.CHANNEL_SCOPE && WmsSettings.attachment_disabled_for_personalchannels || "4" == this.addinfo.CHANNEL_SCOPE && WmsSettings.attachment_disabled_for_externalchannels) && this.disableFileShareOption()
        }
        if ("9" === this.ctype && (this.edittitleiconnode.style.display = "none", this.titlenode.style.cursor = "default", this.actionbutton.style.display = "block", this.recentchatsnode.style.display = "none", this.addmembernode.style.display = "none", this.historyoffnode.style.display = "none", this.leavechannelnode.style.display = "none", $WC.Util.isCustomBot(this.objId) && (this.unsubscribebotnode.style.display = "block")), "5" === this.ctype && (WebMessanger.isRTCChat() || this.removeSendFile(), this.historyoffnode.style.display = "none", this.addmembernode.style.display = "none", this.edittitleiconnode.style.display = "none", this.titlenode.style.cursor = "default"), "10" === this.ctype && (this.addmembernode.style.display = "none", this.edittitleiconnode.style.display = "none", this.recentchatsnode.style.display = "none", this.titlenode.style.cursor = "default", this.statusmsgnode.style.cursor = "pointer", this.showmembersnode.style.display = "block"), "1" === this.ctype && (WmsSettings.getAdminSetting("isDisableHistoryAllowed") || (this.historyoffnode.style.display = "none"), 2 == this.partcount && (this.edittitleiconnode.style.display = "none", this.addmembernode.style.display = "none", this.recentchatsnode.style.display = "block"), this.isZohoGroupChat() && (this.addmembernode.style.display = "block", WmsSettings.attachment_disabled_for_groupchat && this.disableFileShareOption()), 2 != this.partcount || this.isZohoGroupChat() || (WmsSettings.direct_message_attachment_disabled && this.disableFileShareOption(), WmsContacts.get(this.recipant) && "inactive" === WmsContacts.get(this.recipant).STATUS && this.disableComposerOptions($WC.I18N("user.inactive.msg")))), "1" === this.ctype && this.partcount > 2 && this.customgroup && ("undefined" !== navigator.clipboard && (this.permalinknode.style.display = "block"), this.leavechatnode.style.display = "block"), "11" === this.ctype && (this.videoinfonode.style.display = "none", this.addmembernode.style.display = "none", this.titlenode.style.cursor = "default", this.mutechatnode.style.display = "none", this.threadmsglinknode.style.display = "inline-flex", this.threadmsglinknode.setAttribute("data-thread_msgid", this.thread_msgid), this.threadmsglinknode.setAttribute("data-thread_parentid", this.thread_parentid), $WC.Channels.isJoinedChannel(this.thread_parentid || $WC.Util.getParentChidFromThreadChid(this.objId)) || (this.threadmsglinknode.style.display = "none"), this.updateThreadFollowerInfo(), this.videoinfonode.className = "wms_cw_videoinfo wms_cw_groupcallicon", "0" === this.partcount && (this.statusmsgnode.style.cursor = "default"), "open" === this.thread_state && (this.closethreadnode.style.display = "block"), this.thread_parentid && $WC.Channels.get(this.thread_parentid) && (this.thread_parent_partcount = parseInt($WC.Channels.get(this.thread_parentid).pc)), "undefined" !== navigator.clipboard && (this.permalinknode.style.display = "block"), WmsSettings.close_thread_permission && !1 === $WC.Channels.isUserHasPermission(this.thread_parentid, $WC.WmsConstants.USERPERMISSIONS.CLOSE_THREAD) && (this.closethreadnode.style.display = "none"), this.floating_containers.style.top = "87px", "closed" == t.thread_state)) {
            var M = $WC.I18N("thread.closed.info");
            this.disableComposerOptions(M, this);
            var I = '<span class="reopen_thread_button" data-purpose="reopenthread">' + $WC.I18N("common.reopen") + "</span>",
                T = this.footernode.querySelector("[data-restriction-text]");
            T && T.insertAdjacentHTML("beforeend", I), T && $WC.Util.addClass(T, "wms_closed_thread")
        }
        if ($WC.Util.isBotChid(this.objId)) {
            var A = $WC.Bots.getBotId(this.objId),
                E = $WC.Bots.get(A) && $WC.Bots.get(A).original_info;
            if (E && "yet_to_onboard" === E.subscription_status) {
                M = $WC.I18N("bot.not.subscribed");
                this.disableComposerOptions(M, this);
                _ = '<div class="wms_bot_button_container"><div class="subscription_button" data-purpose="subscribebot">' + $WC.I18N("common.continue") + '</div><div class="dot_separator"></div><div class="unsubscribe_button" data-purpose="unsubscribebot">' + $WC.I18N("bot.stop") + "</div></div>";
                this.footernode.querySelector("[data-restriction-text]").insertAdjacentHTML("beforeend", _)
            } else if (E && "subscribed_yet_to_welcome" === E.subscription_status) {
                this.disableComposerOptions($WC.I18N("bot.welcomemsg"));
                var U = this.footernode.querySelector("[data-restriction-text]"),
                    k = Smiley.replace(Smiley.getUnicode(":wave:"), !1, !0);
                U.insertAdjacentHTML("beforeend", k), U.setAttribute("data-purpose", "subscribebot"), $WC.Util.addClass(U, "wms_bot_welcome")
            }
        }
        if (_WMSOPENINCLIQ && (WebMessanger.isCliqUser() || WebMessanger.isOrgUser()) && (this.redirectnode.style.display = "block"), "undefined" != typeof WmsUIImpl) {
            var N = WmsImplHandler.invokeSynchronously(WmsUIImpl.getHeaderHTML, this.objId, this.ctype, this.getChannelUID(), this.getChannelServiceCode(), this.getChannelSOID(), this.entityid);
            N && (this.headernode.innerHTML = N);
            var x = WmsImplHandler.invokeSynchronously(WmsUIImpl.getStatusHTML, this.objId, this.ctype, this.getChannelUID(), this.getChannelServiceCode(), this.getChannelSOID());
            x && (this.statuslinenode.innerHTML = x), this.remove_header && this.headernode && this.mainwin.setAttribute("data-hide-header", !0)
        }
        if ("undefined" != typeof WmsUIImpl) {
            var O = WmsImplHandler.invokeSynchronously(WmsUIImpl.getChatWindowOptions, this.objId, this.ctype, this.getChannelUID(), this.getChannelServiceCode(), this.getChannelSOID(), this.entityid);
            O && this.applyCustomCWOptions(O)
        }
        if (WindowHandler.count++, (WmsMainUI.isAutoFocusScheduled(this.objId) || 2 === this.partcount && WmsMainUI.isAutoFocusScheduled(this.recipant)) && (this.getMeFront(), this.focus()), 0 == WmsMainUI.isAutoFocusScheduled(this.objId) && "min" === a ? (WindowHandler.openedChats[this.objId] = "min", this.minimize()) : (this.maximized = !0, WindowHandler.openedChats[this.objId] = "max"), this.storeWindowState(a), WebMessanger.isGuestUser() || (_WMSWINFOCUS ? ($WC.Drafts.getFromServer(), $WC.Bots.initBots()) : ($WC.Drafts.getFromServerAfterFocus(), $WC.Bots.getFromServerAfterFocus())), WmsMainUI.isAutoFocusScheduled(this.objId) ? WmsMainUI.removeAutoFocusSchedule(this.objId) : 2 === this.partcount && WmsMainUI.isAutoFocusScheduled(this.recipant) && WmsMainUI.removeAutoFocusSchedule(this.recipant), WmsChatCache.isAvailable(this.objId)) this.msgdisp.innerHTML = WmsChatCache.get(this.objId), this.scrollDisplay();
        else {
            var R = $WC.Util.createElement("div"),
                D = $WC.RecentChats.get(this.objId);
            r ? R.setAttribute("data-nexttime", r) : D && D.LASTSEEN && "-1" != D.LASTSEEN ? (R.setAttribute("data-mentionmsgid", this.objId + "|" + D.LASTSEEN), this.ctrlcomp.setAttribute("data-scrolldown", !0)) : Message.mentionMsgInfo[this.objId] && (R.setAttribute("data-mentionmsgid", Message.mentionMsgInfo[this.objId]), this.ctrlcomp.setAttribute("data-scrolldown", !0), delete Message.mentionMsgInfo[this.objId]), R.setAttribute("data-latestchunk", "true"), R.style = "display:none", this.msgdisp.appendChild(R), this.partcount <= 100 && _WMSWINFOCUS || this.maximized ? Message.loadSpecificTranscript(this.objId, this.msgdisp, R) : this.lazyload_transcript = R
        }(11 == this.ctype && WmsMainUI.getUnreadCount(this.thread_parentid, null, this.objId) || WmsMainUI.getUnreadCount(this.objId, null, null, !0)) && this.highlight(), this.updateSaveHistoryInUI();
        var $ = {
            chid: this.objId,
            removed: "false"
        };
        this.salesiqchat && ($.salesiqchat = "true"), WebMessanger.isExclusiveChat() || WebMessanger.isRTCChat() || $WC.WmsSessionStorage.setChatInfo($);
        var H = $WC.Util.indexOf(WindowHandler.removed, this.getObjId());
        (-1 !== H && WindowHandler.removed.splice(H, 1), silent || WebMessanger.is_custom_menu_opted || WindowHandler.removeExcessChat(this.getObjId()), this.registerEvent(), this.showVideoDropdown(), this.showRestrictedChannelIcon(), $WC.Channels.get(this.objId) && 0 == $WC.Channels.isUserHasPermission(this.objId, $WC.WmsConstants.USERPERMISSIONS.SEND_MESSAGE) ? (this.permdenied = !0, this.disableComposerOptions($WC.I18N("channels.announcementonly"))) : "11" == this.ctype && $WC.Channels.get(this.thread_parentid) && 0 == $WC.Channels.isUserHasPermission(this.thread_parentid, $WC.WmsConstants.USERPERMISSIONS.THREAD_REPLY) && (this.permdenied = !0, this.disableComposerOptions($WC.I18N("threads.disable.reply"))), $WC.Util.addEvent(this.statusmsgnode, "click", function(e) {
            if (this.salesiqchat) window.open(this.smsg, "_blank");
            else {
                if ("wms-muteinfoicon" === e.target.id || e.target.closest("[data-mute]") || "wms_cw_videoinfo" === e.target.id || e.target.closest("[data-videodropdown]")) return;
                if (this.isZohoGroupChat() || this.partcount > 2 && "1" === this.ctype || "5" === this.ctype || "8" === this.ctype && (!$WC.Channels.get(this.objId) || !$WC.Channels.isDefaultChannel(this.objId)) || "11" === this.ctype && "0" !== this.partcount)(!this.disablemembercontrol && !this.permdenied || $WC.Channels.isUserHasPermission(this.objId, $WC.WmsConstants.USERPERMISSIONS.ADD_MEMBER)) && (this.populateGroupMembers(), e.stopPropagation());
                else if ("10" === this.ctype) {
                    if (this.entityweburl) ChatletImpl.handleURLInvocation(this.entityid, this.smsg) || window.open(this.smsg, "_blank");
                    else this.populateGroupMembers(), e.stopPropagation()
                } else "1" === this.ctype && (2 == this.partcount && "-5" == this.scode || !WmsContacts.get(this.recipant) && !$WC.Config.get("presence_keys") ? WMSUI.inviteMember(this.recipant, this.title) : 2 != this.partcount || "-3" != this.scode && "-6" != this.scode || WmsContacts.accept("zoho", this.recipant, $WC.Config.get("zuid")))
            }
        }.bind(this)), $WC.Util.addEvent(this.ctrlcomp, "scroll", $WC.Util.throttle((function() {
            this.showDateHint(), this.toggleUnreadBanner();
            var e = this.ctrlcomp.scrollHeight - this.ctrlcomp.clientHeight <= this.ctrlcomp.scrollTop + 20;
            this.scrolldownbutton.style.display = e ? "none" : "inline-block"
        }), this, 50, {
            leading: !0,
            trailing: !0
        })), $WC.Util.addEvent(this.threadunreadbanner, "click", this.scrollToUnreadThreads.bind(this, !0)), $WC.Util.addEvent(this.newmsgbanner, "click", function() {
            this.scrollToUnread(!0), this.makeNormal(!0)
        }.bind(this)), $WC.Util.addEvent(this.scrolldownbutton, "click", this.scrollToLastMsg.bind(this)), $WC.Util.addEvent(this.pinmsgnode, "click", function(e) {
            if (e.target.getAttribute("data-pinmsg-options")) WindowHandler.checkAndHidePinmsgOptions(this.objId), this.togglePinMsgOptions();
            else if (e.target.getAttribute("data-msg-unpin")) WebMessanger.unpinMsg(this.objId), this.togglePinMsgOptions();
            else if (e.target === this.pinmsgduration)
                if (this.pinmsgdetails.info.duration_shown) this.pinmsgdetails.info.duration_shown && (this.pinmsgdetails.info.duration_shown = !1, this.pinmsg_duration_selector_instance.unmountComponent());
                else {
                    this.pinmsgdetails.info.duration_shown = !0;
                    var t = function(e) {
                            var t = this.pinmsgdetails.info.msgid;
                            WebMessanger.pinMsg(this.objId, t, e, !1), this.togglePinMsgOptions()
                        }.bind(this),
                        s = this.pinmsgnode.getBoundingClientRect().left + this.pinmsgnode.clientWidth + 380 + 10,
                        i = {
                            selector_wrapper: window.innerWidth > s ? "wms_pinmsg_duration_position_left" : "wms_pinmsg_duration_position_right"
                        };
                    this.pinmsg_duration_selector_instance.mountComponent(this.pinmsgduration, t, i)
                }
            else e.target.closest("[data-pindropdown]") || this.highlightPinnedMsg()
        }.bind(this)), this.initializeZomojiFiles(), !$WC.CustomEmoji.getInitialFetchStatus() && WmsSettings.showCustomEmojiOptions() && $WC.CustomEmoji.fetchStickers(), this.updateChatRestrictions(), this.showPinnedMsg(t), WebMessanger.loadAnnotatorLibrary(), WebMessanger.getCalendarSettings(), WMSUI.get_emailid_count < 5) && $WC.Util.throttle((function() {
            WMSUI.get_emailid_count++, WmsContacts.getAndUpdateEmailIdFromServer()
        }), null, 1e3)();
        return $WC.Config.get("showSendMessageButton") && ($WC.Util.addClass(this.footernode, "wms-sendmessagebuttonenabled"), $WC.Util.addEvent(this.sendmessagebutton, "click", function(e) {
            this.composer.value && "" !== this.composer.value.trim() && (Message.send(this.objId, this.composer.value, null, null, null, null, this.getReplyMessageId(), null, !0), this.composer.value = "", this.composer.focus(), this.closeReplyPreview())
        }.bind(this))), WindowHandler.isChatSwitcherEnabled() && (this.switchchatnode.style.display = "inline-flex"), s
    }, ChatWindow.prototype.initializeZomojiFiles = function() {
        for (var e = [$WC.Config.get("staticserverpath") + "/images/zomoji/fun/c17eb701_zomoji48.png", $WC.Config.get("staticserverpath") + "/images/zomoji/workplace/11bf5e99_zomoji48.png"], t = function(e) {
                WMSUI.loadedimg[e.target.getAttribute("data-url")] = !1
            }, s = 0; s < e.length; s++)
            if (!WMSUI.isLoadedImg(e[s])) {
                var i = $WC.Util.createElement("img", null, null, {
                    "data-url": e[s]
                });
                i.onerror = t, i.src = e[s], WMSUI.loadedimg[e[s]] = !0
            }
    }, ChatWindow.prototype.showAddUserPrompt = function(e) {
        var t = [],
            s = [];
        if (!("8" === this.ctype && !1 === $WC.Channels.isUserHasPermission(this.objId, $WC.WmsConstants.USERPERMISSIONS.ADD_MEMBER) || "1" === this.ctype && 2 == this.partcount || $WC.Util.getObjectLength(this.partinfo) + 1 !== this.partcount && "10" !== this.ctype && "8" !== this.ctype || "9" === this.ctype)) {
            if (0 == WebMessanger.isPaginationEnabledForParticipantsSearch() && this.atmentions && WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ATMENTION) {
                var i = this.atmentions.slice(0, -1).split(","),
                    n = this.partinfo;
                i.forEach((function(e) {
                    void 0 === n[e] && -1 === WMSUI.atMentions.specialmentions.keys.indexOf(e) && (t.push(e), s.push('<span data-zcprofileid="' + e + '">' + $WC.Util.safeHTML($WC.Util.getContactName(e) || selected_members[0].DNAME) + "</span>"))
                }))
            } else e && e.forEach((function(e) {
                -1 === WMSUI.atMentions.specialmentions.keys.indexOf(e.id) && (t.push(e.id), s.push('<span data-zcprofileid="' + e.id + '">' + $WC.Util.safeHTML($WC.Util.getContactName(e.id) || e.dname) + "</span>"))
            }));
            if (t.length && this.allowAddMemberForEntityChat()) {
                var a = $WC.I18N("chat.infomsg.adduser", [s.join(", "), '<div class="wms_addusertext">' + $WC.I18N("chat.infomsg.addtext") + "</div>"]);
                a += '<div class="wms_adduser"><span data-id="' + t.join(",") + '" data-operation="addmem">' + $WC.I18N("Add") + '</span> <span data-operation="removepromptmsg">' + $WC.I18N("common.cancel") + "</span></div>", this.updateInfoMessage(a, null, "promptinfo")
            }
        }
    }, ChatWindow.prototype.removePromptMsg = function() {
        var e = this.msgdisp.querySelector('[data-infotype="promptinfo"]');
        e && e.parentNode && $WC.Util.removeElement(e.parentNode)
    }, ChatWindow.prototype.setLastEnterKeyPressTime = function(e) {
        this.lastEnterKeyTime = e
    }, ChatWindow.prototype.isDoubleEnter = function() {
        return (new Date).getTime() - this.lastEnterKeyTime < 500
    }, ChatWindow.prototype.createChatwindowOverlay = function() {
        if (this.resendoverlay.style.display = "block", this.permdenied) this.resendoverlay.querySelector("[data-operation='wms-resend']").style.display = "none";
        else {
            var e = "" + this.msgdisp.querySelectorAll("[data-msgfailure]").length;
            e > 1 && (this.resendallnode.style.display = "block", $WC.$CUtil.setInnerText(this.resendallnode, $WC.I18N("chat.msg.resendall", [e])))
        }
    }, ChatWindow.prototype.showDateHint = function() {
        var e = this.ctrlcomp.getBoundingClientRect().top,
            t = this.ctrlcomp.getElementsByClassName("wms-msgdate");
        this.datehintnode.style.display = "block";
        for (var s = 0; s < t.length; s++) {
            var i = t[s],
                n = i.getBoundingClientRect().top - 20 - i.firstChild.offsetHeight,
                a = new Date(parseInt(i.getAttribute("data-msgtime"))).setHours(0, 0, 0, 0);
            if (n > e)
                if (t[s - 1]) {
                    var o = t[s - 1].textContent;
                    a = new Date(parseInt(t[s - 1].getAttribute("data-msgtime"))).setHours(0, 0, 0, 0), this.datehintnode.textContent != o && (this.datehintnode.textContent = o, this.datehintnode.setAttribute("data-starttime", a)), s = t.length
                } else this.datehintnode.textContent = i.textContent, this.datehintnode.setAttribute("data-starttime", a);
            else null == t[s + 1] && this.datehintnode.textContent != i.textContent && (this.datehintnode.textContent = i.textContent, this.datehintnode.setAttribute("data-starttime", a))
        }
        this.ctrlcomp.scrollHeight - this.ctrlcomp.clientHeight <= this.ctrlcomp.scrollTop + 20 || (this.datehintnode.style.display = "block"), clearTimeout(this.datehint_timer_hide), this.datehint_timer_hide = setTimeout((function(e) {
            clearTimeout(e.datehint_display_timer), e.datehint_display_timer = setTimeout((function(e) {
                e.datehintnode.style.display = ""
            }), 800, e)
        }), 1e3, this)
    }, ChatWindow.prototype.scrollToDateStart = function(e) {
        for (var t = $WC.Util.getEventTarget(e), s = parseInt(t.getAttribute("data-starttime")), i = this.ctrlcomp.getElementsByClassName("wms-msgdate"), n = !1, a = null, o = 0; o < i.length; o++)
            if (i[o].getAttribute("data-msgtime") < s) n = !0;
            else if (n) {
            s = i[o].getAttribute("data-msgtime"), a = this.ctrlcomp.querySelector('[data-msgtime="' + s + '"]');
            break
        }
        if (n) {
            a = a.previousSibling || a;
            var r = Message.getScrollableParent(a.parentNode);
            $WC.Util.scrollTo(a, {
                behavior: "smooth"
            }, r)
        } else {
            var l = $WC.Util.createElement("div", null, null, {
                "data-prevtime": s,
                "data-scrollbehaviour": "top"
            });
            this.msgdisp.insertBefore(l, this.msgdisp.firstChild), Message.loadSpecificTranscript(this.objId, this.msgdisp, l)
        }
    }, ChatWindow.prototype.applyCustomCWOptions = function(e) {
        if (e.customClassName && ($WC.Util.addClass(this.mainwin, e.customClassName), $WC.Util.addClass(this.barwin, e.customClassName)), e.customActions && e.customActions.length > 0 && this.generateCustomActionList(e.customActions), "disable" === e.permalink_option && (this.permalinknode && (this.permalinknode.style.display = "none"), this.disablepermalinkoption = !0), "disable" === e.redirecttocliq && (this.redirectnode && (this.redirectnode.style.display = "none"), this.disableredirecttocliq = !0), "disable" === e.membercontrol && (this.addmembernode && (this.addmembernode.style.display = "none"), this.disablemembercontrol = !0), "disable" === e.atmention && (this.disablemention = !0), "disable" === e.recentchats_option && (this.recentchatsnode && (this.recentchatsnode.style.display = "none"), this.disablerecentchatsoption = !0), "disable" === e.store_chathistory && (this.historyoffnode && (this.historyoffnode.style.display = "none"), this.disablehistory = !0), "disable" === e.pinaction && (this.pinactionnode && (this.pinactionnode.style.display = "none"), this.disablepinaction = !0), "disable" === e.minimize && (this.minimizeiconnode && (this.minimizeiconnode.style.display = "none"), this.disableminimize = !0), "disable" === e.enlarge && this.enlargeicon && (this.enlargeicon.style.display = "none"), "disable" === e.mutechat && (this.mutechatnode && (this.mutechatnode.style.display = "none"), this.disablemuteaction = !0), e.transcript_view_height && (this.ctrlcomp.style.height = e.transcript_view_height), e.chatwindow_width && (this.mainwin.style.width = e.chatwindow_width), "disable" === e.file_upload && (this.attachmentnode && (this.attachmentnode.style.display = "none", this.attachmentnode.setAttribute("data-attachment", "false")), this.restrict_file_upload = !0), "disable" === e.actions && this.actionbutton && (this.actionbutton.style.display = "none"), "disable" === e.edit_chat_title && this.edittitleiconnode && this.titlenode && (this.edittitleiconnode.style.display = "none", this.titlenode.style.cursor = "default"), e.remove_header && this.headernode && this.mainwin.setAttribute("data-hide-header", !0), "disable" === e.file_forward && (this.file_forward_restricted = !0), "disable" === e.profile_info && (this.disable_profileinfo = !0), e.primary_font_size) {
            var t = $WC.Util.createElement("style");
            t.type = "text/css", t.innerHTML = ".wms-msg,.zcdesc,.wms-msg .wms-audioinfo,.wms_editorreply{font-size:" + e.primary_font_size + "}", this.win.insertAdjacentElement("beforeend", t)
        }
        "disable" === e.close && this.closeiconnode && (this.closeiconnode.style.display = "none"), "disable" === e.voicemsg && (this.disablevoicemsginvoker = !0, this.hideVoiceMsgInvoker(), $WC.Config.get("showSendMessageButton") && $WC.Util.addClass(this.footernode, "wms-showsendmessagebutton")), "disable" === e.thread_list && this.threadslistnode && (this.threadslistnode.style.display = "none"), "disable" === e.statusmsgnode && this.statusmsgnode && (this.statusmsgnode.style.display = "none"), "disable" === e.avcall && this.videoinfonode && (this.videoinfonode_disabled = !0, this.videoinfonode.style.display = "none"), "disable" === e.viewmembers && (this.showmembersnode && (this.showmembersnode.style.display = "none"), !this.statusmsgnode || 1 == this.ctype && "true" != this.customgroup || this.entityweburl || (this.statusmsgnode.style.display = "none"))
    }, ChatWindow.prototype.populateActionList = function() {
        [{
            label: "chats.cliq.open",
            dataAttr: "redirect",
            dataVal: "true",
            style: "display: none;"
        }, {
            label: "chats.common",
            dataAttr: "recentchats",
            dataVal: "true",
            actionCallback: this.getRecentChats
        }, {
            label: "chat.action.addparticipant",
            dataAttr: "addparticipant",
            dataVal: "true",
            actionCallback: this.insertAddParticipant
        }, {
            label: "history.off",
            dataAttr: "historyoff",
            dataVal: "true",
            actionCallback: this.setHistoryStorage
        }, {
            label: "common.shortcut.description.leave",
            dataAttr: "leaveChannel",
            dataVal: "true",
            actionCallback: this.leaveChannel
        }, {
            label: "common.shortcut.description.permalink",
            dataAttr: "permaLink",
            dataVal: "true",
            actionCallback: this.handleCopyPermaLink
        }, {
            label: "common.shortcut.description.pin",
            className: "wms_cw_pinchat",
            dataAttr: "pinchat",
            dataVal: "true",
            actionCallback: this.pinChat,
            style: "display: block;"
        }, {
            label: "chat.members.show",
            className: "wms_cw_showmem",
            dataAttr: "showmembers",
            dataVal: "true",
            actionCallback: this.populateGroupMembers,
            style: "display:none;"
        }, {
            label: "common.shortcut.description.mute",
            className: "wms_cw_muteaction",
            dataAttr: "mute",
            dataVal: "true",
            actionCallback: this.muteChat
        }, {
            label: "bot.action.unsubscribe",
            className: "wms_cw_unsubscribe",
            dataAttr: "unsubscribe",
            dataVal: "true",
            actionCallback: this.unsubscribeBot,
            style: "display:none;"
        }, {
            label: "chat.action.leave",
            className: "wms_cw_leavechat",
            dataAttr: "leavechat",
            dataVal: "true",
            actionCallback: this.leaveChat,
            style: "display:none;"
        }, {
            label: "thread.action.close",
            className: "wms_cw_closethread",
            dataAttr: "closethread",
            dataVal: "true",
            actionCallback: this.closeThread,
            style: "display:none;"
        }].forEach(function(e) {
            e.label && (e.className = e.className ? "wms_cw_toolbar_actionitem " + e.className : "wms_cw_toolbar_actionitem", e.style = e.style ? e.style : "", this.actionlistnode.insertAdjacentHTML("beforeend", this.generateCWActionHtml(e)), e.actionCallback && this.actionlistnode.querySelector("[data-" + e.dataAttr + "]").addEventListener("click", e.actionCallback.bind(this)))
        }.bind(this))
    }, ChatWindow.prototype.generateCWActionHtml = function(e) {
        var t = "";
        return "mute" == e.dataAttr && e.className.indexOf("wms_cw_muteaction") > -1 ? t = '<div class="{{className}}" data-{{dataAttr}}="{{dataVal}}" style="{{style}}"><span data-mutetitle>' + $WC.I18N(e.label) + '</span><ul class="wms-muteinterval" ><li data-duration="3600">' + $WC.I18N("chat.hour", "1") + '</li><li data-duration="28800">' + $WC.I18N("chat.hours", "8") + '</li><li data-duration="86400">' + $WC.I18N("chat.day", "1") + '</li><li data-duration="604800">' + $WC.I18N("chat.week", "1") + '</li><li data-duration="-1">' + $WC.I18N("chat.forever") + "</li></ul></div>" : "redirect" == e.dataAttr ? t = '<a href="' + _WMSCHATURL + "chats/" + this.objId + '" target="_blank" rel="noopener"><div class="{{className}}" data-{{dataAttr}}="{{dataVal}}" style="{{style}}">' + $WC.I18N(e.label) + "</div></a>" : e.dataAttr && e.dataVal ? t = '<div class="{{className}}" data-{{dataAttr}}="{{dataVal}}"  style="{{style}}">' + $WC.I18N(e.label) + "</div>" : e.data_customAction && (t = '<div class="{{className}}" data-customAction="{{data_customAction}}">{{label}}</div>'), $WC.template.replace(t, {
            className: e.className,
            dataAttr: e.dataAttr,
            dataVal: e.dataVal,
            actionCallback: e.actionCallback,
            label: e.label,
            style: e.style,
            data_customAction: e.data_customAction
        })
    }, ChatWindow.prototype.generateCustomActionList = function(e, t) {
        t = t || this.actionlistnode, e.forEach(function(e) {
            null === t.querySelector('[data-customAction="' + e.data_customAction + '"]') && (e.label && e.actionCallback && e.data_customAction && (e.className = e.className ? "wms_cw_toolbar_actionitem " + e.className : "wms_cw_toolbar_actionitem", t.insertAdjacentHTML("beforeend", this.generateCWActionHtml(e)), t.querySelector('[data-customAction="' + e.data_customAction + '"]').addEventListener("click", function() {
                e.actionCallback(this.objId), this.hideActions()
            }.bind(this))), e.submenu && (t.querySelector('[data-customAction="' + e.data_customAction + '"]').insertAdjacentHTML("beforeend", '<div class="wms_cw_toolbar_actionwrapper"></div>'), this.generateCustomActionList(e.submenu, t.querySelector('[class="wms_cw_toolbar_actionwrapper"]'))))
        }.bind(this))
    }, ChatWindow.prototype.registerEvent = function() {
        var e = this,
            t = this.objId;
        if (_WMSDRAGDROP && !e.permdenied && !e.restrict_file_upload) {
            if ("WP" === WebMessanger.getPrd() || "ZN" === WebMessanger.getPrd() || "CP" === WebMessanger.getPrd()) {
                var s = document.querySelector("body");
                this.win.addEventListener("mousedown", (function(i) {
                    if (WindowHandler.chatrestrictions[t] && (WindowHandler.chatrestrictions[t].restrictFileForward || WindowHandler.chatrestrictions[t].restrictFileDownload)) return i.preventDefault(), void i.stopPropagation();
                    e.file_forward_restricted || WebMessanger.isGuestUser() || (WmsDragDrop.dragged_file = i.target, WmsDragDrop.file_drag = !0), $WC.Util.addClass(s, "wms_disable_pointer_events"), document.getElementById("wmstoolbar").style.pointerEvents = "auto"
                }), !0), ["mouseup", "dragend"].forEach(function(e) {
                    this.win.addEventListener(e, (function(e) {
                        WmsDragDrop.file_drag = !1, WmsDragDrop.dragged_file = "", $WC.Util.removeClass(s, "wms_disable_pointer_events")
                    }), !0)
                }.bind(this))
            } else this.win.addEventListener("dragstart", (function(s) {
                if (WindowHandler.chatrestrictions[t] && (WindowHandler.chatrestrictions[t].restrictFileForward || WindowHandler.chatrestrictions[t].restrictFileDownload)) return s.dataTransfer.clearData(), s.preventDefault(), void s.stopPropagation();
                e.file_forward_restricted || WebMessanger.isGuestUser() || (WmsDragDrop.dragged_file = s.target, s.dataTransfer.setData("isdragfromcwin", "true"))
            }), !0);
            WmsDragDrop.addDragDropListeners(this.win, e, t)
        }
        var i = $WC.Util.getCssAnimEndListener();
        if ($WC.Util.addEvent(this.headernode, i, (function() {
                this.classList.remove("wms-titleglow")
            }), !0), $WC.Util.addEvent(this.barwin, i, (function() {
                this.classList.remove("wms-titleglow")
            }), !0), Message.addEventListenersForTranscript(this.msgdisp, t), Gator(e.resendoverlay).on("click", "[data-operation]", (function() {
                var t = this.getAttribute("data-operation");
                "wms-resend" === t ? Message.resend(e.msgdisp, e.clickedfailurenode, !1) : "wms-resendall" === t ? Message.resend(e.msgdisp, e.clickedfailurenode, !0) : "wms-resenddel" === t && Message.removeFailedMessages(e.clickedfailurenode), e.resendoverlay.style.display = "none", e.resendallnode.style.display = "none"
            })), Gator(this.actionlistnode).on("click", '[data-purpose="wms_botactions"]', (function(t) {
                var s, i;
                e.hideActions(), Commands.showLoadingIcon(e.autocompletediv, e.objId);
                var n = {};
                n.exec_id = this.getAttribute("data-exec_id"), t.target && t.target.getAttribute("data-sub_action_index") && (n.sub_action_index = t.target.getAttribute("data-sub_action_index"));
                var a = $WC.Bots.getBotId(e.objId),
                    o = $WC.Bots.get(a);
                if (o.actionhandles)
                    for (var r = 0; r < o.actionhandles.length; r++)
                        if (o.actionhandles[r].id === n.exec_id) {
                            i = o.actionhandles[r].location, s = o.actionhandles[r].display_props.name;
                            break
                        }
                var l = "v1/bots/" + a + "/executeaction",
                    d = {
                        "x-consents-version": "1",
                        "Content-Type": "application/json",
                        "X-SID": WebMessanger.getSid(),
                        "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
                    },
                    c = function() {
                        Commands.hideLoadingIcon(e.objId);
                        var t = JSON.parse(this.response),
                            i = t.data.dreResponse,
                            n = [];

                        function o(t, s, a) {
                            if ("Consent" === (i = s.data.dreResponse).status || "Failure" === i.status && !$WC.Util.isEmpty(i.resumeUrl))(new $WC.Consents).mountComponent(t, i, a);
                            else if ("Success" === i.status && i.output) {
                                if (i.output.msg) n.push(i.output);
                                else if (i.output.actions) {
                                    $WC.Channels.initChannels(), (new $WC.Forms).mountComponent(i, Commands.showResponse, (function() {
                                        e && e.composer.focus()
                                    }))
                                }
                                n.length && e.updateMessage(n)
                            }
                        }
                        i.output || (i.output = {}), i.output.sender = a, i.output.isTempResponse = !0, i.output.meta || (i.output.meta = {}, i.output.meta.usermessagedetails = {}, i.output.meta.usermessagedetails.msg_title = s), o(e.objId, t, o)
                    },
                    u = function() {
                        Commands.hideLoadingIcon(e.objId)
                    };
                i ? $WC.Ajax.postRequestToChatWithLocation(l, n, c, u, null, null, d) : $WC.Ajax.postRequestToChat(l, n, c, u, null, null, d)
            })), Gator(this.editorreplydiv).on("click", ".wms_cw_replyclose, [data-replymsgtime], #wms_notifyeditmsg", (function(t) {
                var s = $WC.Util.getEventTarget(t);
                if ("wms_notifyeditlabel" !== s.id)
                    if ("wms_notifyeditmsg" === this.id) {
                        var i = s.parentNode.querySelector('[data-type="custom"]');
                        i.className = "wms_settings_customcheckbox" === i.className ? "wms_settings_customcheckboxsel" : "wms_settings_customcheckbox", t.stopPropagation()
                    } else this.getAttribute("data-replymsgtime") ? (Message.glowBubble(this.getAttribute("data-replymsgtime"), e.ctrlcomp), t.stopPropagation()) : e.closeReplyPreview()
            })), Gator(this.progressbarnode).on("click", "[data-purpose]", (function() {
                var e = this.getAttribute("data-purpose"),
                    s = this.getAttribute("data-filename");
                "uploadcancel" === e ? (WmsFileUploadUI.cleanUpFileUpload(t, null, null, !0), WmsFileUploadUI.customCallBackObj && "function" == typeof WmsFileUploadUI.customCallBackObj.successCallBack && (WmsFileUploadUI.customCallBackObj.uploadCancelCallBack(), WmsFileUploadUI.clearCustomCallBackObj())) : "expand" === e || "collapse" === e ? WmsFileUploadUI.expandFilesContainer(t, e) : "retryall" === e && WmsFileUploadUI.resendAllFiles(t), "resend" === e ? WmsFileUploadUI.resendFile(t, s) : "close" === e && WmsFileUploadUI.cleanUpFileUpload(t, null, s, !0, !0)
            })), Gator(this.mainwin).on("click", "[data-fwdclose=true]", this.toggleMessageSelection.bind(this)), Gator(this.mainwin).on("click", "[data-fwdmsg=true]", this.forwardSelectedMessages.bind(this)), Gator(this.mainwin).on("click", "[data-minimizeicon=true]", this.minimizeAndPropagate.bind(this)), Gator(this.mainwin).on("click", "[data-header=true]", this.focus.bind(this)), Gator(this.mainwin).on("click", "[data-enlargeicon=true]", this.toggleEnlargeWindow.bind(this)), Gator(this.mainwin).on("click", "[data-closeicon=true]", this.closeAndPropagate.bind(this)), Gator(this.mainwin).on("click", "#wms-smileyinvoker", this.toggleSmiley.bind(this)), Gator(this.mainwin).on("click", "#wms-voicemsginvoker", this.invokeVoiceMsg.bind(this)), Gator(this.mainwin).on("click", "[data-action=true]", this.toggleActions.bind(this)), Gator(this.mainwin).on("click", "[data-titlecontainer=true]", this.editChatTitle.bind(this)), Gator(this.mainwin).on("click", "[data-edittitleicon=true]", this.editChatTitle.bind(this)), Gator(this.mainwin).on("click", "[data-urlpreviewclose=true]", this.hideUrlPreview.bind(this, !0)), Gator(this.mainwin).on("dblclick", "[data-composer=true]", this.textAreaMinimize.bind(this)), Gator(this.mainwin).on("click", "[data-videoinfo=true]", this.toggleVideoDropdown.bind(this)), Gator(this.mainwin).on("click", "[data-audioicon=true]", this.handleMediaCall.bind(this)), Gator(this.mainwin).on("click", "[data-videoicon=true]", this.handleMediaCall.bind(this)), Gator(this.mainwin).on("click", "[data-shareicon=true]", this.handleMediaCall.bind(this)), Gator(this.mainwin).on("click", "[data-startmeeticon=true]", this.handleMediaCall.bind(this)), Gator(this.mainwin).on("click", "[data-schedulemeeticon=true]", this.handleMediaCall.bind(this)), Gator(this.mainwin).on("click", "[data-composer=true]", this.focus.bind(this)), Gator(this.mainwin).on("blur", "[data-composer=true]", this.blurChat.bind(this)), Gator(this.mainwin).on("blur", "[data-titleform=true]", function(e) {
                this.checkChatTitle(e.target.value)
            }.bind(this)), Gator(this.mainwin).on("submit", "[data-titleform=true]", function(e) {
                return this.saveChatTitle(e.target.querySelector("#wmseditchattitletxt").value), !1
            }.bind(this)), Gator(this.mainwin).on("keydown", "[data-titleform=true]", this.checkkey.bind(this)), Gator(this.mainwin).on("keydown", "[data-composer=true]", function(e) {
                return this.salesiqchat && "undefined" != typeof WmsUIImpl ? WmsImplHandler.invoke(WmsUIImpl.handleKeyDown, e, this.objId) : "13" == e.keyCode && this.urlpreviewvisible && this.unfurldata_cache_id && this.unfurlmsg && 0 == $WC.Config.get("zoholinks_auth") ? void(new $WC.UrlConsent).mountComponent(function(t, s) {
                    if (this.unfurlmsg = t, s) return WMSUI.handleEvent(e, this.composer, this.objId)
                }.bind(this)) : WMSUI.handleEvent(e, this.composer, this.objId)
            }.bind(this)), Gator(this.mainwin).on("keydown", function(e) {
                if (this.permdenied && "27" == e.keyCode) return document.querySelector("#wms-imgoverlay") ? WMSUI.imgPreview.removeOverlay() : WMSUI.handleEvent(e, this.composer, this.objId)
            }.bind(this)), Gator(this.mainwin).on("input", "[data-composer=true]", function(e) {
                WMSUI.handleStatus(e, this.composer, this.objId), WindowHandler.makeNormalWinById(this.objId)
            }.bind(this)), Gator(this.mainwin).on("keyup", "[data-composer=true]", function(e) {
                if (this.salesiqchat) return "undefined" != typeof WmsUIImpl && (WmsImplHandler.invoke(WmsUIImpl.handleKeyMovement, e, this.objId), WmsImplHandler.invoke(WmsUIImpl.handleKeyUp, e, this.objId)), !0;
                13 === e.keyCode && (this.isEnterKeyOnhold = !1)
            }.bind(this)), Gator(this.mainwin).on("click", "[data-memdel=true]", function() {
                WMSUI.deleteParticipant(this.objId, event.target.getAttribute("data-zcprofileid"), event.target.getAttribute("data-dname"))
            }.bind(this)), Gator(this.mainwin).on("change", "#wms-file", function() {
                WMSUI.submitFile(this.objId)
            }.bind(this)), Gator(this.mainwin).on("click", "[data-attachment]", function() {
                this.hideActions()
            }.bind(this)), Gator(this.mainwin).on("click", ".subscription_button, .unsubscribe_button, .wms_bot_welcome", function(e) {
                if ("subscribebot" == $WC.Util.getEventTarget(e).getAttribute("data-purpose")) {
                    var t = $WC.Bots.getBotId(this.objId);
                    t && ($WC.Bots.subscribe(t), this.enableComposerOptions())
                } else this.unsubscribeBot()
            }.bind(this)), Gator(this.mainwin).on("click", ".reopen_thread_button", function(e) {
                "reopenthread" == $WC.Util.getEventTarget(e).getAttribute("data-purpose") && WebMessanger.reopenThread(this.objId)
            }.bind(this)), this.composer.onscroll = function() {
                WMSUI.handleSync(this.composer)
            }.bind(this), this.barwin.onclick = this.maximize.bind(this), this.barwin.querySelector("[data-barclose=true]").onclick = this.closeAndPropagate.bind(this), this.ctrlcomp.addEventListener("mouseup", this.checkSelectionAndFocus.bind(this)), this.datehintnode.onclick = this.scrollToDateStart.bind(this), WindowHandler.isChatSwitcherEnabled() && Gator(this.mainwin).on("click", "[data-switchchat]", this.toggleChatSwitchDialog.bind(this)), WindowHandler.switchchat && WindowHandler.switchchat.backstagechid) {
            var n = WindowHandler.getChatSwitcherTargetChid(this.objId);
            Gator(this.headernode).on("click", "[data-easychatswitch]", (function() {
                WMSUI.attachSession(n)
            }))
        }
    }, ChatWindow.prototype.blurChat = function() {
        Self.status.idle(this.objId)
    }, ChatWindow.prototype.updatePinnedInfo = function(e) {
        this.ispinned = e, e ? (this.pinactionnode.className = "wms_cw_toolbar_actionitem wms_cw_unpinchat", $WC.Util.isBotChid(this.objId) ? $WC.$CUtil.setInnerText(this.pinactionnode, $WC.I18N("chat.unpinbot")) : $WC.Util.isThreadChid(this.objId) ? $WC.$CUtil.setInnerText(this.pinactionnode, $WC.I18N("chat.unpinthread")) : $WC.$CUtil.setInnerText(this.pinactionnode, $WC.I18N("common.shortcut.description.unpin"))) : (this.pinactionnode.className = "wms_cw_toolbar_actionitem wms_cw_pinchat", $WC.Util.isBotChid(this.objId) ? $WC.$CUtil.setInnerText(this.pinactionnode, $WC.I18N("chat.pinbot")) : $WC.Util.isThreadChid(this.objId) ? $WC.$CUtil.setInnerText(this.pinactionnode, $WC.I18N("chat.pinthread")) : $WC.$CUtil.setInnerText(this.pinactionnode, $WC.I18N("common.shortcut.description.pin")))
    }, ChatWindow.prototype.updateMuteInfo = function(e) {
        this.mutedinterval = e;
        var t = this.mutechatnode;
        e && "-1" !== e && e > (new Date).getTime() ? (t.setAttribute("data-mute", "true"), $WC.Util.removeClass(t, "wms_cw_muteaction"), $WC.Util.addClass(t, "wms_cw_unmuteaction")) : (t.setAttribute("data-mute", "false"), $WC.Util.removeClass(t, "wms_cw_unmuteaction"), $WC.Util.addClass(t, "wms_cw_muteaction")), this.updateMuteTitle()
    }, ChatWindow.prototype.updateMuteTitle = function() {
        var e = this.mutedinterval,
            t = this.mutechatnode.querySelector("[data-mutetitle]");
        if (e && "-1" !== e && e > (new Date).getTime()) {
            var s = $WC.I18N("chat.mute.onmute");
            if ("9223372036854775807" == e) s += " " + $WC.I18N("chat.forever");
            else if (1 != e) {
                var i = (new Date).getTime(),
                    n = new Date(e - i),
                    a = n.getUTCDate() - 1,
                    o = n.getUTCHours(),
                    r = n.getUTCMinutes(),
                    l = "";
                a && (l += " " + a + " ", l += 1 == a ? $WC.I18N("chat.mute.day") : $WC.I18N("chat.mute.days")), o && (l += " " + o + " ", l += 1 == o ? $WC.I18N("chat.mute.hour") : $WC.I18N("chat.mute.hours")), r && (l += " " + r + " ", l += 1 == r ? $WC.I18N("chat.mute.minute") : $WC.I18N("chat.mute.minutes")), "" == l && (l = " " + $WC.I18N("chat.mute.seconds")), s += l + " " + $WC.I18N("chat.mute.timeleft")
            }
            this.mutechatnode.title = s, $WC.$CUtil.setInnerText(t, $WC.I18N("common.shortcut.description.unmute"))
        } else this.mutechatnode.title = $WC.I18N("common.shortcut.description.mute"), $WC.$CUtil.setInnerText(t, $WC.I18N("common.shortcut.description.mute"))
    }, ChatWindow.prototype.updateLastseenStatus = function(e) {
        if (WmsSettings.isLastSeenEnabled() && this && 2 == this.partcount && 1 == this.ctype && ($WC.WmsContacts.getContactsList(this.recipant) || $WC.WmsOrgContacts.getOrgContactsList(this.recipant)) && 4 == this.scode) {
            var t = $WC.WmsContacts.getContactsList(this.recipant) ? $WC.WmsContacts.getLastAvailableTime(this.recipant) : $WC.WmsOrgContacts.getLastAvailableTime(this.recipant);
            if (!t || t <= "0") return;
            var s = $WC.DateUtil.getRelativeTimeString(t);
            "Just now " === s && (s = s.toLowerCase().slice(0, -1));
            var i = this.smsg + " (" + $WC.I18N("lst_seen") + s + ")";
            $WC.$CUtil.setInnerText(this.statusmsgnode, i), this.statusmsgnode.title = i, setTimeout(this.updateLastseenStatus.bind(this), 6e4)
        }
    }, ChatWindow.prototype.updateUserStatus = function(e, t, s) {
        if ("9" === this.ctype && (t = "chatbot.smsg", e = "chatbot", $WC.Util.isBotChid(this.objId))) {
            var i = $WC.Bots.getBotId(this.objId);
            $WC.Bots.get(i) && $WC.Bots.get(i).STATUSMSG && (t = $WC.Bots.get(i).STATUSMSG)
        }
        null == t && (t = this.partcount <= 2 ? "+ " + $WC.I18N("chat.contact.add") : ""), this.salesiqchat && (t = WmsUIImpl.getChatWindowStatusText(this.objId)), t = $WC.Util.unescapeHTML(t), this.smsg = t, t = $WC.I18N(t), "1" === this.ctype && this.partcount > 2 || (this.statusmsgnode.title = t), $WC.$CUtil.setInnerText(this.statusmsgnode, t), "4" == e && this.updateLastseenStatus(), this.stype = WMSUI.getStype(s), this.scode = e;
        var n = this.avatarnode && this.avatarnode.firstChild,
            a = this.baravatarnode && this.baravatarnode.firstChild,
            o = "";
        if ("11" == this.ctype) r = "wms_badge_imgwrapper wms_badge_statusicon_thread", o = "open" === this.thread_state ? "wms_badge_statusicon_thread_cutout wms_badge_img_cutout" : "wms_badge_statusicon_closedthread_cutout wms_badge_img_cutout";
        else if ("-1" == e || "-3" == e || "-4" == e || "-5" == e || "-6" == e || !$WC.Config.get("presence_keys") && !WmsContacts.get(this.recipant)) var r = "wms_badge_imgwrapper";
        else r = "wms_badge_imgwrapper wms_badge_statusicon_" + WmsContacts.getStatusClassName(null, this.scode, this.stype), o = "wms_badge_statusicon_" + WmsContacts.getStatusClassName(null, this.scode, this.stype) + "_cutout wms_badge_img_cutout";
        if (n) {
            n.className = r;
            var l = n.querySelector("[data-cutouticon]");
            l && (l.className = o), this.recipant && WmsContacts.get(this.recipant) && (n.title = $WC.I18N(WebMessanger.statusarr[e]))
        }
        if (a) {
            a.className = r;
            var d = a.querySelector("[data-cutouticon]");
            d && (d.className = o)
        }
        var c = "wms_cw_bar_typing_indicator ";
        "0" == e ? c += "wms_cw_bar_typing_offline" : "1" == e ? c += "wms_cw_bar_typing_online" : "3" == e ? c += "wms_cw_bar_typing_busy" : "4" == e ? c += "wms_cw_bar_typing_idle" : "5" == e ? c += "wms_cw_bar_typing_dnd" : "7" == e && (c += "wms_cw_bar_typing_away"), $WC.Util.removeClass(this.statusmsgnode, "wms_cw_contactstatus"), $WC.Util.removeClass(this.statusmsgnode, "wms_cw_status_accepticon"), $WC.Util.removeClass(this.statusmsgnode, "wms_cw_status_invited"), "-1" != e && "-3" != e && "-4" != e && "-5" != e && "-6" != e && (WmsContacts.get(this.recipant) || $WC.Config.get("presence_keys")) || ($WC.Util.addClass(this.statusmsgnode, "wms_cw_contactstatus"), "-3" != e && "-6" != e || $WC.Util.addClass(this.statusmsgnode, "wms_cw_status_accepticon"), "-1" == e && $WC.Util.addClass(this.statusmsgnode, "wms_cw_status_invited")), "" != e && "10" != e && (this.typingindicatornode.className = c)
    }, ChatWindow.prototype.updateChannelInfo = function(e) {
        this.channeldesc = e.cd, this.channelphotoid = e.photoid, this.channeltype = e.sc, this.channelid = e.oc_id, this.channelservicecode = e.service, this.channelsoid = e.servicespecid
    }, ChatWindow.prototype.updatePartCount = function(e) {
        var t = e,
            s = t >= 2 ? $WC.I18N("chat.participants") : $WC.I18N("chat.participant");
        11 == this.ctype && (s = t >= 2 ? $WC.I18N("thread.followers") : $WC.I18N("thread.follower"));
        var i = t + " " + s;
        0 == t && (i = 11 == this.ctype ? $WC.I18N("thread.followers.none") : $WC.I18N("chat.participants.none")), this.statusmsgnode.title = "", $WC.$CUtil.setInnerText(this.statusmsgnode, i), $WC.Util.addClass(this.statusmsgnode, "wms_cw_activeusers")
    }, ChatWindow.prototype.updatePartinfo = function(e, t, s, i) {
        for (var n in this.partinfo) {
            if (this.partinfo[n].uname == e) {
                this.partinfo[n].scode = t, this.partinfo[n].smsg = s, this.partinfo[n].stype = i;
                break
            }
        }
    }, ChatWindow.prototype.updateOfflineMessage = function() {
        if (2 == this.partcount) {
            var e = this.recipant || WmsMainUI.getZuidForPrivateChat(this.objId);
            e = $WC.Util.getContactName(e, this.title, !0), this.composer.placeholder = $WC.I18N("chat.userofflineinfo", [e]), this.offlinemessage = !0
        }
    }, ChatWindow.prototype.updateOnlineMessage = function() {
        2 == this.partcount && (this.composer.placeholder = "", this.offlinemessage = !1)
    }, ChatWindow.prototype.updateUserInfoStatus = function(e) {
        this.typingstatusnode.innerHTML = e, this.typingstatusnode.setAttribute("title", e)
    }, ChatWindow.prototype.updateThreadFollowerInfo = function(e, t, s, i) {
        if (e) {
            var n = document.getElementById(this.thread_parentid),
                a = n && n.querySelector('[data-thread_msgid="' + this.thread_msgid + '"]');
            a && a.setAttribute("data-thread_follower", this.thread_follower);
            var o = a ? parseInt(a.getAttribute("data-thread_followercnt")) : parseInt(this.partcount);
            i ? o++ : t || 0 == t ? o += parseInt(t) : (s || 0 == s) && (o -= parseInt(s)), a && a.setAttribute("data-thread_followercnt", o), this.partcount = o, this.updatePartCount(o), i && $WC.$CUtil.setInnerText(this.followernode, $WC.I18N("thread.unfollow"))
        }
    }, ChatWindow.prototype.selectChat = function() {
        WindowHandler.lastViewed != this.winIndex && -1 != WindowHandler.lastViewed && null != WindowHandler.exist[WindowHandler.lastViewed] && "empty" != WindowHandler.exist[WindowHandler.lastViewed] && (this.prevIndex = WindowHandler.lastViewed), WindowHandler.lastViewed = this.winIndex
    }, ChatWindow.prototype.getMeFront = function() {
        this.selectChat()
    }, ChatWindow.prototype.getScode = function() {
        return this.scode
    }, ChatWindow.prototype.getSmsg = function() {
        return this.smsg
    }, ChatWindow.prototype.getStype = function() {
        return this.stype
    }, ChatWindow.prototype.getTitle = function() {
        return this.title
    }, ChatWindow.prototype.getObjId = function() {
        return this.objId
    }, ChatWindow.prototype.setObjId = function(e) {
        this.objId = e
    }, ChatWindow.prototype.closeAndPropagate = function(e) {
        WebMessanger.isExclusiveChat() && WebMessanger.isRTCChat() || (this.voicerecorderinstance.node ? $WC.VoiceRecorderApi.isVoiceRecordingActive() && $WC.VoiceRecorderApi.getActiveSessionId() == this.objId ? this.throwVoiceMsgRemovalError({
            content: $WC.I18N("voicerecorder.endrecording"),
            confirmactiontext: $WC.I18N("common.continue"),
            confirmCallBack: function(e) {
                $WC.VoiceRecorderApi.closeAndRemoveRecordingSession(), this.closeAndPropagate(e)
            }.bind(this, e)
        }) : this.throwVoiceMsgRemovalError({
            confirmactiontext: $WC.I18N("common.continue"),
            content: $WC.I18N("voicemsg.deleteinfo"),
            confirmCallBack: this.closeAndPropagate.bind(this)
        }) : (this.close(), this.propagateOperation("close"), e && ("function" == typeof e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0)))
    }, ChatWindow.prototype.detachEvents = function() {
        Gator(this.mainwin).off(), Gator(this.actionlistnode).off(), Gator(this.editorreplydiv).off(), Gator(this.resendoverlay).off(), Gator(this.ctrlcomp.querySelector("#ctrlcomp")).off(), Gator(this.progressbarnode).off()
    }, ChatWindow.prototype.close = function(e) {
        if (!WebMessanger.isExclusiveChat() && !WebMessanger.isRTCChat()) {
            this.checkAndStoreDraftMsg(), ChatBlink.stopRepeat(), $WC.VideoPlayerFactory.removeAllComponents(this.objId), this.smileyvisible && (this.smileycontainer.className = this.smileycontainer.className.replace(" wms-smileyborder", ""), this.smileyinstance.unmountComponent(), this.smileyvisible = !1), WmsFileUploadHandler.getLivefupObj(this.objId) && WmsFileUploadUI.cleanUpFileUpload(this.objId), WebMessanger.show_message_actions_as_popup && this.messageActionsUIShown && WindowHandler.removePopupActionMountPoint(this), this.detachEvents(), e ? (WmsChatCache.remove(this.getObjId()), Message.deletedMessages.remove(this.getObjId())) : this.msgdisp.firstChild && !0 === this.msgdisp.firstChild.matches("[data-loading]") ? (WmsChatCache.remove(this.objId), Message.deletedMessages.remove(this.objId)) : this.mutedinterval || !WebMessanger.isAutoJoinAllowed(this.title) || this.lazyload_transcript || (Message.furlVideoElement(this.msgdisp), WmsChatCache.insert(this.objId, this.msgdisp.innerHTML));
            var t = function(e, t) {
                if (document.getElementById(t.getObjId())) {
                    $WC.Util.removeElement(t.win), WindowHandler.openedChats[t.getObjId()] = "close";
                    try {
                        WindowHandler.exist[t.getPreIndex()].focus("", !0)
                    } catch (e) {
                        WindowHandler.moveFocus(t.getObjId(), "", !0)
                    }
                    Factory.destroyDialog(t.winIndex, !0), WindowHandler.count--
                }
            };
            if ("0" == this.savehistory && $WC.Util.getCssAnimEndListener()) {
                var s = $WC.Util.getCssAnimEndListener();
                $WC.Util.addEvent(this.win, s, t, !0, this), $WC.Util.addClass(this.win, "delete-chat")
            } else t(0, this);
            Message.PREV_SENDER["ch" + this.objId] && delete Message.PREV_SENDER["ch" + this.objId], this.removeWindowState(), 0 === WindowHandler.count && WmsMainUI.toggleSmartChatButton()
        }
        "undefined" != typeof WmsUIImpl && WmsImplHandler.invokeSynchronously(WmsUIImpl.handleChatWindowClose, this.ctype, this.objId, this.getChannelUID())
    }, ChatWindow.prototype.isMaximised = function() {
        return this.maximized
    }, ChatWindow.prototype.hide = function() {
        this.win.style.display = "none"
    }, ChatWindow.prototype.makeNormalAndPropagate = function() {
        this.makeNormal(!0)
    }, ChatWindow.prototype.makeNormal = function(e, t) {
        this.unread = !1, this.toggleUnreadBanner(), (-1 !== this.headernode.className.indexOf("wms_cw_highlight") || t) && ($WC.Util.removeClass(this.headernode, "wms_cw_highlight"), $WC.Util.removeClass(this.barwin, "wms_cw_highlight"), e && this.propagateOperation("seen")), (!silent || WebMessanger.isExclusiveChat() || WebMessanger.isRTCChat()) && this.resetBarStatusIcon()
    }, ChatWindow.prototype.highlight = function() {
        this.maximized ? $WC.Util.addClass(this.headernode, "wms_cw_highlight") : (this.updateBarMsgcount(), $WC.Util.addClass(this.headernode, "wms_cw_highlight"), $WC.Util.addClass(this.barwin, "wms_cw_highlight")), this.unread = !0
    }, ChatWindow.prototype.titleGlow = function() {
        this.maximized ? $WC.Util.addClass(this.headernode, "wms-titleglow") : $WC.Util.addClass(this.barwin, "wms-titleglow"), this.focus()
    }, ChatWindow.prototype.getInnerObject = function(e, t) {
        return WindowHandler.getObjectInObject(this.win, e, t)
    }, ChatWindow.prototype.checkSelectionAndFocus = function(e) {
        "" === window.getSelection().toString() && this.focus(e)
    }, ChatWindow.prototype.focus = function(e, t) {
        if (e) {
            var s = $WC.Util.getEventTarget(e);
            if ("wmseditchattitletxt" === s.id || "true" === s.getAttribute("data-title") || "true" === s.getAttribute("data-edittitleicon") || "true" === s.getAttribute("data-videoinfo") || s.getAttribute("data-edited") || 1 == s.getAttribute("data-zomojiheader")) return;
            ("true" !== s.getAttribute("data-previewable") && "true" !== s.getAttribute("data-titlecontainer") || -1 !== s.className.indexOf("zcmsg_bx")) && ($WC.Config.get("disableComposerFocusOnChatwindowFocus") || this.composer.focus())
        } else $WC.Config.get("disableComposerFocusOnChatwindowFocus") || this.composer.focus();
        "4" == this.scode && this.updateLastseenStatus(), (11 == this.ctype ? WmsMainUI.getUnreadCount(this.thread_parentid, null, this.objId) : WmsMainUI.getUnreadCount(this.objId, null, null, !0)) && !t ? this.makeNormalAndPropagate() : "11" == this.ctype && "false" === this.thread_follower && this.makeNormal(), this.hideActions(), this.hideVideoDropdown(), WindowHandler.checkAndHidePinmsgOptions(), ChatBlink.stopRepeat(), (this.smileyvisible || this.autocompletepickervisible) && (this.hideSmileyUI(), this.hideReactionsUI()), this.salesiqchat && WmsUIImpl.onComposerFocus(this.objId)
    }, ChatWindow.prototype.maximize = function() {
        this.mainwin.style.display = "flex", this.barwin.style.display = "none", this.unread && !this.salesiqchat ? this.scrollToUnread() : this.scrollDisplay(), this.focus(), this.maximized = !0, this.getMeFront(), WindowHandler.openedChats[this.getObjId()] = "max", this.storeWindowState("max"), this.updateBarMsgcount(), this.changeFooterHeight(), this.lazyload_transcript ? (Message.loadSpecificTranscript(this.objId, this.msgdisp, this.lazyload_transcript), this.lazyload_transcript = null) : this.msgdisp.clientHeight < this.ctrlcomp.clientHeight && WMSUI.loadImages(this.ctrlcomp), !1 === this.attached && (Chat.isExists(this.objId) && WmsMainUI.isAutoFocusScheduled(this.objId) && WmsMainUI.removeAutoFocusSchedule(this.objId), WebMessanger.attachSession(this.objId))
    }, ChatWindow.prototype.textAreaMinimize = function() {
        "" === this.composer.value && this.minimizeAndPropagate()
    }, ChatWindow.prototype.checkAndMinimize = function(e) {
        var t = $WC.Util.getEventTarget(e);
        (t.getAttribute("data-footer") || t.getAttribute("data-toolbar")) && this.minimizeAndPropagate()
    }, ChatWindow.prototype.minimizeAndPropagate = function() {
        this.disableminimize || (this.minimize(!0), this.propagateOperation("min"))
    }, ChatWindow.prototype.minimize = function(e) {
        this.disableminimize || (Self.Idle = !1, this.mainwin.style.display = "none", this.barwin.style.display = "block", this.maximized = !1, WindowHandler.lastViewed = -1, WindowHandler.openedChats[this.getObjId()] = "min", e && this.resetBarStatusIcon(), this.storeWindowState("min"))
    }, ChatWindow.prototype.propagateOperation = function(e) {
        var t = "chid=" + this.objId + "&action=" + e;
        if ("close" === e && (t += "&uname=" + myMsgObj.sender + "&sid=" + encodeURIComponent(WebMessanger.getSid())), "seen" === e)
            if (WebMessanger.isGuestUser()) {
                var s = {
                    "x-cliq-guid": WebMessanger.guest_info.encrypt_id
                };
                $WC.Ajax.postRequestToChat("guestapi/v2/chats/" + this.objId + "/markread", null, null, null, null, null, s)
            } else {
                var i = this.lastmsg_uid || "",
                    n = $WC.RecentChats.get(this.objId);
                ("" == i || n && n.LASTMSGINFO && (n.LASTMSGINFO.msguid && i !== n.LASTMSGINFO.msguid || n.LASTMSGINFO.msg.msguid && i !== n.LASTMSGINFO.msg.msguid)) && (i = n.LASTMSGINFO.msguid), i && (t = 1 == this.ctype && "false" == this.customgroup ? JSON.stringify({
                    sender_id: this.recipant
                }) : "", $WC.Ajax.postRequestToChat("v2/chats/" + this.objId + "/messages/" + i + "/markread", t))
            }
        else $WC.Ajax.request("sendchatwindowopr.do", t)
    }, ChatWindow.prototype.scrollDisplay = function(e, t) {
        t = t || this.ctrlcomp, "boolean" == typeof e && !1 === e || 0 !== t.scrollHeight && (t.scrollTop = t.scrollHeight - t.clientHeight)
    }, ChatWindow.prototype.updateChatTitle = function(e) {
        e || !$WC.RecentChats.get(this.objId) || $WC.Util.isChannelChid(this.objId) || (e = $WC.RecentChats.get(this.objId).TITLE);
        var t = this.titlenode.querySelector('[data-title="true"]'),
            s = e;
        if ("Group Chat" == e ? e = s = $WC.I18N("Group_Chat") : $WC.Util.isChannelChid(this.objId) ? e = s = $WC.Channels.getChannelName(this.objId) || e : $WC.Util.isBotChid(this.objId) ? e = s = $WC.Bots.getBotName($WC.Bots.getBotId(this.objId)) || e : $WC.Util.isThreadChid(this.objId) && ($WC.Channels.getChannelName(this.thread_parentid) ? s = e + " - " + $WC.Channels.getChannelName(this.thread_parentid) : this.thread_parent_title && (s = e + " - " + this.thread_parent_title), $WC.Channels.isJoinedChannel($WC.Util.getParentChidFromThreadChid(this.objId)) || (s = e)), this.title = e, e = $WC.Util.unescapeHTML(e), s = $WC.Util.unescapeHTML(s), $WC.$CUtil.setInnerText(t, s), $WC.$CUtil.setInnerText(this.bartitlenode, s), t.setAttribute("title", s), "11" == this.ctype) {
            var i = document.getElementById(this.thread_parentid),
                n = i && i.querySelector('[data-thread_msgid="' + this.thread_msgid + '"]');
            n && n.setAttribute("data-thread_title", e)
        }
        this.updateAvatar()
    }, ChatWindow.prototype.setTitle = function(e) {
        this.updateChatTitle(e)
    }, ChatWindow.prototype.setIndex = function(e) {
        this.winIndex = e
    }, ChatWindow.prototype.getIndex = function() {
        return this.winIndex
    }, ChatWindow.prototype.getPreIndex = function() {
        return this.prevIndex
    }, ChatWindow.prototype.setPreIndex = function(e) {
        this.prevIndex = e
    }, ChatWindow.prototype.isMinimized = function() {
        return !this.maximized
    }, ChatWindow.prototype.updateParticipantsFromJoin = function(e, t) {
        this.addParticipants(e, !1, t)
    }, ChatWindow.prototype.getImageUrl = function() {
        return this.imgurl
    }, ChatWindow.prototype.updateAvatar = function() {
        var e = "";
        e = 1 != this.ctype || 2 != this.partcount || this.customgroup && "false" != this.customgroup ? $WC.Util.isChannelChid(this.objId) ? $WC.HybridSearch.generateImageHtml(this.objId, $WC.WmsConstants.HYBRIDSEARCH.CHANNEL) : $WC.Util.isBotChid(this.objId) ? $WC.HybridSearch.generateImageHtml($WC.Bots.getBotId(this.objId), $WC.WmsConstants.HYBRIDSEARCH.BOT) : 11 == this.ctype ? $WC.HybridSearch.generateImageHtml(this.objId, $WC.WmsConstants.HYBRIDSEARCH.THREAD, {
            TITLE: this.title
        }) : WindowHandler.isChatSwitcherEnabled() && this.objId == WindowHandler.switchchat.backstagechid && "LIVEEVENT" == WindowHandler.switchchat.type ? '<div class="wms_cw_avatar_liveevent"></div>' : $WC.HybridSearch.generateImageHtml(this.objId, $WC.WmsConstants.HYBRIDSEARCH.CHAT, {
            TITLE: this.title,
            SALESIQCHAT: this.salesiqchat
        }, !0) : $WC.HybridSearch.generateImageHtml(this.recipant, $WC.WmsConstants.HYBRIDSEARCH.CONTACT), this.avatarnode.innerHTML = e, $WC.Util.loadOriginalImage(this.avatarnode, null, !0), this.baravatarnode.innerHTML = e, $WC.Util.loadOriginalImage(this.baravatarnode, null, !0)
    }, ChatWindow.prototype.updateChannelImage = function() {
        var e = $WC.HybridSearch.generateImageHtml(this.objId, $WC.WmsConstants.HYBRIDSEARCH.CHANNEL);
        this.updateAvatar(e)
    }, ChatWindow.prototype.updateBotImage = function(e) {
        var t = $WC.HybridSearch.generateImageHtml(e, $WC.WmsConstants.HYBRIDSEARCH.BOT);
        this.updateAvatar(t)
    }, ChatWindow.prototype.updateWebUrl = function(e) {
        var t = JSON.parse(e).weburl || JSON.parse(e).openurl;
        t && this.updateUserStatus("", t)
    }, ChatWindow.prototype.clearChatContent = function() {
        this.msgdisp.innerHTML = ""
    }, ChatWindow.prototype.updateInfoMsgTemplate = function(e) {
        var t = JSON.parse(e).infomsgtemplate;
        this.addinfotemplate = t && t.addmem, this.deleteinfotemplate = t && t.deletemem, this.titleinfotemplate = t && t.chattitle
    }, ChatWindow.prototype.populateParticipants = function() {
        var e, t = "10",
            s = " ";
        if (1 != this.ctype || 2 != this.partcount || this.customgroup && "false" != this.customgroup) {
            if (8 != this.ctype) {
                var i = $WC.HybridSearch.generateImageHtml(this.objId, $WC.WmsConstants.HYBRIDSEARCH.CHAT, {
                    TITLE: this.title,
                    SALESIQCHAT: this.salesiqchat
                }, !0);
                this.updateAvatar(i), s = this.getGroupStatus(), this.statusmsgnode.title = "", $WC.Util.addClass(this.statusmsgnode, "wms_cw_activeusers"), this.recentchatsnode.style.display = "none", this.videoinfonode.className = "wms_cw_videoinfo wms_cw_groupcallicon", this.videoinfonode.removeAttribute("title"), delete WebMessanger.ucmap[WebMessanger.chatmap[this.objId]], delete WebMessanger.chatmap[this.objId]
            }
        } else {
            var n = $WC.Util.isLocalUser(Object.keys(this.partinfo)[0]) ? Object.keys(this.partinfo)[1] : Object.keys(this.partinfo)[0];
            n && (i = $WC.HybridSearch.generateImageHtml(n, $WC.WmsConstants.HYBRIDSEARCH.CONTACT), this.updateAvatar(i), t = WmsContacts.status(n) || this.partinfo[n].scode, s = WmsContacts.getStatusMsg(n), e = WMSUI.getStype(this.partinfo[n].st), $WC.Config.get("presence_keys") && !WmsContacts.get(this.recipant) && (s = this.partinfo[n].smsg), "0" === t && "2" === t || (this.composer.placeholder = "")), this.recentchatsnode.style.display = this.disablerecentchatsoption ? "none" : "block", this.videoinfonode.className = "wms_cw_videoinfo", this.videoinfonode.removeAttribute("title")
        }
        "10" === this.ctype && (s = this.entityweburl || s), 8 != this.ctype && this.updateUserStatus(t, s, e)
    }, ChatWindow.prototype.addParticipants = function(e, t, s) {
        e.forEach((function(e) {
            this.partinfo[e.uname || e.zuid] = e
        }), this), t && (this.updateParticipantsCount(), this.fetchparticipants = !0), s || this.populateParticipants()
    }, ChatWindow.prototype.getGroupStatus = function() {
        var e = $WC.Util.getObjectLength(this.partinfo),
            t = null != this.partinfo[WebMessanger.zuid] ? e : e + 1;
        10 == this.ctype && (t = this.partcount);
        var s = t + " " + (t >= 2 ? $WC.I18N("chat.participants") : $WC.I18N("chat.participant"));
        return 0 == t && (s = $WC.I18N("chat.participants.none")), s
    }, ChatWindow.prototype.updateParticipantsCount = function() {
        this.partcount = $WC.Util.getObjectLength(this.partinfo) + 1
    }, ChatWindow.prototype.deleteParticipants = function(e) {
        for (var t = 0; t < e.length; t++) {
            var s = e[t].uname;
            this.partinfo && this.partinfo[s] && delete this.partinfo[s]
        }
        this.updateParticipantsCount(), this.populateParticipants()
    }, ChatWindow.prototype.updateAddInfo = function(e) {
        if (e) {
            for (var t = e.split(":"), s = {}, i = 0; i < t.length; i += 2) {
                var n = t[i];
                null != n && (s[n] = null != t[i + 1] ? t[i + 1] : "")
            }
            this.addinfo = s
        }
    }, ChatWindow.prototype.isPrivateReplyAllowed = function(e) {
        return !!!$WC.Util.isLocalUser(e.getAttribute("data-sender")) && ("1" == this.ctype && this.partcount > 2 || "8" == this.ctype || "11" == this.ctype)
    }, ChatWindow.prototype.isLiveSupportChat = function() {
        return this.getChatType() == CT_NFY_LIVESUPPORT
    }, ChatWindow.prototype.isZohoGroupChat = function() {
        return this.getChatType() == CT_NFY_ZOHOGROUP || "true" === this.customgroup && "1" === this.ctype
    }, ChatWindow.prototype.getChatType = function() {
        try {
            return this.addinfo.CT_TYPE
        } catch (e) {
            return null
        }
    }, ChatWindow.prototype.getToolBarStatus = function() {
        return !("5" === this.ctype || "9" === this.ctype || !1 !== this.isLiveSupportChat() || !0 === this.salesiqchat || !(WebMessanger.isMediaCallEnabled(WMSUI.avCall.CALL_TYPE_VIDEO) || WebMessanger.isMediaCallEnabled(WMSUI.avCall.CALL_TYPE_VOICE) || WebMessanger.isMediaCallEnabled(WMSUI.avCall.CALL_TYPE_SCREENSHARE)))
    }, ChatWindow.prototype.checkAndHideVideoDropdown = function(e) {
        e.relatedTarget && (e.relatedTarget.getAttribute("data-videodropdown") || e.relatedTarget.closest("[data-videodropdown=true]")) || this.hideVideoDropdown()
    }, ChatWindow.prototype.toggleVideoDropdown = function(e) {
        this.videodropdownshown ? (this.hideVideoDropdown(), this.videodropdownshown = !1) : (this.showVideoDropdown(e), this.videodropdownshown = !0)
    }, ChatWindow.prototype.hideVideoDropdown = function() {
        this.videodropdownnode.style.display = "none", this.videodropdownnode.className = "wms_videoinfo_dropdown", this.videodropdownshown = !1
    }, ChatWindow.prototype.showVideoDropdown = function(e) {
        if (!e || "wms_cw_videoinfo" === $WC.Util.getEventTarget(e).id)
            if (this.getToolBarStatus()) {
                var t = "none",
                    s = "none",
                    i = "none";
                try {
                    WebMessanger.isMediaCallEnabled(WMSUI.avCall.CALL_TYPE_VIDEO) && WmsSettings.getAdminSetting("isMediacallAllowed") && (t = "block")
                } catch (e) {}
                try {
                    WebMessanger.isMediaCallEnabled(WMSUI.avCall.CALL_TYPE_VOICE) && WmsSettings.getAdminSetting("isMediacallAllowed") && (s = "block")
                } catch (e) {}
                try {
                    WebMessanger.isMediaCallEnabled(WMSUI.avCall.CALL_TYPE_SCREENSHARE) && WmsSettings.getAdminSetting("isMediacallAllowed") && (i = "block")
                } catch (e) {}
                if ("none" === t && "none" === s && "none" === i) this.videoinfonode.style.display = "none";
                else if (e) {
                    "none" !== s && ((1 == this.ctype && "false" == this.customgroup || 10 == this.ctype) && 2 == this.partcount ? this.audioiconnode.style.display = "block" : this.startmeeticonnode.style.display = "block"), "none" !== t && ((1 == this.ctype && "false" == this.customgroup || 10 == this.ctype) && 2 == this.partcount ? this.videoiconnode.style.display = "block" : this.schedulemeeticonnode.style.display = "block"), "none" !== i && (1 == this.ctype && "false" == this.customgroup || 10 == this.ctype) && 2 == this.partcount && (this.shareiconnode.style.display = "block"), this.videodropdownnode.style.display = "block"
                } else !WebMessanger.isCliqUser() && ("1" !== this.ctype || 2 != this.partcount) || (1 != this.ctype || 2 != this.partcount) && WebMessanger.is_group_call_disabled || this.videoinfonode_disabled || (1 != this.ctype || "true" == this.customgroup) && WmsSettings.group_audio_call_disabled && WmsSettings.group_video_call_disabled ? this.videoinfonode.style.display = "none" : this.videoinfonode.style.display = "inline-flex"
            } else !_WMSDISABLEAVCHAT && (this.isZohoGroupChat() || this.partcount > 2 && "1" === this.ctype || "8" === this.ctype) && WebMessanger.isCliqUser() && ($WC.$CUtil.isChrome() || $WC.$CUtil.isFirefox()) ? (this.videoinfonode.className = "wms_cw_primetime", this.videoinfonode.setAttribute("title", $WC.I18N("videobroadcast.primetime") + " - " + $WC.I18N("videobroadcast.dlg.imagetitle"))) : this.videoinfonode.style.display = "none"
    }, ChatWindow.prototype.clearTypingStatus = function() {
        var e = this.typingstatusnode;
        $WC.Util.addClass(e, "wms_cw_typingstatus_animate"), e.setAttribute("data-typingstatus", !1)
    }, ChatWindow.prototype.handleMediaCall = function(e) {
        if (this.getToolBarStatus()) {
            var t = this.recipant;
            if (t && t.length > 0 && 2 == this.partcount) {
                var s = $WC.Util.getEventTarget(e);
                s.getAttribute("data-audioicon") ? WMSUI.makeMediaCall(WMSUI.avCall.CALL_TYPE_VOICE, t) : s.getAttribute("data-videoicon") ? WMSUI.makeMediaCall(WMSUI.avCall.CALL_TYPE_VIDEO, t) : s.getAttribute("data-shareicon") && WMSUI.makeMediaCall(WMSUI.avCall.CALL_TYPE_SCREENSHARE, t)
            } else {
                var i = $WC.Util.getEventTarget(e);
                i.getAttribute("data-startmeeticon") ? WMSUI.makeGroupCallInCliq(WMSUI.avCall.GROUP_CALL_TYPE_START, this.objId) : i.getAttribute("data-schedulemeeticon") && WMSUI.makeGroupCallInCliq(WMSUI.avCall.GROUP_CALL_TYPE_SCHEDULE, this.objId)
            }
        }
        this.checkAndHideVideoDropdown(e), e.stopPropagation()
    }, ChatWindow.prototype.startPrimeTime = function() {
        if (this.isZohoGroupChat() || this.partcount > 2 && "1" === this.ctype || "8" === this.ctype) {
            var e = _WMSCHATURL + "startprimetime.do?chid=" + encodeURIComponent(this.objId),
                t = WmsSettings.primetime_onboard_count;
            if (t > 2) window.open(e);
            else {
                var s = "primetime_onboard_count=" + (parseInt(t) + 1);
                if (WebMessanger.updateSettings(s), null === document.getElementById("zcwindows")) {
                    var i = $WC.Util.createElement("div", "zcwindows", "zcoverlay");
                    i.style.zIndex = WebMessanger.setzindex, document.body.appendChild(i)
                }
                var n = '<div class="mcontent"><div class="zcprime_lhs"><img src="' + $WC.Config.get("staticserverpath") + '/images/bar/642320e3_pt_dialog.png" width="280" height="218" /><strong class="zcprime_content">' + $WC.I18N("videobroadcast.dlg.imagetitle") + '</strong></div><div class="zcprime_rhs"><p>' + $WC.I18N("videobroadcast.dlg.title") + '</p><ul><li class="mcontent_p">' + $WC.I18N("videobroadcast.dlg.desc1") + '</li><li class="mcontent_p">' + $WC.I18N("videobroadcast.dlg.desc2") + '</li><li class="mcontent_p">' + $WC.I18N("videobroadcast.dlg.desc3") + '</li></ul><a href=" ' + _PRIMETIMEHELPLINK + '" target="_blank">' + $WC.I18N("common.learnmore") + '</a><div class="zcprime_confirm"><p>' + $WC.I18N("videobroadcast.dlg.session") + '</p><div id="primetime_start_confirm" class="zcdbtn">' + $WC.I18N("videobroadcast.dlg.proceed") + "</div></div></div></div>";
                $WC.$Win.create({
                    id: "primetime_trigger",
                    header: '<div class="wms_cw_primetime "><strong>' + $WC.I18N("videobroadcast.primetime") + "</strong></div>",
                    html: n,
                    class: "zcprime"
                });
                var a = document.getElementById("primetime_start_confirm");
                Gator(a).on("click", (function() {
                    $WC.$Win.destroy("primetime_trigger"), window.open(e)
                }))
            }
        }
    }, ChatWindow.prototype.toggleActions = function() {
        "block" === this.actionlistnode.style.display ? this.hideActions() : ($WC.Util.addClass(this.actionbutton, "wms_cw_toolbar_actionbutton_selected"), this.actionlistnode.style.display = "block", this.makeNormalAndPropagate())
    }, ChatWindow.prototype.hideActions = function() {
        "block" === this.actionlistnode.style.display && (this.actionlistnode.style.display = "none", $WC.Util.removeClass(this.actionbutton, "wms_cw_toolbar_actionbutton_selected"), this.makeNormalAndPropagate())
    }, ChatWindow.prototype.getActions = function(e) {
        if (!this.actionlistnode.querySelector('[data-purpose="wms_botactions"]')) {
            var t = $WC.Bots.get(e),
                s = this.objId;
            if (!$WC.Util.isEmpty(t) && t.actionhandles && t.actionhandles.length) this.updateActionsUI(e);
            else {
                $WC.Bots.updateBotActions(e, []);
                var i = "v1/bots/" + e + "/getactions";
                $WC.Ajax.requestToChat(i, null, (function() {
                    var t = JSON.parse(this.response);
                    $WC.Bots.updateBotActions(e, t.data.actions);
                    var i = WindowHandler.getWinObjById(s);
                    i && (i.updateActionsUI(e), i.updatePinnedInfo(i.ispinned))
                }), (function() {
                    $WC.Bots.updateBotActions(e, void 0)
                }))
            }
        }
    }, ChatWindow.prototype.updateActionsUI = function(e) {
        var t = "",
            s = $WC.Bots.get(e);
        if (!$WC.Util.isEmpty(s) && void 0 !== s.actionhandles) {
            function i(e) {
                var t = "";
                if (e.icon) {
                    var [s, i] = e.icon.split("/");
                    t = ' data-icon="' + s + '" ', i && (t += 'data-iconcolor="#' + i + '" style="--wms-boticon-color: #' + i + ';" ')
                }
                return t
            }
            for (var n = 0; n < s.actionhandles.length; n++) {
                var a = s.actionhandles[n],
                    o = "";
                if (a.display_props && a.display_props.sub_actions) {
                    o = '<ul class="wms-botsubmenu" >';
                    for (var r = 0; r < a.display_props.sub_actions.length; r++) {
                        var l = a.display_props.sub_actions[r],
                            d = i(l),
                            c = $WC.Util.safeHTML($WC.Util.unescapeHTML(l.name));
                        o += "<li class='wms-truncate-ellipsis' data-sub_action_index=\"" + r + "\" title='" + c + "' " + d + ">" + c + "</li>"
                    }
                    o += "</ul>"
                }
                var u = "";
                a.display_props && a.display_props.icon && (u = i(a.display_props));
                var m = $WC.Util.safeHTML($WC.Util.unescapeHTML(a.display_props.name));
                t += '<div data-purpose="wms_botactions" data-botid="' + e + '" data-exec_id="' + a.id + '" data-display_props="' + m + '" class="wms_cw_toolbar_actionitem wms_botactionicn" ' + u + ">" + m + o + "</div>"
            }
        }
        this.actionlistnode.insertAdjacentHTML("beforeend", t)
    }, ChatWindow.prototype.populateChatTitleEdit = function() {
        return '<form data-titleform="true"><input type="text" class="' + (this.partcount > 2 || this.isLiveSupportChat() || this.isZohoGroupChat() ? "wms-gni" : "wms-cni") + '" id="wmseditchattitletxt" autocomplete="off"/></form>'
    }, ChatWindow.prototype.checkkey = function(e) {
        27 == e.keyCode && this.setTitle(this.getTitle())
    }, ChatWindow.prototype.focusChatTitle = function() {
        var e = this.getInnerObject("wmseditchattitletxt", "INPUT");
        e.select(), e.focus()
    }, ChatWindow.prototype.openInCliq = function() {
        var e = _WMSCHATURL + "chats/" + this.objId;
        window.open(e, "_blank").opener = null
    }, ChatWindow.prototype.getRecentChats = function() {
        2 == this.partcount && this.recipant && ZMSGUI.showChatHistory(this.recipant), this.hideActions()
    }, ChatWindow.prototype.muteChat = function(e) {
        var t = !0,
            s = $WC.Util.getEventTarget(e).getAttribute("data-duration");
        this.mutedinterval && "-1" !== this.mutedinterval ? t = !1 : s || (s = "-1"), this.updateMuteInfo(t), this.hideActions(), WebMessanger.muteChat(this.objId, s, t)
    }, ChatWindow.prototype.unsubscribeBot = function(e) {
        var t = "b-" + $WC.Bots.getBotId(this.objId);
        $WC.Ajax.postRequestToChat("v1/bots/" + t + "/unsubscribe"), this.closeAndPropagate(e)
    }, ChatWindow.prototype.leaveChat = function(e) {
        WMSUI.leaveChat(this.objId, this.title)
    }, ChatWindow.prototype.followThread = function(e) {
        WebMessanger.followThread(this.objId, this.thread_follower), this.hideActions()
    }, ChatWindow.prototype.showInfoMsg = function(e) {
        this.showErrorMsg(e, "info")
    }, ChatWindow.prototype.showErrorMsg = function(e, t) {
        $WC.$CUtil.setInnerText(this.errormsgnode, e), this.errormsgnode.className = "info" === t ? "wms_cw_infomsg wms-halign" : "wms_cw_errormsg wms-halign", this.errormsgnode.style.display = "block", this.error_timer = setTimeout((function(e) {
            e.hideErrorMsg()
        }), 3e3, this)
    }, ChatWindow.prototype.hideErrorMsg = function() {
        this.errormsgnode.style.display = "", $WC.$CUtil.setInnerText(this.errormsgnode, "")
    }, ChatWindow.prototype.pinChat = function() {
        WebMessanger.pinChat(this.objId, !this.ispinned), this.hideActions()
    }, ChatWindow.prototype.revertTitle = function() {
        var e = WmsContacts.getDisplayName(this.recipant) || this.partinfo[this.recipant].dname;
        WebMessanger.setChatTitle(this.objId, e, this.title), this.hideActions()
    }, ChatWindow.prototype.toggleChatTitle = function() {
        "cleartitle" === this.getInnerObject("wms-chattitle", "P").getAttribute("data-purpose") ? WebMessanger.setChatTitle(this.objId, "") : this.editChatTitle()
    }, ChatWindow.prototype.editChatTitle = function() {
        if (!(1 == this.ctype && 2 == this.partcount || "9" === this.ctype || "8" === this.ctype || "5" === this.ctype || "10" === this.ctype || "wmseditchattitletxt" === document.activeElement.id || WMSUI.showErrorIfPermDenied(this.objId) || "4" === this.ctype && this.salesiqchat || WebMessanger.isExclusiveChat() || WebMessanger.isRTCChat())) {
            var e = this.titlenode.querySelector('[data-title="true"]');
            e.innerHTML = this.populateChatTitleEdit(), WindowHandler.getObjectInObject(e, "wmseditchattitletxt", "INPUT").value = $WC.Util.unescapeHTML(this.getTitle()), this.focusChatTitle()
        }
    }, ChatWindow.prototype.checkChatTitle = function(e) {
        try {
            if ((e = e.trim()).length > 200) return this.focusChatTitle(), !1;
            this.setTitle(unescape(this.getTitle()))
        } catch (e) {
            return !1
        }
    }, ChatWindow.prototype.saveChatTitle = function(e) {
        e = e.trim();
        var t = this.getTitle();
        if (t != e) {
            if (0 == e.length) return alert($WC.I18N("Please_enter_the_chat_title")), this.focusChatTitle(), !1;
            if (e.length > 200) return alert($WC.I18N("Max_200_chatracters_allowed_for_chat_title")), this.focusChatTitle(), !1;
            WebMessanger.setChatTitle(this.objId, e, t), this.setTitle(e)
        } else this.setTitle(e)
    }, ChatWindow.prototype.insertAddParticipant = function(e) {
        if (this.hideActions(), 8 == this.ctype && 0 == $WC.Channels.isUserHasPermission(this.objId, $WC.WmsConstants.USERPERMISSIONS.SEND_MESSAGE) && $WC.Channels.isUserHasPermission(this.objId, $WC.WmsConstants.USERPERMISSIONS.ADD_MEMBER)) this.populateGroupMembers(!0);
        else if (!WMSUI.showErrorIfPermDenied(this.objId)) {
            var t = this.composer.selectionStart;
            this.composer.value = this.composer.value.substring(0, t) + "+" + this.composer.value.substring(t), $WC.Util.moveCaretPosition(this.composer, t + 1, t + 1), WMSUI.handleStatus(e, this.composer, this.objId)
        }
    }, ChatWindow.prototype.setHistoryStorage = function() {
        this.hideActions(), WMSUI.showErrorIfPermDenied(this.objId) || ("0" === this.savehistory ? (WebMessanger.setHistoryStorage("enable", this.objId), $WC.$CUtil.setInnerText(this.actionlistnode.querySelector("[data-historyoff]"), $WC.I18N("history.off"))) : (WebMessanger.setHistoryStorage("disable", this.objId), $WC.$CUtil.setInnerText(this.actionlistnode.querySelector("[data-historyoff]"), $WC.I18N("history.on"))))
    }, ChatWindow.prototype.leaveChannel = function() {
        WebMessanger.leaveChannel(this.objId), this.hideActions()
    }, ChatWindow.prototype.handleCopyPermaLink = function(e) {
        if ($WC.Util.isThreadChid(this.objId) || !e && this.isZohoGroupChat()) var t = _WMSCHATURL + "chats/" + this.objId;
        else {
            var s = $WC.Channels.get(this.objId);
            t = "";
            s && s.un || "string" == typeof e ? (e = "click" == e.type ? s.un : e, t = _WMSCHATURL + "channels/" + e) : t = _WMSCHATURL + "chats/" + this.objId
        }
        document.getElementById("wmstoolbar");
        $WC.Util.copyTextToClipboard(t), WMSUI.showInfoMsg($WC.I18N("channel.permalink.banner")), WindowHandler.getWinObjById(this.objId) && this.hideActions()
    }, ChatWindow.prototype.closeThread = function() {
        var e = this.objId,
            t = new $WC.ConfirmationDialog,
            s = [$WC.I18N("thread.close.header", [this.title])],
            i = {
                actions: [{
                    text: $WC.I18N("thread.action.close"),
                    onclick: function() {
                        WebMessanger.closeThread(e), t.unmountComponent()
                    },
                    buttonstyle: "destructive_button"
                }, {
                    text: $WC.I18N("common.cancel"),
                    onclick: function() {
                        t.unmountComponent()
                    },
                    buttonstyle: "cancel_button"
                }],
                heading: [s],
                bodytitle: $WC.I18N("info.thread.close.info1")
            };
        t.mountComponent(i), this.hideActions()
    }, ChatWindow.prototype.updateSaveHistory = function(e) {
        this.savehistory = e
    }, ChatWindow.prototype.updateSaveHistoryInUI = function() {
        "0" === this.savehistory ? ($WC.$CUtil.setInnerText(this.actionlistnode.querySelector("[data-historyoff]"), $WC.I18N("history.on")), WmsChatCache.get(this.objId) || this.updateInfoMessage($WC.I18N("history.message"))) : "1" === this.savehistory && $WC.$CUtil.setInnerText(this.actionlistnode.querySelector("[data-historyoff]"), $WC.I18N("history.off"))
    }, ChatWindow.prototype.changeActive = function() {
        WMSUI.handleDocumentActive()
    }, ChatWindow.prototype.joinChat = function() {
        null != this.objId && setTimeout("WebMessanger.join('" + this.objId + "')", 3e3)
    }, ChatWindow.prototype.populateGroupMembers = function(e) {
        var t = !1;
        "boolean" == typeof e && e && (t = !0), WMSUI.showParticipantsList(this.objId, this.title, t)
    }, ChatWindow.prototype.showProgress = function(e) {
        var t = e / 100,
            s = this.progressbarnode.querySelector("[data-progressbar-basic]");
        if (-1 == e) {
            var i = '<div class="wms_progressbar_failure_text">' + $WC.I18N("Sharing_failed") + '<span class="wms_cw_progressbar_cls" data-clearprogress="true" ><span class="wms_cw_opr_close"></span></span></div>';
            this.progressbarnode.style.display = "block", s.setAttribute("data-progressbar-basic", "true"), s.innerHTML = i
        } else if ("false" == s.getAttribute("data-progressbar-basic") || 0 == e) i = '<div class="wms_cw_progress_shadow"><div class="wms_cw_progressholder"><div class="wms-loading-sub" data-progressindicator="true" style="transform: scaleX(' + t + ')"></div></div><span id="wmsloadingtxt"class="wms-loading-text" data-progresstext="true">' + $WC.I18N("Sharing") + " " + e + "%</span></span></div>", this.progressbarnode.style.display = "block", s.setAttribute("data-progressbar-basic", "true"), s.innerHTML = i;
        else {
            this.progressbarnode.querySelector("[data-progressindicator]").style.transform = "scaleX(" + t + ")";
            var n = this.progressbarnode.querySelector("[data-progresstext]");
            $WC.$CUtil.setInnerText(n, $WC.I18N("Sharing") + " " + e + "%")
        }
    }, ChatWindow.prototype.clearProgress = function() {
        this.progressbarnode.style.display = "none";
        var e = this.progressbarnode.querySelector("[data-progressbar-basic]");
        e.setAttribute("data-progressbar-basic", "false"), e.innerHTML = ""
    }, ChatWindow.prototype.removeSendFile = function() {
        this.attachmentnode.style.display = "none"
    }, ChatWindow.prototype.storeWindowState = function(e) {
        WebMessanger.isExclusiveChat() || WebMessanger.isRTCChat() || $WC.WmsSessionStorage.setChatInfo({
            chid: this.objId,
            state: e
        })
    }, ChatWindow.prototype.removeWindowState = function() {
        $WC.WmsSessionStorage.removeChatState(this.objId)
    }, ChatWindow.prototype.updateAttachInfo = function(e) {
        this.attached = e
    }, ChatWindow.prototype.replaceMessages = function(e) {
        $WC.Util.isArray(e) && e.length > 0 && (Message.constructAndAppendChatContent(e, this.msgdisp, this.getObjId()), this.scrollDisplay())
    }, ChatWindow.prototype.isMsgAlreadyUpdated = function(e, t) {
        return !!t.querySelector('[data-msgid="' + e.sender + "_" + e.msgid + '"],[data-msgid="' + e.sender + "_" + e.time + '"]')
    }, ChatWindow.prototype.updateMessage = function(e) {
        var t = this.ctrlcomp,
            s = this.scrollDisplay,
            i = t.scrollHeight - t.clientHeight <= t.scrollTop + 20,
            n = {};
        n = Message.isMetaMsg(e) ? $WC.Util.cloneObject(e, !0) : e, $WC.Util.isArray(n) || (n = [n]);
        var a = this.msgdisp.querySelectorAll("#" + this.msgdisp.id + " > [data-senderzuid]");
        if (a.length > 0) var o = a[a.length - 1].getAttribute("data-senderzuid");
        var r = this.msgdisp.querySelectorAll("[data-msgtime]");
        if (r.length > 0) var l = r[r.length - 1].getAttribute("data-msgtime");
        "" == l && r[r.length - 2] && (l = r[r.length - 2].getAttribute("data-msgtime"));
        var d = $WC.Util.isLocalUser(n[0].sender);
        if (n[0] && Message.isDelayMsg(n[0])) {
            var c = parseInt(n[0].meta.config.d);
            clearTimeout(this.msgdelaytimer), this.msgdelaytimer = setTimeout(function() {
                Message.constructAndAppendChatContent(n, this.msgdisp, this.getObjId(), o, l), s(i, t)
            }.bind(this), c)
        } else {
            this.typingstatusnode.getAttribute("data-typingstatus") && this.typingstatusnode && !d && ($WC.Util.addClass(this.typingstatusnode, "wms_cw_typingstatus_animate"), clearTimeout(Self.Timer[this.getObjId()]));
            var u = this.msgdisp.lastChild,
                m = !(!u || !u.getAttribute("data-loadmorebutton") && !u.getAttribute("data-loadmore"));
            if (m && (o = "", l = ""), Message.constructAndAppendChatContent(n, this.msgdisp, this.getObjId(), o, l), Message.checkAndRemoveUrlImage(this.msgdisp), d && "true" == this.msgdisp.lastChild.getAttribute("data-timefrag") && ("TEXTMSG" === Message.getMessageType(e) || "REPLYMSG" === Message.getMessageType(e)) && e.sentfromcomposer && (this.msgdisp.lastChild.innerText = $WC.I18N("message.status.sending")), m) {
                var h = $WC.Util.constructTranscriptLoadButton();
                u.insertAdjacentHTML("afterend", h), $WC.Util.removeElement(u)
            } else d && (this.clearUnreadMarker(), this.scrollDisplay())
        }
        this.scrollDisplay(i, t), "undefined" != typeof WmsUIImpl && WmsImplHandler.invoke(WmsUIImpl.handleNewMessage, this.ctype, this.objId, this.getChannelUID(), n[0] && n[0].msg)
    }, ChatWindow.prototype.updateUnreadThreadCount = function(e, t) {
        var s = WmsMainUI.getUnreadCount(e, null, t),
            i = this.ctrlcomp.querySelector('[data-thread_chid="' + t + '"]');
        if (i) {
            var n = i.querySelector('[id="wms_threadlinkwrapper"]');
            n && n.querySelector('[id="wms_unreadthreadcount"]') && $WC.Util.removeElement(n.querySelector('[id="wms_unreadthreadcount"]')), s && n.insertAdjacentHTML("beforeend", '<span id="wms_unreadthreadcount" class="wms_menu_item_count wms_threadunread_count">' + s + "</span>")
        }
    }, ChatWindow.prototype.updateMessageFragment = function(e, t, s) {
        var i = this.ctrlcomp;
        t = t || e.sender + "_" + e.msgid, e.hasOwnProperty("isInfected") && (t = e.sender + "_" + e.origin_time);
        var n = i.querySelector('[data-msgid="' + t + '"]') || s && i.querySelector('[data-msguid="' + s + '"]');
        if (n && (!n.parentNode.closest("[data-type]") || n.parentNode.closest("[data-type]").getAttribute("data-type") !== Message.types.THREADMSG)) {
            var a = Message.getMessageType(e);
            if (a !== Message.types.THREADLINKMSG || !n.parentNode.closest("[data-type]") || n.parentNode.closest("[data-type]").getAttribute("data-type") !== Message.types.THREADLINKMSG) {
                if (a !== Message.types.THREADLINKMSG || n.querySelector("[data-thread_chid]"))
                    if (Message.isMetaMsg(e) || a === Message.types.IMGATT || a === Message.types.FILEATT || a === Message.types.AUDIOATT || a === Message.types.VIDEOATT || WebMessanger.isRTCChat() && 5 == e.ctype) {
                        var o = i.scrollHeight - i.clientHeight <= i.scrollTop + 20,
                            r = {};
                        Message.isMetaMsg(e) ? (r.dname = e.dname, r.meta = e.meta, r.msg = e.msg, r.msgid = e.msgid || t, r.sender = e.sender, r.time = e.time, r.msguid = e.msguid, r.isInfected = e.isInfected || !1, e.reactions && (r.reactions = e.reactions), e.mod && (r.mod = e.mod)) : r = e, $WC.Util.isArray(r) || (r = [r]);
                        var l = i.querySelectorAll("[data-senderzuid]");
                        if (l.length > 0) {
                            var d = l[l.length - 1].getAttribute("data-senderzuid");
                            e.meta && (e.meta.message_source || e.meta.btnindexvsdetails || e.meta.native_widget) && (d = r[0].sender)
                        }
                        var c = i.querySelectorAll("[data-msgtime]");
                        if (c.length > 0) var u = c[c.length - 1].getAttribute("data-msgtime");
                        if (!n.querySelector("[data-furl]") || n.querySelector("[data-previewable]") && n.querySelector("[data-localattachment]") || a == Message.types.VIDEOATT) {
                            var m = Message.constructChatContent(r, "", e.chid, d, u);
                            return n.nextSibling && "wms-msgtime" === n.nextSibling.className && $WC.Util.removeElement(n.nextSibling), n.outerHTML = m, Message.checkAndRemoveUrlImage(this.msgdisp), void this.scrollDisplay(o, i)
                        }
                        n.querySelector("[data-furl]").setAttribute("data-msguid", r[0].msguid);
                        var h = "/" + _CHATCONT + "/v1/attachments/" + r[0].msg.url;
                        if (WebMessanger.isNetworkUser() && (h = Message.getDownloadUrl(r[0].msg), WebMessanger.isUDSDownloadEnabled() && (h = $WC.Util.modifyXCliMsgParam(h, {
                                screen_name: WebMessanger.network_info.screen_name
                            }))), n.querySelector("[data-furl]").setAttribute("data-src", r[0].msg.url), n.querySelector("[href]") && "true" != n.querySelector("[href]").parentNode.getAttribute("data-filecomment"))
                            for (var g = n.querySelectorAll("[href]"), p = 0; p < g.length; p++) g[p].href = h;
                        if (n.querySelector("[data-filefrwrd]") && n.querySelector("[data-filefrwrd]").setAttribute("data-furl", r[0].msg.url), n.querySelector("img[data-previewable]") && (n.querySelector("img[data-previewable]").setAttribute("data-fsrc", r[0].msg.url), n.querySelector("img[data-previewable]").setAttribute("data-furl", r[0].msg.url), n.querySelector("img[data-previewable]").setAttribute("data-src", r[0].msg.url)), n.querySelector(".zhshare-src") && "WP" == WebMessanger.prd && null != WMSUI.zhShareInstance) {
                            var f = !(!r[0].msg.thumb || "true" != r[0].msg.thumb),
                                v = JSON.stringify({
                                    id: r[0].msg.url,
                                    chatId: this.objId,
                                    size: r[0].msg.dim.size,
                                    name: r[0].msg.fName,
                                    contentType: r[0].msg.content,
                                    preview: f
                                });
                            n.querySelector(".zhshare-src").setAttribute("data-zhshare-src-meta", v)
                        }
                        if (n.querySelector("[data-media]") && (n.querySelector("[data-media]").setAttribute("source", h), $WC.Util.isElectron())) {
                            var C = n.querySelector("audio");
                            if (C) {
                                var b = Message.getDownloadUrl(r[0].msg);
                                C.src = b, n.querySelector("[data-fsrc]") && n.querySelector("[data-fsrc]").setAttribute("data-fsrc", b)
                            }
                        }
                        n.querySelector("[data-fcontent]") && n.querySelector("[data-fcontent]").setAttribute("data-fcontent", r[0].msg.content), n.querySelector("[data-infected]") && n.querySelector("[data-infected]").setAttribute("data-infected", r[0].isInfected)
                    } else $WC.$CUtil.setInnerText(n.querySelector('[class="wms-msgtime"]'), $WC.DateUtil.formatTime(e.time));
                else if ((S = $WC.Util.cloneObject(e, !0)).msguid = s || e.msguid, m = Message.constructChatContent([S], i, this.objId, e.sender), e.meta && e.meta.native_widget && e.meta.native_widget && "events" == e.meta.native_widget.type && !e.isfirstthreadmessage) n.nextSibling && "wms-msgtime" === n.nextSibling.className && $WC.Util.removeElement(n.nextSibling), n.outerHTML = m, this.updateReactionFragment(e.msguid);
                else {
                    var y = n;
                    y.className = "", n.outerHTML = m, (n = i.querySelector('[data-msgid="' + t + '"]')).parentNode.replaceChild(y, n);
                    var _ = y.querySelector('[class="wms_reaction_frag"]');
                    _ && ($WC.Util.removeElement(y.querySelector('[class="wms_reaction_frag"]')), y.parentNode.closest("[data-msgid]").appendChild(_))
                }
                if (e.mtype === "" + CT_EDITED_MSG || e.mtype === "" + CT_SYSTEM_EDIT) {
                    if (e.mtype == "" + CT_SYSTEM_EDIT && "1" === WmsSettings.translation_mode && e.msg && e.msg.meta && e.msg.meta.translationData) {
                        var W = e.msg.meta.translationData;
                        if (W.translation && W.translation[WebMessanger.language] && W.translation[WebMessanger.language].translation && !$WC.Util.isLocalUser(e.msg.sender) && Message.translationmsgstore[e.msg.msguid]) return Message.translationmsgstore[e.msg.msguid].translation = W.translation[WebMessanger.language].translation, void Message.replaceTranslatedMessage(n, Message.translationmsgstore[e.msg.msguid], !0)
                    }
                    var S, w = "";
                    if (n.nextSibling && "wms-msgtime" === n.nextSibling.className) {
                        w = n.nextSibling.getAttribute("data-read");
                        var M = n.querySelector("[data-thread_chid]");
                        if (M) {
                            var I = {};
                            I.chat_id = M.getAttribute("data-thread_chid"), I.follower_count = M.getAttribute("data-thread_followercnt"), I.is_follower = M.getAttribute("data-thread_follower"), I.message_count = M.getAttribute("data-thread_msgcount"), I.thread_message_id = M.getAttribute("data-thread_msgid"), I.title = M.getAttribute("data-thread_title")
                        }
                        $WC.Util.removeElement(M), $WC.Util.removeElement(n.nextSibling)
                    }
                    for (var T = n; T && !T.getAttribute("data-senderzuid");) T = T.previousSibling;
                    e.msg.mtype = e.mtype, (S = $WC.Util.cloneObject(e.msg, !0)).msg["img-data"] = "", S.is_read = !(!S.is_read && "true" !== w), I && (S.thread_information = I), n.getAttribute("data-starselected") && (S.star = "true" == n.getAttribute("data-starselected"), S.startype = parseInt(n.getAttribute("data-startype")));
                    var A = "";
                    if (T.previousSibling)
                        if ("wms-msgtime" === T.previousSibling.className) A = T.previousSibling.previousSibling.getAttribute("data-msgtime");
                        else A = T.previousSibling.getAttribute("data-msgtime");
                    if (m = Message.constructChatContent([S], i, this.objId, T.getAttribute("data-senderzuid"), A), n.outerHTML = m, Message.checkAndRemoveUrlImage(this.msgdisp), this.updateReactionFragment(e.msg.msguid), n.setAttribute("data-msgtime", e.msg.origin_time), n.setAttribute("data-msgid", e.msg.sender + "_" + e.msg.origin_time), n.setAttribute("data-msguid", e.msg.msguid), (n = i.querySelector('[data-msgid="' + t + '"]')).nextSibling && "wms-msgtime" === n.nextSibling.className) {
                        var E = n.nextSibling.querySelector("[data-timetext]");
                        $WC.$CUtil.setInnerText(E, $WC.DateUtil.formatTime(e.msg.origin_time)), e.mtype !== "" + CT_SYSTEM_EDIT && n.nextSibling.querySelector("[data-edited]").setAttribute("data-edited", "true")
                    }
                    if (S.meta && (S.meta.message_source && S.meta.message_source.id && S.meta.message_source.id == T.getAttribute("data-senderzuid") || S.meta.usermessagedetails && S.meta.usermessagedetails.custom_sender_name)) {
                        var U = n.previousSibling;
                        U && U.getAttribute("data-senderzuid") == T.getAttribute("data-senderzuid") && $WC.Util.removeElement(U)
                    }
                } else n.removeAttribute("data-notack"), n.setAttribute("data-msgtime", e.time), n.setAttribute("data-msgid", e.sender + "_" + e.time), "0" !== this.savehistory && n.setAttribute("data-msguid", e.msguid)
            }
        }
    }, ChatWindow.prototype.updateReactionFragment = function(e) {
        var t = this.ctrlcomp.querySelector('[data-msguid="' + e + '"]');
        if (t) {
            var s = t.querySelector(".wms_reaction_frag"),
                i = Message.getScrollHeight(this.ctrlcomp),
                n = Message.getScrollTop(this.ctrlcomp);
            if (s) {
                var a;
                if (this.reactions[e]) t.getAttribute("data-allreactionsshown") && (this.reactions[e].list.length < 15 ? t.removeAttribute("data-allreactionsshown") : a = !0), s.outerHTML = Message.constructReactionsFragment(this.reactions[e].data, this.reactions[e].list, a);
                else s.outerHTML = "";
                WMSUI.checkAndLoadCustomEmojis(this.ctrlcomp)
            } else this.reactions[e] && (t = t.nextSibling.getAttribute("data-thread_chid") ? t.nextSibling : t).insertAdjacentHTML("beforeend", Message.constructReactionsFragment(this.reactions[e].data));
            Message.restoreScrollPosition(this.ctrlcomp, i, n)
        }
        Message.toggleLiveZomoji(this.ctrlcomp)
    }, ChatWindow.prototype.updateCurrentUserReactionData = function(e, t) {
        var s = t[301],
            i = t.opr;
        for (var n in s) {
            var a = "add" == i ? s[n].split(":")[1] : s[n];
            if (this.reactions[e] && this.reactions[e].data[n]) {
                var o = this.reactions[e].data[n].users ? this.reactions[e].data[n].users : this.reactions[e].data[n],
                    r = this.getReactionIndex(o, a);
                "add" == i && (-1 != r ? o[r] = s[n] : (o.push(s[n]), this.reactions[e].data[n].hasCurrentUserReacted = "true")), "delete" == i && -1 != r && o.splice(r, 1)
            }
        }
    }, ChatWindow.prototype.checkAndUpdateThreadReaction = function(e, t, s) {
        var i = this.ctrlcomp.querySelector('[data-msguid="' + e + '"]');
        if (i && i.getAttribute("data-type") == Message.types.THREADLINKMSG) {
            var n = i.querySelector("[data-thread_chid]").getAttribute("data-thread_chid");
            winobj = WindowHandler.getWinObjById(n), winobj && (s == CT_MSG_REACT_CURR ? winobj.updateCurrentUserReactionData(e, $WC.Util.cloneObject(t)) : s == CT_MSG_REACT && winobj.updateReactionData(e, $WC.Util.cloneObject(t)), winobj.updateReactionFragment(e))
        }
    }, ChatWindow.prototype.getReactionIndex = function(e, t) {
        return e.indexOf(e.find((function(e) {
            if (-1 !== e.indexOf(":" + t + ":")) return !0
        })))
    }, ChatWindow.prototype.updateReactionData = function(e, t) {
        var s = Object.keys(t);
        if (0 === s.length) delete this.reactions[e];
        else {
            if (this.reactions[e] && this.reactions[e].list.length) {
                for (var i = this.reactions[e].list, n = s, a = [], o = 0; o < i.length; o++) - 1 !== n.indexOf(i[o]) && a.push(i[o]);
                for (var r = 0; r < n.length; r++) - 1 === a.indexOf(n[r]) && a.push(n[r]);
                this.reactions[e].list = a
            } else this.reactions[e] = {
                list: [],
                data: {}
            }, this.reactions[e].list = WMSUI.checkAndSortReactions(t);
            for (var l in t)
                if (t[l].count && this.reactions[e] && this.reactions[e].data[l] && "true" == this.reactions[e].data[l].hasCurrentUserReacted) {
                    var d = t[l].users;
                    if (t[l].hasCurrentUserReacted = "true", -1 == this.getReactionIndex(d, WebMessanger.zuid)) {
                        var c = this.reactions[e].data[l].users,
                            u = this.getReactionIndex(c, WebMessanger.zuid); - 1 != u ? t[l].users.push(c[u]) : t[l].users.push(Date.now() + ":" + WebMessanger.zuid + ":" + WebMessanger.nname)
                    }
                }
            this.reactions[e].data = t
        }
    }, ChatWindow.prototype.updateMyReactionData = function(e, t, s) {
        if (s) {
            var i = this.reactions[e].data[t].users ? this.reactions[e].data[t].users : this.reactions[e].data[t];
            if (this.reactions[e].data[t].count) {
                var n = parseInt(this.reactions[e].data[t].count);
                n--, this.reactions[e].data[t].count = n + ""
            }
            var a = i.indexOf(i.find((function(e) {
                if (-1 !== e.indexOf(":" + WebMessanger.zuid + ":")) return !0
            })));
            i.splice(a, 1), this.reactions[e].data[t].hasCurrentUserReacted = "false", 0 === i.length && (delete this.reactions[e].data[t], this.reactions[e].list.splice(this.reactions[e].list.indexOf(t), 1)), 0 === this.reactions[e].list.length && delete this.reactions[e]
        } else {
            var o = Date.now() + ":" + WebMessanger.zuid + ":" + WebMessanger.nname;
            this.reactions[e] ? this.reactions[e].data[t] ? this.reactions[e].data[t].count ? (this.reactions[e].data[t].count = parseInt(this.reactions[e].data[t].count) + 1 + "", this.reactions[e].data[t].hasCurrentUserReacted = "true", this.reactions[e].data[t].users.push(o)) : this.reactions[e].data[t].push(o) : (this.reactions[e].list.push(t), this.reactions[e].data[t] = {
                count: "1",
                users: [o],
                hasCurrentUserReacted: "true"
            }) : (this.reactions[e] = {
                list: [t],
                data: {}
            }, this.reactions[e].data[t] = {
                count: "1",
                hasCurrentUserReacted: "true",
                users: [o]
            })
        }
        this.updateReactionFragment(e)
    }, ChatWindow.prototype.updateInfoMessage = function(e, t, s, i, n) {
        var a = {
            msg: e = {
                msg: e,
                type: s
            },
            messagetype: Message.types.INFOMSG,
            sender: i,
            dname: n,
            time: t || (new Date).getTime()
        };
        this.updateMessage(a)
    }, ChatWindow.prototype.checkAndUpdateMissingTranscript = function(e, t) {
        var s = e.lmsgtime,
            i = e.time,
            n = s && this.msgdisp.querySelector('[data-msgtime="' + s + '"]');
        if (s && !n && t) {
            for (; !t.getAttribute("data-msgid") || t.getAttribute("data-msgid") && (t.getAttribute("data-notack") || "INFOMSG" == t.getAttribute("data-type"));) t = t.previousSibling;
            var a = t.getAttribute("data-msgtime");
            if (a && a < i) {
                for (var o = $WC.Util.createElement("div", null, null, {
                        "data-prevtime": a
                    });
                    "wms-msgtime" == t.nextSibling.className || t.nextSibling.getAttribute("data-msgfailure");) t = t.nextSibling;
                t.insertAdjacentElement("afterend", o), Message.loadSpecificTranscript(this.objId, this.msgdisp, o)
            }
        }
    }, ChatWindow.prototype.getAdjacentMsg = function(e, t) {
        for (; e && (!e.getAttribute("data-msgid") || "INFOMSG" == e.getAttribute("data-type"));) e = t ? e.previousSibling : e.nextSibling;
        return e
    }, ChatWindow.prototype.checkAndRemoveMsg = function(e) {
        var t = e.nextSibling,
            s = e.previousSibling,
            i = [];
        if (t && "wms-msgtime" == t.className) {
            var n = this.getAdjacentMsg(s, !0),
                a = n && n.nextSibling;
            !n || a && "wms-msgtime" == a.className ? i.push(t) : t.removeAttribute("data-edited")
        }
        if (s && s.getAttribute("data-senderzuid")) {
            var o = this.getAdjacentMsg(t, !1),
                r = o && o.previousSibling;
            (!o || r && r.getAttribute("data-senderzuid")) && i.push(s)
        }
        i.push(e), i.forEach((function(e) {
            $WC.Util.removeElement(e)
        }))
    }, ChatWindow.prototype.forwardSelectedMessages = function() {
        var e, t = $WC.WmsLocalStorage.getItem($WC.Config.get("zuid") + "_allow_forward_info"),
            s = [{
                onclick: function(e, s) {
                    t !== s && $WC.WmsLocalStorage.setItem($WC.Config.get("zuid") + "_allow_forward_info", s);
                    var i = {
                            sid: WebMessanger.sid,
                            fwdasgroup: !1
                        },
                        n = [],
                        a = [],
                        o = this.objId;
                    e.forEach((function(e) {
                        WmsContacts.getContactsList(e) || WmsOrgContacts.getOrgContactsList(e) ? n.push(e) : a.push(e), WmsMainUI.scheduleAutoFocus(e), !$WC.Config.get("disableOpeningForwardMessageRecipientChat") || $WC.Util.isChannelChid(e) || $WC.Util.isThreadChid(e) || (WindowHandler.forwardedMessageRecipientChat[e] = !0)
                    })), n.length && (i.userids = n.join(",")), a.length && (i.fwdchidlists = a.join(",")), s && (i.retain_trace = !0), i.msguids = this.getSelectedMsgsId().join(",");
                    var r = {
                        "X-XHR-exception": "true",
                        "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
                        "Content-Type": "application/json"
                    };
                    $WC.Ajax.postRequestToChat("v1/chats/" + this.objId + "/forward", i, null, (function() {
                        var e = WindowHandler.getWinObjById(o),
                            t = "string" == typeof this.response && "" != this.response ? JSON.parse(this.response) : this.response;
                        t && t.data && e.handleChatRestrictions(t.data)
                    }), null, null, r), this.toggleMessageSelection()
                }.bind(this)
            }];
        this.msgdisp.querySelectorAll('[data-msgsel="true"]').forEach((function(t) {
            var s = t.closest('[class^="wms-msgfrag"]');
            s.getAttribute("data-type") == Message.types.FORWARDEDMSG && s.querySelector(".wms_forwardmsg").getAttribute("data-nooriginalsenderinfo") && (e = !0)
        }));
        var i = null !== t && t;
        i = !e && i, (new $WC.ForwardMsg).mountComponent(this.objId, $WC.I18N("message.forward.to", ""), $WC.I18N("message.forward.placeholder"), s, i, e)
    }, ChatWindow.prototype.getSelectedMsgsId = function() {
        var e = this.msgdisp.querySelectorAll('[data-msgsel="true"]'),
            t = [];
        return e.forEach((function(e) {
            t.push(e.closest('[class^="wms-msgfrag"]').getAttribute("data-msgid"))
        })), t
    }, ChatWindow.prototype.toggleMessageSelection = function(e, t) {
        var s = this.msgdisp.querySelectorAll("[data-msgsel]");
        if (e && t) {
            this.forward_action = !0;
            var i = WindowHandler.chatrestrictions[this.objId] && WindowHandler.chatrestrictions[this.objId].restrictFileForward;
            s.forEach((function(e) {
                var t = e.getAttribute("data-type");
                "EDITEDMSG" !== t && "FORWARDEDMSG" !== t && "REPLYMSG" != t && "THREADMSG" != t && "THREADLINKMSG" != t || (t = e.closest(".wms-msgfrag").querySelector("[data-type]").getAttribute("data-type")), (!i || t != Message.types.FILEATT && t != Message.types.AUDIOATT && t != Message.types.VIDEOATT && t != Message.types.IMGATT) && "DELETEDMSG" !== e.getAttribute("data-type") && ($WC.Util.removeClass(e, "wms_checkbox_hidden"), $WC.Util.addClass(e, "wms_checkbox_visible"))
            }));
            var n = t.closest('[class^="wms-msgfrag"]');
            if (n) {
                var a = n.querySelector("[data-msgsel]");
                $WC.Util.removeClass(a, "wms_fwdcheckbox"), $WC.Util.addClass(a, "wms_fwdcheckboxsel"), a.setAttribute("data-msgsel", "true"), this.msgoprnode.style.display = "flex", this.footernode.style.display = "none", this.actionbutton.style.display = "none"
            }
        } else this.forward_action = !1, s.forEach((function(e) {
            $WC.Util.removeClass(e, "wms_checkbox_visible"), $WC.Util.removeClass(e, "wms_fwdcheckboxsel"), $WC.Util.addClass(e, "wms_checkbox_hidden"), $WC.Util.addClass(e, "wms_fwdcheckbox"), e.setAttribute("data-msgsel", !1)
        })), this.msgoprnode.style.display = "none", this.footernode.style.display = "table", this.actionbutton.style.display = "block", $WC.$CUtil.setInnerText(this.msgselectcntnode, $WC.I18N("msg.select.fwdcnt", [1])), this.msgoprnode.setAttribute("data-msgoperation", !0), $WC.Util.removeClass(this.msgselectcntnode.parentNode, "wms_fwdsel_alert"), $WC.Util.removeClass(this.msgoprnode, "wms-shake")
    }, ChatWindow.prototype.toggleSmiley = function() {
        this.permdenied || (this.smileyvisible ? this.hideSmileyUI() : this.showSmileyUI())
    }, ChatWindow.prototype.showSmileyUI = function(e, t) {
        if (this.autocompletepickervisible && t) this.smileyinstance.updateSearchTerm(t);
        else {
            var s = {
                autocomplete: !!e,
                hidesearch: !!e,
                showEmojiWithText: !!e,
                skintonepicker: !(e || !WmsSettings.adminsettings.showemojiskinpicker)
            };
            if (t && (s.searchterm = t), this.autocompletepickervisible && !e && this.hideSmileyUI(), -1 == this.smileycontainer.className.indexOf("wms-smileyborder") && (this.smileycontainer.className += " wms-smileyborder"), e) {
                this.autocompletepickervisible = !0, WMSUI.autoComplete.setKeyNavigation(this.composer, this.smileyinstance);
                var i = this.composer.value,
                    n = this.composer.selectionStart;
                i = i.substring(0, n), s.hidestickers = !(i.lastIndexOf(" " + $WC.WmsConstants.TRIGGERS.SMILEY) + 1 + n == this.composer.value.length)
            } else {
                var a = WmsSettings.showCustomEmojiOptions();
                this.smileyvisible = !0, a || (s.hidestickers = !0, s.hidecustomemoji = !0)
            }
            var o = WmsSettings.getEmoticonTypes();
            o && (s.hidelivezomoji = o.hidelivezomoji, s.hidezomoji = o.hidezomoji, s.hidegifs = o.hidegifs, s.hideemoji = o.hideemoji);
            var r = WmsImplHandler.invokeSynchronously(WmsUIImpl.getChatWindowOptions, this.objId, this.ctype, this.getChannelUID(), this.getChannelServiceCode(), this.getChannelSOID(), this.entityid);
            r && !$WC.Util.isEmptyObject(r) && ("disable" == r.zomoji && (s.hidezomoji = !0), "disable" == r.live_zomoji && (s.hidelivezomoji = !0), "disable" == r.gifs && (s.hidegifs = !0), "disable" == r.emoji && (s.hideemoji = !0)), this.smileyinstance.mountComponent(this.smileycontainer, !0, function(t, s, i) {
                e ? "sticker" == i || "frequentemoji" == i && $WC.Matcher.check("customemoji", t) ? (this.composer.value = "", Message.send(this.objId, t, null, null, null, null, this.getReplyMessageId(), null, !0)) : WMSUI.autoComplete.select(this.composer, t) : "gif" == i || "sticker" == i || "frequentemoji" == i && $WC.Matcher.check("customemoji", t) ? Message.send(this.objId, t, null, null, null, null, this.getReplyMessageId()) : Smiley.updateSmiley(this.composer, t), e ? this.hideSmileyUI() : this.toggleSmiley()
            }.bind(this), function() {
                e ? this.hideSmileyUI() : this.toggleSmiley()
            }.bind(this), s), this.footernode.style.borderRadius = "0px 0px 5px 5px"
        }
    }, ChatWindow.prototype.hideSmileyUI = function() {
        this.smileycontainer.className = this.smileycontainer.className.replace(" wms-smileyborder", ""), this.smileyinstance.unmountComponent(), this.composer.focus(), this.footernode.style.borderRadius = "5px 5px 5px 5px", this.autocompletepickervisible ? (this.autocompletepickervisible = !1, WMSUI.autoComplete.removeKeyNavigation(this.composer, this.smileyinstance)) : this.smileyvisible = !1
    }, ChatWindow.prototype.resetBarStatusIcon = function() {
        if (11 == this.ctype) {
            WmsMainUI.resetUnreadCount(this.thread_parentid, null, this.objId);
            var e = WindowHandler.getWinObjById(this.thread_parentid);
            e && e.toggleUnreadThreadBanner(), e && e.updateUnreadThreadCount(this.thread_parentid, this.objId)
        } else WmsMainUI.resetUnreadCount(this.objId);
        $WC.RecentChats.get(this.objId) && $WC.RecentChats.resetUnreadCount(this.objId), silent || ($WC.HybridSearch.isUnreadFilterOpen() && WmsMainUI.filterUnreadChats(), WmsMainUI.updateUnreadChatsCount(), this.updateBarMsgcount())
    }, ChatWindow.prototype.updateBarMsgcount = function() {
        var e;
        e = this.salesiqchat && $WC.Config.get("customContacts") ? WmsImplHandler.invokeSynchronously($WC.Config.get("customContacts").getUnreadCount, this.objId) : 11 == this.ctype ? WmsMainUI.getUnreadCount(this.thread_parentid, null, this.objId) : WmsMainUI.getUnreadCount(this.objId, null, null, !0), this.barmsgcountnode.title = e, e = e > 99 ? "99+" : e, $WC.$CUtil.setInnerText(this.barmsgcountnode, e), WmsMainUI.updateUnreadCountInUI(this.objId), 11 == this.ctype && WmsMainUI.getUnreadCount(this.thread_parentid, null, this.objId) > 0 || WmsMainUI.getUnreadCount(this.objId, null, null, !0) > 0 ? this.barmsgcountnode.style.display = "flex" : this.barmsgcountnode.style.display = "none"
    }, ChatWindow.prototype.getChannelUID = function() {
        var e, t = $WC.RecentChats.get(this.objId) && $WC.RecentChats.get(this.objId).ADDINFO,
            s = t && t.split(":");
        if (s)
            for (var i = 0; i < s.length; i++) "CHANNELUID" == s[i] && (e = s[i + 1]);
        return this.channelid || e || $WC.Channels.get(this.objId) && $WC.Channels.get(this.objId).oc_id
    }, ChatWindow.prototype.getChannelServiceCode = function() {
        return this.channelservicecode || $WC.Channels.get(this.objId) && $WC.Channels.get(this.objId).service
    }, ChatWindow.prototype.getChannelSOID = function() {
        return this.channelsoid || $WC.Channels.get(this.objId) && $WC.Channels.get(this.objId).servicespecid
    }, ChatWindow.prototype.getReplyMessageId = function(e) {
        var t, s, i = "true" === this.editorreplydiv.getAttribute("data-editmsg"),
            n = "true" === this.editorreplydiv.getAttribute("data-threadreply");
        if ("block" == this.editorreplydiv.style.display && !i) {
            if (n) return this.editorreplydiv.getAttribute("data-threadmsgid");
            (t = this.editorreplydiv.querySelector("[data-replymsgtime]")) && (s = e ? t.getAttribute("data-privatereplychid") : t.getAttribute("data-replymsguid"))
        }
        return s
    }, ChatWindow.prototype.constructReplyMessageObject = function(e, t, s, i) {
        var n, a = e.getAttribute("data-msgtime"),
            o = e.getAttribute("data-msgid"),
            r = e.getAttribute("data-msguid"),
            l = e.querySelector("[data-sendername]"),
            d = e.getAttribute("data-sendername") || l && l.getAttribute("data-sendername");
        n = Message.getMsgFromDom(this.objId, o, i, !0);
        var c = Message.getMessageType(n),
            u = o && o.split("_"),
            m = {
                meta: {
                    opr_replydetails: {
                        messagetype: c,
                        msgtime: a,
                        sender: u && (WebMessanger.isRTCChat() ? u.slice(0, 3).join("_") : u[0]),
                        sendername: d,
                        msguid: r
                    }
                }
            };
        if (t && (m.msg = t, m.time = s, m.sender = WebMessanger.zuid), c === Message.types.IMGATT || c === Message.types.FILEATT || c === Message.types.AUDIOATT || c === Message.types.VIDEOATT) var h = "addinfo";
        else h = "msg";
        return m.meta.opr_replydetails[h] = n, m
    }, ChatWindow.prototype.showEditPreview = function(e) {
        ("REPLYMSG" === e.getAttribute("data-type") || "THREADLINKMSG" === e.getAttribute("data-type") || e.querySelector("[data-postedinparent]")) && (e = e.querySelector("[data-msgid]"));
        var t = e.querySelector("[data-urlpreviewcomment]") || e.querySelector("[data-filecomment]") || e.firstChild;
        this.composer.value = Smiley.getTextForSkinToneCode(Message.getTextMsgFromDom(t.childNodes, !1, !0, !0)), this.changeFooterHeight(), this.hideVoiceMsgInvoker();
        var s = this;
        $WC.Util.convertToArray(t.childNodes).forEach((function(e) {
            "SPAN" === e.nodeName && (s.atmentions += e.getAttribute("data-zcprofileid") + ",", WMSUI.curtrigger = $WC.Util.getInnerText(e).slice(0, 1))
        })), WMSUI.atMentions.changeColor(this.composer), this.editorreplydiv.setAttribute("data-originalmsg", this.composer.value), this.editorreplydiv.setAttribute("data-editmsg", !0), this.attachmentnode.querySelector('[id="wms-file"]').disabled = "true"
    }, ChatWindow.prototype.showReplyPreview = function(e, t, s, i, n) {
        var a;
        if (s) a = '<div class="wms-replymsgwrapper"><div class="wms-replymsg"><div class="wms-replymsgheader"><div class="wms_settings_chckbx" style="padding:0px"><span data-type="custom" class="wms_settings_customcheckbox"></span><input id="wms_notifyeditmsg" data-setting="notifyedit" type="checkbox" class="wms_settings_checkbox"><label id="wms_notifyeditlabel" class="wms_settings_label" for="wms_notifyeditmsg" post-in-channel-div="true" >' + $WC.I18N("thread.msgs.post", [$WC.Channels.getChannelName(this.thread_parentid) || this.thread_parent_title]) + '</label></div><div class="wms_cw_replyclose"></div></div></div></div>', this.editorreplydiv.setAttribute("data-threadmsg", !0);
        else {
            this.closeReplyPreview();
            var o = e.querySelector("[data-threadmsg_post]");
            if (o) e = o.nextSibling;
            if (a = Message.constructReplyMessageFragment(this.constructReplyMessageObject(e, null, null, !t), !0, t, i, null, this.objId), t) this.showEditPreview(e);
            else if (i) {
                var r = e.previousElementSibling,
                    l = e.querySelector(".wms_threadmsg"),
                    d = r.getAttribute("data-thread_chid");
                if (null !== d)
                    if (i = !1, WMSUI.handleChatExist(d)) {
                        if (WindowHandler.getWinObjById(d)) {
                            var c = WindowHandler.getWinObjById(d),
                                u = (l = (l = e.closest('[data-type="THREADMSG"]')).querySelector('[data-type="REPLYMSG"] [data-replymsguid]')).getAttribute("data-replymsguid"),
                                m = c.msgdisp.querySelector('[data-replymsguid="' + u + '"]');
                            m = m.closest(".wms-msgfrag[data-type]"), c.showReplyPreview(m, t, s)
                        }
                    } else WebMessanger.openThreadWindowFromCache(r, this.objId), WMSUI.storePendingThreadReply(d, e.getAttribute("data-msguid"));
                else if (l) WebMessanger.openThreadWindowFromCache(l, this.objId, n), i = !1;
                else if (this.editorreplydiv.setAttribute("data-threadmsgid", e.getAttribute("data-msguid")), this.editorreplydiv.setAttribute("data-threadreply", !0), n) {
                    var h = Math.floor(5 * Math.random()) + 1;
                    this.composer.value = $WC.I18N("welcomenote.welcomeMessage" + h)
                }
            }
        }
        if (null == i || 1 == i) {
            this.focus();
            var g = this.ctrlcomp.scrollHeight - this.ctrlcomp.clientHeight <= this.ctrlcomp.scrollTop + 20;
            if (this.footernode.style.borderRadius = "0px 0px 5px 5px", this.editorreplydiv.innerHTML = a, this.editorreplydiv.style.display = "block", this.ctrlcomp.style.marginBottom = this.editorreplydiv.clientHeight - 16 + "px", this.scrolldownbutton.style.bottom = this.editorreplydiv.clientHeight + 9 + "px", g) {
                var p = this.msgdisp.lastChild,
                    f = Message.getScrollableParent(p.parentNode),
                    v = this.scrolldownbutton,
                    C = this.ctrlcomp;

                function b() {
                    v.style.display = "none"
                }
                C.addEventListener("scroll", b), $WC.Util.scrollTo(p, {
                    behavior: "smooth"
                }, f), setTimeout((function() {
                    C.removeEventListener("scroll", b)
                }), 200)
            }
        }
    }, ChatWindow.prototype.closeReplyPreview = function() {
        (this.editorreplydiv.innerHTML = "", this.editorreplydiv.style.display = "none", this.editorreplydiv.getAttribute("data-editmsg")) ? (this.editorreplydiv.removeAttribute("data-editmsg"), this.attachmentnode.querySelector('[id="wms-file"]').removeAttribute("disabled"), this.composer.value = "", this.invisiblediv.innerHTML = "", this.changeFooterHeight(), this.showVoiceMsgInvoker()) : this.editorreplydiv.getAttribute("data-threadreply") && (this.editorreplydiv.removeAttribute("data-threadreply"), this.editorreplydiv.removeAttribute("data-threadmsgid"));
        this.footernode.style.borderRadius = "5px 5px 5px 5px", this.ctrlcomp.style.marginBottom = "0", this.scrolldownbutton.style.bottom = "25px"
    }, ChatWindow.prototype.showRestrictedChannelIcon = function() {
        var e = this.win.querySelector("[data-channelrestricted]");
        "false" == ($WC.Channels.get(this.objId) && $WC.Channels.get(this.objId).open_to_all) && $WC.Util.setAttribute(e, "data-channelrestricted", !0)
    }, ChatWindow.prototype.disableActions = function(e) {
        if ((e = e || this).actionbutton) {
            var t = e.actionbutton;
            t.style.cursor = "not-allowed", t.disabled = "true", e.actionlistnode.style.display = "none"
        }
    }, ChatWindow.prototype.disableComposerOptions = function(e, t) {
        ((t = t || this).composer.disabled = "true", t.attachmentnode) && (t.attachmentnode.setAttribute("data-disabled", !0), t.attachmentnode.querySelector('[id="wms-file"]').disabled = "true");
        t.smileyinvoker.disabled = "true", t.voicemsginvoker.style = "none", this.footernode.setAttribute("data-disabled", "true"), this.footernode.querySelector("[data-restriction-text]").innerText = e, $WC.Util.setAttribute(this.mainwin, "tabindex", "1")
    }, ChatWindow.prototype.enableComposerOptions = function() {
        var e = this.composer;
        if (e.removeAttribute("placeholder"), e.style.cursor = "", e.removeAttribute("disabled"), this.attachmentnode) {
            var t = this.attachmentnode.querySelector('[id="wms-file"]');
            t.style.cursor = "", t.removeAttribute("disabled")
        }
        var s = this.smileyinvoker;
        if (s.style.cursor = "", s.removeAttribute("disabled"), s.className = "wms-smileyinvoker wms-valign-mid-block", this.voicemsginvoker.style = "", this.footernode.removeAttribute("data-disabled"), this.permdenied = !1, this.actionbutton) {
            var i = this.actionbutton;
            i.style.cursor = "", i.removeAttribute("disabled")
        }
        this.mainwin.removeAttribute("tabindex")
    }, ChatWindow.prototype.disableFileShareOption = function() {
        this.attachmentnode && (this.attachmentnode.setAttribute("data-attachment", !1), this.attachmentnode.querySelector('[id="wms-file"]').disabled = "true", this.attachmentnode.style.display = "none");
        this.restrict_file_upload = !0
    }, ChatWindow.prototype.hideActionItem = function(e, t) {
        this.actionlistnode.querySelector("[data-" + e + '="' + t + '"]').style.display = "none"
    }, ChatWindow.prototype.toggleEnlargeWindow = function() {
        this.isEnlarged ? this.shrinkEnlargedWindow() : (WindowHandler.shrinkEnlargedWindows(), this.focus(), this.isEnlarged = !0, this.enlargeicon.title = $WC.I18N("chat.shrink"), $WC.Util.addClass(this.mainwin, "wms_cw_enlarged"), $WC.Util.addClass(this.enlargeicon, "wms_cw_enlargeicon_rotate")), WindowHandler.onResize(), setTimeout(Message.updateBotSuggestionsButton, 300, this, !0), WebMessanger.trackClientAction("Cliq Mini - Chat window enlarge")
    }, ChatWindow.prototype.shrinkEnlargedWindow = function() {
        this.isEnlarged = !1, this.changeFooterHeight(!0), this.enlargeicon.title = $WC.I18N("chat.enlarge"), $WC.Util.removeClass(this.enlargeicon, "wms_cw_enlargeicon_rotate"), $WC.Util.removeClass(this.mainwin, "wms_cw_enlarged")
    }, ChatWindow.prototype.showReactionsUI = function(e) {
        this.createOverlay();
        var t = $WC.Util.createElement("div", null, "wms_cw_reaction_container"),
            s = $WC.Util.createElement("span", null, "wms_cw_overlay_close");
        s.onclick = this.hideReactionsUI.bind(this);
        var i = $WC.Util.createElement("div", null, "wms_cw_reactionsparent");
        i.appendChild(t), i.appendChild(s), this.cw_overlay.appendChild(i);
        var n = {
                showEmojiWithText: !1,
                skintonepicker: WmsSettings.adminsettings.showemojiskinpicker,
                hidecustomemoji: !0,
                hidestickers: !0,
                hidegifs: !0
            },
            a = WmsSettings.getEmoticonTypes();
        a && (n.hidelivezomoji = a.hidelivezomoji, n.hidezomoji = a.hidezomoji, n.hideemoji = a.hideemoji);
        var o = WmsImplHandler.invokeSynchronously(WmsUIImpl.getChatWindowOptions, this.objId, this.ctype, this.getChannelUID(), this.getChannelServiceCode(), this.getChannelSOID(), this.entityid);
        o && !$WC.Util.isEmptyObject(o) && ("disable" == o.zomoji && (n.hidezomoji = !0), "disable" == o.live_zomoji && (n.hidelivezomoji = !0), "disable" == o.emoji && (n.hideemoji = !0)), this.smileyinstance.mountComponent(t, !0, function(t) {
            t = Smiley.checkAndReplaceTonePrefCode(t);
            var s = this.ctrlcomp.querySelector('[data-msguid="' + e + '"]'),
                i = s.getAttribute("data-type") == Message.types.THREADLINKMSG;
            if (this.updateMyReactionData(e, t), i) {
                var n = s.querySelector("[data-thread_chid]").getAttribute("data-thread_chid"),
                    a = WindowHandler.getWinObjById(n);
                a && a.updateMyReactionData(e, t)
            }
            WebMessanger.updateReaction(this.objId, e, t, !1, s.getAttribute("data-type") == Message.types.THREADLINKMSG), this.hideReactionsUI()
        }.bind(this), function() {
            this.hideReactionsUI()
        }.bind(this), n), this.smileyvisible = !0
    }, ChatWindow.prototype.hideReactionsUI = function() {
        this.smileyinstance.unmountComponent(), this.composer.focus(), this.smileyvisible = !1, this.removeOverlay()
    }, ChatWindow.prototype.showUnreadMsgs = function(e) {
        var t, s = $WC.RecentChats.getLastSeenTime(this.objId),
            i = this.ctrlcomp.scrollHeight - this.ctrlcomp.clientHeight <= this.ctrlcomp.scrollTop + 20,
            n = this.win.querySelector('[data-msgtime="' + s + '"][data-msgid]');
        if (n && (t = n.previousSibling.getAttribute("data-senderzuid") ? n.previousSibling : n), t) {
            this.clearUnreadMarker();
            var a = $WC.Util.createElement("div", "", "wms_unread_marker", {
                "data-unread": "true"
            }, '<div class="wms_unread_marker_wrapper"><span class="wms_unread_marker_text">' + $WC.I18N("chat.newmessages") + "</span></div>");
            t.insertAdjacentElement("beforeBegin", a)
        }
        e ? this.scrollToUnread() : i && this.scrollDisplay(), this.toggleUnreadBanner()
    }, ChatWindow.prototype.clearUnreadMarker = function() {
        var e = this.win.querySelector("[data-unread]");
        e && $WC.Util.removeElement(e)
    }, ChatWindow.prototype.scrollToUnread = function(e) {
        var t = this.win.querySelector("[data-unread]");
        if (t) {
            var s = Message.getScrollableParent(t.parentNode);
            e ? setTimeout((function() {
                $WC.Util.scrollTo(t, {
                    block: "center",
                    behavior: "smooth"
                }, s)
            }), 1) : $WC.Util.scrollTo(t, {
                block: "center"
            }, s)
        }
    }, ChatWindow.prototype.scrollToUnreadThreads = function() {
        var e = WmsMainUI.getUnreadThreads(this.objId)[0],
            t = $WC.RecentChats.get(e).PARENTMSGUID;
        Message.showMessageFragmentInView(this.objId, t, null, {
            block: "end"
        }), WmsMainUI.getUnreadThreads(this.objId).unshift(WmsMainUI.getUnreadThreads(this.objId).pop())
    }, ChatWindow.prototype.toggleUnreadBanner = function() {
        var e = this.win.querySelector("[data-unread]");
        this.unread && e ? $WC.Util.isScrolledIntoView(e, this.ctrlcomp, !0) ? (this.newmsgbanner.style.display = "none", $WC.Util.setAttribute(this.newmsgbanner, "data-newmsgbanner", !1)) : (e.getBoundingClientRect().top > this.ctrlcomp.getBoundingClientRect().bottom ? $WC.Util.addClass(this.newmsgbanner, "wms_unread_msg_bottom") : $WC.Util.removeClass(this.newmsgbanner, "wms_unread_msg_bottom"), $WC.Util.setAttribute(this.newmsgbanner, "data-newmsgbanner", !0), this.newmsgbanner.style.display = "block") : (this.newmsgbanner.style.display = "none", $WC.Util.setAttribute(this.newmsgbanner, "data-newmsgbanner", !1))
    }, ChatWindow.prototype.toggleUnreadThreadBanner = function() {
        "8" == this.ctype && (WmsMainUI.getUnreadThreads(this.objId) && WmsMainUI.getUnreadThreads(this.objId).length ? (this.threadunreadbanner.style.display = "flex", $WC.$CUtil.setInnerText(this.threadunreadbanner.lastChild, WmsMainUI.getUnreadThreads(this.objId).length), this.threadunreadbanner.setAttribute("data-threadbanner", !0)) : (this.threadunreadbanner.style.display = "none", this.threadunreadbanner.setAttribute("data-threadbanner", !1), WmsMainUI.getUnreadCount(this.objId) || this.makeNormal()))
    }, ChatWindow.prototype.scrollToLastMsg = function() {
        var e = this.msgdisp.lastChild,
            t = !(!e || !e.getAttribute("data-loadmorebutton") && !e.getAttribute("data-loadmore"));
        if (this.last_clicked_replymsg_time) Message.glowBubble(this.last_clicked_replymsg_time, this.ctrlcomp, this.objId), this.last_clicked_replymsg_time = "";
        else if (t) {
            $WC.RecentChats.updateLastSeenTime(this.objId);
            var s = $WC.Util.createElement("div");
            s.setAttribute("data-latestchunk", !0), this.msgdisp.innerHTML = "", this.msgdisp.prepend(s), Message.loadSpecificTranscript(this.objId, this.msgdisp, s)
        } else {
            var i = Message.getScrollableParent(e.parentNode);
            $WC.Util.scrollTo(e, {
                behavior: "smooth"
            }, i)
        }
    }, ChatWindow.prototype.createOverlay = function(e) {
        var t = $WC.Util.createElement("div", null, "wms_cw_overlay");
        this.cw_overlay = this.mainwin.appendChild(t), e && (this.cw_overlay.onclick = function() {
            this.cw_overlay && this.cw_overlay.childNodes[0] && "true" === this.cw_overlay.childNodes[0].getAttribute("data-msgaction") && e()
        }.bind(this))
    }, ChatWindow.prototype.removeOverlay = function() {
        this.cw_overlay && ($WC.Util.removeElement(this.cw_overlay), this.cw_overlay = null)
    }, ChatWindow.prototype.showUrlPreview = $WC.Util.debounce((function() {
        var e = $WC.Util.getUnfurlableLink($WC.Util.safeHTML(this.composer.value));
        e = e[0] ? e[0].trim() : "", this.previewlinkdetails && e != this.previewlinkdetails.url && this.hideUrlPreview();
        var t = function() {
                this.hideUrlPreview()
            }.bind(this),
            s = function(t) {
                if (t && !this.urlpreviewvisible && !$WC.Util.isEmptyObject(t) && this.composer.value.indexOf(e) > -1) {
                    this.previewlinkdetails = t.linkdetails, this.unfurlmsg = !0, this.previewlinkdetails.redirected_url && (this.previewlinkdetails.url = this.previewlinkdetails.redirected_url), this.previewlinkdetails.redirected_thumbnail_url && (this.previewlinkdetails.thumbnailurl = this.previewlinkdetails.redirected_thumbnail_url);
                    var s = $WC.Util.cloneObject(this.previewlinkdetails, !0);
                    if (s.cliq_message) {
                        var i = s.description || s.url;
                        s.description = Smiley.replace($WC.Util.safeHTML($WC.Util.unescapeHTML(i)))
                    }
                    var n = $WC.UrlPreview.populate(s, this.winIndex, null, !0, !1);
                    this.urlpreviewcontainer.innerHTML = n, Message.checkAndRemoveUrlImage(this.urlpreviewcontainer), this.urlpreviewvisible = !0, this.unfurldata_cache_id = this.previewlinkdetails.unfurldata_cache_id ? this.previewlinkdetails.unfurldata_cache_id : "", $WC.Config.get("zoholinks_auth") || 0 != this.previewlinkdetails.authentication_consent && 1 != this.previewlinkdetails.authentication_consent || $WC.Config.set({
                        zoholinks_auth: this.previewlinkdetails.authentication_consent
                    }), this.urlpreviewcontainer.style.border = "1px solid rgb(213, 213, 213)", this.fetchpreviewdetails = !1
                } else !$WC.Util.isEmptyObject(t) && t || this.hideUrlPreview()
            }.bind(this);
        e && !this.urlpreviewvisible && (this.urlpreviewcontainer.innerHTML = $WC.UrlPreview.showLoadingPreview(), this.footernode.style.borderRadius = "0px 0px 5px 5px", this.fetchpreviewdetails = !0, this.unfurlmsg = !0, $WC.Ajax.postRequestToChat("getunfurleddata.do", "link=" + encodeURIComponent(e), s, t))
    }), null, 500), ChatWindow.prototype.hideUrlPreview = function(e) {
        (this.urlpreviewvisible || this.fetchpreviewdetails) && (this.unfurlmsg = !0, !0 === e && (this.unfurlmsg = !1), this.urlpreviewcontainer.innerHTML = "", this.urlpreviewcontainer.style.border = "none", this.footernode.style.borderRadius = "5px 5px 5px 5px", this.urlpreviewvisible = !1, this.fetchpreviewdetails = !1, this.previewlinkdetails = null)
    }, ChatWindow.prototype.getUnfurlData = function(e) {
        var t = $WC.Util.getUnfurlableLink(e);
        return t[0] && (t = t[0].trim()), !(!this.previewlinkdetails || !t || this.previewlinkdetails.url !== t) && this.previewlinkdetails
    }, ChatWindow.prototype.checkAndStoreDraftMsg = function() {
        if (this.composer.value && "true" != this.editorreplydiv.getAttribute("data-editmsg")) {
            var e = $WC.Drafts.get(this.objId);
            if (e && e.msg == this.composer.value) return;
            var t = this.editorreplydiv.querySelector("[data-replymsgtime]"),
                s = t ? t.getAttribute("data-replysenderzuid") + "_" + t.getAttribute("data-replymsgtime") : this.getReplyMessageId(),
                i = this.composer.value;
            this.atmentions && (i = $WC.Util.unescapeHTML(WMSUI.atMentions.formatAtMentions(i, this.atmentions, this.objId, !0)));
            var n = {
                msg: i,
                time: (new Date).getTime(),
                replied_to: s,
                chid: this.objId
            };
            $WC.Drafts.updateInServer(this.objId, n)
        }
    }, ChatWindow.prototype.checkAndDeleteDraft = function() {
        "" === this.composer.value && $WC.Drafts.deleteDraftInServer(this.objId)
    }, ChatWindow.prototype.restoreDraftedMsg = function() {
        if (!WebMessanger.isGuestUser()) {
            var e = $WC.Drafts.get(this.objId);
            if (e && "" === this.composer.value) {
                if (e.replied_to) {
                    var t = this.win.querySelector('[data-msgid="' + e.replied_to + '"]');
                    if (t) r(this), this.showReplyPreview(t);
                    else {
                        var s = e.replied_to.split("_")[1],
                            i = this.objId + "|" + s,
                            n = $WC.Util.createElement("div", null, null, {
                                "data-mentionmsgid": i
                            });
                        n.style = "display:none";
                        var a = this.msgdisp.querySelector("[data-loadmore],[data-transerror]");
                        this.msgdisp.replaceChild(n, a);
                        var o = n;
                        Message.loadSpecificTranscript(this.objId, this.msgdisp, o)
                    }
                } else r(this);
                this.changeFooterHeight()
            }
        }

        function r(t) {
            var s = e.meta && e.meta.mentions,
                i = Message.isAddMsg(e.msg),
                n = Message.formatDraftMsg(e);
            if (n && (t.hideVoiceMsgInvoker(), t.composer.value = n, s || i)) {
                for (var a in s) s[a].type !== $WC.CMsgUtil.UserMention && s[a].type != $WC.CMsgUtil.SpecialMention.participants && s[a].type != $WC.CMsgUtil.SpecialMention.available || (t.atmentions += s[a].id + ",", WMSUI.curtrigger = "@");
                i && (t.atmentions = "", $WC.Matcher.replace("addmember", e.msg, (function(e, s) {
                    t.atmentions += s + ","
                })), WMSUI.curtrigger = "+"), WMSUI.atMentions.changeColor(t.composer)
            }
        }
    }, ChatWindow.prototype.changeFooterHeight = function(e) {
        var t = this.ctrlcomp.offsetHeight;
        this.footernode.style.height = "56px", e && setTimeout(this.changeFooterHeight.bind(this), 260);
        var s = null === this.composer.offsetParent ? this.msgoprnode : this.composer;
        if (s.scrollHeight < 140) {
            var i = s.scrollHeight < 56 ? 56 : s.scrollHeight;
            this.footernode.style.height = i + "px", this.composer.style.overflow = "hidden", this.invisiblediv.style.overflow = "hidden", this.msgoprnode.style.overflow = "hidden"
        } else this.footernode.style.height = "140px", this.composer.style.overflow = "auto", this.invisiblediv.style.overflow = "auto", this.msgoprnode.style.overflow = "auto";
        t >= this.ctrlcomp.offsetHeight ? this.ctrlcomp.scrollTop = this.ctrlcomp.scrollTop + (t - this.ctrlcomp.offsetHeight) : this.ctrlcomp.scrollTop != this.ctrlcomp.scrollHeight - this.ctrlcomp.offsetHeight && (this.ctrlcomp.scrollTop = this.ctrlcomp.scrollTop - (this.ctrlcomp.offsetHeight - t)), this.urlpreviewcontainer.style.bottom = this.footernode.offsetHeight + 4 + "px", this.smileycontainer.style.bottom = this.footernode.offsetHeight + 4 + "px", this.autocompletediv.style.bottom = this.footernode.offsetHeight + 4 + "px", this.editorreplydiv.style.bottom = this.footernode.offsetHeight + 4 + "px"
    }, ChatWindow.prototype.updatePlatformMsg = function(e) {
        var t = JSON.parse(e.msg.addldata),
            s = this.ctrlcomp.querySelector('[data-msguid="' + e.msguid + '"]').getAttribute("data-msgid");
        e.time = e.msguid.split("%")[0];
        var i = $WC.CustomMsg.msgobj[e.chid] && $WC.CustomMsg.msgobj[e.chid][e.time];
        e.meta = t.meta, e.msg = t.msg, i && (i.reactions && 0 != Object.keys(i.reactions).length && (e.reactions = i.reactions), i.replied && (e.meta.opr_replydetails = i.replied.info), i.thread_information && (e.thread_information = i.thread_information), e.sender = i.sender, e.zuid = i.sender, e.dname = i.dname, e.nname = i.dname);
        var n = document.getElementById("zcwindows");
        if (n && n.getAttribute("data-msguid") == e.msguid) {
            var a = function() {
                document.getElementById("zcwindows") && (document.getElementById("zcwindows").removeAttribute("data-msguid"), document.getElementById("zcwindows").innerHTML = null)
            };
            a(), n.setAttribute("data-msguid", e.msguid), e["brief.msg"] = i["brief.msg"], e.raw = i.raw, $WC.$Win.create({
                id: "custommsg",
                class: "cmsgdlg",
                header: $WC.CMsgUtil.getBriefMsgTitle($WC.CMsgUtil.convertMsgObj(e)),
                html: $WC.CustomMsgUI.getCustomMsgOverlayHTML($WC.CMsgUtil.convertMsgObj(e)),
                additionalattrs: ' chid="' + e.chid + '" time="' + e.time + '"',
                closefn: a
            })
        }
        this.updateMessageFragment(e, s)
    }, ChatWindow.prototype.showMessageActionsUI = function(e, t, s, i) {
        var n = !1;
        if (WebMessanger.show_message_actions_as_popup) {
            n = !0;
            var a = e.getAttribute("data-msguid"),
                o = e.querySelector("[data-options]:not([data-showaspopup])"),
                r = o ? o.getBoundingClientRect() : e.getBoundingClientRect(),
                l = this.mainwin.getBoundingClientRect(),
                d = WindowHandler.createPopupActionMountPoint({
                    chid: this.objId,
                    ev: i,
                    position: r,
                    msguid: a
                })
        } else d = this.createActionsMountPoint(this.hideMessageActionsUI.bind(this));
        var c = {};
        "undefined" != typeof WmsUIImpl && (c = WmsImplHandler.invokeSynchronously(WmsUIImpl.getMessageActions, WebMessanger.zuid, this.objId, this.ctype) || {});
        var u = function(e, t) {
            var s = e.getAttribute("data-msguid");
            if (this.updateMyReactionData(s, t), e.getAttribute("data-type") == Message.types.THREADLINKMSG) {
                var i = e.querySelector("[data-thread_chid]").getAttribute("data-thread_chid"),
                    n = WindowHandler.getWinObjById(i);
                n && n.updateMyReactionData(s, t)
            }
            WebMessanger.updateReaction(this.objId, s, t, !1, e.getAttribute("data-type") == Message.types.THREADLINKMSG)
        }.bind(this);
        c.hide_more_msg_actions = !(!WebMessanger.isGuestUser() && "disable" != c.moreactions), c.rtlmode = !!WebMessanger.rtlmode, c.show_as_popup = n, c.hidezomoji = "disable" == c.zomoji;
        var m = e.closest("[data-msgid]").getAttribute("data-type");
        if ("THREADLINKMSG" == m && (m = e.querySelector("[data-msgid]").getAttribute("data-type")), this.messageactionsinstance.mountComponent({
                node: d,
                msgnode: e,
                allowed_actions: t,
                messageactionscallback: s,
                chid: this.objId,
                closeComponent: this.hideMessageActionsUI.bind(this),
                dreFunctionCallBack: $WC.Functions.handleExecuteFuncCallback,
                datatype: m,
                actionsconfig: c,
                quickReact: u
            }), this.messageActionsUIShown = !0, WebMessanger.show_message_actions_as_popup) {
            var h = d.getBoundingClientRect();
            if (h.bottom + 40 > l.bottom) {
                var g = h.bottom - l.bottom;
                d.style.top = h.top - g - 40 + "px"
            }
        }
    }, ChatWindow.prototype.hideMessageActionsUI = function() {
        this.messageactionsinstance.unmountComponent(), this.removeOverlay(), this.messageActionsUIShown = !1
    }, ChatWindow.prototype.createActionsMountPoint = function(e) {
        this.createOverlay(e);
        var t = $WC.Util.createElement("div", null, "wms_cw_reaction_container"),
            s = $WC.Util.createElement("span", null, "wms_cw_overlay_close");
        s.onclick = e.bind(this);
        var i = $WC.Util.createElement("div", null, "wms_cw_msgactionsparent", {
            "data-msgaction": !0
        });
        return i.appendChild(t), i.appendChild(s), this.cw_overlay.appendChild(i), t
    }, ChatWindow.prototype.showPinnedMsg = function(e) {
        if (!WebMessanger.is_msgpin_option_disabled) {
            var t = this.objId,
                s = "stickymessage" === e.type || "ADD_STICKY" === e.module ? e.data : e.stickymessage;
            if (s && !$WC.Util.isEmptyObject(s)) {
                var i = (s = "string" == typeof s ? JSON.parse(s) : s).message,
                    n = s.creator && s.creator.name,
                    a = this.pinmsgnode.getElementsByClassName("wms_pinmsg_content")[0];
                a.innerHTML = this.createPinMsgContentHTML(i), a.title = $WC.I18N("pinmsg.creator.info", n), this.pinmsgdetails.info.creator = s.creator && s.creator.id, this.pinmsgdetails.info.msgtime = i && i.origin_time || i.time, this.pinmsgdetails.info.msgid = s.message && s.message.msguid, this.pinmsgdetails.info.duration = s.expiry_time, this.pinmsgdetails.info.duration_shown = !1, this.pinmsgdetails.msg_requested = !1, this.pinmsgnode.style.display = "flex";
                var o = !!this.pinmsgdetails.action_enabled;
                this.pinmsgnode.setAttribute("data-show-options", o), this.pinmsgdetails.msg_pinned = !0, 11 == this.ctype ? this.floating_containers.style.top = "122px" : this.floating_containers.style.top = "83px"
            } else e.addinfo && -1 != e.addinfo.indexOf("STICKY") ? _WMSWINFOCUS ? (WebMessanger.getPinnedMsg(t), this.pinmsgdetails.msg_requested = !0) : (WebMessanger.get_pinmsg_onfocus = !0, this.pinmsgdetails.msg_pinned = !0) : this.pinmsgdetails.msg_pinned = !1
        }
    }, ChatWindow.prototype.createPinMsgContentHTML = function(e) {
        var t;
        if (e.mod) {
            var s = "wms_pinmsg_att_icon",
                i = e.msg.name || e.msg.fName;
            "contact" === e.mod ? s += " wms_pinmsg_contact_icon" : "location" === e.mod ? s += " wms_pinmsg_location_icon" : "event" === e.mod && (s += " wms_pinmsg_event_icon"), t = $WC.Util.safeHTML($WC.Util.unescapeHTML(i)) + '<span class="' + s + '"></span>'
        } else {
            var n = e.msg.indexOf("<br>"),
                a = e.msg.indexOf("\n");
            t = e.msg.substring(0, -1 !== n ? n : -1 !== a ? a : e.msg.length), t = $WC.Util.safeHTML($WC.Util.unescapeHTML(t)), t = $WC.Markdown.apply(t);
            var o = $WC.Util.cloneObject(e, !0);
            o.msg = t, t = o.meta && o.meta.mentions ? $WC.Util.formatMentions(o, !0) : $WC.Util.formatMentions(t), t = Smiley.replace(t, !0)
        }
        return t
    }, ChatWindow.prototype.updatePinnedMsg = function(e) {
        var t = this.createPinMsgContentHTML(e.msg);
        this.pinmsgnode.getElementsByClassName("wms_pinmsg_content")[0].innerHTML = t
    }, ChatWindow.prototype.clearPinnedMsg = function() {
        var e = this.pinmsgnode.getElementsByClassName("wms_pinmsg_content")[0];
        e.innerText = "", e.title = "", this.pinmsgdetails.info = {}, this.pinmsgdetails.msg_pinned = !1, this.pinmsgnode.style.display = "none", 11 == this.ctype ? this.floating_containers.style.top = "83px" : this.floating_containers.style.top = "47px"
    }, ChatWindow.prototype.highlightPinnedMsg = function(e, t) {
        e = "string" == typeof e ? e : this.pinmsgdetails.info.msgtime;
        var s = this.ctrlcomp;
        if (!Message.glowBubble(e, s, this.objId)) {
            t = t || this.pinmsgdetails.info.creator;
            var i = this.objId + "|" + t + "|" + e,
                n = Message.getMarkerElement(i, e, this.msgdisp);
            Message.loadSpecificTranscript(this.objId, this.msgdisp, n)
        }
    }, ChatWindow.prototype.togglePinMsgOptions = function(e) {
        var t = this.pinmsgdetails.info.duration,
            s = this.pinmsgnode.getElementsByClassName("wms_pinmsg_options")[0];
        if ("true" == s.getAttribute("data-pinmsg-options") || e) this.pinmsgdetails.info.duration_shown && (this.pinmsg_duration_selector_instance.unmountComponent(), this.pinmsgdetails.info.duration_shown = !1), s.setAttribute("data-pinmsg-options", "false");
        else {
            var i = ""; - 1 == t ? i = $WC.I18N("chat.forever") : -1 !== (i = $WC.DateUtil.relativeTimeLeft(t)).indexOf($WC.I18N("chat.mute.day")) && -1 !== i.indexOf($WC.I18N("chat.mute.minute")) && (i = i.substring(0, i.indexOf($WC.I18N("chat.mute.minute")) - 4));
            var n = $WC.I18N("pinmsg.timeleft", i);
            $WC.$CUtil.setInnerText(this.pinmsgduration, n), s.setAttribute("data-pinmsg-options", "true")
        }
    }, ChatWindow.prototype.handleChatRestrictions = function(e) {
        if (e) {
            var t = ["60000", "61000", "62000", "63000"],
                s = ["60001", "60002", "60003", "60004", "60005", "60006", "60007", "60008"],
                i = $WC.Util.cloneObject(e, !0);
            if ("string" == typeof i.restricted_message && "" != i.restricted_message && (i.restricted_message = JSON.parse(i.restricted_message)), "string" == typeof i.restricted_attachments && "" != i.restricted_attachments && (i.restricted_attachments = JSON.parse(i.restricted_attachments)), "number" == typeof i.ERRCODE && (i.ERRCODE = "" + i.ERRCODE), i.ERRCODE && -1 != t.indexOf(i.ERRCODE) || i.restricted_message && "disabled" === i.restricted_message.status || i.code && -1 != i.code.indexOf("message")) {
                var n = i.ERRMSG || i.message || i.restricted_message && i.restricted_message.message || "";
                n && (this.permdenied = !0, this.disableComposerOptions(n))
            } else(i.ERRCODE && -1 != s.indexOf(i.ERRCODE) || i.restricted_attachments && "disabled" === i.restricted_attachments.status || i.code && -1 != i.code.indexOf("attachment")) && this.disableFileShareOption();
            i.restricted_message && i.restricted_message.place_holder && (this.composer.placeholder = i.restricted_message.place_holder)
        }
    }, ChatWindow.prototype.markMsgsRead = function(e) {
        for (var t, s = e.split(","), i = 0; i < s.length; i++) {
            var n = (t = this.ctrlcomp.querySelector('[data-msguid="' + s[i] + '"]')).nextSibling && t.nextSibling.querySelector("[data-msg-read]");
            WebMessanger.isReadReceiptEnabled() && n && (n.setAttribute("data-msg-read", !0), n.setAttribute("data-read-receipt", !0), n.setAttribute("title", $WC.I18N("Read")))
        }
    }, ChatWindow.prototype.showDynamicActions = function(e, t, s) {
        this.dynamicactioninstance = new $WC.DynamicActions;
        var i = this.createActionsMountPoint(this.hideDynamicActions.bind(this));
        this.dynamicactioninstance.mountComponent({
            node: i,
            data: e,
            loading: s,
            msgnode: t,
            chid: this.objId,
            closeCallBack: this.hideDynamicActions.bind(this),
            handleExecuteFuncCallback: $WC.Functions.handleExecuteFuncCallback
        })
    }, ChatWindow.prototype.hideDynamicActions = function() {
        this.dynamicactionsvisible = !1, this.dynamicactioninstance.unmountComponent(), this.removeOverlay()
    }, ChatWindow.prototype.populateDynamicActions = function(e) {
        var t = e.getAttribute("data-url"),
            s = e.closest("[data-msgid]"),
            i = s.getAttribute("data-msgid");
        if (!this.dynamicactionsvisible)
            if (this.dynamicactionsvisible = !0, this.dynamicaction_msgs && this.dynamicaction_msgs[i] && (new Date).getTime() < this.dynamicaction_msgs[i].expires) this.showDynamicActions(this.dynamicaction_msgs[i], s, !1);
            else {
                this.showDynamicActions(null, s, !0);
                var n = function(e) {
                        var t = JSON.parse(e);
                        if (t.buttons) this.dynamicactioninstance.updateDynamicActions(t), this.dynamicaction_msgs || (this.dynamicaction_msgs = {}), this.dynamicaction_msgs[i] = t;
                        else {
                            var s = t.text ? t.text : $WC.I18N("chat.settitle.error"),
                                n = t.text ? "info" : null;
                            $WC.Util.showErrorMsg(s, n), this.hideDynamicActions()
                        }
                    }.bind(this),
                    a = function(e) {
                        var t = $WC.I18N("chat.settitle.error");
                        if (e) {
                            var s = JSON.parse(e);
                            s.error && s.error.text && (t = s.error.text)
                        }
                        $WC.Util.showErrorMsg(t), this.hideDynamicActions()
                    }.bind(this),
                    o = "";
                "chat" == e.getAttribute("data-dactionsparam") && (o += "&chat_id=" + this.objId), $WC.Ajax.requestToChat("v2/oembed/actions", "url=" + encodeURIComponent(t) + o, n, a)
            }
    }, ChatWindow.prototype.fetchCompleteChannelData = function() {
        if ($WC.Util.isChannelChid(this.objId) && (!$WC.Channels.get(this.objId) || !$WC.Channels.get(this.objId).muted_interval)) {
            var e = "chid=" + this.objId;
            $WC.Ajax.requestToChat("v1/channels", e, (function(e) {
                $WC.Channels.updateList(JSON.parse(e))
            }))
        }
    }, ChatWindow.prototype.uploadRecordedVoiceFile = function(e, t) {
        WmsFileUploadUI.fillFileDetails(this.objId, [e]);
        var s = WmsFileUploadHandler.addFileForUpload(this.objId, e, "", "", e.name);
        WmsFileUploadUI.setAndClearReplyMsg(this.objId, s, !0), WmsFileUploadHandler.startFileUpload(this.objId, WmsFileUploadUI.getCallBackObject()), WmsFileUploadUI.addProgressBarForEachFile(this.objId, WmsFileUploadUI.getCallBackObject()), WmsFileUploadUI.setCustomCallBackObj(t)
    }, ChatWindow.prototype.invokeVoiceMsg = function() {
        if ($WC.VoiceRecorderApi.isVoiceRecordingActive() || "undefined" != typeof MediaManager && MediaManager.hasOnGoingSession())
            if ($WC.VoiceRecorderApi.isVoiceRecordingActive()) WMSUI.showMediaSessionErrorDialog({
                content: $WC.I18N("voicerecorder.endrecording"),
                buttontext: $WC.I18N("common.goahead")
            }, function() {
                $WC.VoiceRecorderApi.closeAndRemoveRecordingSession(), this.invokeVoiceMsg()
            }.bind(this));
            else {
                var e = MediaCallImpl.hasOutgoingSession() ? MediaCallImpl.getOutgoingSession() : MediaCallImpl.getCurrentSession(),
                    t = e.isAudioCall() ? "videochat.audiocall" : e.isVideoCall() ? "videochat.videocall" : "media.screenshare.session",
                    s = e.isCaller(MediaUtil.getCurrentUserId()) ? e.getCallee().getName() : e.getCaller().getName(),
                    i = MediaUtil.getResource("media.endcall.info", [MediaUtil.getResource(t), s]);
                WMSUI.showMediaSessionErrorDialog({
                    content: i,
                    buttontext: $WC.I18N("common.goahead")
                }, function() {
                    MediaCallImpl.handleEnd(e.getId(), !0), this.invokeVoiceMsg()
                }.bind(this))
            }
        else {
            var n = $WC.Util.createElement("div", "voicerecordercontainer", "wms-voicerecordercontainer");
            this.win.querySelector("[data-footer=true]").appendChild(n);
            var a = function() {
                    this.throwVoiceMsgRemovalError({
                        confirmactiontext: $WC.I18N("common.delete"),
                        content: $WC.I18N("voicemsg.deleteinfo")
                    })
                }.bind(this),
                o = function(e, t) {
                    WMSUI.showMediaSessionErrorDialog({
                        content: $WC.I18N("media.mic" + t),
                        buttontext: $WC.I18N("common.close")
                    }, function() {
                        this.focus()
                    }.bind(this))
                }.bind(this);
            this.footernode.style.display = "none";
            this.voicerecorderinstance.mountComponent(n, {
                closeCallBack: a,
                fileuploadCallBack: this.uploadRecordedVoiceFile.bind(this),
                errorCallBack: o,
                unmountCallBack: function() {
                    this.footernode.style.display = "table", this.changeFooterHeight(), this.composer.focus()
                }.bind(this),
                sessionid: this.objId
            })
        }
    }, ChatWindow.prototype.hideVoiceMsgInvoker = function() {
        this.voicemsginvoker.style.display = "none", $WC.Config.get("showSendMessageButton") && $WC.Util.addClass(this.footernode, "wms-showsendmessagebutton")
    }, ChatWindow.prototype.showVoiceMsgInvoker = function() {
        this.disablevoicemsginvoker || (this.voicemsginvoker.style.display = "block"), $WC.Config.get("showSendMessageButton") && !this.disablevoicemsginvoker && $WC.Util.removeClass(this.footernode, "wms-showsendmessagebutton")
    }, ChatWindow.prototype.throwVoiceMsgRemovalError = function(e) {
        var t = new $WC.ConfirmationDialog,
            s = [{
                text: e.confirmactiontext,
                onclick: function() {
                    this.voicerecorderinstance.unmountComponent(), t.unmountComponent(), "function" == typeof e.confirmCallBack && e.confirmCallBack()
                }.bind(this),
                buttonstyle: "destructive_button"
            }, {
                text: $WC.I18N("common.cancel"),
                onclick: function() {
                    t.unmountComponent()
                },
                buttonstyle: "cancel_button"
            }],
            i = [$WC.I18N("voicemsg.alert"), $WC.I18N("voicemsg.alert")],
            n = [e.content];
        t.mountComponent({
            heading: i,
            content: n,
            actions: s,
            customimgiconclass: "wms_dialog_delete_icon"
        })
    }, ChatWindow.prototype.updateCWInfoFromAttachSession = function(e) {
        if ($WC.Util.isChannelChid(this.objId)) $WC.Channels.updateChannelMetaData(e);
        else if (this.addinfo = e.addinfo || this.addinfo, this.partcount = e.pcount || this.partcount, this.savehistory = e.history || this.savehistory, this.lastmsguid = e.lastmsguid || this.lastmsguid, this.customgroup = e.customgroup || this.customgroup, this.title = e.title || this.title, $WC.Util.isBotChid(this.objId) && (this.title = $WC.Bots.getBotName($WC.Bots.getBotId(this.objId)) || this.title), e.mutedinterval && (this.mutedinterval = e.mutedinterval), $WC.Util.isThreadChid(this.objId) && (this.thread_follower = e.is_follower, void 0 === this.thread_parent_partcount && e.channelData)) {
            var t = JSON.parse(e.channelData);
            this.thread_parent_partcount = parseInt(t.pc)
        }
        if (e.presence) var s = JSON.parse(e.presence),
            i = s && s[this.recipant] ? s[this.recipant].lstime : null;
        if ("1" === this.ctype && 2 == this.partcount && i && WmsSettings.isLastSeenEnabled() && ($WC.WmsContacts.setLastAvailableTime(this.recipant, i), this.updateLastseenStatus()), ("8" === this.ctype || "11" === this.ctype || "1" === this.ctype && "true" === this.customgroup) && this.updatePartCount(this.partcount), "11" === this.ctype) {
            var n = this.thread_parentid || $WC.Util.getParentChidFromThreadChid(this.objId);
            if (void 0 === this.followernode) {
                var a = {
                    chid: n,
                    msguid: this.thread_msgid,
                    thread_chid: this.objId,
                    is_follower: "true" == this.thread_follower ? $WC.I18N("thread.unfollow") : $WC.I18N("thread.follow")
                };
                WebMessanger.getParentThreadMsg(null, null, a)
            }
            $WC.Channels.isJoinedChannel(n) && "none" == this.threadmsglinknode.style.display && (this.threadmsglinknode.style.display = "inline-flex", this.updateChatTitle(this.title))
        }
        if (e.users && (this.updateRecipientInfo(JSON.parse(e.users)), this.restrictFileSharingForExternalUser(), WindowHandler.updateInactiveUserStatus(e.chid, e)), 10 == this.ctype && null == this.recipant && this.partcount <= 2) {
            var o = e.recipants.split(",");
            this.recipant = o[0] === WebMessanger.zuid ? o[1] : o[0]
        }
        if (e.restricted_message) {
            var r = JSON.parse(e.restricted_message);
            "disabled" == r.actual_status && "disabled" == r.status && this.disableComposerOptions(r.message)
        }
        if (!1 !== this.pinmsgdetails.msg_pinned || this.pinmsgdetails.msg_requested || this.showPinnedMsg(e), e.showTypingStatus && (this.showTypingStatus = e.showTypingStatus), "WP" == WebMessanger.prd && ($WC.Util.isChannelChid(this.objId) || $WC.Util.isThreadChid(this.objId))) {
            var l = $WC.Util.isThreadChid(this.objId) ? this.thread_parentid : this.objId;
            l && 0 == $WC.Channels.isUserHasPermission(l, $WC.WmsConstants.USERPERMISSIONS.SEND_MESSAGE) && ($WC.Util.removeClass(this.win, "zhshare-dest"), this.win.removeAttribute("data-zhshare-dest-meta"), this.win.removeAttribute("data-zhshare-dest-allowed-size"))
        }
    }, ChatWindow.prototype.updateRecipientInfo = function(e) {
        for (var t = 0; t < e.length; t++) $WC.Util.isLocalUser(e[t].zuid) || (this.recipientinfo[e[t].zuid] = e[t])
    }, ChatWindow.prototype.getChatletPrd = function() {
        return "10" == this.ctype ? this.entityid.split(".")[0] : ""
    }, ChatWindow.prototype.allowAddMemberForEntityChat = function() {
        if ("10" == this.ctype) {
            if (WmsSettings.adminsettings.chatlet_modify_enabled_prds.indexOf(this.getChatletPrd()) > -1) return !0;
            if (WmsSettings.adminsettings.chatlet_cb_modify_enabled_prds.indexOf(this.getChatletPrd()) > -1) return this.is_chatlet_cb_modify_enabled = !0, !0
        }
        return !1
    }, ChatWindow.prototype.isOneToOneChatWithExternalUser = function() {
        var e = !1;
        return 2 == this.partcount && WebMessanger.orgid && this.recipientinfo[this.recipant] && WebMessanger.orgid != this.recipientinfo[this.recipant].zoid && (e = !0), e
    }, ChatWindow.prototype.restrictFileSharingForExternalUser = function() {
        WmsSettings.restrictFileSharingForExternalUser() && this.isOneToOneChatWithExternalUser() && this.disableFileShareOption()
    }, ChatWindow.prototype.glowChatWindow = function() {
        $WC.Util.addClass(this.mainwin, "wms_cw_glow");
        var e = $WC.Util.getCssAnimEndListener();
        $WC.Util.addEvent(this.mainwin, e, (function() {
            this.classList.remove("wms_cw_glow")
        }), !0)
    }, ChatWindow.prototype.deleteAllMessageActionNodes = function() {
        this.ctrlcomp.querySelectorAll("[data-options][data-showaspopup]").forEach((function(e) {
            e.parentNode && e.parentNode.getAttribute("data-sticky_actions") && (e = e.parentNode), e.parentNode.removeChild(e)
        }))
    }, ChatWindow.prototype.updateChatRestrictions = function() {
        WindowHandler.chatrestrictions[this.objId] && !$WC.Util.isEmptyObject(WindowHandler.chatrestrictions[this.objId]) && (WindowHandler.chatrestrictions[this.objId].restrictFileDownload && (this.restrictFileDownload = !0, $WC.Util.addClass(this.ctrlcomp, "fileDownloadRestricted")), WindowHandler.chatrestrictions[this.objId].restrictFileForward && (this.restrictFileForward = !0, $WC.Util.addClass(this.ctrlcomp, "fileForwardRestricted")))
    }, ChatWindow.prototype.getStickyActionTopValue = function() {
        var e = 0;
        return this.ctrlcomp.querySelector("#wms_threadsheaderwrapper") && (e += this.ctrlcomp.querySelector("#wms_threadsheaderwrapper").getBoundingClientRect().height), e
    }, ChatWindow.prototype.toggleChatSwitchDialog = function(e) {
        if (WindowHandler.isChatSwitcherEnabled())
            if (e.stopPropagation(), e.preventDefault(), this.chatswitcherinstance && e.target == this.switchchatnode) this.chatswitcherinstance.unmountComponent(), this.chatswitcherinstance = null;
            else if (!this.chatswitcherinstance) {
            var t = this.switchchatnode.querySelector("[data-switchchatlist]");
            this.chatswitcherinstance = new $WC.ChatSwitchDialog;
            var s = this.objId,
                i = WindowHandler.switchchat.primarychid;
            "LIVEEVENT" == WindowHandler.switchchat.type && (WindowHandler.switchchat.chatOpenedFromBackstage != s && WindowHandler.switchchat.backstagechid != s || (i = WindowHandler.switchchat.backstagechid)), !WindowHandler.switchchat.primarychid && WindowHandler.switchchat.backstagechid && (i = WindowHandler.switchchat.backstagechid), this.chatswitcherinstance.mountComponent({
                node: t,
                primarychid: i,
                currentchid: s,
                onChatSelect: function(e) {
                    e.chid != WindowHandler.switchchat.backstagechid && "LIVEEVENT" !== WindowHandler.switchchat.type && (WindowHandler.switchchat.previouschid = e.chid), i == WindowHandler.switchchat.primarychid ? WindowHandler.switchchat.chatOpenedFromPrimary = e.chid : i == WindowHandler.switchchat.backstagechid && (WindowHandler.switchchat.chatOpenedFromBackstage = e.chid), e.chid == WindowHandler.switchchat.primarychid ? WindowHandler.switchchat.chatOpenedFromPrimary = "" : e.chid == WindowHandler.switchchat.backstagechid && (WindowHandler.switchchat.chatOpenedFromBackstage = ""), WMSUI.attachSession(e.chid)
                },
                onCloseCallback: function() {
                    this.chatswitcherinstance = null
                }.bind(this)
            })
        }
    }, ChatWindow.prototype.updateThreadState = function(e) {
        if ("11" == this.ctype) {
            var t = this.avatarnode.querySelector("[data-cutouticon]"),
                s = this.footernode.querySelector("[data-restriction-text]"),
                i = WindowHandler.getWinObjById(this.thread_parentid),
                n = $WC.RecentChats.get(this.objId);
            if ("THREAD_REOPENED" === e) {
                if (this.closethreadnode.style.display = "block", t.className = "wms_badge_statusicon_thread_cutout wms_badge_img_cutout", this.thread_state = "open", this.enableComposerOptions(), $WC.Util.removeClass(s, "wms_closed_thread"), $WC.Util.removeElement(s.querySelector('[data-purpose="reopenthread"]')), n && (n.THREAD_STATE = "open"), i)(a = i.ctrlcomp.querySelector('[data-thread_chid="' + this.objId + '"]')) && a.setAttribute("data-thread_state", "open")
            } else if ("THREAD_CLOSED" === e) {
                this.closethreadnode.style.display = "none", t.className = "wms_badge_statusicon_closedthread_cutout wms_badge_img_cutout", this.thread_state = "closed", this.disableComposerOptions($WC.I18N("thread.closed.info"), this);
                var a, o = '<span class="reopen_thread_button" data-purpose="reopenthread">' + $WC.I18N("common.reopen") + "</span>";
                if (s && s.insertAdjacentHTML("beforeend", o), s && $WC.Util.addClass(s, "wms_closed_thread"), n && (n.THREAD_STATE = "closed"), i)(a = i.ctrlcomp.querySelector('[data-thread_chid="' + this.objId + '"]')) && a.setAttribute("data-thread_state", "closed")
            }
        }
    }, Factory.createDialog = function(e, t) {
        if (WindowHandler.getWinObjById(t.divId)) {
            var s = WindowHandler.exist.indexOf(WindowHandler.getWinObjById(t.divId));
            WindowHandler.exist.splice(s, 1)
        }
        var i = new ChatWindow;
        WindowHandler.exist.push(i);
        s = WindowHandler.exist.length - 1;
        i.setIndex(s);
        var n = i.create(e, t);
        return 4 == i.scode && i.updateLastseenStatus(), n
    }, Factory.removeDialog = function(e) {
        WindowHandler.exist[e] = "empty", WindowHandler.rearrange()
    }, Factory.destroyDialog = function(e, t) {
        Factory.removeDialog(e, t), WindowHandler.reopenRemovedChat()
    }, WindowHandler.deleteParticipantsByID = function(e, t) {
        var s = WindowHandler.getWinObjById(e);
        s && s.deleteParticipants(t)
    }, WindowHandler.addParticipantsByID = function(e, t) {
        var s = WindowHandler.getWinObjById(e);
        s && s.addParticipants(t, !0)
    }, WindowHandler.checkAndHighlightChat = function(e) {
        var t = WindowHandler.getWinObjById(e),
            s = $WC.RecentChats.getChatIdList($WC.RecentChats.getUnreadChatList());
        t && -1 != s.indexOf(e) && t.highlight()
    }, WindowHandler.init = function() {
        this.count = 0, this.exist = [], this.removed = [], this.lastViewed = -1, this.openedChats = {}, this.prevtime = null, this.cwsize = 323, this.enlargedsize = 455, this.chatrestrictions = {}, this.forwardedMessageRecipientChat = {}
    }, WindowHandler.init(), WindowHandler.getMaxWin = function() {
        var e = 0;
        WebMessanger.isServiceStatusSet && (e = document.getElementById("wmsstatusbar").offsetWidth), WMSUI.globalsearchenabled && document.getElementById("wmsglobalsearch") && (e += document.getElementById("wmsglobalsearch").offsetWidth), !WMSUI.notebook_widget_disabled && document.getElementById("wms_notebook_icon") && (e += document.getElementById("wms_notebook_icon").offsetWidth), WMSUI.phonebridgeenabled && (e += document.getElementById("wmsphonebridge").offsetWidth);
        var t = document.getElementById("wmstoolbar") ? document.getElementById("wmstoolbar").offsetWidth : 0,
            s = WindowHandler.exist.find((function(e) {
                if ("empty" !== e && e.isEnlarged) return !0
            })) ? this.enlargedsize - this.cwsize : 0,
            i = (t - (e + (document.getElementById("wms-menucontainer") ? document.getElementById("wms-menucontainer").offsetWidth : 0) + s)) / this.cwsize;
        return i < 1 && (i = 1), void 0 !== WebMessanger.forceMaxWin && (i = WebMessanger.forceMaxWin), parseInt(i, 10)
    }, WindowHandler.reopenRemovedChat = function() {
        var e = WindowHandler.removed.pop();
        null != e && ($WC.WmsSessionStorage.setChatInfo({
            chid: e,
            removed: "false"
        }), WebMessanger.attachSession(e))
    }, WindowHandler.removeExcessChat = function(e, t) {
        function s(t) {
            var s = WindowHandler.exist[t];
            return "empty" == s || null == s || s.detached || null == document.getElementById(s.getObjId()) || (s.getObjId() != e && null == a && document.activeElement != s.composer && (s.composer.value || s.voicerecorderinstance.node ? o = s : a = s), n++), a
        }
        var i, n = 0,
            a = null,
            o = null;
        if (t)
            for (i = WindowHandler.exist.length; i >= 0; i--) a = s(i);
        else
            for (i = 0; i < WindowHandler.exist.length; i++) a = s(i);
        n > 0 && WmsMainUI.toggleSmartChatButton(!0), n > this.getMaxWin() ? (null == a && (a = o), WindowHandler.removed.push(a.getObjId()), $WC.WmsSessionStorage.setChatInfo({
            chid: a.getObjId(),
            removed: "true",
            state: "min"
        }), a.win.style.display = "none", $WC.Util.removeElement(a.win), WmsChatCache.remove(a.getObjId()), Message.deletedMessages.remove(a.getObjId()), Factory.removeDialog(a.winIndex, !1), WindowHandler.count--) : WindowHandler.rearrange()
    }, WindowHandler.onResize = function() {
        if (document.getElementById("wms-menucontainer")) {
            var e = $WC.Util.getObjectLength(WindowHandler.openedChats),
                t = WindowHandler.getMaxWin();
            if (e > t)
                for (var s = e - t, i = 0; i < s; i++) WindowHandler.removeExcessChat(null, !0);
            else if (t > e && WindowHandler.removed.length > 0) {
                var n = t - e;
                for (i = 0; i < n; i++) WindowHandler.reopenRemovedChat()
            }
        }
    }, $WC.Util.addEvent(window, "resize", WindowHandler.onResize), WindowHandler.getObjectInObject = function(e, t, s) {
        for (var i = e.getElementsByTagName(s), n = 0; n < i.length; n++)
            if (i[n].id == t) return i[n];
        return null
    }, WindowHandler.getBarObject = function(e, t) {
        return WindowHandler.getObjectInObject(this.chatbar, e, t)
    }, WindowHandler.moveFocus = function(e, t, s) {
        for (var i = 0, n = 0, a = {}, o = {}, r = {}, l = WindowHandler.exist.length; l > 0; l--) {
            var d = WindowHandler.exist[l];
            if ("empty" != d && null != d && null != d.win && null != d.win && !d.isMinimized()) {
                o = d;
                break
            }
        }
        for (var c = 0; c < WindowHandler.exist.length; c++) {
            var u = WindowHandler.exist[c];
            if ("empty" != u && null != u && null != u.win && null != u.win && !u.detached && !u.isMinimized()) {
                if (0 == i && (a = u), i++, u.getObjId() == e) {
                    n = e;
                    continue
                }
                if (0 != n) return t ? $WC.Util.getObjectLength(r) ? (r.selectChat(), r.focus("", s)) : "block" === WmsMainUI.menu.style.display ? (WmsMainUI.searchdiv.focus(), WindowHandler.lastViewed = -1) : (o.selectChat(), o.focus("", s)) : (u.selectChat(), u.focus("", s)), !1;
                r = u
            }
        }
        return t ? (r.selectChat(), r.focus("", s)) : s && o.getObjId && n == o.getObjId() && a != o ? (a.selectChat(), a.focus("", !0)) : n && "block" === WmsMainUI.menu.style.display ? (WmsMainUI.searchdiv.focus(), WindowHandler.lastViewed = -1) : i && (t ? (o.selectChat(), o.focus("", s)) : (a.selectChat(), a.focus("", s))), !1
    }, WindowHandler.rearrange = function() {
        WindowHandler.openedChats = {};
        for (var e = 0; e < WindowHandler.exist.length; e++) {
            var t = WindowHandler.exist[e];
            if ("empty" != t && null != t && null != t.win && null != t.win) {
                var s = t.isMinimized() ? "min" : "max";
                $WC.WmsSessionStorage.setChatInfo({
                    chid: t.getObjId(),
                    state: s
                }), WindowHandler.openedChats[t.getObjId()] = s
            }
        }
    }, WindowHandler.makeNormalWinById = function(e) {
        var t = WindowHandler.getWinObjById(e);
        t && t.unread && t.makeNormal(!0)
    }, WindowHandler.getWinObjById = function(e) {
        e = "" + e;
        for (var t = 0; t < WindowHandler.exist.length; t++) {
            var s = WindowHandler.exist[t];
            if ("empty" != s && null != s && s.getObjId() == e) return s
        }
        return null
    }, WindowHandler.removeWinById = function(e) {
        var t = WindowHandler.getWinObjById(e);
        t && t.close(!0)
    }, WindowHandler.closeWinById = function(e) {
        var t = WindowHandler.getWinObjById(e);
        t && t.closeAndPropagate()
    }, WindowHandler.updateMediacallPermissions = function() {
        for (var e = 0; e < WindowHandler.exist.length; e++) {
            var t = WindowHandler.exist[e];
            "empty" !== t && t.showVideoDropdown()
        }
    }, WindowHandler.updateUserStatus = function(e, t, s, i) {
        for (var n = 0; n < WindowHandler.exist.length; n++) {
            var a = WindowHandler.exist[n];
            if ("empty" != a && null != a) {
                var o = e;
                a.updatePartinfo(o, t, s, i), 2 == a.partcount && !a.isZohoGroupChat() && a.recipant && -1 != a.recipant.indexOf(o) && "11" != a.ctype ? (a.updateUserStatus(t, s, i), 4 == t && a.updateLastseenStatus(), 0 == t ? a.updateOfflineMessage() : 0 != t && a.offlinemessage && a.updateOnlineMessage()) : a.partcount > 2 && void 0 !== a.partinfo[o] && "11" != a.ctype && a.populateParticipants()
            }
        }
    }, WindowHandler.setTitle = function(e, t) {
        WindowHandler.getWinObjById(e).setTitle(t)
    }, WindowHandler.updateChatTitle = function(e, t) {
        WindowHandler.getWinObjById(e).updateChatTitle(t)
    }, WindowHandler.updateStatus = function(e, t, s, i) {
        WindowHandler.getWinObjById(e).updateUserStatus(t, s, i)
    }, WindowHandler.focusChatById = function(e) {
        WindowHandler.getWinObjById(e).focus()
    }, WindowHandler.changeActive = function() {
        WMSUI.handleDocumentActive()
    }, WindowHandler.restoreChats = function(e) {
        var t = $WC.WmsSessionStorage.getItem("wms_openchats");
        if (null !== t && !WebMessanger.isExclusiveChat() && !WebMessanger.isRTCChat() && "disable" != $WC.Config.get("restorechat")) {
            var s = [];
            WindowHandler.removed = [];
            for (var i = 0; i < t.length; i++) {
                var n = t[i].chid;
                "true" === t[i].removed ? WindowHandler.removed.push(n) : "true" === t[i].salesiqchat ? "undefined" != typeof WmsUIImpl && WmsImplHandler.invoke(WmsUIImpl.restoreChat, n) : WebMessanger.prefetch_channels && $WC.Util.isChannelChid(n) && null === $WC.Channels.getLastFetchedTime() ? ($WC.Channels.initChannels(), WmsMainUI.scheduleAutoJoin(n)) : e && s.push(n)
            }
            var a = function() {
                if (0 != s.length) {
                    var e = s.shift();
                    WebMessanger.joinChat(e, a)
                }
            };
            a()
        }
    }, WindowHandler.syncChatWindowTranscripts = function() {
        var e = this.openedChats,
            t = 0;

        function s(e, t) {
            setTimeout((function() {
                var t = WindowHandler.getWinObjById(e),
                    s = t.msgdisp,
                    i = s.querySelectorAll("[data-transerror],[data-loading]"),
                    n = s.querySelectorAll(".wms-msgfrag:not([data-notack]):not([data-transerror]),.wms-msginfofrag[data-editinfo]");
                if (n) {
                    var a = n[n.length - 1];
                    if (a) {
                        i.length && !i[i.length - 1].nextSibling && $WC.Util.removeElement(i[i.length - 1]);
                        var o = $WC.Util.createElement("div", null, null, {
                            "data-prevtime": a.getAttribute("data-msgtime"),
                            "data-scrollbehaviour": "bottom"
                        });
                        o.style = "display:none", s.appendChild(o), Message.loadSpecificTranscript(e, s, o, !0)
                    }
                }
                t.toggleUnreadThreadBanner()
            }), t)
        }
        for (var i in e) WindowHandler.getWinObjById(i).makeNormal(), s(i, t += 500)
    }, WindowHandler.syncDraftsInUI = function() {
        for (var e = 0; e < WindowHandler.exist.length; e++) {
            var t = WindowHandler.exist[e];
            "empty" !== t && t.restoreDraftedMsg()
        }
    }, $WC.Util.pubsub.subscribe("drafts/updateui", (function() {
        WindowHandler.syncDraftsInUI()
    })), WindowHandler.resetAllTypingStatus = function() {
        for (var e = 0; e < WindowHandler.exist.length; e++)
            if ("empty" !== WindowHandler.exist[e]) {
                WindowHandler.exist[e].typingstatusnode.innerHTML = "", WindowHandler.exist[e].typingindicatornode.style.display = "none";
                var t = WindowHandler.exist[e].msgdisp.querySelector("[data-typingstatus]");
                t && $WC.Util.removeElement(t)
            }
    }, WindowHandler.updateBotsInfoInUI = function() {
        for (var e = 0; e < WindowHandler.exist.length; e++) {
            var t = WindowHandler.exist[e];
            if ("empty" !== t && 9 == t.ctype) {
                var s = $WC.Bots.getBotId(t.objId),
                    i = $WC.Bots.get(s);
                t.updateBotImage(s), t.setTitle(i.DNAME), t.updateUserStatus()
            }
        }
    }, $WC.Util.pubsub.subscribe("/bots/updateui", (function() {
        WindowHandler.updateBotsInfoInUI()
    })), WindowHandler.updateChannelProperties = function() {
        for (var e = 0; e < WindowHandler.exist.length; e++) {
            var t = WindowHandler.exist[e];
            "empty" !== t && 8 == t.ctype && ($WC.Channels.get(t.objId) && (0 == $WC.Channels.isUserHasPermission(t.objId, $WC.WmsConstants.USERPERMISSIONS.SEND_MESSAGE) && (t.permdenied = !0, t.disableComposerOptions($WC.I18N("channels.announcementonly"))), 1 == $WC.Channels.isUserHasPermission(t.objId, $WC.WmsConstants.USERPERMISSIONS.ADD_MEMBER) ? t.addmembernode.style.display = "block" : 0 == $WC.Channels.isUserHasPermission(t.objId, $WC.WmsConstants.USERPERMISSIONS.ADD_MEMBER) && (t.addmembernode.style.display = "none"), 0 == $WC.Channels.isUserHasPermission(t.objId, $WC.WmsConstants.USERPERMISSIONS.STICKY_MESSAGE) && (t.pinmsgdetails.action_enabled = !1, t.pinmsgnode.setAttribute("data-show-options", !1)), t.showRestrictedChannelIcon(), 0 == $WC.Channels.isUserHasPermission(t.objId, $WC.WmsConstants.USERPERMISSIONS.LEAVE_ALLOWED) && (t.leavechannelnode.style.display = "none")), t.updateChannelImage())
        }
    }, WindowHandler.shrinkEnlargedWindows = function() {
        for (var e = 0; e < WindowHandler.exist.length; e++) "empty" !== WindowHandler.exist[e] && WindowHandler.exist[e].shrinkEnlargedWindow()
    }, WindowHandler.showProgress = function(e, t, s) {
        var i = WindowHandler.getWinObjById(e);
        null != i && i.showProgress(t, s, WmsDragDrop.nooffiles)
    }, WindowHandler.clearProgress = function(e) {
        var t = WindowHandler.getWinObjById(e);
        null != t && t.clearProgress()
    }, WindowHandler.checkAndHidePinmsgOptions = function(e) {
        for (var t = 0; t < WindowHandler.exist.length; t++)
            if ("empty" !== WindowHandler.exist[t] && !$WC.Util.isEmptyObject(WindowHandler.exist[t].pinmsgdetails.info)) {
                if (e && WindowHandler.exist[t].objId === e) continue;
                WindowHandler.exist[t].togglePinMsgOptions(!0)
            }
    }, WindowHandler.getPinMsgForOpenedChats = function() {
        for (var e = 0; e < WindowHandler.exist.length; e++) "empty" !== WindowHandler.exist[e] && WindowHandler.exist[e].pinmsgdetails.msg_pinned && WebMessanger.getPinnedMsg(WindowHandler.exist[e].objId);
        WebMessanger.get_pinmsg_onfocus = !1
    }, WindowHandler.updateForwardedMsgFragments = function() {
        for (var e = 0; e < WindowHandler.exist.length; e++)
            if ("empty" !== WindowHandler.exist[e])
                for (var t = WindowHandler.exist[e].msgdisp.querySelectorAll("[data-forwardmsgchid]"), s = 0; s < t.length; s++) {
                    var i = t[s].querySelector("[data-forwardchid]");
                    if (i) {
                        var n = i.getAttribute("data-forwardchid");
                        $WC.Util.isChannelChid(n) && $WC.Channels.isJoinedChannel(n) ? ($WC.$CUtil.setInnerText(i.lastChild, $WC.Channels.get(n).dn), $WC.Util.setAttribute(t[s], "data-messagelink", !0)) : ($WC.Util.removeElement(i), $WC.Util.setAttribute(t[s], "data-messagelink", !1))
                    }
                }
    }, WindowHandler.updateInactiveUserStatus = function(e, t) {
        var s = WindowHandler.getWinObjById(e);
        2 == t.pcount && t.users && ("string" == typeof t.users ? JSON.parse(t.users) : t.users).forEach((function(e) {
            if ("inactive" === e.status) {
                var t = WmsContacts.getContactsList(e.zuid);
                t ? (t.STATUS = e.status, WmsContacts.setContactsList(e.zuid, t)) : (WmsContacts.updateContact(e), WmsContacts.get(e.zuid).STATUS = e.status), s && ($WC.$CUtil.setInnerText(s.statusmsgnode, $WC.I18N("user.status.inactive")), s.statusmsgnode.title = $WC.I18N("user.status.inactive"), s.disableComposerOptions($WC.I18N("user.inactive.msg")), s.disableActions())
            }
        }))
    }, WindowHandler.updateThreadCount = function(e) {
        var t = WindowHandler.getWinObjById(e.chid),
            s = WindowHandler.getWinObjById(e.threadchatid);
        if (t) {
            t.toggleUnreadThreadBanner();
            var i = t.win.querySelector('[data-msguid="' + e.parentmsguid + '"]'),
                n = i && i.querySelector('[data-thread_chid="' + e.threadchatid + '"]');
            if (n) {
                var a = n && n.getAttribute("data-thread_msgcount");
                $WC.$CUtil.setInnerText(n.querySelector('[id="wms_threadlink"]'), $WC.I18N("message.threads.count", [++a])), n.setAttribute("data-thread_msgcount", a)
            }
        }
        if (s) {
            var o = s.win && s.win.querySelector('[id="wms_threadsheader"]');
            a = $WC.Util.getInnerText(o).split(" ")[0];
            $WC.$CUtil.setInnerText(o, $WC.I18N("message.threads.count", [++a]))
        }
    }, WindowHandler.updateChatRestrictions = function(e) {
        if (e) {
            "string" == typeof e.restricted_download && "" != e.restricted_download && (e.restricted_download = JSON.parse(e.restricted_download)), "string" == typeof e.restricted_forward && "" != e.restricted_forward && (e.restricted_forward = JSON.parse(e.restricted_forward));
            var t = {};
            e.restricted_download && "disabled" === e.restricted_download.actual_status && (t.restrictFileDownload = !0), e.restricted_forward && "disabled" === e.restricted_forward.actual_status && (t.restrictFileForward = !0), t && !$WC.Util.isEmptyObject(t) && (WindowHandler.chatrestrictions[e.chid] = t);
            var s = WindowHandler.getWinObjById(e.chid);
            s && s.updateChatRestrictions()
        }
    }, WindowHandler.createPopupActionMountPoint = function(e) {
        var t;
        document.body.querySelector("#wms-actionsmountpoint") ? t = document.body.querySelector("#wms-actionsmountpoint") : (t = $WC.Util.createElement("div", "wms-actionsmountpoint", "wms_msgoptionsdiv", {
            "data-popupaction": !0
        }), document.body.appendChild(t));
        var s = e.position.y,
            i = e.position.x - 205;
        return "contextmenu" == e.ev.type && (s = e.ev.clientY, i = e.ev.clientX, t.setAttribute("data-opener_event", "contextmenu")), i < 0 && (i = e.position.x), t.style = "top: " + s + "px; left: " + i + "px; z-index: " + WebMessanger.setzindex + ";", t.setAttribute("data-owner_chid", e.chid), t.setAttribute("data-owner_msguid", e.msguid), WebMessanger.isDarkModeEnabled && $WC.Util.addClass(t, "zmNightMode"), t
    }, WindowHandler.removePopupActionMountPoint = function(e) {
        var t = document.body.querySelector("#wms-actionsmountpoint");
        t && (e || (e = WindowHandler.getWinObjById(t.getAttribute("data-owner_chid"))), e && e.hideMessageActionsUI(), $WC.Util.removeElement(document.body.querySelector("#wms-actionsmountpoint")))
    }, WindowHandler.updatePopupActionMountPoint = function(e, t) {
        var s = e.querySelector("[data-options][data-showaspopup]");
        if (document.body.querySelector("#wms-actionsmountpoint")) {
            var i = document.body.querySelector("#wms-actionsmountpoint");
            if ("function" == typeof IntersectionObserver) {
                var n, a = new IntersectionObserver((function(e) {
                    for (var t = 0; t < e.length; t++) {
                        var s = e[t],
                            o = s.boundingClientRect;
                        s.target && s.target.dataset && (s.target.dataset.popupaction ? r = o : "show" == s.target.dataset.options ? n = o : s.target.dataset.main ? l = o : s.target.dataset.ctrlcomp && (d = o)), n && r && l && d && n.top + r.height + 40 < l.bottom && d.top < n.top && (i.style.top = n.top + "px")
                    }
                    a.disconnect()
                }));
                [s, i, t.mainwin, t.ctrlcomp].forEach((function(e) {
                    a.observe(e)
                }))
            } else {
                var o = s.getBoundingClientRect(),
                    r = i.getBoundingClientRect(),
                    l = t.mainwin.getBoundingClientRect(),
                    d = t.ctrlcomp.getBoundingClientRect();
                o.top + r.height + 40 < l.bottom && d.top < o.top && (i.style.top = o.top + "px")
            }
        }
    }, WindowHandler.deleteAllMessageActionNodes = function() {
        var e = this.openedChats;
        for (var t in e) WindowHandler.getWinObjById(t).deleteAllMessageActionNodes()
    }, WindowHandler.enableChatSwitcher = function(e, t) {
        this.switchchat = {
            primarychid: e || "",
            backstagechid: t || "",
            previouschid: "",
            type: "LIVEEVENT",
            chatOpenedFromPrimary: "",
            chatOpenedFromBackstage: ""
        }
    }, WindowHandler.isChatSwitcherEnabled = function() {
        return !(!this.switchchat || !this.switchchat.primarychid) || !(!this.switchchat || !this.switchchat.backstagechid)
    }, WindowHandler.getChatSwitcherTargetChid = function(e) {
        var t = "";
        return WindowHandler.switchchat.chatOpenedFromBackstage == e ? t = WindowHandler.switchchat.chatOpenedFromPrimary ? WindowHandler.switchchat.chatOpenedFromPrimary : WindowHandler.switchchat.primarychid == e ? WindowHandler.switchchat.backstagechid : WindowHandler.switchchat.primarychid : WindowHandler.switchchat.chatOpenedFromPrimary == e ? t = WindowHandler.switchchat.chatOpenedFromBackstage ? WindowHandler.switchchat.chatOpenedFromBackstage : WindowHandler.switchchat.backstagechid == e ? WindowHandler.switchchat.primarychid : WindowHandler.switchchat.backstagechid : WindowHandler.switchchat.backstagechid == e ? (t = WindowHandler.switchchat.primarychid, WindowHandler.switchchat.chatOpenedFromPrimary ? t = WindowHandler.switchchat.chatOpenedFromPrimary : WindowHandler.switchchat.previouschid && (t = WindowHandler.switchchat.previouschid)) : WindowHandler.switchchat.primarychid == e ? (t = WindowHandler.switchchat.backstagechid, WindowHandler.switchchat.chatOpenedFromBackstage && (t = WindowHandler.switchchat.chatOpenedFromBackstage)) : WindowHandler.switchchat.backstagechid && WindowHandler.switchchat.backstagechid != e ? t = WindowHandler.switchchat.backstagechid : WindowHandler.switchchat.primarychid && WindowHandler.switchchat.primarychid != e ? t = WindowHandler.switchchat.primarychid : WindowHandler.switchchat.previouschid && WindowHandler.switchchat.previouschid != e && (t = WindowHandler.switchchat.previouschid), t
    }, Message.types = $WC.Message.types, Message.getMsgCategory = function(e) {
        return /span class="wms-commandtext">[/](?:.+?)<\/span>/.test(e) ? "command" : /span class="wms-atmtntext">[@](?:.+?)<\/span>/.test(e) || /span class="wms-atmtnlink" (.*?)>[@](?:.+?)<\/span>/.test(e) ? "atmentions" : /span class="wms-atmtntext">[+](?:.+?)<\/span>/.test(e) ? "addmem" : "msg"
    }, Message.getCurtriggers = function(e) {
        return "atmentions" == e ? ["@", ":"] : "addmem" == e ? ["+", ":"] : WMSUI.triggers
    }, Message.metaInfo = {}, Message.mentionMsgInfo = {}, Message.translationmsgstore = {}, Message.urlmsgstore = {}, Message.replyPrivateMsgObj = {}, Message.botSuggestionsMessageUID = {}, Message.retryErrors = {
        network_failure: "retry_network_failure",
        ws_failure: "retry_ws_failure",
        cliq_api_failure: "retry_cliq_api_failure",
        cliq_api_timeout: "retry_cliq_api_timeout"
    }, Message.toggleLiveZomoji = function(e) {
        for (var t = e.querySelectorAll("[data-animatedzomoji] [class^=zomoji-f-24-],[data-animatedzomoji] [class^=zomoji-f-48-], .wms_reaction_frag [class^=zomoji-f-24-], .wms_reaction_frag [class^=zomoji-f-48-]"), s = 0; s < t.length; s++) {
            var i = t[s];
            if ($WC.$CUtil.isScrolledIntoView(i, e, !0)) {
                var n = $WC.Config.get("cliqstaticserverpath") + "/officechat/images/default/sm-animation/48/" + (r = (r = (r = i.closest("[data-reaction]").getAttribute("data-reaction")).replace(/:/g, "")).replace("!", "")) + ".png";
                if ($WC.Config.get("builddomain") && (n = $WC.Config.get("builddomain") + n), WMSUI.isLoadedImg(n)) i.className.indexOf("zomoji-f-24-") > -1 ? i.className = "zomojianim-24-" + r : i.className.indexOf("zomoji-f-48-") > -1 && (i.className = "zomojianim-48-" + r);
                else {
                    var a = new Image;
                    a.src = n, a.onload = function() {
                        WMSUI.loadedimg[n] = !0, Message.toggleLiveZomoji(e)
                    }
                }
            }
        }
        var o = e.querySelectorAll("[class^=zomojianim-24-],[class^=zomojianim-48-]");
        for (s = 0; s < o.length; s++) {
            var r;
            i = o[s];
            if (!$WC.$CUtil.isScrolledIntoView(i, e, !0)) r = (r = (r = i.closest("[data-reaction]").getAttribute("data-reaction")).replace(/:/g, "")).replace("!", ""), i.className.indexOf("zomojianim-24-") > -1 ? i.className = "zomoji-f-24-" + r : i.className.indexOf("zomojianim-48-") > -1 && (i.className = "zomoji-f-48-" + r)
        }
    }, Message.PREV_SENDER = {}, Message.send = function(e, t, s, i, n, a, o, r, l, d, c, u, m, h, g) {
        var p = WindowHandler.getWinObjById(e);
        if (!WMSUI.showErrorIfPermDenied(e) && !Message.checkAddMemberMsg(t)) {
            if (t.length > 4e3) return p.showErrorMsg($WC.I18N("You_cannot_send_message_over_4000_characters_long")), !1;
            var f = (new Date).getTime();
            if (t = Smiley.replaceTextToEnglishCodes(t), r && p) {
                var v = p.ctrlcomp.querySelector('[data-msguid="' + r + '"]');
                if (v && v.nextSibling && "true" == v.nextSibling.getAttribute("data-timefrag")) {
                    var C = v.nextSibling.querySelector("[data-msg-read]");
                    C && v.nextSibling.setAttribute("data-read", C.getAttribute("data-msg-read")), v.nextSibling.innerText = $WC.I18N("message.status.sending")
                }
            }
            if (WebMessanger.sendFormattedMessage(e, t, f, s, i, n, a, o, r, d, c, u, m, h, g), t = $WC.Util.safeHTML(t), t = $WC.Markdown.apply(t), p.getUnfurlData(t) || (t = Message.trim(t)), o) {
                var b = p.msgdisp.querySelector('[data-msgid="' + o + '"],[data-msguid="' + o + '"]');
                if (b) {
                    var y = p.constructReplyMessageObject(b, WMSUI.atMentions.updateMessage(t, e), f);
                    y.sentfromcomposer = l
                }
                p.closeReplyPreview()
            } else if (p.urlpreviewcontainer.childNodes.length > 0 && p.getUnfurlData(t)) {
                var _ = p.getUnfurlData(t);
                y = {
                    sender: WebMessanger.zuid,
                    msg: t,
                    time: f,
                    notack: !0,
                    meta: {
                        linkdetails: _
                    },
                    sentfromcomposer: l
                }
            } else y = {
                sender: WebMessanger.zuid,
                msg: WMSUI.atMentions.updateMessage(t, e),
                time: f,
                notack: !0,
                sentfromcomposer: l
            };
            return p.hideUrlPreview(), c && (y.post_in_parent = c, p.closeReplyPreview(), p.composer.value = "", p.invisiblediv.innerHTML = "", p.changeFooterHeight(), p.showVoiceMsgInvoker()), r || u ? p.closeReplyPreview() : i || Commands.isCommandMsg(t) || !y || p.updateMessage(y), p.removePromptMsg(), Self.isIdle[e] = !0, "11" != p.ctype || "false" !== p.thread_follower || WebMessanger.threadmap[e] || (WebMessanger.threadmap[e] = "true"), !0
        }
    }, Message.checkAddMemberMsg = function(e) {
        var t = e.replace(/{addchatmember(.*?)addchatmember}/g, "");
        return $WC.Util.isEmptyString(t)
    }, Message.isSameBrowser = function(e) {
        return e == WebMessanger.getSid()
    }, Message.isSentFromApi = function(e) {
        return !(!e || !e.api)
    }, Message.isCustomMsg = function(e) {
        var t = $WC.CMsgUtil.convertMsgObj(e);
        return t["btnindexvsdetails.msg"] && !t.info || t["btnindexvsdetails.msg"] && t.info && "unfurling" != t.info.type || !$WC.Util.isEmptyObject(t["brief.msg"]) && t["brief.msg"] || void 0 !== t["long.msg"] && t["long.msg"].length > 0 || e.meta && e.meta.native_widget
    }, Message.isReplyMsg = function(e) {
        return null != e.meta && null != e.meta.opr_replydetails
    }, Message.isForwardMsg = function(e) {
        return null != e.meta && (null != e.meta.forward_info || "forwarded" === e.meta.message_type)
    }, Message.isThreadMsg = function(e) {
        return null != e.meta && null != e.meta.post_in_parent_information
    }, Message.isThreadNode = function(e) {
        return !e.parentElement.closest("[data-type]") || "REPLYMSG" !== e.parentElement.closest("[data-type]").getAttribute("data-type") && "FORWARDEDMSG" !== e.parentElement.closest("[data-type]").getAttribute("data-type") ? e.querySelector("[data-thread_chid]") : e.parentElement.closest("[data-type]").querySelector("[data-thread_chid]")
    }, Message.isBotMsg = function(e) {
        return void 0 !== e.meta && 1 == e.meta.ms && e.meta.bm || "string" == typeof e.sender && $WC.Bots.isBotId(e.sender) || void 0 !== e.meta && e.meta.usermessagedetails && e.meta.usermessagedetails.custom_sender_id && $WC.Bots.isBotId(e.meta.usermessagedetails.custom_sender_id)
    }, Message.isMsgFromBot = function(e) {
        var t = Message.getMessageType(e);
        return e && e.meta && Message.isBotMsg(e) && e.meta.message_source && ("bot" === e.meta.message_source.type || "command" === e.meta.message_source.type) || t === Message.types.BOTMSG || t === Message.types.CUSTOMMSG
    }, Message.isDelayMsg = function(e) {
        return void 0 !== e.meta && 1 == e.meta.ms && e.meta.config && e.meta.config.d
    }, Message.isHidingMsg = function(e) {
        return void 0 !== e.meta && 1 == e.meta.ms && e.meta.config && e.meta.config.h
    }, Message.isMetaMsg = function(e) {
        return void 0 !== e.meta
    }, Message.isTempMsg = function(e) {
        return void 0 !== e.meta && e.meta.isTempResponse
    }, Message.isCustomEmoji = function(e) {
        return $WC.Matcher.check("customemoji", e) || void 0 !== e.meta && e.meta.customemoji
    }, Message.furlVideoElement = function(e) {
        for (var t, s = e.querySelectorAll("[data-playable=true]"), i = 0; i < s.length; i++) t = s[i].getAttribute("thumbnailimg"), s[i].innerHTML = '<div id="wms-urlvideo-play" class="wms-urlvideo-play wms-hvalign"></div>' + t
    }, Message.formatCustomMsg = function(e, t) {
        ZMSGUI.createOverlay();
        var s = Message.metaInfo[t],
            i = s.usermessagedetails,
            n = s.formattedmsg,
            a = "",
            o = "",
            r = "",
            l = '<div class="wms-custmmsgtitle">',
            d = i && i.msg_title ? '<div class="wms-custmmsgvline wms-truncate-ellipsis">{{msgtitle}}</div>' : "",
            c = i && (i.thumbnail_url || i.thumbnail_id) ? '<div class="wms-custmmsgthumbnail"><img src="{{thumbnailurl}}" class="wms-custmmsgimg"></div>' : "",
            u = n ? n.length : 0,
            m = "";
        i && i.thumbnail_url ? m = i.thumbnail_url : i && i.thumbnail_id && (m = "/" + _CHATCONT + "/v1/images/" + i.thumbnail_id);
        for (var h = 0; h < u; h++) {
            var g = n[h],
                p = g.data,
                f = g.type,
                v = g.title;
            if ("text" === f) a = v ? '<div class="wms-custmmsgtitle"><span class="wms-custmmsgtitvline wms-truncate-ellipsis">' + $WC.Util.escapeHTML(v) + "</span>" : '<div class="wms-custmmsgtitle">', a += '<div class="wms-custmmsgcnt">' + $WC.Util.escapeHTML(p) + "</div></div>";
            else if ("list" === f) {
                o = v ? '<div class="wms-custmmsgtitle"><span class="wms-custmmsgtitvline wms-truncate-ellipsis">' + $WC.Util.escapeHTML(v) + "</span>" : '<div class="wms-custmmsgtitle">', o += '<ul class="wms-custmmsglist">';
                for (var C = p ? p.length : 0, b = 0; b < C; b++) o += "<li>" + $WC.Util.escapeHTML(p[b]) + "</li>";
                o += "</ul></div>"
            } else if ("table" === f) {
                r = v ? '<div class="wms-custmmsgtitle"><span class="wms-custmmsgtitvline wms-truncate-ellipsis">' + $WC.Util.escapeHTML(v) + "</span>" : '<div class="wms-custmmsgtitle">', r += '<div class="wms-custmtablediv"><div class="wms-custmtable"><div class="wms-custmrow">';
                for (var y = p.headers.length, _ = 0; _ < y; _++) r += '<div class="wms-custmcel">' + $WC.Util.escapeHTML(p.headers[_]) + "</div>";
                r += "</div>";
                for (var W = p.rows ? p.rows.length : 0, S = 0; S < W; S++) {
                    r += '<div class="wms-custmrow">', C = p.rows[S].length;
                    for (var w = 0; w < C; w++) r += '<div class="wms-custmcel">' + $WC.Util.escapeHTML(p.rows[S][w]) + "</div>";
                    r += "</div>"
                }
                r += "</div></div>"
            }
        }
        l += d + c + '<div class="wms-custmmsgpadding">{{custommsg}}</div></div>' + a + o + r + '</div></div><span class="wms-imgpreviewclose"></span>', l = $WC.template.replace(l, {
            msgtitle: i ? i.msg_title : "",
            thumbnailurl: m,
            custommsg: e
        });
        var M = $WC.Util.createElement("div", "wms-custmmsgcontainer", "wms-custmmsg wms-hvalign");
        M.style.zIndex = $WC.Config.get("zindex"), document.body.appendChild(M), document.getElementById("wms-custmmsgcontainer").innerHTML = l, document.getElementById("wms-overlay").innerHTML = '<span class="wms-imgpreviewclose"></span>'
    }, Message.resend = function(e, t, s) {
        var i = e.getAttribute("data-chid"),
            n = [],
            a = [];
        s ? a = e.querySelectorAll("[data-msgfailure]") : a.push(t);
        for (var o = a.length - 1; o >= 0; o--) {
            var r = a[o].getAttribute("data-msgfailure-reason") || a[o].parentNode.querySelector("[data-msgfailure-reason]").getAttribute("data-msgfailure-reason"),
                l = a[o].getAttribute("data-msgtime") || a[o].parentNode.querySelector("[data-msgtime]").getAttribute("data-msgtime"),
                d = Message.getMsgFromDom(i, a[o].getAttribute("data-msgid") || a[o].parentNode.querySelector("[data-msgid]").getAttribute("data-msgid"), !1, !1);
            n[o] = {
                msg: d,
                retry_reason: r,
                failure_time: l
            }, Message.removeFailedMessages(a[o])
        }
        Message.sendmsg(i, n)
    }, Message.removeFailedMessages = function(e) {
        var t = e.previousSibling,
            s = e.nextSibling;
        if (t && "wms-msgtime" === t.className && (t = t.previousSibling), s && "wms-msgtime" === s.className && (s = s.nextSibling), t && t.getAttribute("data-senderzuid") && (!s || s && s.getAttribute("data-senderzuid"))) {
            var i = e.previousSibling;
            "wms-msgdate" === i.previousSibling.className && $WC.Util.removeElement(i.previousSibling), $WC.Util.removeElement(e.previousSibling)
        }
        e.nextSibling && "wms-msgtime" === e.nextSibling.className && $WC.Util.removeElement(e.nextSibling), $WC.Util.removeElement(e)
    }, Message.sendmsg = function(e, t) {
        var s = t.shift(),
            i = s.retry_reason;
        if (!i)
            if (!1 === iswmsframeloaded) i = Message.retryErrors.ws_failure;
            else if (s.failure_time) {
            (new Date).getTime() - s.failure_time > parseInt(WmsSettings.send_message_expiry_time) && (i = Message.retryErrors.cliq_api_timeout)
        }
        s = s.msg ? s.msg : s, Message.send(e, s, t, null, null, null, null, null, null, null, null, null, null, !0, i)
    }, Message.getTextMsgFromDom = function(e, t, s, i) {
        for (var n = "", a = 0; a < e.length; a++) {
            if (i && e[a - 1] && "BLOCKQUOTE" === e[a - 1].nodeName && (n += "\n"), "#text" === e[a].nodeName || "A" === e[a].nodeName) "A" === e[a].nodeName && "linkhtml" === e[a].getAttribute("markdown") ? n += t ? $WC.Util.safeHTML("[" + $WC.Util.getInnerText(e[a]) + "](" + e[a].href + ")") : "[" + $WC.Util.getInnerText(e[a]) + "](" + e[a].href + ")" : n += t ? $WC.Util.safeHTML($WC.Util.getInnerText(e[a])) : $WC.Util.getInnerText(e[a]);
            else if (e[a].getAttribute("data-urlpreviewcomment")) n += Message.getTextMsgFromDom(e[a].childNodes, t, s);
            else if ("SPAN" === e[a].nodeName)
                if (e[a].getAttribute("data-emoji")) n += e[a].innerHTML;
                else {
                    var o = e[a].outerHTML;
                    n += s ? e[a].innerHTML : WMSUI.atMentions.replaceAtMentionsForHtml(o, t)
                }
            else if ("EM" === e[a].nodeName) {
                var r = e[a].outerHTML;
                n += Smiley.replaceSmileyForHtml(r)
            } else "BLOCKQUOTE" === e[a].nodeName ? n += t ? $WC.Markdown.apply("!" + Message.getTextMsgFromDom(e[a].childNodes, t)) : "!" + Message.getTextMsgFromDom(e[a].childNodes, t) : "CODE" === e[a].nodeName ? n += t ? $WC.Markdown.apply("`" + Message.getTextMsgFromDom(e[a].childNodes, t) + "`") : "`" + Message.getTextMsgFromDom(e[a].childNodes, t) + "`" : "PRE" === e[a].nodeName ? n += t ? $WC.Markdown.apply("```" + Message.getTextMsgFromDom(e[a].childNodes, t) + "```") : "```" + Message.getTextMsgFromDom(e[a].childNodes, t) + "```" : "STRONG" === e[a].nodeName ? n += t ? $WC.Markdown.apply("*" + Message.getTextMsgFromDom(e[a].childNodes, t) + "*") : "*" + Message.getTextMsgFromDom(e[a].childNodes, t) + "*" : "STRIKE" === e[a].nodeName ? n += t ? $WC.Markdown.apply("~" + Message.getTextMsgFromDom(e[a].childNodes, t) + "~") : "~" + Message.getTextMsgFromDom(e[a].childNodes, t) + "~" : "I" === e[a].nodeName ? n += t ? $WC.Markdown.apply("_" + Message.getTextMsgFromDom(e[a].childNodes, t) + "_") : "_" + Message.getTextMsgFromDom(e[a].childNodes, t) + "_" : "U" === e[a].nodeName ? n += t ? $WC.Markdown.apply("__" + Message.getTextMsgFromDom(e[a].childNodes, t) + "__") : "__" + Message.getTextMsgFromDom(e[a].childNodes, t) + "__" : "H1" === e[a].nodeName ? n += t ? $WC.Markdown.apply("# " + Message.getTextMsgFromDom(e[a].childNodes, t)) : "# " + Message.getTextMsgFromDom(e[a].childNodes, t) : "H2" === e[a].nodeName ? n += t ? $WC.Markdown.apply("## " + Message.getTextMsgFromDom(e[a].childNodes, t)) : "## " + Message.getTextMsgFromDom(e[a].childNodes, t) : "H3" === e[a].nodeName ? n += t ? $WC.Markdown.apply("### " + Message.getTextMsgFromDom(e[a].childNodes, t)) : "### " + Message.getTextMsgFromDom(e[a].childNodes, t) : "H4" === e[a].nodeName ? n += t ? $WC.Markdown.apply("#### " + Message.getTextMsgFromDom(e[a].childNodes, t)) : "#### " + Message.getTextMsgFromDom(e[a].childNodes, t) : "H5" === e[a].nodeName ? n += t ? $WC.Markdown.apply("##### " + Message.getTextMsgFromDom(e[a].childNodes, t)) : "##### " + Message.getTextMsgFromDom(e[a].childNodes, t) : "H6" === e[a].nodeName ? n += t ? $WC.Markdown.apply("###### " + Message.getTextMsgFromDom(e[a].childNodes, t)) : "###### " + Message.getTextMsgFromDom(e[a].childNodes, t) : "BR" === e[a].nodeName ? n += "\n" : "HR" === e[a].nodeName && (n += "---");
            i && e[a + 1] && "BLOCKQUOTE" === e[a + 1].nodeName && (n += "\n")
        }
        return n
    }, Message.getMsgFromDom = function(e, t, s, i, n, a, o) {
        var r = WindowHandler.getWinObjById(e).msgdisp,
            l = a ? '.wms-msgfrag[data-msgid="' + t + '"] [data-msgid]' : '[data-msgid="' + t + '"]',
            d = (o = o ? o.querySelector(l) : r.querySelector(l)).getAttribute("data-type");
        d === Message.types.EDITEDMSG && (d = o.firstChild.getAttribute("data-type") ? o.firstChild.getAttribute("data-type") : Message.types.TEXTMSG);
        var c, u, m = (o = o && o.firstChild).childNodes;
        if (d == Message.types.TEXTMSG || d == Message.types.BOTMSG) return Message.getTextMsgFromDom(m, i, n);
        if (d == Message.types.IMGATT) {
            var h = o.querySelector("img[data-previewable]"),
                g = !s && o.querySelector("[data-filecomment]") ? $WC.Util.getInnerText(o.querySelector("[data-filecomment]")) : "";
            u = h.getAttribute("data-fname");
            var p = h.getAttribute("data-furl");
            return {
                messagetype: d,
                fName: i ? $WC.Util.safeHTML(u) : u,
                fileurl: p + Message.getThumbnailImageUrl(p),
                isv1: h.getAttribute("data-isv1"),
                fcomment: $WC.Util.safeHTML(g)
            }
        }
        if (d == Message.types.REPLYMSG || d == Message.types.FORWARDEDMSG) return o.closest('[data-type="THREADMSG"]') ? (t = o.closest('[data-type="THREADMSG"]').getAttribute("data-msgid"), Message.getMsgFromDom(e, t, s, i, n, null, f)) : Message.getMsgFromDom(e, t, s, i, n, !0);
        if (d == Message.types.THREADLINKMSG || d == Message.types.THREADMSG) {
            var f = null;
            return o.querySelector('[data-type="REPLYMSG"]') ? f = o : t = o.querySelector("[data-msgid]").getAttribute("data-msgid"), Message.getMsgFromDom(e, t, s, i, n, null, f)
        }
        if (d == Message.types.FILEATT) {
            c = o.querySelector(".wms-filetitle"), u = $WC.Util.getInnerText(c);
            g = !s && o.querySelector("[data-filecomment]") ? $WC.Util.getInnerText(o.querySelector("[data-filecomment]")) : "", p = o.querySelector(".wms-filemsgcontainer").getAttribute("data-furl");
            return {
                messagetype: d,
                fName: i ? $WC.Util.safeHTML(u) : u,
                fileurl: p,
                fcomment: $WC.Util.safeHTML(g)
            }
        }
        if (d == Message.types.LOCATT) return c = o.querySelector(".wms-locmsgimg a"), u = $WC.Util.getInnerText(c), {
            messagetype: d,
            name: i ? $WC.Util.safeHTML(u) : u
        };
        if (d == Message.types.CONTACTATT) return c = o.querySelector(".wms-contactmsgimg span"), u = $WC.Util.getInnerText(c.firstChild), {
            messagetype: d,
            name: i ? $WC.Util.safeHTML(u) : u
        };
        if (d == Message.types.EVENTATT) return c = o.querySelector(".wms-evntmsgname"), u = $WC.Util.getInnerText(c), {
            messagetype: d,
            name: i ? $WC.Util.safeHTML(u) : u
        };
        if (d == Message.types.AUDIOATT) {
            u = o.querySelector("[data-fname]") ? o.querySelector("[data-fname]").getAttribute("data-fname") : "";
            g = !s && o.querySelector("[data-filecomment]") ? $WC.Util.getInnerText(o.querySelector("[data-filecomment]")) : "", p = o.querySelector("#wms-audioplayer").getAttribute("data-furl");
            return {
                messagetype: d,
                fName: i ? $WC.Util.safeHTML(u) : u,
                fileurl: p,
                fcomment: $WC.Util.safeHTML(g)
            }
        }
        if (d == Message.types.VIDEOATT) {
            u = (c = o.querySelector("#wms-videoplayer")).getAttribute("data-fname");
            g = !s && o.querySelector("[data-filecomment]") ? $WC.Util.getInnerText(o.querySelector("[data-filecomment]")) : "", p = c.getAttribute("data-furl");
            return {
                messagetype: d,
                fName: i ? $WC.Util.safeHTML(u) : u,
                fileurl: p,
                fcomment: $WC.Util.safeHTML(g)
            }
        }
        return d == Message.types.CUSTOMMSG ? (c = o.querySelector(".zcdesc")) ? (u = $WC.Util.getInnerText(c), {
            messagetype: d,
            desc: i ? $WC.Util.safeHTML(u) : u
        }) : Message.getTextMsgFromDom(m, i) : d == Message.types.VIDEOLINK || d == Message.types.AUDIOLINK ? (c = o.querySelector("a"), u = $WC.Util.getInnerText(c), {
            messagetype: d,
            desc: i ? $WC.Util.safeHTML(u) : u
        }) : d == Message.types.IMGLINK ? (c = o.querySelector("img"), {
            messagetype: d,
            desc: i ? $WC.Util.safeHTML(c.src) : c.src
        }) : d == Message.types.HRMSG ? (o = o.parentNode.lastChild, Message.getTextMsgFromDom([o], i)) : void 0
    }, Message.formatDraftMsg = function(e) {
        var t = e.msg;
        if (e.meta && e.meta.mentions) {
            var s = e.meta.mentions;
            for (var i in s)
                if (s[i].type === $WC.CMsgUtil.UserMention) {
                    var n = "{@" + s[i].id + "}"; - 1 != t.indexOf(n) && (t = t.replace(n, "@" + $WC.Util.getContactName(s[i].id, s[i].name)))
                } else if (s[i].type === $WC.CMsgUtil.ChannelMention) {
                n = "{#" + s[i].id + "}"; - 1 != t.indexOf(n) && (t = t.replace(n, s[i].dname))
            } else if (s[i].type == $WC.CMsgUtil.SpecialMention.participants || s[i].type == $WC.CMsgUtil.SpecialMention.available) {
                n = "{@" + s[i].id + "}"; - 1 != t.indexOf(n) && (t = t.replace(n, s[i].dname))
            }
        }
        return Message.isAddMsg(t) && (t = $WC.Util.formatMentions(t, !0)), t
    }, Message.isMentionMsg = function(e) {
        if ("string" == typeof e) {
            var t = e.split("o-CT-")[1],
                s = t ? t.split("-")[0] : "";
            if (s) {
                var i = "o-CT-" + s + "-";
                e = e.replace(i, "")
            }
        }
        return $WC.Matcher.check("atmention_v2", e) || $WC.Matcher.check("usersilentmention", e) || e.meta && e.meta.mentions
    }, Message.isAddMsg = function(e) {
        return $WC.Matcher.check("addmember", e) || e.meta && e.meta.mentions
    }, Message.formatLastMsgInfo = function(e) {
        var t = e;
        if (Message.isMentionMsg(e) || Message.isAddMsg(e)) {
            t = $WC.Util.formatMentions(e, !0)
        } else "string" == typeof e && -1 !== e.indexOf("<hr>") && (t = e.replace("<hr>", "---"));
        return t
    }, Message.getDnameFromMetaDataFormat = function(e) {
        var t = $WC.Util.getContactName(e.split(":")[1]);
        return e.split(":")[1] === WebMessanger.zuid ? t = WebMessanger.getNickName() : t || (t = e.split(":")[3]), $WC.Util.escapeHTML(t)
    }, Message.constructMessageFragment = function() {
        function e(e, t, s) {
            return Message.isBotMsg(e) && Message.isCustomMsg(e) ? (Message.metaInfo[t] = e.meta, '<a data-custommsg="true" >' + $WC.CMsgUtil.convertLinks(e.msg) + "</a>") : (e = Message.isMentionMsg(e) || Message.isAddMsg(e) ? $WC.Util.formatMentions(e) : e, s || (e = $WC.Markdown.apply(e)), e = Message.getDisplayContent(e))
        }
        var t, s, i;

        function n(e, t, s) {
            var i, n, a, o, r = "",
                l = "",
                d = "",
                c = "",
                u = "",
                m = "",
                h = {},
                g = "wms-imgmsgcontainer",
                p = e.url || e.fileurl,
                f = e.content || e.contenttype,
                v = "",
                C = "";
            if (Message.isFileViewDisabled(e)) return '<div class="wms-msg">' + Message.getDisabledFileView() + "</div>";
            if (e.meta && e.meta.linkdetails && -1 !== e.meta.linkdetails.mimetype.indexOf("image/")) d = e.meta.linkdetails.url, e = e.msg ? e.msg : e, g = "wms-imgmetamsgcontainer", n = 240, i = 130;
            else if (e.meta && e.meta.linkdetails && -1 !== e.meta.linkdetails.mimetype.indexOf("text/") ? (l = '<div class="wms-iconseperator"><div class="wms-urlinfoouterdiv"><div class="wms-urlinfo"><a href="{{urllink}}" target="_blank" class="wms-urlinfolink">{{urltitlelink}}</a></div><div class="wms-urlinfo"><a href="{{urlauthorurl}}" target="_blank" class="wms-urlinfoauthor">{{urlauthor}}</a></div><div class="wms-urlinfo"><a href="{{urlproviderurl}}" target="_blank" class="wms-urlsiteinfo">{{urlprovider}}</a></div></div>', d = e.meta.linkdetails.imgurl, h = e.meta.linkdetails, e = e.msg ? e.msg : e, c = h.imgurl, u = h.providerurl, g = "wms-imgmetamsgcontainer") : (d = e.constructeddownloadurl || e.url, m = e["img-data"] ? "data:image/jpeg;base64," + e["img-data"] : "", l = '<div data-type="' + Message.types.IMGATT + '" class="wms-msg wms-imgwrapper">'), e.dim) {
                var b = e.dim.height / e.dim.width;
                n = e.dim.width, e.dim.width >= 240 && (n = 240), i = Math.ceil(n * b), n < 240 && (n = 240), i < 130 && (i = 130), o = e.dim.width || e.dim.tnwidth, a = e.dim.height || e.dim.tnheight
            } else n = 229, i = 130, a = 130, o = 240, d = e.constructeddownloadurl || e.url;
            var y = "";
            if (e.comment) {
                e.comment = $WC.Util.safeHTML($WC.Util.unescapeHTML(e.comment)), y = e.meta && e.meta.mentions ? $WC.Util.formatMentions(e) : e.comment;
                var _ = Message.getDisplayContent($WC.Markdown.apply(y));
                r = $WC.template.replace('<div data-filecomment=true class="wms-msgcomment">{{comment}}</div>', {
                    comment: _
                }, "InSecureHTML"), g += " wms-imgmsgcontainer-withcomment"
            }
            var W = 'src="{{originalsrc}}"';
            !WMSUI.isLoadedImg(d) && m && (W = 'class="wms-imgbluroverlay" originalsrc="{{originalsrc}}" src="{{src}}"'), WebMessanger.crossoriginisolation && (W += ' crossorigin="use-credentials" ');
            WindowHandler.getWinObjById(e.chid);
            if ("WP" == WebMessanger.prd && null != WMSUI.zhShareInstance) {
                v = "zhshare-src";
                var S = !(!e.thumb || "true" != e.thumb),
                    w = JSON.stringify({
                        id: p,
                        chatId: e.chid,
                        size: e.dim.size,
                        name: e.fName,
                        contentType: e.content,
                        preview: S
                    });
                C = $WC.template.replace('data-zhshare-src-meta="{{metaobj}}" data-zhshare-src-fname="{{fname}}"', {
                    metaobj: w,
                    fname: e.fName
                })
            }
            var M = l + '<div class="{{classname}} ' + v + '" data-previewable="true" ' + C + "><img " + W + 'src="{{originalsrc}}" data-fname="{{filename}}" data-fsize="{{size}}" data-fsender="{{sender}}" data-timestamp={{timestamp}} data-fdate="{{date}}" data-ftime="{{time}}" data-fheight="{{actualheight}}" data-fwidth="{{actualwidth}}" data-fcomment="{{comment}}" {{msguid}} data-chid="{{chid}}" data-fcontent="{{content}}" data-furl="{{url}}" data-dname="{{dname}}" data-previewable="true" data-filefrwrd={{filefrwrdsupport}} data-isv1={{isv1}} data-infected="{{isinfected}}"></div>' + r + "</div>";
            return $WC.template.replace(M, {
                originalsrc: d,
                src: m,
                classname: g,
                size: e.size || "",
                sender: e.sender,
                timestamp: e.time,
                date: $WC.DateUtil.formatDate(e.time),
                time: $WC.DateUtil.formatTime(e.time),
                actualheight: a,
                actualwidth: o,
                height: i,
                width: n,
                filename: e.fName,
                comment: y,
                content: f,
                url: p,
                dname: t,
                linkurl: c,
                urllink: h.url,
                urltitlelink: h.title,
                urlauthorurl: h.authorurl,
                urlproviderurl: u,
                urlauthor: h.authorname,
                urlprovider: h.providername,
                filefrwrdsupport: !!e.isFileForwardSupported,
                isv1: !!e.isv1,
                $download: "chat.download",
                $forward: "message.actions.forward",
                $preview: "chat.preview",
                msguid: -1 !== s.indexOf("data-msguid") ? s : 'data-msguid="' + s + '"',
                chid: e.chid,
                isinfected: e.isInfected || !1
            })
        }

        function a(e) {
            if (Message.isFileViewDisabled(e)) return Message.getDisabledFileView();
            var t = "",
                s = "";
            if (e.commentmsg = "", e.previewurl = Message.getDownloadUrl(e), WebMessanger.crossoriginisolation ? e.previewurl += "&x-cli-msg=" + encodeURIComponent("{mode:view,coi:true}") : e.previewurl += "&x-cli-msg=" + encodeURIComponent("{mode:view}"), !WebMessanger.isUDSDownloadEnabled() || WebMessanger.isGuestUser()) {
                var i = Message.getDownloadUrl(e);
                if (i) {
                    var n = (i = i.replace("/thumbnail", "")).split("?");
                    i = n[0] + "/view", n[1] && (i += "?" + n[1]), WebMessanger.crossoriginisolation && (i += n[1] ? "&coi=true" : "?coi=true")
                }
                e.previewurl = i
            }
            if (WebMessanger.isGuestUser() && (e.guestthumbnailurl = e.constructeddownloadurl), e.comment && e.comment.trim()) {
                e.comment = $WC.Util.safeHTML($WC.Util.unescapeHTML(e.comment)), s = e.meta && e.meta.mentions ? $WC.Util.formatMentions(e) : e.comment;
                var a = Message.getDisplayContent($WC.Markdown.apply(s)).trim();
                t = "<div data-filecomment=true class='wms-msgcomment'>{{comment}}</div>", t = $WC.template.replace(t, {
                    comment: a
                }, "InSecureHTML"), e.commentmsg = s
            }
            if (e.dim && e.dim.size > 209715200 && delete e.thumb, e.thumb) {
                var o = e.guestthumbnailurl ? e.guestthumbnailurl : e.constructeddownloadurl + Message.getThumbnailImageUrl(e.constructeddownloadurl, !0);
                if (WMSUI.isLoadedImg(o)) e.thumbnailurl = o;
                else {
                    var r = new Image;
                    WebMessanger.crossoriginisolation && (r.crossorigin = "use-credentials"), r.src = o, r.onload = function() {
                        var t = document.querySelector('[data-msgid="' + e.msgid + '"');
                        if (t) {
                            var s = t.querySelector("[data-filethumbnail=true]").firstElementChild;
                            o = e.guestthumbnailurl ? e.guestthumbnailurl : e.constructeddownloadurl + Message.getThumbnailImageUrl(e.constructeddownloadurl, !0), s.src = o, WMSUI.isLoadedImg[o] = !0
                        }
                    }, e.thumbnailurl = "data:image/jpeg;base64," + e["img-data"]
                }
            }
            return $WC.UrlPreview.constructFileFragment(e) + t
        }

        function o(e) {
            if (Message.isFileViewDisabled(e)) return Message.getDisabledFileView();
            var t = "",
                s = "",
                i = "",
                n = "";
            if (e.comment) {
                e.comment = $WC.Markdown.apply($WC.Util.safeHTML($WC.Util.unescapeHTML(e.comment))), s = e.meta && e.meta.mentions ? $WC.Util.formatMentions(e) : e.comment;
                var a = Message.getDisplayContent(Smiley.replace(s));
                t = "<div data-filecomment=true class='wms-msgcomment'>{{comment}}</div>", t = $WC.template.replace(t, {
                    comment: a
                }, "InSecureHTML")
            }
            WindowHandler.getWinObjById(e.chid);
            if ("WP" == WebMessanger.prd && null != WMSUI.zhShareInstance) {
                var o = !(!e.thumb || "true" != e.thumb);
                i = " zhshare-src";
                var r = JSON.stringify({
                    id: e.url || e.fileurl,
                    chatId: e.chid,
                    size: e.dim.size,
                    name: e.fName,
                    contentType: e.content,
                    preview: o
                });
                n = $WC.template.replace('data-zhshare-src-meta="{{metaobj}}" data-zhshare-src-fname="{{fname}}"', {
                    metaobj: r,
                    fname: e.fName
                })
            }
            var l = '<div class="wms-audiofilecontainer' + i + '" ' + n + '><div data-media="true" data-duration="{{duration}}" id="wms-audioplayer" data-mountaudioplayer="true" class="wms-audioplayerdiv" data-fsrc="{{filesrc}}" data-fname="{{filename}}" data-fcomment="{{comment}}" data-fcontent="{{type}}" data-furl="{{url}}" data-ftype="{{type}}" data-filefrwrd="{{fileforward}}" data-isv1="{{isv1}}" data-infected="{{isinfected}}"><div></div></div></div>';
            l += t;
            var d = e.content || e.contenttype,
                c = e.url || e.fileurl,
                u = e.meta && e.meta.linkdetails ? e.meta.linkdetails.url : e.constructeddownloadurl ? e.constructeddownloadurl : _WMSCHATURL + "download.sas?mime=" + d + "&url=" + c + "&fName=" + e.fName;
            return $WC.template.replace(l, {
                filesrc: u,
                filename: e.fName || u,
                filesize: e.size || "",
                duration: e.duration || "0",
                url: c,
                type: d,
                comment: s,
                isv1: e.isv1,
                fileforward: !!e.isFileForwardSupported,
                isinfected: e.isInfected || !1
            })
        }

        function r(e) {
            if (Message.isFileViewDisabled(e)) return Message.getDisabledFileView();
            var t = "",
                s = "",
                i = "",
                n = "",
                a = "wms-videoplayer wms-videoplayarea";
            if (e.comment) {
                e.comment = $WC.Util.safeHTML($WC.Util.unescapeHTML(e.comment)), s = e.meta && e.meta.mentions ? $WC.Util.formatMentions(e) : e.comment;
                var o = Message.getDisplayContent($WC.Markdown.apply(Smiley.replace(s)));
                t = "<div data-filecomment=true class='wms-msgcomment'>{{comment}}</div>", a += " wms-videoplayer-withcomment", t = $WC.template.replace(t, {
                    comment: o
                }, "InSecureHTML")
            }
            var r = e.content || e.contenttype,
                l = e.url || e.fileurl,
                d = e.meta && e.meta.linkdetails ? e.meta.linkdetails.url : e.constructeddownloadurl ? e.constructeddownloadurl : _WMSCHATURL + "download.sas?mime=" + r + "&url=" + l + "&fName=" + e.fName,
                c = d,
                u = !0,
                m = !0;
            WindowHandler.chatrestrictions[e.chid] && (WindowHandler.chatrestrictions[e.chid].restrictFileForward && (u = !1), WindowHandler.chatrestrictions[e.chid].restrictFileDownload && (m = !1));
            var h = {
                hideforwardicon: !e.isFileForwardSupported || !u,
                hidedownloadicon: !m
            };
            WebMessanger.isGuestUser() && (h.isguestuser = !0, h.videourl = d), e.thumb && !WebMessanger.isGuestUser() && (c += Message.getThumbnailImageUrl(c, !0));
            WindowHandler.getWinObjById(e.chid);
            if ("WP" == WebMessanger.prd && null != WMSUI.zhShareInstance) {
                i = "zhshare-src";
                var g = JSON.stringify({
                    id: l,
                    chatId: e.chid,
                    size: e.dim.size,
                    name: e.fName,
                    contentType: e.content
                });
                n = $WC.template.replace('data-zhshare-src-meta="{{metaobj}}" data-zhshare-src-fname="{{fname}}"', {
                    metaobj: g,
                    fname: e.fName
                }), h.wpCopyHandled = WMSUI.zhShareInstance.isWpAttachmentCopyEnabled(), h.wpcopy_attribute = g
            }
            var p = '<div id="wms-videoplayer" data-isv1="{{isv1}}" data-media="true" class="{{classname}} ' + i + '" data-fcomment="{{comment}}" data-fposter="{{posterurl}}" data-fsrc="{{filesrc}}" data-fname="{{filename}}"  data-fcontent="{{type}}" data-furl="{{url}}" data-filefrwrd="{{filefrwrd}}" data-infected="{{isinfected}}"' + n + ">" + (new $WC.VideoPlayer).createInitialState(c, h) + "</div>" + t;
            return $WC.template.replace(p, {
                filesrc: d,
                filename: e.fName || d,
                filesize: e.size || "",
                duration: "",
                classname: a,
                url: l,
                type: r,
                comment: s,
                filefrwrd: !!e.isFileForwardSupported,
                isv1: e.isv1,
                posterurl: c,
                isinfected: e.isInfected || !1
            })
        }

        function l(e, t) {
            if (e && e.meta) {
                1 !== e.meta.revision && 2 !== e.meta.revision || (e.raw = !0), e.meta.usermessagedetails || (e.meta.usermessagedetails = {}), e.meta.usermessagedetails.themeid = e.meta.usermessagedetails.themeid || 1, e.meta.native_widget && "events" == e.meta.native_widget.type && e.meta.native_widget.data && e.meta.native_widget.data.event_details && (e.meta.formattedmsg = [$WC.CustomMsg.formatEventCardTime(e.meta.native_widget.data.event_details)]);
                var s = $WC.CMsgUtil.convertMsgObj(e);
                return $WC.CustomMsgUI.getCustomMessageContent(s)
            }
        }

        function d(e) {
            var t = "";
            if (e.post_in_parent) {
                var s = "",
                    i = "";
                e.thread_link_info ? (s = e.thread_link_info.link_chat_id, i = e.thread_link_info.link_message_id) : s = $WC.Util.getParentChidFromThreadChid(e.chid), t = '<div class="wms_forwardmsg" data-postedinparent="true" data-parentchid="' + s + '" data-parentmsguid="' + i + '"><div class="wms_threadmsgheader wms_posted_in_parent">' + $WC.I18N("thread.msg.postedinparent") + "</div></div>", e.post_in_parent_added = !0, delete e.post_in_parent
            } else {
                var n = e.meta.post_in_parent_information,
                    a = $WC.I18N("thread.msg.postinfo", ['<span class="wms_threadmsgheader_title">"' + $WC.Util.safeHTML(n.thread_chat_title) + '"</span>']);
                t = '<div class="wms_forwardmsg" data-threadmsg_post="' + n.thread_chat_id + '" data-thread_title="' + $WC.Util.safeHTML(n.thread_chat_title) + '" data-thread_msgid="' + n.thread_origin_message_id + '" data-thread_chid="' + n.thread_chat_id + '" data-thread_followercnt="1" data-thread_follower="true" data-thread_msgcnt="" data-thread_creator="' + n.sender + '"><div class="wms_threadmsgheader">' + a + "</div></div>", delete e.meta.post_in_parent_information
            }
            u(e);
            var o = Message.getMessageType(e),
                r = e.sender + "_" + e.msgid,
                l = e.msg;
            return (Object.keys(e.meta).length > 1 && Message.getMessageType(e) != Message.types.FILEATT && Message.getMessageType(e) != Message.types.IMGATT && Message.getMessageType(e) != Message.types.VIDEOATT && Message.getMessageType(e) != Message.types.AUDIOATT || Message.getMessageType(e) === Message.types.EDITEDMSG) && (l = e), '<div class="wms_forwardmsgwrapper">' + t + Message.constructMessageFragment(e.sender, e.dname, e.time, l, o, e.sender, e.time, r, null, null, null, null, e.msguid, null, null, null, null, null, null, !0) + "</div>"
        }

        function c(e, t, s) {
            var i = e.meta.forward_info,
                n = "",
                a = "";
            if (i) {
                var o = i.chid,
                    r = i.msguid,
                    l = "",
                    d = !1;
                $WC.Util.isChannelChid(o) && ($WC.Util.isEmptyObject($WC.Channels.get()) && !1 === _WMS_FETCHCHANNELSINITIATED ? ($WC.Channels.getChannels(), $WC.Util.pubsub.subscribe("/channels/updateui", (function() {
                    WindowHandler.updateForwardedMsgFragments()
                })), _WMS_FETCHCHANNELSINITIATED = !0) : $WC.Channels.isJoinedChannel(o) && (l = i.chat_title, d = !0));
                var c = $WC.Util.isLocalUser(i.sender) ? $WC.Config.get("dname") : $WC.Util.getContactName(i.sender, i.dname);
                i.bot && (c = i.bot.name);
                var m = $WC.I18N("forward.info.sender", ['<span class="wms_forwardinfo_highlight" data-zcprofileid="' + i.sender + '">' + c + "</span>"]);
                n = '<div><div class="wms_forwardmsgsender">' + (m += $WC.Util.isChannelChid(o) && ($WC.Channels.isJoinedChannel(o) || $WC.Util.isEmptyObject($WC.Channels.get())) ? ' <span data-forwardchid="' + o + '">' + $WC.I18N("forward.info.chat", ['<span class="wms_forwardinfo_highlight">' + l + "</span>"]) + "</span>" : "") + "</div></div>", a = 'data-forwardmsgid="' + r + '" data-forwardmsgchid="' + o + '" data-messagelink=' + d
            } else "forwarded" === e.meta.message_type && (a = 'data-nooriginalsenderinfo="true"');
            var h = '<div class="wms_forwardmsg" ' + a + '><div class="wms_forwardmsgheader"><span class="wms_forwardmsgicon"></span><span class="wms_forwardinfo">' + $WC.I18N("forward.msg.info") + "</span></div>" + n + "</div>";
            delete e.meta.forward_info, e.meta.message_type = "forwarded_handled", u(e);
            var g = Message.getMessageType(e),
                p = e.msg;
            p.chid = e.chid;
            var f = e.sender + "_" + e.time;
            if (Object.keys(e.meta).length > 1) {
                if ("object" != typeof p) p = e;
                else
                    for (var v in e.meta) e.msg.meta[v] = e.meta[v];
                p.meta.linkdetails && (p.msg = $WC.Util.safeHTML($WC.Util.unescapeHTML(p.msg)))
            } else "object" != typeof p && (p = $WC.Util.safeHTML($WC.Util.unescapeHTML(p)));
            return '<div class="wms_forwardmsgwrapper">' + h + Message.constructMessageFragment(e.sender, e.dname, e.time, p, g, e.sender, e.time, f, t, null, null, null, e.msguid, null, null, null, null, null, s) + "</div>"
        }

        function u(e, t) {
            var s, i = Message.getMessageType(e);
            i !== Message.types.IMGATT && i !== Message.types.FILEATT && i !== Message.types.VIDEOATT && i !== Message.types.AUDIOATT || (t ? ((s = e).contenttype, s.fileurl) : ((s = e.msg).content, s.url), s.constructeddownloadurl = Message.getDownloadUrl(s), i === Message.types.IMGATT && s.thumb ? s.constructeddownloadurl += Message.getThumbnailImageUrl(s.constructeddownloadurl, !0) : WebMessanger.isGuestUser() && -1 == s.constructeddownloadurl.indexOf("guest_id") && (s.constructeddownloadurl += "?guest_id=" + WebMessanger.guest_info.encrypt_id), s.isFileForwardSupported = !0)
        }

        function m(e, t, s) {
            e.meta.linkdetails.notification_configs && e.msguid && (Message.urlmsgstore[e.msguid] = e);
            var i = {
                dname: e.dname,
                sender: e.sender,
                date: $WC.DateUtil.formatDate(e.time),
                time: $WC.DateUtil.formatTime(e.time),
                timestamp: e.time
            };
            e.sentfromcomposer || (t && t != Message.types.BOTMSG || !t) && (e.msg = $WC.Util.safeHTML($WC.Util.unescapeHTML(e.msg)));
            var n = e.msg,
                a = "";
            e.meta.linkdetails.chid = e.chid;
            var o = n.split("https://").length - 1;
            if ($WC.UrlPreview.isZohoOfficeSuiteUrl(n) && $WC.Util.isBetaOrg() && 1 == o) {
                var r = $WC.UrlPreview.getSuitableZOSRegexKey(n),
                    l = $WC.UrlPreview.findFirstZOSDomain(n),
                    d = $WC.UrlPreview.getPermalinkRegex(r, $WC.UrlPreview.getDomainFromUrl(l)),
                    c = n.match(d)[0];
                a = c.replaceAll(c, $WC.UrlPreview.getWorkDriveRedirectURL(e.meta.linkdetails, c))
            }
            if (e.meta.mentions) n = $WC.Util.formatMentions(e);
            else {
                var u = e.chid,
                    m = n.match(/{[\+|\-]?[@#](.*?)}/g);
                m && m.length > 0 ? n = WMSUI.atMentions.updateMessage(n, u) : Message.isMentionMsg(n) && (n = $WC.Util.formatMentions(n))
            }
            var h = '<div class="wms-msgcomment"  data-urlpreviewcomment="true"' + (a ? 'data-redirecturl="' + a + '"' : "") + ">" + (n = Message.getDisplayContent($WC.Markdown.apply(n))).trim() + "</div>",
                g = !1;
            if ("rich" === e.meta.linkdetails.linktype && (e.meta.linkdetails.html || e.meta.linkdetails.iframe_url) && (g = !0), t === Message.types.VIDEOLINK) return '<div class="wms-msg">' + $WC.UrlPreview.constructVideoLinkFragment(e) + h + "</div>";
            if (t === Message.types.AUDIOLINK) return '<div class="wms-msg">' + $WC.UrlPreview.constructAudioLinkFragment(e) + h + "</div>";
            if (t === Message.types.IMGLINK) return e.meta.linkdetails.redirected_url && (e.meta.linkdetails.url = e.meta.linkdetails.redirected_url), '<div class="wms-msg">' + $WC.UrlPreview.constructImageLinkFragment(e) + h + "</div>";
            var p = e.meta.linkdetails;
            return e.meta.btnindexvsdetails && (p.btnindexvsdetails = e.meta.btnindexvsdetails), p.redirected_url && (p.url = p.redirected_url), p.redirected_thumbnail_url && (p.thumbnailurl = p.redirected_thumbnail_url), p.cliq_message && (p.description = Smiley.replace($WC.Util.safeHTML($WC.Util.unescapeHTML(p.description || p.url)))), s ? $WC.UrlPreview.populate(p, null, i, !1, g) : '<div class="wms-msg wms-urlpreviewmsg">' + $WC.UrlPreview.populate(p, null, i, !1, g) + h + "</div>"
        }

        function h(e) {
            if (e.temp_info && e.temp_info.suggestions) {
                var t = e.temp_info.suggestions,
                    s = "",
                    i = "";
                return Message.botSuggestionsMessageUID[e.chid] = e.msguid, t.forEach((function(t) {
                    var n = $WC.Util.safeHTML(t.text),
                        a = "";
                    t.icon && ("" == i && (i = "wms-botsuggestionswithicons"), a = '<img src="' + $WC.Util.safeHTML(t.icon) + '" class="wms-botsuggestionicon"/>'), s += '<div class="wms-suggestionbuttons wms-truncate-ellipsis" data-botchid="' + e.chid + '" data-botsuggestion=true data-suggestiontext="' + n + '" title="' + n + '">' + a + n + "</div>"
                })), '<div class="wms-botsuggestions ' + i + '" data-botsuggestiongroup=true>' + s + "</div>"
            }
            return ""
        }
        return Message.constructReactionsFragment = t = function(e, t, i) {
                var n = Object.keys(e),
                    a = (t = t || n.sort((function(t, s) {
                        return e[s].length - e[t].length
                    }))).map((function(t) {
                        return s(e, t)
                    })).join(""),
                    o = "";
                if (n.length > 16) {
                    o = " hide_more_reactions";
                    var r = $WC.I18N("reactions.more.count", [n.length - 15]),
                        l = $WC.I18N("message.actions.showallreactions");
                    i && (o = "", r = $WC.I18N("common.collapse"), l = $WC.I18N("message.actions.hideexcessreactions")), a += '<span class="wms_reaction_container" style="display: flex" title="' + l + '" data-showallreactions=true data-numberofreactions="' + n.length + '"> ' + r + " </span>"
                }
                return '<div class="wms_reaction_frag' + o + '">' + (a += '<span class="wms_reaction_container wms_reaction_add" title="' + $WC.I18N("message.actions.addreactions") + '" data-addreaction=true></span>') + "</div>"
            }, Message.constructReactionFragment = s = function(e, t) {
                var s = "true" == e[t].hasCurrentUserReacted,
                    i = e[t].users ? e[t].users : e[t],
                    n = $WC.Util.isArray(i) ? i.map((function(e) {
                        var t = (e = e.split(":"))[1];
                        return !1 === s && (s = $WC.Util.isLocalUser(t)), $WC.Util.isLocalUser(t) ? $WC.I18N("chat.you") : $WC.Util.getContactName(t, e[2], !0)
                    })).reverse().join(", ") : "",
                    a = Message.reactions.getSmileyName(t) || t;
                Message.isCustomEmoji(t) && (a = a.replaceAll(/[:$!]/g, "").split("_")[4]);
                var o = Message.isCustomEmoji(t) ? Message.reactions.replaceCustomEmoji(t) : Message.reactions.replace(t, !0),
                    r = e[t].count ? e[t].count : e[t].length,
                    l = $WC.Util.safeHTML($WC.I18N("reactions.title", [n, a]));
                if (parseInt(r) > i.length) {
                    var d = r - i.length;
                    l = $WC.Util.safeHTML($WC.I18N("reactions.titlewithmore", [n, d, a]))
                }
                return $WC.template.replace('<span class="wms_reaction_container" title="{{title}}" {{is_reacted_by_me}} data-reaction="{{code}}">{{reaction}}<span>{{count}}</span></span>', {
                    reaction: o,
                    count: r,
                    is_reacted_by_me: s ? "data-reactedbyme=true" : "",
                    title: l,
                    code: $WC.Util.safeHTML(t)
                }, "InSecureHTML")
            }, Message.constructReplyMessageFragment = i = function(t, s, i, n, a, o) {
                var r = t.meta.opr_replydetails;
                r.msg = r.meta && r.meta.mentions && r.msg ? $WC.Util.formatMentions(r) : r.msg;
                var l = r.msg || r;
                if ("object" == typeof l)
                    for (var d in l.addinfo) l[d] = l.addinfo[d];
                var c, h = $WC.Util.getContactName(r.sender) || r.sendername;
                if (delete t.meta.opr_replydetails, u(t), u(r, !0), Message.getMessageType(l) === Message.types.IMGATT)
                    if (r.fcomment) c = '<span data-fileurl="' + r.fileurl + '" class="wms-replytext">' + r.fcomment + "</span>";
                    else {
                        var g = "";
                        WebMessanger.crossoriginisolation && (g = ' crossorigin="use-credentials"'), c = '<div data-fileurl="' + r.fileurl + '" class="wms-replyimg"><img src="{{replyimgurl}}" ' + g + '/><span class="imgtext wms-truncate-ellipsis">{{fname}}</span></div>'
                    }
                else if (Message.getMessageType(l) === Message.types.FILEATT) c = r.msg && r.msg.fcomment ? '<span data-fileurl="' + r.fileurl + '" class="wms-replytext">' + r.msg.fcomment + "</span>" : '<span data-fileurl="' + r.fileurl + '" class="imgtext wms-truncate-ellipsis">{{fname}}</span>';
                else if (Message.getMessageType(l) === Message.types.AUDIOATT) c = r.msg && r.msg.fcomment ? '<span data-fileurl="' + r.fileurl + '" class="wms-replytext">' + r.msg.fcomment + "</span>" : '<span data-fileurl="' + r.fileurl + '" class="imgtext wms-truncate-ellipsis">{{fname}}</span>';
                else if (Message.getMessageType(l) === Message.types.VIDEOATT) c = r.msg && r.msg.fcomment ? '<span data-fileurl="' + r.fileurl + '" class="wms-replytext">' + r.msg.fcomment + "</span>" : '<span data-fileurl="' + r.fileurl + '" class="imgtext wms-truncate-ellipsis">{{fname}}</span>';
                else if (Message.getMessageType(l) === Message.types.LOCATT) c = "<div class='wms-filemsgcontainer wms-locmsgimg'><div><span>{{locname}}</span></div></div>";
                else if (Message.getMessageType(l) === Message.types.CONTACTATT) c = "<div class='wms-filemsgcontainer wms-contactmsgimg'><span>{{contactname}}</span></div>";
                else if (Message.getMessageType(l) === Message.types.EVENTATT) c = '<div class="wms-evntmsgcontainer"><span class="wms_calicon"></span><span>{{eventname}}</span></div>';
                else if (Message.getMessageType(l) === Message.types.CUSTOMMSG || Message.getMessageType(l) === Message.types.BOTMSG || Message.getMessageType(l) === Message.types.VIDEOLINK || Message.getMessageType(l) === Message.types.AUDIOLINK || Message.getMessageType(l) === Message.types.IMGLINK) c = '<div class="wms-replytext">{{desc}}</div>';
                else try {
                    c = '<div class="wms-replytext">' + e(l) + "</div>"
                } catch (e) {
                    c = "=========FORMAT TO BE SUPPORTED========"
                }
                var p = "";
                if (!s) {
                    var f = t.sender + "_" + t.time,
                        v = t.time;
                    t.mtype === "" + CT_EDITED_MSG && (f = t.sender + "_" + t.origin_time, v = t.origin_time);
                    var C = t.msg;
                    C.chid = t.chid, (Object.keys(t.meta).length > 1 && Message.getMessageType(t) != Message.types.FILEATT && Message.getMessageType(t) != Message.types.IMGATT && Message.getMessageType(t) != Message.types.VIDEOATT && Message.getMessageType(t) != Message.types.AUDIOATT || Message.getMessageType(t) === Message.types.EDITEDMSG) && (C = t), p = Message.constructMessageFragment(t.sender, t.dname, v, C, Message.getMessageType(t), t.sender, v, f, !0, null, null, null, t.msguid)
                }
                var b = "";
                s && (b = '<div class="wms_cw_replyclose"></div>');
                var y = "",
                    _ = "",
                    W = "";
                i ? (W = '<div class="wms-replymsg"  data-replymsgtime="{{replymsgtime}}" data-msguid="{{msguid}}">', y = '<span class="wms-editmsgicon"></span><span class="wms-replymsgtitle" title="' + $WC.I18N("message.edit.title") + '">' + $WC.I18N("message.edit.title") + "</span>", _ = '<div class="wms_settings_chckbx"><span data-type="custom" class="wms_settings_customcheckbox"></span><input id="wms_notifyeditmsg" data-setting="notifyedit" type="checkbox" class="wms_settings_checkbox"><label id="wms_notifyeditlabel" class="wms_settings_label" for="wms_notifyeditmsg">' + $WC.I18N("message.edit.notify") + "</label></div>") : (W = '<div class="wms-replymsg" data-replymsgtime="{{replymsgtime}}" data-replysenderzuid="{{senderzuid}}" data-replymsguid="{{msguid}}" ', W += (a = a || r.chid) ? 'data-privatereplychid="' + a + '">' : ">", n ? (y = '<span class="wms_threadreplyicon"></span>', _ = '<div class="wms_settings_chckbx"><span data-type="custom" class="wms_settings_customcheckbox"></span><input id="wms_notifyeditmsg" data-setting="notifyedit" type="checkbox" class="wms_settings_checkbox"><label id="wms_notifyeditlabel" class="wms_settings_label" for="wms_notifyeditmsg">' + $WC.I18N("thread.msgs.post", [$WC.Util.safeHTML($WC.Channels.getChannelName(o))]) + "</label></div>") : y = '<span class="wms-replymsgicon"></span>', y += '<span class="wms-replymsgsender wms-truncate-ellipsis" title="{{sendername}}">{{sendername}} ', y += r.chat_title ? '<span class="wms_replytitleicon">&#8594; </span><span class="wms_replychattitle">' + $WC.Util.safeHTML(r.chat_title) + "</span></span>" : "</span>", y += '<span class="wms-replymsgtime wms-truncate-ellipsis" title="{{dateinwords}} {{formattedtime}}">{{dateinwords}} {{formattedtime}}</span>');
                var S = "";
                $WC.Matcher.checkWithFlag("linkRegExp", t.msg, "gi") && t.meta && t.meta.linkdetails && Message.getMessageType(t) != Message.types.EDITEDMSG && Message.getMessageType(t) != Message.types.IMGLINK && Message.getMessageType(t) != Message.types.VIDEOLINK && Message.getMessageType(t) != Message.types.AUDIOLINK && (S += m(t, Message.getMessageType(t), !0));
                var w = (S ? '<div class="wms-replymsgwrapper wms_noborderradius">' : '<div class="wms-replymsgwrapper">') + W + '<div class="wms-replymsgheader">' + y + b + "</div><div>" + c + _ + "</div></div>" + p + S + "</div>";
                return $WC.template.replace(w, {
                    replymsgtime: r.msgtime,
                    sendername: h,
                    senderzuid: r.sender,
                    dateinwords: $WC.DateUtil.formatDateWithWords(r.msgtime),
                    formattedtime: $WC.DateUtil.formatTime(r.msgtime),
                    replyimgurl: l.constructeddownloadurl,
                    locname: l.name,
                    contactname: l.name,
                    eventname: l.name,
                    fname: l.fName,
                    desc: l.desc,
                    msguid: r.msguid
                })
            },
            function(s, g, p, f, v, C, b, y, _, W, S, w, M, I, T, A, E, U, k, N) {
                var x, O, R, D = "",
                    $ = "",
                    H = S ? 'data-msgackid="' + S + '"' : "",
                    L = w ? 'data-notack="true"' : "";
                M = M ? "data-msguid=" + M : "";
                var P = "",
                    F = "",
                    B = "",
                    j = !!f.star,
                    z = f.startype ? f.startype : "0",
                    G = '<span data-type="' + v + '" data-msgsel="false" class="wms_fwdcheckbox wms-valign-mid-block wms_checkbox_hidden"></span>',
                    q = "";
                if (f && (f.msg || f.comment)) {
                    var V = f.comment || f.msg;
                    if ("object" == typeof f.msg && f.msg.comment && (V = f.msg.comment), "string" == typeof V) {
                        var Y = V.match(/:[\w-]+!:/gi);
                        Y && Y.length < 6 && (q += ' data-animatedzomoji="true"')
                    }
                }
                if (v === Message.types.LOADMORE) return '<div style="display:none" data-loadmore="true"></div>';
                if (v === Message.types.LOADMOREBUTTON) return $WC.Util.constructTranscriptLoadButton();
                if (v === Message.types.TRANSERR) return function(e, t, s, i) {
                    var n = e ? ' data-prevtime="' + e + '"' : " ";
                    return n += t ? ' data-nexttime="' + t + '"' : " ", n += s ? ' data-mentionmsgid="' + s + '"' : " ", '<div class="wms-msgfrag wms-transerror" data-transerror="true"' + (n += i ? ' data-latestchunk="' + i + '"' : " ") + ">" + $WC.I18N("transcript.error") + ' <span class="wms-transretry" data-retry="true">' + $WC.I18N("transcript.retry") + "</span></div>"
                }(f.prevtime, f.nexttime, f.mentionmsgid, f.latestchunk);
                if (_ || k || N) x = "", O = "", R = "";
                else {
                    if ((x = function(e, t) {
                            return e = $WC.DateUtil.getTargetTimeZoneTimeInMs(e), t = $WC.DateUtil.getTargetTimeZoneTimeInMs(t), e && "-1" !== e && (!t || t && $WC.DateUtil.formatDate(t) !== $WC.DateUtil.formatDate(e)) ? $WC.template.replace("<div class='wms-msgdate' data-msgtime={{msgtime}}><span>{{date}}</span></div>", {
                                date: $WC.DateUtil.formatDateWithWords(e),
                                msgtime: e
                            }) : ""
                        }(p, b)) && (C = ""), f.meta && f.meta.shareIntegrationResponse ? (f.meta.isTempResponse = !0, F = '<div class="wms-cmdvisiblediv"><span class="wms-cmdvisible"></span>' + $WC.I18N("chat.command.visibility") + "</div>") : (f.isTempResponse || f.meta && f.meta.isTempResponse) && (f.meta.isTempResponse = !0, F = '<div class="wms-cmdvisiblediv"><span class="wms-cmdvisible"></span>' + $WC.I18N("chat.command.visibility") + "</div><div data-chid=" + f.chid + " data-msgid=" + f.time + ' data-purpose="shareresponseclick_onmsg" class="wms_cmdvisible_share">' + $WC.I18N("chat.command.share") + "</div>"), WmsContacts.isAnnonUser(s) && $WC.Users.getInfo(s) && $WC.Users.getInfo(s).dname && $WC.Users.getInfo(s).dname !== g && $WC.Users.updateInfo(s, {
                            dname: g
                        }), O = function(e, t, s, i, n, a) {
                            var o = "wms-msgsender",
                                r = "",
                                l = "",
                                d = "",
                                c = null,
                                u = "",
                                m = "",
                                h = "",
                                g = "",
                                p = "disable" == $WC.Config.get("profile_info") ? "wms_profile_disable" : "",
                                f = '<div class="{{classname}}" data-zcmsgsource={{msgsource}} data-senderzuid="{{senderzuid}}"><img class="wms_cw_userphoto ' + p + '" data-zcprofileid="{{senderzuid}}" src="{{userimage}}"><span class="wms_profileinfo_text ' + p + '" data-zcmsgsource={{msgsource}} data-zcprofileid="{{senderzuid}}">{{sendername}}</span></div>';
                            if (a && e && !n || (f = '<div class="{{classname}}" data-zcmsgsource={{msgsource}} data-senderzuid="{{senderzuid}}"><img class="wms_cw_userphoto" src="{{userimage}}"><span class="wms_profileinfo_text" data-zcmsgsource={{msgsource}}>{{sendername}}</span></div>'), i && i.message_source && i.message_source.type && (d = new $WC.IntegrationsData(i.message_source), !$WC.Bots.isBotId(e) && "channel" !== i.message_source.type)) {
                                var v = '<span class="wms-customsender_info" id="{{custom_label_id}}" type="{{custom_label_type}}" title="{{custom_label_title}}">{{custom_label_name}}</span>';
                                u = i.message_source.id || "", m = i.message_source.type, f = $WC.Util.isLocalUser(e) ? '<div class="{{classname}}" data-zcmsgsource={{msgsource}} data-senderzuid="{{senderzuid}}"><img class="wms_cw_userphoto ' + p + '" data-zcprofileid="{{senderzuid}}" src="{{userimage}}">' + v + '<span class="wms_profileinfo_text ' + p + '" data-zcmsgsource={{msgsource}} data-zcprofileid="{{senderzuid}}">{{sendername}}</span></div>' : '<div class="{{classname}}" data-zcmsgsource={{msgsource}} data-senderzuid="{{senderzuid}}"><img class="wms_cw_userphoto ' + p + '" data-zcprofileid="{{senderzuid}}" src="{{userimage}}"><span class="wms_profileinfo_text ' + p + '" data-zcmsgsource={{msgsource}} data-zcprofileid="{{senderzuid}}">{{sendername}}</span>' + v + "</div>", "resource_sharing" === i.message_source.type ? (g = i.message_source.name, h = i.message_source.name) : "command" === i.message_source.type || "scheduler" === i.message_source.type ? (g = i.message_source.name, h = i.message_source.type, i.message_source.store_appname && i.message_source.store_appid && (g = i.message_source.store_appname, h = "app")) : "messageaction" === i.message_source.type ? (g = i.message_source.name, h = "action") : "bot" === i.message_source.type && (h = i.message_source.type, g = i.message_source.name, i.usermessagedetails && (g = i.usermessagedetails.custom_sender_name))
                            }
                            if (i && i.usermessagedetails && i.usermessagedetails.custom_sender_name) r = i.usermessagedetails.custom_sender_name, l = i.usermessagedetails.custom_sender_imageurl ? i.usermessagedetails.custom_sender_imageurl : $WC.Config.get("staticserverpath") + "/images/bar/ac31da36_customimg-default.png", $WC.Util.isLocalUser(e) && (o += " wms-msgsenderhl"), e = d && d.getID() || e, i.usermessagedetails.custom_sender_imageid ? l = _WMSCHATURL + "v1/images/" + i.usermessagedetails.custom_sender_imageid : d && (i.usermessagedetails.custom_sender_id || i.message_source.photo_id) && (l = d.getImageURL()), l || (l = $WC.Config.get("staticserverpath") + "/images/bar/ac31da36_customimg-default.png"), $WC.Bots.isBotId(e) || null == i.usermessagedetails.custom_sender_name || i.message_source || (o += $WC.Util.isLocalUser(e) ? " wms-customsendericonhl" : " wms-customsendericon");
                            else if (d && i.isTempResponse) r = i.message_source.name, l = d.getImageURL(), e = d.getID(), c = d.getModule(), $WC.Util.isLocalUser(e) && (o += " wms-msgsenderhl"), l || (l = $WC.Config.get("staticserverpath") + "/images/bar/ac31da36_customimg-default.png");
                            else {
                                if (!e || s === e) return "";
                                $WC.Util.isLocalUser(e) ? (r = $WC.I18N("chat.you"), o += " wms-msgsenderhl") : r = $WC.Util.getContactName(e, t), WmsContacts.isAnnonUser(e) && i && i.photo_id && (l = WebMessanger.getGuestPhotoUrl(e.slice(1), !0))
                            }
                            return $WC.template.replace(f, {
                                sendername: $WC.Util.unescapeHTML(r),
                                senderzuid: e,
                                classname: o,
                                msgsource: c,
                                custom_label_id: u,
                                custom_label_type: m,
                                custom_label_name: h,
                                custom_label_title: g,
                                userimage: l || WmsContacts.getUserPhoto(e)
                            })
                        }(s, g, C, f.meta, A, E), v !== Message.types.INFOMSG) {
                        v === Message.types.DELETEDMSG && (p = f.origin_time), U = !(!WebMessanger.isReadReceiptEnabled() || !U);
                        var Z = WindowHandler.getWinObjById(f.chid),
                            K = !(!Z || "1" !== Z.ctype || Z.isZohoGroupChat()),
                            X = !1,
                            J = !1;
                        !f.detected_language || f.detected_language == WebMessanger.language || s == WebMessanger.zuid || "1" != WmsSettings.show_translate || v != Message.types.TEXTMSG && f.mtype !== "" + CT_SYSTEM_EDIT || (X = !0, "2" != WmsSettings.message_translation_source && "1" != WmsSettings.message_translation_source || -1 != WmsSettings.adminsettings.features.zia_languages.indexOf(f.detected_language) || (X = !1), (f.translation || f.meta.translationData && f.meta.translationData.translation && f.meta.translationData.translation[WebMessanger.language] && f.meta.translationData.translation[WebMessanger.language].translation) && (J = !0));
                        var Q = {
                                translatemsg: X,
                                msg: f,
                                autotranslatedmsg: J
                            },
                            ee = {
                                star: f.star,
                                startype: f.startype ? f.startype : 0,
                                senderzuid: s
                            };
                        Z && "0" == Z.savehistory && (ee.historyoff = !0), (v == Message.types.DELETEDMSG || (v == Message.types.FILEATT || v == Message.types.AUDIOATT || v == Message.types.VIDEOATT || v == Message.types.IMGATT) && Message.isFileViewDisabled(f)) && (ee.deleted = !0), D = Message.constructTimeFragment(p, null, U, K, $WC.Channels.isDefaultChannel(f.chid), Q, ee, v), f.mtype === "" + CT_EDITED_MSG && (D = Message.constructTimeFragment(f.origin_time, !0, U, K, $WC.Channels.isDefaultChannel(f.chid), Q, ee, v))
                    }
                    R = "wms-msgfrag", !(f.isfirstthreadmessage && !$WC.Util.isThreadChid(f.chid) && $WC.Util.isLocalUser(f.parentmessagesenderid) || !f.isfirstthreadmessage && $WC.Util.isLocalUser(s)) || f.meta && f.meta.isTempResponse || Message.isMsgFromBot(f) && !(f.meta && f.meta.message_source && f.meta.message_source.forwarded) || (R += " wms-msgsenderhl")
                }
                var te = "";
                if (v === Message.types.THREADLINKMSG) f.isfirstthreadmessage && (O = "", D = ""), te += '<div class="wms-msg">' + function(e) {
                    var t = e.thread_information,
                        s = (e.thread_state_info, e.thread_state_info ? e.thread_state_info.thread_state : "open"),
                        i = t.message_count > 1 ? $WC.I18N("message.threads.count", [t.message_count]) : $WC.I18N("message.thread.count", [t.message_count]),
                        n = $WC.RecentChats.get(t.chat_id) && $WC.RecentChats.get(t.chat_id).UNREADMSGS && t.is_follower ? '<span id="wms_unreadthreadcount" class="wms_menu_item_count wms_threadunread_count">' + $WC.RecentChats.get(t.chat_id).UNREADMSGS + "</span>" : "";
                    WmsMainUI.getUnreadCount(e.chid, null, t.chat_id) && t.is_follower && (n = '<span id="wms_unreadthreadcount" class="wms_menu_item_count wms_threadunread_count">' + WmsMainUI.getUnreadCount(e.chid, null, t.chat_id) + "</span>");
                    var a = '<div class="wms_threadmsg" title="' + $WC.I18N("message.thread.view") + '"data-thread_chid="' + t.chat_id + '" data-thread_title="' + $WC.Util.safeHTML(t.title) + '" data-thread_followercnt="' + t.follower_count + '" data-thread_creator="' + e.sender + '" data-thread_parentid="' + e.chid + '" data-thread_msgid="' + t.thread_message_id + '" data-thread_follower="' + t.is_follower + '" data-thread_msgcount="' + t.message_count + '" data-thread_state="' + s + '"><div class="wms_threadseparator"></div><div id="wms_threadlinkwrapper" class="wms_threadlinkwrapper"><div id="wms_threadlink" class="wms_threadlink">' + i + "</div>" + n + "</div></div>";
                    delete e.thread_information, u(e);
                    var o = Message.getMessageType(e),
                        r = e.sender + "_" + e.msgid,
                        l = e.msg;
                    (e.meta && Object.keys(e.meta).length > 1 && Message.getMessageType(e) != Message.types.FILEATT && Message.getMessageType(e) != Message.types.IMGATT && Message.getMessageType(e) != Message.types.VIDEOATT && Message.getMessageType(e) != Message.types.AUDIOATT || Message.getMessageType(e) === Message.types.EDITEDMSG || Message.getMessageType(e) === Message.types.REPLYMSG) && (l = e);
                    var d = Message.constructMessageFragment(e.sender, e.dname, e.time, l, o, e.sender, e.time, r, null, null, null, null, e.msguid, null, null, null, null, null, null, !0);
                    if (o == Message.types.CUSTOMMSG) {
                        var c = $WC.CMsgUtil.convertMsgObj(e);
                        c.thread_information = t, $WC.CustomMsg.storeMsgObj(c)
                    }
                    return '<div class="wms_threadmsgwrapper">' + d + a + "</div>"
                }(f) + "</div>";
                else if (v === Message.types.IMGATT) f.time = p, f.sender = s, f.dim && f.dim.size > 209715200 ? (f.msgid = y, f.msguid = M, te += '<div class="wms-msg">' + a(f) + "</div>") : te += n(f, g, M), f.meta && f.meta.linkdetails && (O = "", x = "", R = "", p = "");
                else if (v === Message.types.FILEATT) f.dname = g, f.time = p, f.sender = s, f.msgid = y, f.msguid = M, te += '<div class="wms-msg">' + a(f) + "</div>";
                else if (v === Message.types.INFOMSG) f.opruser = f.opruser || {
                    zuid: s,
                    nname: g
                }, "object" != typeof f.msg || f.mode || (f = f.msg), te += function(e, t, s) {
                    return $WC.MsgUtil.getInfoMsgString(e, s) ? $WC.template.replace('<div class="wms-msginfo" data-infotype="{{infotype}}" title="{{time}}">{{msg}}</div>', {
                        msg: Smiley.replace($WC.Markdown.apply($WC.MsgUtil.getInfoMsgString(e, s))),
                        time: $WC.DateUtil.formatDTTime(t),
                        infotype: e.type ? e.type : "msginfo",
                        zuid: e.opruser ? e.opruser.zuid : ""
                    }, "InSecureHTML") : ""
                }(f, p, E), O = "", R = "wms-msginfofrag", P = f.mode || "MESSAGE EDITED" === (f.msg && f.msg.mode) ? 'data-editinfo="true"' : "";
                else if (v === Message.types.AUDIOATT) te += '<div class="wms-msg wms-audioattmsg">' + o(f) + "</div>", f.meta && f.meta.linkdetails && (O = "", x = "", R = "");
                else if (v === Message.types.VIDEOATT) f.sender = s, te += '<div class="wms-msg">' + r(f) + "</div>", f.meta && f.meta.linkdetails && (O = "", x = "", R = "");
                else if (v === Message.types.LOCATT) te += "<div class='wms-msg'>" + function(e) {
                    var t = "<div class='wms-filemsgcontainer wms-locmsgimg'><div class='wms-location-details'><a href='" + window.location.protocol + "//maps.google.com/?q={{latitude}},{{longitude}}' target='_blank'>{{locname}}</a><div id='wms-locationinfo' class='wms-locationinfo'><span title='{{loc}}' class='wms-truncate-ellipsis wms-filetype'>{{loc}}</span></div></div></div>";
                    return $WC.template.replace(t, {
                        latitude: e.lat,
                        longitude: e.lng,
                        locname: e.name,
                        loc: e.loc || ""
                    })
                }(f) + "</div>";
                else if (v === Message.types.CONTACTATT) te += "<div class='wms-msg'>" + function(e) {
                    var t = "";
                    return e.extras && (t = e.extras[0].value), $WC.template.replace("<div class='wms-filemsgcontainer wms-contactmsgimg'><span>{{contactname}}<div id='wms-contactinfo'><span class='wms-truncate-ellipsis wms-filetype'>{{contactno}}</span></div></div>", {
                        contactname: e.name,
                        contactno: t
                    })
                }(f) + "</div>";
                else if (v === Message.types.EVENTATT) te += "<div class='wms-msg'>" + function(e) {
                    var t = $WC.DateUtil.formatDTTime(e.startdate) + " " + $WC.I18N("chat.event.to") + " " + $WC.DateUtil.formatDTTime(e.enddate),
                        s = t.split(" "),
                        i = s[1],
                        n = s[0] + " " + $WC.I18N("chat.event.th"),
                        a = s[3] + s[4];
                    return $WC.template.replace("<div class='wms-evntmsgcontainer'><div class='wms-evntmsgdiv'><div class='wms-evntmsgmon'>{{eventmonth}}</div><div class='wms-evntmsgdate'>{{eventdate}}<div class='wms-evntmsgtime'>&#64;{{eventstarttime}}</div></div></div><div class='wms-evntmsginfo'><span class='wms-evntmsgname'>{{eventname}}</span><div class='wms-evntmsgduration'>{{eventtime}}</div></div></div>", {
                        eventmonth: i,
                        eventdate: n,
                        eventstarttime: a,
                        eventname: e.name,
                        eventtime: t
                    })
                }(f) + "</div>";
                else if (v === Message.types.CUSTOMMSG) {
                    F += h(f), te += '<div class="wms-msg ' + (Message.isTempMsg(f) ? "wms_tempcustmmsg" : "wms_custmmsg") + '">' + l(f) + F + "</div>"
                } else if (v === Message.types.BOTMSG)
                    if (F += h(f), Message.isCustomMsg(f)) {
                        var se = $WC.CMsgUtil.convertMsgObj(f);
                        $WC.CustomMsg.storeMsgObj(se), te += "<div class='wms-msg'>" + l(f) + F + "</div>"
                    } else f.msg = $WC.Markdown.apply($WC.Util.safeHTML($WC.Util.unescapeHTML(f.msg))), $WC.Matcher.checkWithFlag("linkRegExp", f.msg, "gi") && f.meta && f.meta.linkdetails && !_ ? te += m(f, v) : te += "<div class='wms-msg wms-txtmsg'>" + e(f.msg, y) + F + "</div>";
                else if (v === Message.types.VIDEOLINK || v === Message.types.AUDIOLINK || v === Message.types.IMGLINK) te += m(f, v);
                else if (v === Message.types.REPLYMSG) f.sentfromcomposer || (f.msg = "string" == typeof f.msg ? $WC.Util.safeHTML($WC.Util.unescapeHTML(f.msg)) : f.msg, f.meta.opr_replydetails.msg = "string" == typeof f.meta.opr_replydetails.msg ? $WC.Markdown.apply($WC.Util.safeHTML($WC.Util.unescapeHTML(f.meta.opr_replydetails.msg))) : f.meta.opr_replydetails.msg), te += '<div class="wms-msg">' + i(f) + "</div>";
                else if (v === Message.types.TEMPMSG) {
                    if (f.meta) {
                        var ie = $WC.CMsgUtil.convertMsgObj(f);
                        $WC.CustomMsg.storeMsgObj(ie)
                    }
                    f.msg = $WC.Util.safeHTML(f.msg), te += '<div class="wms-msg">' + e(f.msg, y) + F + "</div>"
                } else if (v === Message.types.HRMSG) R += " wms-hrmsg", te = $WC.Markdown.apply(f.msg || f), D = "";
                else if (v === Message.types.DELETEDMSG) {
                    if (f.isNextMsgDeleted) return Message.incrementDeletedMsgCount(f.time), $WC.template.replace("{{datefragment}}{{senderfragment}}", {
                        datefragment: x,
                        senderfragment: O
                    }, "InSecureHTML");
                    te += Message.getDeletedMsgInfo(f.time, f)
                } else if (v === Message.types.EDITEDMSG) te += function(t, s) {
                    var h = {};
                    if ("string" == typeof t) h.msg = t;
                    else
                        for (var g in t) h[g] = t[g];
                    h.editedtime = t.time, h.time = t.origin_time, h.mtype = t.origin_mtype, h.msguid = t.msguid;
                    var p = Message.getMessageType(h);
                    if ("object" == typeof h.msg && p !== Message.types.FORWARDEDMSG && p !== Message.types.THREADMSG && (u(h), h.msg.sender = h.sender, h.msg.time = h.time, h.msg.meta = h.meta, h.msg.chid = h.chid, h = h.msg), t.mtype === "" + CT_SYSTEM_EDIT && "2" === WmsSettings.translation_mode)
                        if (t.meta && t.meta.translationData) {
                            var f = t.meta.translationData;
                            f.translation && f.translation[WebMessanger.language] && f.translation[WebMessanger.language].translation && !$WC.Util.isLocalUser(t.sender) && Message.translationmsgstore[h.msguid] && (Message.translationmsgstore[h.msguid].translation = f.translation[WebMessanger.language].translation, h.msg = f.translation[WebMessanger.language].translation)
                        } else h.msg = null == h.translation || "1" != WmsSettings.show_translate || $WC.Util.isLocalUser(t.sender) ? h.msg : h.translation;
                    return p === Message.types.TEXTMSG || p === Message.types.VIDEOLINK || p === Message.types.AUDIOLINK || p === Message.types.IMGLINK ? $WC.Matcher.checkWithFlag("linkRegExp", t.msg, "gi") && t.meta && t.meta.linkdetails ? m(t, p) : (s || (h.msg = $WC.Markdown.apply($WC.Util.safeHTML($WC.Util.unescapeHTML(h.msg)))), '<div class="wms-msg wms-txtmsg">' + e(h.meta && h.meta.mentions ? $WC.Util.formatMentions(h) : h.msg) + "</div>") : p === Message.types.HRMSG ? '<div class="wms-hrmsg">' + h.msg + "</div>" : p === Message.types.REPLYMSG ? '<div class="wms-msg">' + i(h) + "</div>" : p === Message.types.IMGATT ? (h.chid = t.chid, h.dim && h.dim.size > 209715200 ? '<div data-type="' + Message.types.FILEATT + '" class="wms-msg">' + a(h) + "</div>" : n(h, t.dname, t.msguid)) : p === Message.types.FILEATT ? (h.msguid = "data-msguid=" + t.msguid, '<div data-type="' + Message.types.FILEATT + '" class="wms-msg">' + a(h) + "</div>") : p === Message.types.AUDIOATT ? '<div data-type="' + Message.types.AUDIOATT + '" class="wms-msg wms-audioattmsg">' + o(h) + "</div>" : p === Message.types.VIDEOATT ? '<div data-type="' + Message.types.VIDEOATT + '" class="wms-msg">' + r(h) + "</div>" : p === Message.types.FORWARDEDMSG ? '<div data-type="' + Message.types.FORWARDEDMSG + '" class="wms-msg">' + c(h) + "</div>" : p === Message.types.THREADMSG ? '<div data-type="' + Message.types.THREADMSG + '" class="wms-msg">' + d(h) + "</div>" : p === Message.types.CUSTOMMSG ? '<div data-type="' + Message.types.CUSTOMMSG + '" class="wms-msg">' + l(h) + "</div>" : void 0
                }(f, _);
                else if (v === Message.types.FORWARDEDMSG) te += '<div class="wms-msg">' + c(f, _, !0) + "</div>";
                else if (v === Message.types.THREADMSG) $WC.Util.isLocalUser(s) && (R += " wms-msgsenderhl"), te += '<div class="wms-msg">' + d(f) + "</div>";
                else {
                    if (void 0 !== f.thread_link_info) B = "data-link_msgid=" + f.thread_link_info.link_message_id;
                    if (_ || f.sentfromcomposer || ("object" == typeof f ? (f.msg = $WC.Util.safeHTML($WC.Util.unescapeHTML(f.msg)), 1 == f.rawstarmsg && (f.msg = $WC.Util.decodeHTMLEntities(f.msg))) : f = $WC.Util.safeHTML($WC.Util.unescapeHTML(f))), $WC.Matcher.checkWithFlag("linkRegExp", f.msg, "gi") && f.meta && f.meta.linkdetails && !_) te += m(f);
                    else {
                        var ne = f.ignoremarkdown,
                            ae = "";
                        if (f.meta) {
                            if (f.meta && f.meta.message_source && f.meta.message_source.action_name && (ae = "<em class='wms_botactionmsg'></em>"), !f.meta.mentions) {
                                ie = $WC.CMsgUtil.convertMsgObj(f);
                                $WC.CustomMsg.storeMsgObj(ie), f = "1" == WmsSettings.show_translate && "2" == WmsSettings.translation_mode && f.translation ? f.translation : f.msg
                            }
                        } else f.msg && (f = f.msg);
                        te += "<div class='wms-msg wms-txtmsg'>" + ae, te += e(f, y, ne) + F + "</div>"
                    }
                }
                return I && "63" !== f.mtype && ($ = t(I, WMSUI.checkAndSortReactions(I))), (_ || N || k) && (G = ""), !Message.isCustomEmoji(te) || _ || N || (te = Smiley.replaceCustomEmoji(te, Message.metaInfo[f.msguid])), $WC.template.replace('{{datefragment}}{{senderfragment}}<div class="{{classname}}" data-sender={{sender}} data-msgid={{msgid}} {{editmsginfo}} {{msgackattribute}} {{msguid}} {{link_msgid}} data-type="{{msgtype}}" data-sendername="{{sendername}}" data-msgtime={{msgtime}} data-starselected="{{starred}}" data-startype="{{startype}}" {{notackattr}} {{msgfragattrs}}>{{messagefragment}}{{reactionsfragment}}{{forwardsel_fragment}}</div>{{timefragment}}', {
                    classname: R,
                    datefragment: x,
                    msgtime: p,
                    senderfragment: O,
                    messagefragment: te,
                    timefragment: D,
                    msgid: y,
                    msgackattribute: H,
                    msgtype: v,
                    sendername: $WC.Util.safeHTML($WC.Util.unescapeHTML(g)),
                    notackattr: L,
                    msguid: M,
                    link_msgid: B,
                    editmsginfo: P,
                    reactionsfragment: $,
                    forwardsel_fragment: G,
                    sender: s,
                    starred: j,
                    startype: z,
                    msgfragattrs: q
                }, "InSecureHTML")
            }
    }(), Message.constructAndInsertChatContent = function(e, t, s, i, n, a) {
        var o = t.querySelectorAll("[data-notack]:not([data-msgfailure])");
        for (var r = 0; r < o.length; r++) {
            var l = o[r],
                d = l.getAttribute("data-msgtime"),
                c = e.find((function(e) {
                    if (e.msgid == d) return !0
                }));
            c && (l.setAttribute("data-msgtime", c.time), l.setAttribute("data-msgid", c.sender + "_" + c.time), l.removeAttribute("data-notack"), e.splice(e.indexOf(c), 1))
        }
        var u = t.querySelector('[data-msgtime="' + n + '"][data-msgid]'),
            m = t.querySelector('[data-msgtime="' + a + '"][data-msgid]');
        if (u && m) {
            e.length && e[e.length - 1].time == a && (m = m.nextSibling);
            for (var h = [], g = u.nextSibling; g != m;) g.getAttribute("data-msgid") && !g.getAttribute("data-msgfailure") && "INFOMSG" != g.getAttribute("data-type") && h.push(g), g = g.nextSibling;
            for (var p in function(e) {
                    for (var t = 0; t < e.length; t++) e[t].previousSibling.getAttribute("data-senderzuid") && $WC.Util.removeElement(e[t].previousSibling), "wms-msgtime" == e[t].nextSibling.className && $WC.Util.removeElement(e[t].nextSibling), $WC.Util.removeElement(e[t])
                }(h), e) {
                t.querySelector('[data-msgid="' + e[p].sender + "_" + e[p].time + '"]') && e.splice(p, 1)
            }
            e[0] && "more" == e[0].mode && e.shift();
            var f = n,
                v = u.getAttribute("data-msgid"),
                C = "INFOMSG" == u.getAttribute("data-type") ? "" : v.substring(0, v.indexOf("_"))
        }
        var b = t.querySelector("[data-zmsg_thread_parent]");
        if (!n && !a && (u = t.querySelector("[data-msguid]")) && !b && !u.parentNode.getAttribute("data-thread_parentmsg")) {
            for (var y = 0, _ = e.length - 1, W = _; W >= 0; W--) {
                (p = e[W]).msguid === u.getAttribute("data-msguid") && (y = W)
            }
            e.splice(y, _)
        }
        var S = Message.constructChatContent(e, t, s, C, f, !0),
            w = Message.getScrollHeight(t),
            M = Message.getScrollTop(t),
            I = e[e.length - 1],
            T = t.querySelector(".wms-msgdate");
        if (T && !b && !T.parentNode.getAttribute("data-thread_parentmsg")) {
            var A = T.getAttribute("data-msgtime"),
                E = I && I.time;
            $WC.DateUtil.isSameDay(A, E) && $WC.Util.removeElement(T)
        }
        var U = t.querySelector(".wms-msgsender");
        if (U) {
            var k = U.getAttribute("data-senderzuid"),
                N = I && "INFOMSG" === Message.getMessageType(I) ? "" : I && I.sender;
            $WC.DateUtil.isSameDay(A, E) && N === k && !U.parentNode.getAttribute("data-thread_parentmsg") && $WC.Util.removeElement(U)
        }
        if (i.insertAdjacentHTML("afterend", S), (i === i.parentNode.firstChild || !n && a) && Message.restoreScrollPosition(t, w, M), "bottom" !== i.getAttribute("data-scrollbehaviour") || t.closest("[data-scrolldown]")) {
            if ("top" === i.getAttribute("data-scrollbehaviour")) {
                var x = Message.getScrollableParent(t);
                $WC.Util.scrollTo(x.firstChild, {
                    behavior: "smooth"
                }, x)
            }
        } else Message.scrollDisplay(t)
    }, Message.constructAndAppendChatContent = function(e, t, s, i, n) {
        var a = WindowHandler.getWinObjById(s);
        if (!a || a.lastmsg_uid != e[0].msguid) {
            var o = Message.constructChatContent(e, t, s, i, n);
            t.insertAdjacentHTML("beforeend", o), 0 === t.parentElement.scrollTop && (Message.toggleLiveZomoji(t.parentElement), WMSUI.loadImages(t), Message.checkAndLoadAudioPlayer(t.parentElement), Message.loadUrlThumbnail(t.parentElement), WMSUI.checkAndLoadCustomEmojis(t.parentElement)), Message.updateBotSuggestionsButton(a)
        }
    }, Message.updateBotSuggestionsButton = function(e, t) {
        if (e && Message.botSuggestionsMessageUID[e.objId]) {
            var s = Message.botSuggestionsMessageUID[e.objId];
            n(i = e.msgdisp.querySelector('[data-msguid="' + s + '"] [data-botsuggestiongroup]')), delete Message.botSuggestionsMessageUID[e.objId]
        } else if (e && t) {
            var i;
            (i = e.msgdisp.querySelectorAll("[data-msguid] [data-botsuggestiongroup]")) && i.forEach(n)
        }

        function n(e) {
            if (e) {
                var t = 35; - 1 !== e.className.indexOf("wms-botsuggestionswithicons") && (t = 45), e.childNodes.forEach((function(e) {
                    $WC.Util.removeClass(e, "wms_hiddenbutton")
                })), $WC.Util.removeClass(e, "wms_collapsedbuttons");
                var s = e.parentElement.querySelector("[data-suggestionexpand]");
                if (s && $WC.Util.removeElement(s), e.getBoundingClientRect().height > 3 * t) {
                    var i = 0,
                        n = 0,
                        a = e.getBoundingClientRect().width,
                        o = 0;
                    e.childNodes.forEach((function(e) {
                        var t = e.getBoundingClientRect().width + 5;
                        i + t > a ? (n++, i = t) : i += t, n >= 3 && (o++, $WC.Util.addClass(e, "wms_hiddenbutton"))
                    }));
                    var r = $WC.I18N("common.expand");
                    o && (e.setAttribute("data-hiddenbuttoncount", o), r = $WC.I18N("reactions.more.count", [o])), $WC.Util.addClass(e, "wms_collapsedbuttons"), e.insertAdjacentHTML("beforeend", '<div class="wms-suggestionbuttons" data-suggestionexpand=true>' + r + "</div>")
                }
            }
        }
    }, Message.getMessageType = function(e) {
        if (e.messagetype) return e.messagetype;
        if ("more" === e.mode) return Message.types.LOADMORE;
        if ("morebutton" === e.mode) return Message.types.LOADMOREBUTTON;
        if ("object" == typeof e.thread_information && e.thread_information.message_count) return Message.types.THREADLINKMSG;
        if (Message.isThreadMsg(e)) return Message.types.THREADMSG;
        if (!0 === e.post_in_parent) return Message.types.THREADMSG;
        if (Message.isReplyMsg(e)) return Message.types.REPLYMSG;
        if (!(e.mtype !== "" + CT_EDITED_MSG && e.mtype !== "" + CT_SYSTEM_EDIT || Message.isForwardMsg(e) || Message.isBotMsg(e))) return Message.types.EDITEDMSG;
        if (Message.isForwardMsg(e)) return Message.types.FORWARDEDMSG;
        if ("object" != typeof e.msg && !e.mod) return Message.isCustomMsg(e) ? Message.types.CUSTOMMSG : Message.isBotMsg(e) && e.mtype !== "" + CT_DELETED_MSG ? Message.types.BOTMSG : void 0 !== e.meta && void 0 !== e.meta.linkdetails ? "text/html" === e.meta.linkdetails.mimetype ? "video" === e.meta.linkdetails.linktype && (e.meta.linkdetails.iframe_url || e.meta.linkdetails.html) ? Message.types.VIDEOLINK : "audio" === e.meta.linkdetails.linktype && (e.meta.linkdetails.iframe_url || e.meta.linkdetails.html) ? Message.types.AUDIOLINK : "image" === e.meta.linkdetails.linktype ? Message.types.IMGLINK : Message.types.TEXTMSG : e.meta.linkdetails.mimetype && -1 !== e.meta.linkdetails.mimetype.indexOf("image/") ? Message.types.IMGLINK : Message.types.TEXTMSG : Message.isTempMsg(e) ? Message.types.TEMPMSG : "<hr>" === $WC.Markdown.apply(e.msg) ? Message.types.HRMSG : e.mtype === "" + CT_DELETED_MSG ? Message.types.DELETEDMSG : Message.types.TEXTMSG;
        if ("16" === e.mtype || "65" === e.mtype) return Message.types.INFOMSG;
        if ("location" === e.mod || "att" === e.mode && e.msg.__module && "location" === e.msg.__module) return Message.types.LOCATT;
        if ("contact" === e.mod || "att" === e.mode && e.msg.__module && "contact" === e.msg.__module) return Message.types.CONTACTATT;
        if ("event" === e.mod || "att" === e.mode && e.msg.__module && "event" === e.msg.__module) return Message.types.EVENTATT;
        if ("att" === e.mod || "att" === e.mode) {
            var t, s, i, n = "";
            return (s = e.addinfo && e.addinfo.fName ? e.addinfo.fName : e.msg && e.msg.fName) && (n = (i = s.split("."))[i.length - 1]), t = e.addinfo && e.addinfo.contenttype ? e.addinfo.contenttype : e.msg && e.msg.content, e.msg && e.msg.content && -1 !== e.msg.content.indexOf("image") && e.msg.dim && e.msg.dim.height && e.msg.dim.width || t && -1 !== t.indexOf("image") ? Message.types.IMGATT : t && WmsMediaPlayer.isSupportedVideoType(t, n) ? Message.types.VIDEOATT : t && WmsMediaPlayer.isSupportedAudioType(t, n) ? Message.types.AUDIOATT : Message.types.FILEATT
        }
    },
    function() {
        var e = 1,
            t = [];
        Message.incrementDeletedMsgCount = function(s) {
            1 === e && t.push(s), e++
        }, Message.getDeletedMsgInfo = function(s, i) {
            var n;
            t.push(s), t.sort();
            var a = "",
                o = "",
                r = 1 === e ? $WC.I18N("chat.info.deletemsg") : $WC.I18N("chat.info.deletemsgs", [e]);
            if (i && i.meta && i.meta.admin_operation) {
                var l = "chat.info.deletemsg.otheruser",
                    d = {
                        0: "admin",
                        1: "admin",
                        3: "moderator"
                    };
                void 0 !== i.meta.admin_operation.role && d[i.meta.admin_operation.role] && (l = "chat.info.deletemsg." + d[i.meta.admin_operation.role]);
                var c = '<span class="wms-usernamecolor" data-zcprofileid="' + i.meta.admin_operation.id + '" >' + $WC.Util.getContactName(i.meta.admin_operation.id, i.meta.admin_operation.name, !0) + "</span>";
                r = $WC.I18N(l, [c])
            }
            return 1 === t.length || $WC.DateUtil.formatTime(t[0]) === $WC.DateUtil.formatTime(t[1]) ? (a = $WC.DateUtil.formatTime(t[0]) + ", " + $WC.DateUtil.formatDateWithWords(t[0]), n = $WC.I18N("chat.deletemsg.title", [a])) : (a = $WC.DateUtil.formatDateWithWords(t[0]) === $WC.DateUtil.formatDateWithWords(t[1]) ? $WC.DateUtil.formatTime(t[0]) : $WC.DateUtil.formatTime(t[0]) + ", " + $WC.DateUtil.formatDateWithWords(t[0]), o = $WC.DateUtil.formatTime(t[1]) + ", " + $WC.DateUtil.formatDateWithWords(t[1]), n = $WC.I18N("chat.deletemsgs.title", [a, o])), e = 1, t = [], "<div class='wms-msg wms-txtmsg wms-delmsg' title=\"" + n + '">' + r + "</div>"
        }
    }(), Message.getDownloadUrl = $WC.Message.getDownloadUrl, Message.getThumbnailImageUrl = function(e, t) {
        if (-1 !== e.indexOf("base64")) return "";
        if (!WMSUI.isLoadedImg(e))
            if (WebMessanger.isUDSDownloadEnabled()) {
                var s = "";
                if (WebMessanger.isNetworkUser() ? s = JSON.stringify({
                        screen_name: WebMessanger.network_info.screen_name
                    }) : WebMessanger.crossoriginisolation && t ? s = "{thumbnail:true,coi:true}" : t && (s = "{thumbnail:true}"), s) return "&x-cli-msg=" + encodeURIComponent(s)
            } else if (t) return "/thumbnail";
        return ""
    }, Message.constructChatContent = function(e, t, s, i, n, a) {
        var o, r = "";
        if (!i && t) {
            var l = t.querySelectorAll("[data-senderzuid]"),
                d = l[l.length - 1];
            t.querySelector("[data-zmsg_thread_parent]") || (i = d && d.getAttribute("data-senderzuid"))
        }
        if (!n && t) {
            var c = t.querySelectorAll("[data-msgtime]"),
                u = c[c.length - 1];
            t.querySelector("[data-zmsg_thread_parent]") || (n = u && u.getAttribute("data-msgtime"))
        }
        for (var m = 0; m < e.length; m++) {
            var h = Message.getMessageType(e[m]);
            e[m].meta && (!e[m].msg && e[m].output && (e[m].msg = {
                msg: e[m].output.msg
            }), e[m].msg.meta = Object.assign({}, e[m].meta)), e[m].thread_information && (e[m].msg.thread_information = Object.assign({}, e[m].thread_information), e[m].msg.chid = s);
            var g = "object" == typeof e[m].msg ? e[m].msg : e[m],
                p = !(1 !== e[m].revision && (!e[m].meta || 1 !== e[m].meta.revision && 2 !== e[m].meta.revision));
            if ("63" != e[m].mtype || (Message.deletedMessages.insert(s, e[m].origin_time || e[m].time), 0 != e[m].info_visiblity)) {
                var f = null,
                    v = WindowHandler.getWinObjById(s),
                    C = !1;
                v && (v.ctype, e[m].reactions && v.updateReactionData(e[m].msguid, e[m].reactions), C = v.file_forward_restricted), h === Message.types.IMGATT || h === Message.types.FILEATT || h === Message.types.AUDIOATT || h === Message.types.VIDEOATT ? (e[m].salesiqchat ? g.downloadurl = WmsUIImpl.customContactsConfig().getAttachmentUrl(g.url) : g.constructeddownloadurl = Message.getDownloadUrl(g), h !== Message.types.IMGATT || WebMessanger.isGuestUser() || (g.constructeddownloadurl += Message.getThumbnailImageUrl(g.constructeddownloadurl, g.thumb)), g.constructeddownloadurl = e[m].salesiqchat ? g.downloadurl : g.constructeddownloadurl, g.isFileForwardSupported = !e[m].salesiqchat && !C, g.chid = s, g.isInfected = e[m].isInfected, e[m].star && (g.star = e[m].star, g.startype = e[m].startype)) : h === Message.types.INFOMSG && (g.chid = s), e[m].sender || h !== Message.types.IMGATT && h !== Message.types.FILEATT || e[m].msg && e[m].msg.sender && (e[m].sender = e[m].msg.sender), !e[m].time && e[m].msgtime && (e[m].time = e[m].msgtime), e[m + 1] && (f = e[m + 1].time), !e[m + 1] || e[m + 1].mtype !== "" + CT_DELETED_MSG || e[m].sender !== e[m + 1].sender || e[m].meta && e[m].meta.admin_operation || (e[m].isNextMsgDeleted = !0, f = e[m + 1].origin_time), o = e[m].origin_time ? e[m].sender + "_" + e[m].origin_time : e[m].sender + "_" + e[m].time;
                var b = e[m].msgackid,
                    y = e[m].notack;
                Message.isHidingMsg(e[m]) && Message.setTimeToHideMsg(t, e[m], o), h !== Message.types.FORWARDEDMSG && h !== Message.types.REPLYMSG && h !== Message.types.BOTMSG && h !== Message.types.CUSTOMMSG && h !== Message.types.VIDEOLINK && h !== Message.types.AUDIOLINK && h !== Message.types.IMGLINK && h !== Message.types.TEMPMSG && h !== Message.types.DELETEDMSG && h !== Message.types.EDITEDMSG && h !== Message.types.THREADMSG && h !== Message.types.THREADLINKMSG || (g = e[m]), e[m].chid = s;
                var _ = e[m].origin_time || e[m].time || e[m].msg.time;
                Message.types.THREADMSG;
                if (r += Message.constructMessageFragment(e[m].sender, e[m].dname, _, g, h, i, n, o, null, f, b, y, e[m].msguid, e[m].reactions, p, e[m].salesiqchat, WebMessanger.isProfileInfoAllowed(s), e[m].is_read), i = h !== Message.types.INFOMSG && h !== Message.types.BOTMSG && h !== Message.types.CUSTOMMSG ? e[m].sender : "", n = h === Message.types.DELETEDMSG || h === Message.types.EDITEDMSG ? e[m].origin_time : e[m].time, a && e[m].sender && !$WC.Users.getInfo(e[m].sender) && e[m].dname) {
                    var W = $WC.Util.getContactName(e[m].sender, e[m].dname, !1);
                    v && "1" == v.ctype && !1 === v.isZohoGroupChat() && v.title !== e[m].dname && !$WC.Util.isLocalUser(e[m].sender) && (W ? (WindowHandler.updateChatTitle(s, W), $WC.RecentChats.updateTitle(s, W)) : (WindowHandler.updateChatTitle(s, e[m].dname), $WC.RecentChats.updateTitle(s, e[m].dname))), W ? $WC.Users.storeInfo(e[m].sender, {
                        dname: W
                    }) : $WC.Users.storeInfo(e[m].sender, {
                        dname: e[m].dname
                    })
                }
            }
        }
        return r
    }, Message.setTimeToHideMsg = function(e, t, s) {
        var i = e.getAttribute("data-chid"),
            n = WindowHandler.getWinObjById(i);
        clearTimeout(n.msghidetimer);
        var a = parseInt(t.meta.config.h);
        n.msghidetimer = setTimeout((function() {
            Message.hideMsg(e, s)
        }), a)
    }, Message.hideMsg = function(e, t) {
        var s = e.querySelector('[data-msgid="' + t + '"]').parentNode;
        s.previousSibling.previousSibling.querySelector(".wms-msgdate") && $WC.Util.removeElement(s.previousSibling.previousSibling), $WC.Util.removeElement(s.previousSibling), $WC.Util.removeElement(s)
    }, Message.deletedMessages = {
        list_index: [],
        list: {},
        insert: function(e, t) {
            30 == this.list_index.length && this.remove(this.list_index[0]), this.list[e] ? this.list[e].push(t) : this.list[e] = [t], -1 != this.list_index.indexOf(e) && this.list_index.splice(this.list_index.indexOf(e), 1), this.list_index.push(e)
        },
        get: function(e) {
            if (this.list[e]) return this.list[e]
        },
        isAvailable: function(e, t) {
            return !(!this.list[e] || -1 === this.list[e].indexOf(t))
        },
        remove: function(e) {
            this.list[e] && (delete this.list[e], this.list_index.splice($WC.Util.indexOf(this.list_index, e), 1))
        },
        removeAll: function() {
            this.list = {}, this.list_index = []
        }
    }, Message.glowBubble = function(e, t, s, i) {
        if (Message.deletedMessages.isAvailable(s, e)) return WindowHandler.getWinObjById(s).showErrorMsg($WC.I18N("chat.info.deletemsg")), !0;
        var n = t.querySelector('.wms-msgfrag[data-msgtime="' + e + '"]');
        if (t.setAttribute("data-glowtime", e), n) {
            if ($WC.$CUtil.isScrolledIntoView(n, t)) $WC.Util.addClass(n.firstChild, "wms-bubbleglow"), t.removeAttribute("data-glowtime");
            else {
                var a = i && i.block && n.getBoundingClientRect().height > 350 ? i.block : "center";
                $WC.Util.scrollTo(n, {
                    behavior: "smooth",
                    block: a
                }, t)
            }
            return !0
        }
        return !1
    }, Message.addEventListenersForTranscript = function(e, t) {
        var s = Message.getScrollableParent(e);
        Gator(e).on("mouseover", "[data-type]", $WC.Util.debounce((function() {
            if (!WebMessanger.messageactionsdisabled) {
                var e = this.closest("[data-chid]"),
                    t = e && e.getAttribute("data-chid"),
                    s = WindowHandler.getWinObjById(t);
                if ((!s || "4" !== s.ctype || !s.salesiqchat) && s && (null === s.msgoprnode || null === s.msgoprnode.offsetParent) && "INFOMSG" !== this.getAttribute("data-type") && "DELETEDMSG" !== this.getAttribute("data-type") && "HRMSG" !== this.getAttribute("data-type") && null === this.closest('[class*="wms-msgfrag"]').querySelector("[data-options]") && this.closest("[data-msguid]")) {
                    var i = {
                        include_all: !0
                    };
                    if ("undefined" != typeof WmsUIImpl && (i = WmsImplHandler.invokeSynchronously(WmsUIImpl.getMessageActions, WebMessanger.zuid, t, s && s.ctype) || i), $WC.Util.isEmptyObject(i)) return;
                    i = Message.getAllowedActions(this, i, t), WebMessanger.show_message_actions_as_popup && (i.search = !1);
                    var n = 0;
                    for (var a in i) i[a] && n++;
                    if (0 == n) return;
                    var o = this.closest('[class*="wms-msgfrag"]'),
                        r = o.getAttribute("data-type"),
                        l = this.firstChild;
                    if ("THREADLINKMSG" !== r && "IMGATT" !== this.getAttribute("data-type") || (l = o.firstChild), ("REPLYMSG" === this.getAttribute("data-type") || "FORWARDEDMSG" === this.getAttribute("data-type") || "THREADMSG" === this.getAttribute("data-type")) && "THREADLINKMSG" !== r) {
                        var d = this.querySelector("[data-type]");
                        l = "HRMSG" === d.getAttribute("data-type") ? d : d.firstChild
                    }
                    var c = '<div class="wms-valign-mid-block" data-options="hide"></div>';
                    (WebMessanger.show_message_actions_as_popup || WebMessanger.quickmessageactions) && ("EDITEDMSG" !== r && "REPLYMSG" !== r && "THREADMSG" !== r && "FORWARDEDMSG" !== r || (l = o.firstChild), c = Message.getMessageActionHtml(this, i)), l.insertAdjacentHTML("afterbegin", c)
                }
            }
        }), null, 50)), Gator(e).on("mouseout", "[data-type]", $WC.Util.debounce((function(e) {
            var t = e.relatedTarget;
            if (t && !t.closest("[data-type]") && null === this.querySelector("[data-msgoperations]") && !WebMessanger.show_message_actions_as_popup && !WebMessanger.quickmessageactions) {
                var s = this.querySelector("[data-options]:not(.wms_quickreact)");
                s && s.parentNode && s.parentNode.getAttribute("data-sticky_actions") && (s = s.parentNode), $WC.Util.removeElement(s)
            }
        }), null, 100)), Gator(e).on("contextmenu", ".wms-msg", (function(t) {
            var s = e.getAttribute("data-chid"),
                i = $WC.Util.getEventTarget(t);
            if (WindowHandler.chatrestrictions[s] && WindowHandler.chatrestrictions[s].restrictFileDownload && "IMG" == i.tagName) return t.preventDefault(), void t.stopPropagation();
            if (WebMessanger.show_message_actions_as_popup) {
                if (WebMessanger.messageactionsdisabled) return;
                if (i.closest("[data-options]") || "A" == i.tagName || "IMG" == i.tagName || "" !== document.getSelection().toString()) return void WindowHandler.removePopupActionMountPoint();
                var n = i.closest(".wms-msgfrag");
                Message.showMessageActions(t, n, s), t.preventDefault()
            }
        })), $WC.Util.addEvent(e, "click", (function(e) {
            var t = $WC.Util.getEventTarget(e),
                s = e.target.closest("#ctrlcomp") || e.target.closest("#wmschshtransmsg") || event.target.closest("#wmstranscriptcomponent"),
                i = e.target.closest("#wmschshtransmsg"),
                n = Message.getScrollableParent(s),
                a = s.getAttribute("data-chid"),
                o = t.getAttribute("data-thread_chid") || t.closest("[data-thread_chid]") && t.closest("[data-thread_chid]").getAttribute("data-thread_chid");
            if (!t.querySelector("[data-attachmentdisabled]") && !t.getAttribute("data-attachmentdisabled"))
                if (o && !WMSUI.handleChatExist(o)) {
                    if (WmsMainUI.scheduleAutoFocus(o), t = t.closest("[data-thread_chid]") ? t.closest("[data-thread_chid]") : t, s) WebMessanger.openThreadWindowFromCache(t, a);
                    else if (!Chat.isExists(a) || null != i) {
                        var r = document.getElementById("wmschshtransmsg").parentElement;
                        ZMSGUI.viewChatTranscript(o, r, null, "", "", "", t, a)
                    }
                } else if (t.getAttribute("data-postedinparent") || t.closest("[data-postedinparent]")) {
                var l = t.getAttribute("data-postedinparent") ? t : t.closest("[data-postedinparent]"),
                    d = l.getAttribute("data-parentchid"),
                    c = l.getAttribute("data-parentmsguid");
                d && c && Message.showMessageFragmentInView(d, c)
            } else if ("true" === t.getAttribute("data-retry") || t.parentNode && "true" === t.parentNode.getAttribute("data-loadmorebutton")) {
                var u = t.parentNode,
                    m = t;
                if (m.getAttribute("data-next-msgtime")) {
                    var h = $WC.Util.getAdjacentNode(u, !1, "data-msgid").getAttribute("data-msgtime") || "";
                    u.setAttribute("data-nexttime", h)
                } else if (m.getAttribute("data-prev-msgtime")) {
                    var g = $WC.Util.getAdjacentNode(u, !0, "data-msgid").getAttribute("data-msgtime") || "";
                    u.setAttribute("data-prevtime", g)
                }
                u.setAttribute("data-same-height", "true"), Message.loadSpecificTranscript(a, s, u)
            } else if ("true" === t.getAttribute("data-msgfailure")) {
                (I = WindowHandler.getWinObjById(a)).clickedfailurenode = t, I.createChatwindowOverlay()
            } else if (t.getAttribute("data-infocallbtn")) {
                var p = t.getAttribute("data-infocallbtn"),
                    f = t.getAttribute("data-calleezuid");
                "triggerAudioCall" === p ? WMSUI.makeMediaCall(WMSUI.avCall.CALL_TYPE_VOICE, f) : "triggerVideoCall" === p ? WMSUI.makeMediaCall(WMSUI.avCall.CALL_TYPE_VIDEO, f) : WMSUI.makeMediaCall(WMSUI.avCall.CALL_TYPE_SCREENSHARE, f)
            } else if ("shareresponseclick_onmsg" === t.getAttribute("data-purpose")) {
                var v = {
                        msgid: t.getAttribute("data-msgid")
                    },
                    C = {
                        "X-XHR-exception": "true",
                        "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
                        "Content-Type": "application/json"
                    };
                $WC.Ajax.postRequestToChat("v1/chats/" + a + "/shareintegrationresponse", v, null, null, null, null, C)
            } else if (t.closest("[data-replymsgtime]")) {
                var b = t.closest("[data-replymsgtime]"),
                    y = b.getAttribute("data-replymsgtime"),
                    _ = b.getAttribute("data-privatereplychid"),
                    W = b.closest('[data-type="THREADMSG"]');
                if (W && (W = W.querySelector("[data-threadmsg_post]")), _) Message.showMessageFragmentInView(_, b.getAttribute("data-replymsguid"));
                else if (W && W.getAttribute("data-thread_chid")) Message.showMessageFragmentInView(W.getAttribute("data-thread_chid"), b.getAttribute("data-replymsguid"));
                else {
                    if ((I = WindowHandler.getWinObjById(a)) && (I.last_clicked_replymsg_time = b.closest("[data-msgtime]").getAttribute("data-msgtime")), !Message.glowBubble(y, n, a) && !WebMessanger.isGuestUser()) {
                        var S = a + "|" + b.getAttribute("data-replysenderzuid") + "|" + y,
                            w = Message.getMarkerElement(S, y, s);
                        Message.loadSpecificTranscript(a, s, w)
                    }
                }
            } else if (t.getAttribute("data-options")) Message.showMessageActions(e, t, a);
            else if ("addmem" === t.getAttribute("data-operation")) {
                var M = t.getAttribute("data-id").split(",");
                I = WindowHandler.getWinObjById(a), WMSUI.confirmAndAddMember(a, null, M), I.removePromptMsg()
            } else if ("removepromptmsg" === t.getAttribute("data-operation"))(I = WindowHandler.getWinObjById(a)).removePromptMsg();
            else if (!t.getAttribute("data-edited") || "REPLYMSG" !== t.parentNode.previousSibling.getAttribute("data-type") && "EDITEDMSG" !== t.parentNode.previousSibling.getAttribute("data-type") && "THREADLINKMSG" !== t.parentNode.previousSibling.getAttribute("data-type")) {
                if (t.getAttribute("data-msgsel") || WindowHandler.getWinObjById(a) && null !== WindowHandler.getWinObjById(a).msgoprnode.offsetParent) {
                    var I = WindowHandler.getWinObjById(a);
                    if (null !== WindowHandler.getWinObjById(a).msgoprnode.offsetParent) {
                        G = t.closest('[class^="wms-msgfrag"]');
                        t = G && G.querySelector("[data-msgsel]")
                    }
                    if (t) {
                        var T = I.msgdisp.querySelectorAll('[data-msgsel="true"]').length;
                        25 == T && "false" == t.getAttribute("data-msgsel") && ($WC.Util.addClass(I.msgselectcntnode.parentNode, "wms_fwdsel_alert"), $WC.Util.removeClass(I.msgoprnode, "wms-shake"), setTimeout((function() {
                            $WC.Util.addClass(I.msgoprnode, "wms-shake")
                        }), 300)), "true" === t.getAttribute("data-msgsel") ? ($WC.Util.removeClass(t, "wms_fwdcheckboxsel"), $WC.Util.addClass(t, "wms_fwdcheckbox"), t.setAttribute("data-msgsel", "false"), --T) : T < 25 && ($WC.Util.removeClass(t, "wms_fwdcheckbox"), $WC.Util.addClass(t, "wms_fwdcheckboxsel"), t.setAttribute("data-msgsel", "true"), ++T), T && T < 26 ? ($WC.$CUtil.setInnerText(I.msgselectcntnode, $WC.I18N("msg.select.fwdcnt", [T])), I.msgoprnode.setAttribute("data-msgoperation", !0), T < 25 && ($WC.Util.removeClass(I.msgselectcntnode.parentNode, "wms_fwdsel_alert"), $WC.Util.removeClass(I.msgoprnode, "wms-shake"))) : ($WC.$CUtil.setInnerText(I.msgselectcntnode, $WC.I18N("msg.tap.select")), I.msgoprnode.setAttribute("data-msgoperation", !1))
                    }
                } else if ("6" == t.getAttribute("data-mentiontype")) {
                    var A = "";
                    if (I = WindowHandler.getWinObjById(a)) A = I.title;
                    else {
                        var E = ZMSG_transContent.querySelector('[cid="' + a + '"]');
                        A = $WC.Util.getInnerText(E.querySelector('[id="namedivCID"]'))
                    }
                    WMSUI.showParticipantsList(a, A)
                } else if (t.getAttribute("data-pinned-msgtime")) {
                    if (I = WindowHandler.getWinObjById(a)) {
                        var U = t.getAttribute("data-pinned-msgtime"),
                            k = t.getAttribute("data-pinned-user");
                        I.highlightPinnedMsg(U, k)
                    }
                } else if (t.closest("[data-forwardmsgid]") && null === t.getAttribute("data-zcprofileid")) {
                    var N = t.closest("[data-forwardmsgid]"),
                        x = N.getAttribute("data-forwardmsgid");
                    a = N.getAttribute("data-forwardmsgchid");
                    "true" === N.getAttribute("data-messagelink") && Message.showMessageFragmentInView(a, x)
                } else if (t.getAttribute("data-msg-read")) {
                    if ("false" === t.getAttribute("data-read-receipt") || !WebMessanger.isReadReceiptEnabled()) return;
                    G = t.parentNode.previousSibling, I = WindowHandler.getWinObjById(a);
                    "REPLYMSG" === G.getAttribute("data-type") && (G = G.querySelector("[data-msgid]"));
                    var O = {};
                    O.msguid = G.getAttribute("data-msguid"), O.time = $WC.DateUtil.formatDTTime(G.getAttribute("data-msgtime")), O.msg = Message.getReferenceContent(a, G), "8" !== I.ctype || I.partcount <= 1e3 ? ($WC.Util.isThreadChid(a) && G.closest("[data-thread_parentmsg]") && (a = $WC.Util.getParentChidFromThreadChid(a)), WebMessanger.showReadReceipt(a, O)) : WMSUI.showReadReceiptLimitationDialog()
                } else if ("true" == t.getAttribute("data-dynamicactions")) {
                    (I = WindowHandler.getWinObjById(a)).populateDynamicActions(t)
                } else if ("true" == t.getAttribute("data-urlactions")) {
                    G = t.closest("[data-msguid]");
                    var R = $WC.Util.createElement("span", null, "wms_urlshare_loader");
                    t.appendChild(R), t.className += " wms_cmsg_loadingon", t.style.fontSize = "0px";
                    $WC.Functions.execute(t.getAttribute("data-fname"), a, G.getAttribute("data-msgtime"), t.getAttribute("btnindex"), !1, "click", (function() {
                        t.removeChild(R), t.className.replace(" wms_cmsg_loadingon", ""), t.style.fontSize = "12px"
                    }))
                } else if (t.getAttribute("data-urlnotification")) {
                    x = (G = t.closest("[data-msguid]")).getAttribute("data-msguid");
                    for (var D = Message.urlmsgstore[x], $ = {
                            buttons: {}
                        }, H = 0; H < D.meta.linkdetails.notification_configs.length; H++) {
                        var L = D.meta.linkdetails.notification_configs[H];
                        $.buttons[L] = D.meta.btnindexvsdetails[L]
                    }(I = WindowHandler.getWinObjById(a)).showDynamicActions($, G, !1)
                } else if (t.getAttribute("data-starmsg")) WMSUI.showStarOptions(t, a), e.stopPropagation(), e.preventDefault();
                else if (t.getAttribute("data-redirecturl") || t.parentElement && t.parentElement.getAttribute("data-redirecturl")) {
                    (t.getAttribute("data-redirecturl") ? t.querySelector("a[href]") : t).href = t.getAttribute("data-redirecturl") || t.parentElement.getAttribute("data-redirecturl")
                } else if (t.getAttribute("data-reaction") && t.parentElement && t.parentElement.getAttribute("data-quickreaction") || t.getAttribute("data-quickreaction")) {
                    var P = t.getAttribute("data-reaction") ? t : t.querySelector("[data-reaction]"),
                        F = P.getAttribute("data-reaction"),
                        B = (x = (G = t.closest("[class^=wms-msgfrag]")).getAttribute("data-msguid"), !1);
                    if (G.querySelector("[class=wms_reaction_frag]")) {
                        var j = G.querySelector("[class=wms_reaction_frag]");
                        B = j.querySelector('[data-reaction="' + F + '"]') && "true" == j.querySelector('[data-reaction="' + F + '"]').getAttribute("data-reactedbyme")
                    }
                    var z = G.getAttribute("data-type") == Message.types.THREADLINKMSG;
                    WebMessanger.updateReaction(a, x, F, B, z), (I = WindowHandler.getWinObjById(a)) && (I.updateMyReactionData(x, F, B), WmsSettings.adminsettings.quick_reactions || !WebMessanger.quickmessageactions && !WebMessanger.show_message_actions_as_popup || I.deleteAllMessageActionNodes()), $WC.Matcher.check("customemoji", F) ? WmsSettings.showCustomEmojiOptions() && Smiley.updateFrequentSmileysList(F, P.title) : Smiley.updateFrequentSmileysList(F, P.title)
                } else if (t.getAttribute("data-replyaction") && t.parentElement) {
                    (G = t.closest(".wms-msgfrag")).getAttribute("data-type") != Message.types.FORWARDEDMSG && G.getAttribute("data-type") != Message.types.REPLYMSG || (G = G.querySelector("[data-msgid]")), Message.handleMessageActions(G, "reply")
                } else if (t.getAttribute("data-threadreplyaction") && t.parentElement) {
                    G = t.closest("[class^=wms-msgfrag]");
                    Message.handleMessageActions(G, "thread_reply")
                }
            } else {
                var G;
                "REPLYMSG" === (G = t.parentNode.previousSibling).getAttribute("data-type") && (G = G.querySelector("[data-msgid]")), G.closest("[data-thread_parentmsg]") && $WC.Util.isThreadChid(a) && (a = G.closest("[data-thread_parentmsg]").getAttribute("data-chid") || $WC.Util.getParentChidFromThreadChid(a)), Message.showEditMessageHistory(G, a)
            }
        })), Message.addEventListenersForMessage(e, t), Message.showMessageActions = function(e, t, s) {
            if (WebMessanger.parseReminderTime(t, s), Message.hideOptions(), "show" != t.getAttribute("data-options")) {
                var i = WindowHandler.getWinObjById(s),
                    n = {
                        include_all: !0
                    };
                if ("undefined" != typeof WmsUIImpl && (n = WmsImplHandler.invokeSynchronously(WmsUIImpl.getMessageActions, WebMessanger.zuid, s, i.ctype) || n), !$WC.Util.isEmptyObject(n)) {
                    if (WebMessanger.isGuestUser()) {
                        var a = {
                            reply: "enable",
                            copy: "enable",
                            react: "enable",
                            edit: "enable"
                        };
                        if (!n.include_all)
                            for (var o in a) n[o] || delete a[o];
                        n = a
                    }
                    n = Message.getAllowedActions(t, n, s), "undefined" == navigator.clipboard && (n.copy = !1), (WebMessanger.quickmessageactions || WebMessanger.show_message_actions_as_popup) && (WebMessanger.show_message_actions_as_popup && (n.search = !1), n.react = !1, n.reply = !1, n.thread_reply = !1, $WC.Util.isChannelChid(s) && $WC.Channels.isBothReplyActionAllowed(s) && (n.reply = !0));
                    var r = 0;
                    for (var o in n) n[o] && r++;
                    0 != r && (i.showMessageActionsUI(t.closest("[data-msgid]"), n, Message.handleMessageActions, e), WebMessanger.show_message_actions_as_popup && "contextmenu" !== e.type && (t.setAttribute("data-options", "show"), t.closest("[data-showaspopup]") && t.closest("[data-showaspopup]").setAttribute("data-options", "show")), WMSUI.addIndocClickcallbackQue("msgoptions", t, (function() {
                        Message.hideOptions(t)
                    })), e.stopPropagation())
                }
            }
        }, Message.getAllowedActions = function(e, t, s) {
            var i = e.closest("[data-type]") && e.closest("[data-type]").getAttribute("data-type");
            "EDITEDMSG" === i && e.firstChild && e.firstChild.getAttribute("data-type") && (i = e.firstChild.getAttribute("data-type"));
            var n = e.closest("[data-msgid]"),
                a = WindowHandler.getWinObjById(s),
                o = "TEXTMSG" === i || "EDITEDMSG" === i || "HRMSG" === i,
                r = !1;
            if ("EDITEDMSG" === i || "FORWARDEDMSG" === i || "REPLYMSG" == i || "THREADMSG" == i || "THREADLINKMSG" == i) {
                var l = i;
                o = "TEXTMSG" === (i = e.closest(".wms-msgfrag").querySelector("[data-type]").getAttribute("data-type")) || "EDITEDMSG" === i || "HRMSG" === i || "REPLYMSG" == i || "THREADMSG" == i, i = l
            }
            var d = "DELETEDMSG" !== i;
            if (n.querySelector("[data-attachmentdisabled]") || WindowHandler.chatrestrictions[s] && WindowHandler.chatrestrictions[s].restrictFileForward) {
                l = i;
                "EDITEDMSG" !== i && "FORWARDEDMSG" !== i && "REPLYMSG" != i && "THREADMSG" != i && "THREADLINKMSG" != i || (i = e.closest(".wms-msgfrag").querySelector("[data-type]").getAttribute("data-type")), i != Message.types.FILEATT && i != Message.types.AUDIOATT && i != Message.types.VIDEOATT && i != Message.types.IMGATT || (d = !1), i = l
            }
            "WP" == WebMessanger.prd && WMSUI.zhShareInstance && WMSUI.zhShareInstance.isWpAttachmentCopyEnabled() && ("FILEATT" != (i = "FORWARDEDMSG" == i ? e.closest(".wms-msgfrag").querySelector("[data-type]").getAttribute("data-type") : i) && "IMGATT" != i && "VIDEOATT" != i && "AUDIOATT" != i || (r = !0));
            var c, u = Message.isDeletable(n),
                m = Message.isEditable(n),
                h = !WebMessanger.is_set_reminder_option_disabled && "CUSTOMMSG" !== i && !1 !== WebMessanger.isCliqUser(),
                g = !1 === WebMessanger.is_copy_message_link_disabled,
                p = WindowHandler.getWinObjById(s),
                f = p.pinmsgdetails.info.msgid,
                v = n.getAttribute("data-msguid") !== f,
                C = !WebMessanger.is_msgpin_option_disabled && p.pinmsgdetails.action_enabled,
                b = !(a.permdenied || !$WC.Channels.isReplyActionAllowed(s));
            $WC.Util.isChannelChid(s) && (b = !(!$WC.Channels.isReplyActionAllowed(s) && !$WC.Channels.isBothReplyActionAllowed(s))), c = !0;
            var y, _ = !!a.reactions[n.getAttribute("data-msguid")];
            y = !!$WC.Util.isChannelChid(s) && !(!$WC.Channels.isThreadReplyAllowed(s) && !$WC.Channels.isBothReplyActionAllowed(s));
            var W = !!a.isPrivateReplyAllowed(n),
                S = {};
            if (S.forward = !!d, S.reply = !!b, S.private_reply = !!W, S.copy = !!o, S.copyfile = !!r, S.react = !0, S.fork = !!c, S.setreminder = !!h, S.markasunread = !0, S.messagelink = !!g, S.edit = !!m, S.delete = !!u, S.pinmsg = !!C && v, S.unpinmsg = !!C && !v, S.viewreaction = !!_, S.thread_reply = !!y, !t.include_all)
                for (var w in S) S[w] && (t[w] && "enable" == t[w] ? S[w] = !0 : S[w] = !1);
            return S
        }, Message.isDeletable = function(e) {
            var t = e && e.getAttribute("data-msgid"),
                s = t && t.split("_"),
                i = s && (WebMessanger.isRTCChat() ? s.slice(0, 3).join("_") : s[0]);
            return !!($WC.Util.isLocalUser(i) && WebMessanger.isMessageDeletionEnabled() && (new Date).getTime() - e.getAttribute("data-msgtime") <= WebMessanger.getDeleteMessageTimeFrame())
        }, Message.isEditable = function(e) {
            if (e) {
                var t = e.getAttribute("data-msgid"),
                    s = t && t.split("_"),
                    i = s && (WebMessanger.isRTCChat() ? s.slice(0, 3).join("_") : s[0]),
                    n = e.getAttribute("data-type");
                if ("EDITEDMSG" === n && e.firstChild.getAttribute("data-type") && (n = e.firstChild.getAttribute("data-type")), ("TEXTMSG" === n || "EDITEDMSG" === n || "FORWARDEDMSG" === n || "THREADLINKMSG" === n || "THREADMSG" === n || ("IMGATT" === n || "FILEATT" === n || "VIDEOATT" === n || "AUDIOATT" === n) && !WebMessanger.isGuestUser() || "REPLYMSG" === n || "HRMSG" === n || "VIDEOLINK" === n || "AUDIOLINK" === n || "IMGLINK" === n) && $WC.Util.isLocalUser(i) && WebMessanger.isMessageEditingEnabled() && (new Date).getTime() - e.getAttribute("data-msgtime") <= WebMessanger.getEditMessageTimeFrame()) return !0
            }
            return !1
        }, Gator(e).on("dblclick", ".wms-msgfrag", (function(e) {
            var t = $WC.Util.getEventTarget(e),
                s = e.target.closest("#ctrlcomp");
            if (!t.querySelector("[data-attachmentdisabled]") && !t.getAttribute("data-attachmentdisabled") && null === t.closest(".wms-msg") && "DELETEDMSG" !== this.getAttribute("data-type") && "HRMSG" !== this.getAttribute("data-type")) {
                var i = s && s.getAttribute("data-chid"),
                    n = i && WindowHandler.getWinObjById(i);
                n && !n.salesiqchat && ($WC.Util.isChannelChid(i) && ($WC.Channels.isBothReplyActionAllowed(i) || $WC.Channels.isThreadReplyAllowed(i)) ? n.showReplyPreview(t, null, null, !0) : $WC.Channels.isReplyActionAllowed(i) && n.showReplyPreview(t))
            }
        })), $WC.Util.addEvent(s, "scroll", $WC.Util.debounce((function(e) {
            var s = $WC.Util.getEventTarget(e),
                i = WindowHandler.getWinObjById(t);
            if (clearTimeout(this.scrolltimer), s) {
                this.scrolltimer = setTimeout((function() {
                    WMSUI.loadImages(s), Message.checkAndLoadAudioPlayer(s), Message.loadUrlThumbnail(s), WMSUI.checkAndLoadCustomEmojis(s)
                }), _WMSORIGINALIMG_LOAD_TIMEOUT), clearTimeout(this.livezomoji), this.livezomoji = setTimeout((function() {
                    Message.toggleLiveZomoji(s)
                }), 100);
                var n = s.scrollHeight - (s.scrollTop + s.clientHeight);
                if (s.scrollHeight > s.clientHeight && s.scrollTop <= 1.9 * s.clientHeight && null === s.getAttribute("data-glowtime") && null === s.getAttribute("data-preventloadmore"))(a = s.querySelector("[data-loadmore]")) && a.nextSibling && (a.nextSibling.getAttribute("data-msgtime") && a.setAttribute("data-nexttime", a.nextSibling.getAttribute("data-msgtime")), Message.loadSpecificTranscript(t, s, a));
                else if (s.closest("[data-scrolldown]") && n <= s.clientHeight) {
                    var a, o = s.querySelectorAll("[data-loadmore]");
                    if (o.length)
                        if ((a = o[o.length - 1]).previousSibling) {
                            if (!a.previousSibling.getAttribute("data-msgtime") && !a.previousSibling.previousSibling) return;
                            var r = a.previousSibling.getAttribute("data-msgtime") || a.previousSibling.previousSibling.getAttribute("data-msgtime");
                            r && a.setAttribute("data-prevtime", r), Message.loadSpecificTranscript(t, s, a)
                        }
                } else if (i && 1 == i.forward_action) {
                    var l = s.querySelectorAll("[data-msgsel]"),
                        d = WindowHandler.chatrestrictions[t] && WindowHandler.chatrestrictions[t].restrictFileForward;
                    l.forEach((function(e) {
                        var t = e.getAttribute("data-type");
                        "EDITEDMSG" !== t && "FORWARDEDMSG" !== t && "REPLYMSG" != t && "THREADMSG" != t && "THREADLINKMSG" != t || (t = e.closest(".wms-msgfrag").querySelector("[data-type]").getAttribute("data-type")), (!d || t != Message.types.FILEATT && t != Message.types.AUDIOATT && t != Message.types.VIDEOATT && t != Message.types.IMGATT) && "DELETEDMSG" !== e.getAttribute("data-type") && ($WC.Util.removeClass(e, "wms_checkbox_hidden"), $WC.Util.addClass(e, "wms_checkbox_visible"))
                    }))
                }
            }
        }), this, 70)), $WC.Util.addEvent(s, "scroll", $WC.Util.debounce((function(e) {
            if (e.target) {
                var t = Message.getScrollableParent(e.target.closest("#ctrlcomp") || e.target.querySelector("#ctrlcomp") || e.target.closest("#wmschshtransmsg") || e.target.closest("#wmstranscriptcomponent")),
                    s = t.getAttribute("data-glowtime");
                if (s) {
                    var i = t.querySelector('.wms-msgfrag[data-msgtime="' + s + '"]');
                    i && ($WC.Util.addClass(i.firstChild, "wms-bubbleglow"), t.removeAttribute("data-glowtime"))
                }
            }
        }), this, 70)), $WC.Util.addEvent(s, "scroll", (function(e) {
            if (WebMessanger.show_message_actions_as_popup) {
                var s = document.getElementById("wms-actionsmountpoint");
                if (s) {
                    var i = s.getAttribute("data-owner_msguid"),
                        n = s.getAttribute("data-owner_chid"),
                        a = s.getAttribute("data-opener_event");
                    if (t == n) {
                        var o = WindowHandler.getWinObjById(n);
                        if (window.clearTimeout(this.popupActionRemoveTimer), o) {
                            var r = o.msgdisp.querySelector('[data-msguid="' + i + '"]'),
                                l = r.querySelector("[data-options][data-showaspopup]");
                            "contextmenu" == a ? this.popupActionRemoveTimer = setTimeout((function() {
                                WindowHandler.removePopupActionMountPoint(o)
                            }), 150) : $WC.Util.isScrolledIntoView(r, o.ctrlcomp, !0) ? WindowHandler.updatePopupActionMountPoint(r, o) : this.popupActionRemoveTimer = setTimeout((function() {
                                WindowHandler.removePopupActionMountPoint(o), Message.hideOptions(l)
                            }), 50)
                        }
                    }
                }
            }
        }));
        var i = $WC.Util.getCssAnimEndListener();
        $WC.Util.addEvent(s, i, (function(e) {
            if ("wms-bubbleglow" === e.animationName) {
                var t = $WC.Util.getEventTarget(e);
                $WC.Util.removeClass(t, "wms-bubbleglow")
            }
        }))
    }, Message.addEventListenersForMessage = function(e, t) {
        $WC.Util.addEvent(e, "click", (function(s) {
            var i = $WC.Util.getEventTarget(s);
            if ("true" === i.getAttribute("data-previewable")) "true" === i.getAttribute("data-filethumbnail") ? i = i.parentNode.querySelector("[data-attachment]") : "true" === i.getAttribute("data-filedesc") && (i = i.querySelector("[data-attachment]")), "IMG" === i.tagName || "true" === i.getAttribute("data-unfurl") || "true" === i.getAttribute("data-attachment") ? WMSUI.imgPreview.init(e, i) : WMSUI.imgPreview.init(e, i.firstChild);
            else if ("true" === i.getAttribute("data-custommsg")) {
                for (var n = i.parentNode.getAttribute("data-msgid"), a = i.querySelectorAll("br"), o = 0; o < a.length; o++) a[o].parentNode.replaceChild(document.createTextNode("\n"), a[o]);
                Message.formatCustomMsg($WC.Util.getInnerText(i), n)
            } else if ("true" === i.parentNode.getAttribute("data-playable")) {
                var r = i.parentNode.getAttribute("iframe");
                i.parentNode.innerHTML = r
            } else if ("true" === i.getAttribute("data-filefrwrd")) "wms-videoplayer" === i.parentNode.parentNode.getAttribute("id") && (i = i.parentNode.parentNode), "true" === i.getAttribute("data-infected") ? WMSUI.showFileInfectedDialog(i, !0) : WmsFileForwardUI.handlePreview(i);
            else if ("true" === i.getAttribute("data-copyacrossapp")) i = i.closest("#wms-videoplayer"), WmsFileForwardUI.handleCopyFile(i);
            else if (i.closest("[data-media]") && "true" === i.closest("[data-media]").getAttribute("data-media")) {
                var l = i.closest("[data-media]"),
                    d = "";
                if (l.parentNode.parentNode.getAttribute("data-sendername") ? d = l.parentNode.parentNode.getAttribute("data-sendername") : l.parentNode.parentNode.parentNode.getAttribute("data-sendername") && (d = l.parentNode.parentNode.parentNode.getAttribute("data-sendername")), -1 !== l.getAttribute("data-fcontent").indexOf("video") || -1 !== l.getAttribute("data-fcontent").indexOf("application/x-matroska")) {
                    var c = l.getAttribute("data-fsrc"),
                        u = l.closest("[data-msguid]").getAttribute("data-msguid");
                    if ("attdownload" == i.getAttribute("data-documentclick")) return $WC.Util.triggerDownloadInDesktopApp(c), s.stopPropagation(), void s.preventDefault(); - 1 !== c.indexOf("&x-cli-msg=%7Bthumbnail%3Atrue%7D") ? c = c.replace("&x-cli-msg=%7Bthumbnail%3Atrue%7D", "") : -1 !== c.indexOf("/thumbnail") && (c = c.replace("/thumbnail", "")), WebMessanger.isNetworkUser() && (c = $WC.Util.modifyXCliMsgParam(c, {
                        screen_name: WebMessanger.network_info.screen_name
                    }));
                    var m = !!WebMessanger.isGuestUser();
                    if (l.getAttribute("data-mountaudioplayer") || l.querySelector('[data-playertype="video"]')) return;
                    var h = !1,
                        g = !1;
                    WindowHandler.chatrestrictions[t] && (WindowHandler.chatrestrictions[t].restrictFileForward && (h = !0), WindowHandler.chatrestrictions[t].restrictFileDownload && (g = !0));
                    var p = !1,
                        f = "";
                    "WP" == WebMessanger.prd && WMSUI.zhShareInstance && WMSUI.zhShareInstance.isWpAttachmentCopyEnabled() && (p = !0, f = l.getAttribute("data-zhshare-src-meta") || ""), $WC.VideoPlayerFactory.create(t, e.parentElement, l, c, l.getAttribute("data-fcontent"), l.getAttribute("data-fname"), d, l.getAttribute("data-fposter"), $WC.Config.get("zindex"), (function() {
                        WmsFileForwardUI.handlePreview(l)
                    }), s, u, {
                        hideforwardicon: !("false" !== l.getAttribute("data-filefrwrd") && !h),
                        isguestuser: m,
                        hidedownloadicon: g,
                        wpCopyHandled: p,
                        wpcopy_attribute: f
                    }, (function() {
                        WmsFileForwardUI.handleCopyFile(l)
                    }))
                }
            } else if (!i.closest("[data-reaction]") || "wms_reaction_container" !== i.parentNode.getAttribute("class") && "wms_reaction_frag" !== i.parentNode.getAttribute("class") && "wms_reaction_frag hide_more_reactions" !== i.parentNode.getAttribute("class")) {
                if (i.closest("[data-addreaction]")) {
                    u = i.closest("[data-msguid]").getAttribute("data-msguid");
                    (E = WindowHandler.getWinObjById(t)) && (WmsSettings.adminsettings.quick_reactions || !WebMessanger.quickmessageactions && !WebMessanger.show_message_actions_as_popup || E.deleteAllMessageActionNodes(), E.showReactionsUI(u))
                } else if (i.closest("[data-showallreactions]")) {
                    var v = i.closest("[data-showallreactions]"),
                        C = i.closest(".wms_reaction_frag"),
                        b = i.closest(".wms-msgfrag");
                    if (-1 !== C.getAttribute("class").indexOf("hide_more_reactions")) $WC.Util.removeClass(C, "hide_more_reactions"), b.setAttribute("data-allreactionsshown", !0), v.setAttribute("title", $WC.I18N("message.actions.hideexcessreactions")), v.innerText = $WC.I18N("common.collapse");
                    else {
                        $WC.Util.addClass(C, "hide_more_reactions"), b.removeAttribute("data-allreactionsshown"), v.setAttribute("title", $WC.I18N("message.actions.showallreactions"));
                        var y = parseInt(v.getAttribute("data-numberofreactions"));
                        v.innerText = $WC.I18N("reactions.more.count", [y - 15])
                    }
                } else if ("true" == i.getAttribute("data-translatemsg")) {
                    var _ = e.getAttribute("data-chid");
                    i.getAttribute("data-detectedlanguage"), u = (A = i.parentElement.previousElementSibling).getAttribute("data-msguid");
                    if (Message.translationmsgstore[u] && Message.translationmsgstore[u].translation) Message.replaceTranslatedMessage(A, Message.translationmsgstore[u], !0), i.outerHTML = Message.getOriginalMsgBtnHtml();
                    else {
                        i.outerHTML = '<div class="wms_translate_loading" data-translatingmsg="true" >' + $WC.I18N("message.translatingmsg") + "</div>";
                        $WC.Ajax.postRequestToChat("v2/chats/" + _ + "/messages/" + u + "/translations", "target=" + WebMessanger.language, (function() {
                            var e = JSON.parse(this.response);
                            Message.translationmsgstore[u].translation = e.text, Message.replaceTranslatedMessage(A, Message.translationmsgstore[u], !0), A.nextElementSibling.querySelector("[data-translatingmsg]").outerHTML = Message.getOriginalMsgBtnHtml()
                        }), (function() {
                            A.nextElementSibling.querySelector("[data-translatingmsg]").outerHTML = Message.getTranslateMsgBtnHtml()
                        }))
                    }
                } else if ("true" == i.getAttribute("data-showoriginalmsg")) {
                    u = (A = i.parentElement.parentElement.previousElementSibling).getAttribute("data-msguid");
                    Message.replaceTranslatedMessage(A, Message.translationmsgstore[u]), i.parentElement.outerHTML = Message.getTranslateMsgBtnHtml()
                } else if (i.closest("[data-type]") && i.closest("[data-type]").getAttribute("data-type") === Message.types.FILEATT) {
                    s.preventDefault();
                    var W = (A = i.closest("[data-type]")).getElementsByTagName("a")[0];
                    W.contains(i) && WmsFileUploadUI.handleDownload(W.getAttribute("download"), W.getAttribute("href"))
                } else if (i.getAttribute("data-botsuggestion") || "IMG" == i.tagName && i.parentElement.getAttribute("data-botsuggestion")) {
                    var S = t || i.getAttribute("data-botchid"),
                        w = i.getAttribute("data-suggestiontext");
                    "IMG" == i.tagName && i.parentElement.getAttribute("data-botsuggestion") && (w = i.parentElement.getAttribute("data-suggestiontext")), Message.send(S, w), (M = i.closest("[data-botsuggestiongroup]")) && $WC.Util.removeElement(M)
                } else if (i.getAttribute("data-suggestionexpand")) {
                    var M;
                    if ((M = i.closest("[data-botsuggestiongroup]")) && -1 !== M.className.indexOf("wms_collapsedbuttons")) $WC.Util.removeClass(M, "wms_collapsedbuttons"), i.textContent = $WC.I18N("common.collapse");
                    else {
                        $WC.Util.addClass(M, "wms_collapsedbuttons");
                        var I = $WC.I18N("common.expand");
                        M && M.getAttribute("data-hiddenbuttoncount") && (I = $WC.I18N("reactions.more.count", [M.getAttribute("data-hiddenbuttoncount")])), i.textContent = I
                    }
                }
            } else {
                var T = i.closest("[data-reaction]");
                "wms_reaction_container" != T.className && (T = T.parentNode);
                var A, E, U = T.getAttribute("data-reaction"),
                    u = (A = i.closest("[data-msguid]")).getAttribute("data-msguid"),
                    k = T.getAttribute("data-reactedbyme"),
                    N = A.getAttribute("data-type") == Message.types.THREADLINKMSG;
                if (e == s.target.closest("#ctrlcomp") && WebMessanger.updateReaction(t, u, U, k, N), (E = WindowHandler.getWinObjById(t)) && E.updateMyReactionData(u, U, k), WMSUI.checkAndLoadCustomEmojis(e.parentElement), N) {
                    var x = A.querySelector("[data-thread_chid]").getAttribute("data-thread_chid"),
                        O = WindowHandler.getWinObjById(x);
                    O && O.updateMyReactionData(u, U, k)
                }
            }
        })), Gator(e).on("click", ".zcmsg_bx", (function(e) {
            if (!e.target.getAttribute("data-zcprofileid"))
                if ("welcomenote" !== e.target.getAttribute("data-operation")) {
                    if (null === document.getElementById("zcwindows")) {
                        var t = $WC.Util.createElement("div", "zcwindows", "zcoverlay");
                        t.style.zIndex = WebMessanger.setzindex, document.body.appendChild(t), Gator(t).on("click", "[purpose='custom_image_preview']", (function(e) {
                            $WC.CustomMsgUI.handleCustomBoxClick(this, e)
                        }))
                    }
                    if (null === e.target.closest("[custombuttonclick_onmsg]")) {
                        document.activeElement.blur();
                        "a" !== e.target.tagName.toLowerCase() && "custom_image_preview" !== e.target.getAttribute("purpose") && this.closest("[data-msguid]") && document.getElementById("zcwindows").setAttribute("data-msguid", this.closest("[data-msguid]").getAttribute("data-msguid")), $WC.CustomMsgUI.handleCustomBoxClick(this, e, (function() {
                            document.getElementById("zcwindows") && (document.getElementById("zcwindows").removeAttribute("data-msguid"), document.getElementById("zcwindows").innerHTML = null)
                        }))
                    }
                } else {
                    var s = e.target.closest(".wms-msgfrag");
                    Message.handleMessageActions(s, "thread_reply", !0)
                }
        }))
    }, Message.hideOptions = function(e) {
        WebMessanger.show_message_actions_as_popup && WindowHandler.removePopupActionMountPoint();
        var t = e && e.closest && e.closest("[data-options]:not(.wms_quickreact)") || document.querySelector('[data-options="show"]:not(.wms_quickreact)');
        t && (t.parentNode && t.parentNode.getAttribute("data-sticky_actions") && (t = t.parentNode), $WC.Util.removeElement(t))
    }, Message.loadSpecificTranscript = function(e, t, s, i) {
        var n, a, o, r = !1;
        if (s.getAttribute("data-mentionmsgid")) {
            var l = s.getAttribute("data-mentionmsgid");
            n = l, r = !0;
            var d = 16;
            2 === l.split("|").length && (d = 30)
        } else if (s.getAttribute("data-prevtime")) a = +(n = s.getAttribute("data-prevtime"));
        else if (s.getAttribute("data-nexttime")) o = +(n = s.getAttribute("data-nexttime"));
        else if (s.getAttribute("data-latestchunk")) {
            n = "latestchunk";
            var c = !0
        }
        if ("true" === t.getAttribute("data-unread")) var u = !0;
        "true" === t.getAttribute("data-fromchat") && (r = !0);
        for (var m = s.nextSibling; !o && m;) m.getAttribute("data-msgtime") && m.getAttribute("data-msgid") && !m.getAttribute("data-notack") && (o = +m.getAttribute("data-msgtime")), m = m.nextSibling;
        "latestchunk" == n && o && (n = o);
        var h = s === s.parentNode.lastChild,
            g = WMSUI.showLoadingIcon(s, "insert");
        g.setAttribute("data-marker", n), (s.getAttribute("data-scrollbehaviour") || h) && g.setAttribute("data-scrollbehaviour", s.getAttribute("data-scrollbehaviour") || "bottom");
        var p = t;
        "true" === t.getAttribute("data-ctrlcomp") && (p = t.querySelector("[data-msgdisp]"));
        var f = WindowHandler.getWinObjById(e);
        WebMessanger.getTranscript({
            chid: e,
            fromtime: a,
            totime: o,
            lineslimit: d || 50,
            partial: c,
            type: "insert",
            mentionmsgid: l,
            salesiqchat: f && f.salesiqchat || !1,
            unreadchat: u
        }, p, r, i)
    }, Message.formatAndDisplay = function(e) {
        var t = e.chid;
        e.time || (e.time = Date.now()), WindowHandler.getWinObjById(t).updateMessage(e)
    }, Message.getScrollableParent = function(e) {
        return e.getAttribute("data-msgdisp") ? e.parentNode : e
    }, Message.getScrollHeight = function(e) {
        return Message.getScrollableParent(e).scrollHeight
    }, Message.getScrollTop = function(e) {
        return Message.getScrollableParent(e).scrollTop
    }, Message.restoreScrollPosition = function(e, t, s) {
        e.getAttribute("data-msgdisp") && (e = e.parentNode);
        var i = t - s,
            n = e.scrollHeight - i;
        e.scrollTop = n
    }, Message.scrollDisplay = function(e) {
        (e = Message.getScrollableParent(e)).scrollTop = e.scrollHeight
    }, Message.trim = function(e) {
        return e = (e = (e = (e = (e = (e = (e = (e = e.replace(/<p>|<\/p>/gi, "")).replace(/<a/gi, "<a target='_blank'")).replace(/\r\n/gi, "<br>")).replace(/\n/gi, "<br>")).replace(/^\s*$/gi, "")).replace(/^(<br>)*$/gi, "")).replace(/(<br>)*$/gi, "")).replace(/\s*$/gi, "")
    }, Message.format = function(e) {
        try {
            for (var t = e.split(" "), s = [], i = /([a-z0-9]([a-z0-9_\-.+]*)@([a-z0-9_\-.]*)(\.[a-z]{2,30}(\.[a-z]{2}){0,2}))/gi, n = 0; n < t.length; n++) {
                var a = $WC.CMsgUtil.convertLinks(t[n]);
                t[n] === a && (a = a.replace(i, "<a href='mailto:$1'>$1</a>")), s.push(a)
            }
            e = s.join(" ")
        } catch (e) {}
        return e
    }, Message.getDisplayContent = function(e) {
        var t = [];
        return e = $WC.Markdown.putDummyCodeBlock(e, t, !0), e = Smiley.replace(e, !1, !0), e = $WC.Markdown.replaceDummyCodeBlock(e, t), e = Message.trim(e), e = Message.format(e)
    }, Message.decodehtml = function(e) {
        var t = e.replace(/&lt;/g, "<");
        return t = t.replace(/&gt;/g, ">")
    }, Message.showEditMessageHistory = function(e, t) {
        if (null === document.getElementById("wms_msghistdiv")) {
            ZMSGUI.createOverlay();
            var s = WebMessanger.isDarkModeEnabled ? " zmNightMode" : "",
                i = $WC.Util.createElement("div", "wms_msghistdiv", "wms_msghistdiv wms-hvalign" + s);
            i.style.zIndex = $WC.Config.get("zindex"), document.body.appendChild(i);
            var n = e.getAttribute("data-msguid");
            WebMessanger.getEditMsgHistory(t, n);
            var a = e.getAttribute("data-msgtime");
            e = e.querySelector('[class~="wms-msgcomment"]') || e.querySelector('[class~="wms-msg"]') || e.querySelector('[class~="wms-hrmsg"]');
            var o = document.getElementById("wms_msghistdiv"),
                r = {
                    time: a,
                    msg: Message.getTextMsgFromDom(e.childNodes, !1, !0)
                },
                l = Message.getEditMessageHTML([r]);
            l += '<div id="wms_loadingicon" class="wms-cmdloading"><div class="wms-loadingicon"><div class="wms_loading_container"><div></div><div></div><div></div></div></div></div>', o.insertAdjacentHTML("beforeend", '<div id="wms_msghistheader" class="wms_msghistheader">' + $WC.I18N("message.edit.history") + '<span data-operation="close" class="wms_msghistclose"></span></div><div id="wms_msghistcont" class="wms_msghistcont" data-msguid="' + n + '">' + l + "</div>"), Gator(o).on("click", '[data-operation="close"]', (function() {
                $WC.Util.removeElement(this.closest('[id="wms_msghistdiv"]')), ZMSGUI.removeOverlay()
            }))
        }
    }, Message.getEditMessageHTML = function(e) {
        var t = "";
        return e.forEach((function(e) {
            var s = $WC.DateUtil.formatTime(e.time),
                i = $WC.DateUtil.formatDate(e.time);
            "object" != typeof e.msg || "20" !== e.origin_mtype && "20" !== e.mtype ? e.msg = Smiley.replace($WC.Markdown.apply($WC.Util.safeHTML($WC.Util.unescapeHTML(e.msg)))) : e.msg.comment ? e.msg = '<div class="wms_editcomment">' + Smiley.replace($WC.Markdown.apply($WC.Util.safeHTML($WC.Util.unescapeHTML(e.msg.comment)))) + "</div>" : e.msg = '<div class="wms_editnocomment">' + $WC.I18N("edithistory.comment.none") + "</div>";
            var n = e.meta && e.meta.mentions ? e : e.msg;
            n = Message.isMentionMsg(n) ? $WC.Util.formatMentions(n) : n, t += '<div id="wms_msghistitem" class="wms_msghistitem"><div id="wms_msghistitem_title" class="wms_msghistitem_title">' + $WC.I18N("message.edit.timeinfo", ['<span class="wms_msghistitem_time">' + s + "</span>", i]) + '</div><div class="wms_msghistitemcontent">' + Message.getDisplayContent(n) + "</div></div>"
        })), t
    }, Message.updateEditMsgHistory = function(e) {
        var t = document.getElementById("wms_msghistcont"),
            s = t && t.getAttribute("data-msguid");
        e.reverse(), s === e[0].msguid && (t.innerHTML = Message.getEditMessageHTML(e))
    }, Message.showMessageFragmentInView = function(e, t, s, i) {
        if (t.indexOf("_") > -1) var n = t.split("_")[0];
        else if (t.indexOf("%20") > -1) n = t.split("%20")[0];
        var a = WindowHandler.getWinObjById(e);
        if (a) {
            var o = a.ctrlcomp.querySelector("#ctrlcomp");
            if (a.isMinimized() && a.maximize(), o.querySelector('.wms-msgfrag[data-msgtime="' + n + '"]')) Message.glowBubble(n, a.ctrlcomp, e, i);
            else {
                var r = Message.getMarkerElement(e + "|" + n, n, o);
                Message.loadSpecificTranscript(e, o, r)
            }
        } else Message.mentionMsgInfo[e] = e + "|" + n, WmsMainUI.scheduleAutoFocus(e), s ? WebMessanger.openThreadWindowFromCache(s, e) : WebMessanger.createChatWindowFromCache(e)
    }, Message.handleMessageLinkClick = function(e, t) {
        if (!WebMessanger.isChatPaused() && !silent) {
            var s = e && e.target.href && e.target.href.match ? event.target.href : t,
                i = new RegExp(_WMSCHATURL, "gi"),
                n = function(e) {
                    var t = JSON.parse(this.response)[0].objString,
                        s = JSON.parse(t.parent_participant),
                        i = JSON.parse(t.channelData),
                        n = i.un,
                        a = i.sc;
                    s ? d ? Message.showMessageFragmentInView(h, d) : WebMessanger.createChatWindowFromCache(l) : 1 == a ? WebMessanger.fetchChannelDetails(n) : WMSUI.showErrorMsg($WC.I18N("chat.invalid.access"))
                },
                a = function() {
                    WMSUI.showErrorMsg($WC.I18N("chat.invalid.access"))
                };
            if (s && window.frameElement && "undefined" != typeof CrmPlusLib && CrmPlusLib.isLoadedInCrmplusFrame) {
                var o = {
                    link: s,
                    event_from_wms_iframe: !0
                };
                return window.parent.postMessage(JSON.stringify(o)), void((s.match($WC.Matcher.regexes.messagelinkregex) || s.match($WC.Matcher.regexes.channelspermalink)) && (e.stopPropagation(), e.preventDefault()))
            }
            if (s && s.match($WC.Matcher.regexes.messagelinkregex)) {
                var r = s,
                    l = r.match($WC.Matcher.regexes.messagelinkregex)[1],
                    d = r.match($WC.Matcher.regexes.messagelinkregex)[2];
                if ($WC.Util.isThreadChid(l)) {
                    var c = l.split("-T-")[0],
                        u = "&sid=" + encodeURIComponent(WebMessanger.getSid()),
                        m = "chid=" + l + u,
                        h = l;
                    l = c
                }
                if (!$WC.Util.isChannelChid(l) || $WC.Channels.get(l) && $WC.Channels.get(l).joined) c && (l = h), Message.showMessageFragmentInView(l, d);
                else if (c) $WC.Ajax.postRequestToChat("attachsession.do", m, n, a);
                else {
                    $WC.Ajax.requestToChat("v2/chats/" + l + "/messages/" + d, null, (function(e) {
                        var t = JSON.parse(e).parent_resource_id;
                        WebMessanger.fetchChannelDetails(t)
                    }), (function() {
                        WMSUI.showErrorMsg($WC.I18N("chat.invalid.access"))
                    }))
                }
                e.preventDefault(), e.stopPropagation()
            } else if (s && s.match($WC.Matcher.regexes.channelspermalink) && i.test(s)) {
                var g = s.match($WC.Matcher.regexes.channelsuniquename)[1],
                    p = $WC.Channels.getListByUniqueName(g);
                if (p.length && !WMSUI.handleChatExist(p[0].chid) && p.joined) WmsMainUI.scheduleAutoFocus(p[0].chid), WebMessanger.createChatWindowFromCache(p[0].chid);
                else {
                    $WC.Ajax.requestToChat("v1/channelsbyname/" + g, "tzoffset=330&getrecentconv=true", (function(e) {
                        var t = JSON.parse(e).data;
                        $WC.Channels.isJoinedChannel(t.chid) ? ($WC.Channels.updateList(JSON.parse(e)), WMSUI.handleChatExist(t.chid) || (WmsMainUI.scheduleAutoFocus(t.chid), WebMessanger.createChatWindowFromCache(t.chid))) : WmsHybridSearch.showJoinChannelDialog(JSON.parse(e))
                    }), null, null, {
                        "Content-Type": "application/json"
                    })
                }
                e.preventDefault(), e.stopPropagation()
            } else if (s && s.match($WC.Matcher.regexes.formpermalink) && WebMessanger.isCliqUser() && i.test(s)) Message.handleFormViewLinkClick(e, s);
            else if (s && s.match($WC.Matcher.regexes.chatspermalink) && i.test(s) && !s.match($WC.Matcher.regexes.chatguestlink)) {
                l = s.match($WC.Matcher.regexes.chatspermalink)[1];
                if ($WC.Util.isThreadChid(l)) {
                    c = l.split("-T-")[0];
                    if (!$WC.Util.isChannelChid(c) || $WC.Channels.get(c) && $WC.Channels.get(c).joined) WMSUI.handleChatExist(l) || (WmsMainUI.scheduleAutoFocus(l), WebMessanger.createChatWindowFromCache(l));
                    else {
                        u = "&sid=" + encodeURIComponent(WebMessanger.getSid()), m = "chid=" + l + u;
                        $WC.Ajax.postRequestToChat("attachsession.do", m, n, a)
                    }
                } else if (!WMSUI.handleChatExist(l)) {
                    u = "&sid=" + encodeURIComponent(WebMessanger.getSid()), m = "chid=" + l + u;
                    $WC.Ajax.postRequestToChat("attachsession.do", m, (function() {
                        WmsMainUI.scheduleAutoFocus(l), WebMessanger.createChatWindowFromCache(l)
                    }), (function() {
                        WMSUI.showErrorMsg($WC.I18N("chat.invalid.access"))
                    }))
                }
                e.preventDefault(), e.stopPropagation()
            } else if (s && s.match($WC.Matcher.regexes.botspermalink) && i.test(s)) {
                var f = s.match($WC.Matcher.regexes.botspermalink)[1],
                    v = $WC.Bots.getList(!0),
                    C = "";
                if (!$WC.Util.isEmptyObject(v)) {
                    for (var b in v) v[b].UNIQUENAME == f && (C = v[b].CHID);
                    C && (WmsMainUI.scheduleAutoFocus(C), WebMessanger.createChatWindowFromCache(C), e.preventDefault(), e.stopPropagation())
                }
            } else if (e && e.target && e.target.closest("[data-threadmsglink]")) {
                var y = e.target.getAttribute("data-thread_msgid") ? e.target : e.target.closest("[data-thread_msgid]");
                d = y.getAttribute("data-thread_msgid"), l = y.getAttribute("data-threadmsglink") ? y.getAttribute("data-thread_parentid") : y.getAttribute("data-thread_chid");
                y.getAttribute("data-threadmsglink") || y.closest("[data-type]").getAttribute("data-type") !== Message.types.THREADMSG ? $WC.Util.isChannelChid(l) && (y = null) : y.setAttribute("data-thread_parentid", y.closest("[data-chid]").getAttribute("data-chid")), Message.showMessageFragmentInView(l, d, y), e.preventDefault(), e.stopPropagation()
            } else if (e && e.target && e.target.closest("[data-threadslist]")) {
                l = e.target.closest("[id]").getAttribute("id");
                var _ = WindowHandler.getWinObjById(l);
                (new $WC.ThreadsList).mountComponent(l, _.title, WmsSettings.adminsettings.include_closed_threads, (function(e) {
                    WmsSettings.adminsettings.include_closed_threads = e
                }), (function(e) {
                    WebMessanger.attachSession(e)
                }))
            }
        }
    }, Message.handleFormViewLinkClick = function(e, t) {
        var s = t.match($WC.Matcher.regexes.formpermalink)[3],
            i = e && e.target.closest("[data-chid]") && e.target.closest("[data-chid]").getAttribute("data-chid"),
            n = t.match($WC.Matcher.regexes.formpermalink)[2],
            a = "company/" + _WMSAPPACCOUNTID;
        a += n ? "/v2/extensions/" + n + "/forms/" + s + "/actions/view" : "/v2/forms/" + s + "/actions/view";
        var o = null,
            r = {
                "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
                "X-Consents-Version": "1"
            };
        if (-1 !== t.indexOf("?")) {
            var l = t.split("?")[1];
            l = l.split("&");
            for (var d = {}, c = 0; c < l.length; c++) {
                var u = l[c].split("=");
                d[u[0]] = u[1]
            }
            o = {
                params: d
            }, r["Content-Type"] = "application/json"
        }
        $WC.Ajax.postRequestToChat(a, o, (function(e) {
            function t(e) {
                var t = new $WC.Forms,
                    s = WindowHandler.getWinObjById(i);
                t.mountComponent(e, (function(e, t, i) {
                    "success" === i.output.status && WMSUI.showInfoMsg(i.output.text), s && s.composer.focus()
                }), (function() {
                    s && s.composer.focus()
                }))
            }
            if ("Success" === (e = JSON.parse(e)).status && e.output) e.output && e.output.inputs ? t(e) : "banner" === e.output.type && ("success" === e.output.status ? WMSUI.showInfoMsg(e.output.text) : "failure" === e.output.status && WMSUI.showErrorMsg(e.output.text));
            else if ("Failure" === e.status) {
                if ($WC.Util.isEmpty(e.resumeUrl)) WMSUI.showErrorMsg($WC.I18N("event.status.update.error"));
                else(new $WC.Consents).mountComponent(i, e)
            } else if ("Consent" === e.status) {
                (new $WC.Consents).mountComponent(i, e, (function(e, s) {
                    s && s.data && s.data.dreResponse && "form" == s.data.dreResponse.response_type && t(s.data.dreResponse)
                }))
            }
        }), (function() {
            WMSUI.showErrorMsg($WC.I18N("event.status.update.error"))
        }), null, !0, r), e.preventDefault(), e.stopPropagation()
    }, Message.getMarkerElement = function(e, t, s) {
        var i, n = $WC.Util.createElement("div", null, null, {
            "data-mentionmsgid": e
        });
        n.style = "display:none";
        var a = s.querySelectorAll("[data-prevtime],[data-loadmorebutton]");
        if (a.length)
            for (var o = 0; o < a.length; o++) {
                var r = a[o].getAttribute("data-prevtime");
                if (a[o].getAttribute("data-loadmorebutton")) + t > +($WC.Util.getAdjacentNode(a[o], !0, "data-msgid").getAttribute("data-msgtime") || "") && (i = a[o].parentNode.insertBefore(n, a[o].nextSibling));
                else isNaN(r) ? +t > +(r = r.split("|")[2]) && (i = a[o].parentNode.insertBefore(n, a[o].nextSibling)) : +t > +r && (i = a[o].parentNode.insertBefore(n, a[o].nextSibling))
            }
        if (!i) {
            var l = s.querySelector("[data-loadmore],[data-transerror]");
            s.replaceChild(n, l), i = n
        }
        return i
    }, Message.handleMessageActions = function(e, t, s) {
        if ("copy" !== t && (WebMessanger.show_message_actions_as_popup || WebMessanger.quickmessageactions)) {
            var i = e.closest(".wms-msgfrag").getAttribute("data-type");
            "REPLYMSG" != i && "THREADLINKMSG" != i && "EDITEDMSG" != i || (e = e.closest(".wms-msgfrag"))
        }
        var n, a = e.closest("#ctrlcomp").getAttribute("data-chid");
        if ((_ = WindowHandler.getWinObjById(a)).messageActionsUIShown && _.hideMessageActionsUI(), Message.hideOptions(), "private_reply" === t) {
            var o = e.closest("[data-sender]") && e.closest("[data-sender]").getAttribute("data-sender");
            WmsMainUI.scheduleAutoFocus(o), Message.replyPrivateMsgObj[o] = [a, e.getAttribute("data-msguid")], WebMessanger.createChat(o)
        } else if ("thread_reply" === t) _ && _.showReplyPreview(e, null, null, !0, s);
        else if ("reply" === t) _ && _.showReplyPreview(e);
        else if ("copy" === t) {
            var r, l = e.getAttribute("data-type");
            "REPLYMSG" == l || "THREADMSG" == l || "THREADLINKMSG" == l ? e = e.querySelector('[data-type="TEXTMSG"]') || e.querySelector('[data-type="EDITEDMSG"]') : "TEXTMSG" == l && "EDITEDMSG" == l || (e = e.closest('[data-type="TEXTMSG"]') || e.closest('[data-type="EDITEDMSG"]')), r = e ? e.firstChild.childNodes : [(e = e.closest('[data-type="HRMSG"]')).lastChild];
            var d = Message.getTextMsgFromDom(r, !1, !0);
            $WC.Util.copyTextToClipboard(d), _.showInfoMsg($WC.I18N("message.info.copied"))
        } else if ("copyfile" === t && "WP" == WebMessanger.prd) {
            var c = e.getAttribute("data-type");
            "IMGATT" != (c = "FORWARDEDMSG" == c || "EDITEDMSG" == c ? e.closest(".wms-msgfrag").querySelector("[data-type]").getAttribute("data-type") : c) && "VIDEOATT" != c && "FILEATT" != c && "AUDIOATT" != c || WmsFileForwardUI.handleCopyFile(e)
        } else if ("delete" === t) WMSUI.showDeleteConfirmationDialog(e, a);
        else if ("edit" === t)(_ = WindowHandler.getWinObjById(a)) && _.showReplyPreview(e, !0);
        else if ("setreminder" === t) {
            e.getAttribute("data-type");
            var u = e.getAttribute("data-msgtime"),
                m = WebMessanger.getReminderInfo(u),
                h = (a = a, e.getAttribute("data-msgid")),
                g = Message.getReferenceContent(a, e);
            _ = WindowHandler.getWinObjById(a);
            var p = {
                time: $WC.DateUtil.formatDTTime(u),
                msg: g,
                sender: $WC.Util.isLocalUser(h.split("_")[0]) ? $WC.I18N("chat.you") : e.getAttribute("data-sendername")
            };
            _.remindercomponent = new $WC.RemindersDialog, _.remindercomponent.mountComponent(a, u, p, m, (function() {
                _.showErrorMsg($WC.I18N("reminders.add.success"), "info")
            }), (function() {
                _.showErrorMsg($WC.I18N("reminders.add.failed"))
            }))
        } else if ("fork" === t) {
            var f = Message.getReferenceContent(a, e),
                v = (h = e.getAttribute("data-msgid"), u = $WC.DateUtil.formatDTTime(e.getAttribute("data-msgtime")), WindowHandler.getWinObjById(a)),
                C = v.title + $WC.I18N("fork.title.text"),
                b = v.recipant && v.recipant.split(",");
            p = {
                time: u,
                msg: f,
                sender: $WC.Util.isLocalUser(h.split("_")[0]) ? $WC.I18N("chat.you") : e.getAttribute("data-sendername")
            };
            (new $WC.ForkChat).mountComponent(a, C, h, p, b, WMSUI.showErrorMsg)
        } else if ("react" === t) {
            var y = e.closest("[data-msguid]").getAttribute("data-msguid");
            (_ = WindowHandler.getWinObjById(a)).showReactionsUI(y)
        } else if ("markasunread" === t) {
            var _;
            y = e.getAttribute("data-msguid"), u = e.getAttribute("data-msgtime");
            if (WebMessanger.markAsUnread(a, y, u), !$WC.Config.get("disableChatwindowCloseOnMarkAsUnread"))(_ = WindowHandler.getWinObjById(a)).close()
        } else if ("messagelink" === t) {
            y = e.closest(".wms-msgfrag").getAttribute("data-msguid");
            var W = _WMSCHATURL + "chats/" + a + "/messages/" + y.replace("%20", "_");
            $WC.Util.copyTextToClipboard(W), (_ = WindowHandler.getWinObjById(a)).showInfoMsg($WC.I18N("messagelink.info.copied"))
        } else if ("forward" === t) $WC.Util.isEmptyObject($WC.Channels.get()) && $WC.Channels.initChannels(), (_ = WindowHandler.getWinObjById(a)).toggleMessageSelection(!0, e);
        else if ("pinmsg" === t) {
            var S = e,
                w = Message.getReferenceContent(a, e),
                M = !!WindowHandler.getWinObjById(a).pinmsgdetails.info.msgid;
            (new $WC.PinMsgDialog).mountComponent((function(e, t) {
                var s = S.getAttribute("data-msguid");
                WebMessanger.pinMsg(a, s, e, t)
            }), w, M)
        } else if ("unpinmsg" === t) WebMessanger.unpinMsg(a);
        else if ("viewreaction" === t) {
            var I = {};
            h = e.getAttribute("data-msguid");
            $WC.Util.isThreadChid(a) && e.closest("[data-thread_parentmsg]") && (a = e.closest("[data-thread_parentmsg]").getAttribute("data-chid") || $WC.getParentChidFromThreadChid(a));
            var T = new $WC.ViewReactions,
                A = function() {
                    var e = document.getElementById("wms-viewreactionoverlay");
                    $WC.Util.removeElement(e)
                };
            (n = $WC.Util.createElement("div", "wms-viewreactionoverlay", "wms_viewreaction_overlay")).style.zIndex = $WC.Config.get("zindex"), n.innerHTML = '<div class="wms_viewreaction_container"><div class="wms_viewreaction_loading wms_loading_div"></div></div>', document.body.appendChild(n);
            var E = function(e) {
                    if (A(), "string" == typeof e) {
                        var t = JSON.parse(this.response);
                        t.list = Object.keys(t.data), I.reactionlist = t
                    } else I.reactionlist = e;
                    I.partinfo = _.partinfo, I.onListItemClick = function(e, t, s) {
                        var i = t.getAttribute("data-zcprofileid") ? t : t.querySelector("[data-zcprofileid]");
                        i && WebMessanger.showProfileInfo(i), s && (s.stopPropagation(), s.preventDefault())
                    };
                    var s = {};
                    "undefined" != typeof WmsUIImpl && (s = WmsImplHandler.invokeSynchronously(WmsUIImpl.getChatBarOptions) || {}), WmsSettings.isEmailIDHidden() && (s.userdescinfo = "disable"), I.config = s, T.mountComponent(I);
                    if ("disable" != s.userdescinfo && _.fetchparticipants) {
                        if (_.partcount > 2 && _.fetchparticipants) WebMessanger.fetchChannelMembers(a || _.objId, null, null, (function() {
                            _.fetchparticipants = !1, T.updateParticipantsData(_.partinfo)
                        }));
                        else if (2 == _.partcount && !$WC.Config.get("email")) {
                            $WC.Ajax.requestToChat("v2/users/" + WebMessanger.zuid, "fields=" + encodeURIComponent("all,checkin_status"), (function(e) {
                                var t = JSON.parse(this.response);
                                $WC.Config.set({
                                    email: t.data.email_id
                                }), T.updateParticipantsData(_.partinfo)
                            }))
                        }
                    } else T.updateParticipantsData(_.partinfo)
                },
                U = {
                    "x-consents-version": "1",
                    "X-XHR-exception": !0,
                    "X-ZCSRF-TOKEN": $WC.Util.getCSRF()
                },
                k = !1;
            for (var N in _.reactions[h].data)
                if (_.reactions[h].data[N].length) {
                    k = !0;
                    break
                }
            k ? E(_.reactions[h]) : $WC.Ajax.requestToChat("v2/chats/" + a + "/messages/" + h + "/reactions", null, E, (function() {
                A(), $WC.Util.showErrorMsg($WC.I18N("event.status.update.error"))
            }), null, null, U)
        }
    }, Message.constructTimeFragment = function(e, t, s, i, n, a, o, r) {
        if (e) {
            var l = !!t,
                d = '<div class="wms_msg_editinfo" title="' + $WC.I18N("message.edit.history") + '"data-edited="' + l + '">' + $WC.I18N("message.edit.info") + "</div>",
                c = !(WebMessanger.isExclusiveChat() || WebMessanger.isRTCChat() || n || i && !s) && WebMessanger.isReadReceiptEnabled(),
                u = !s || n || WebMessanger.isExclusiveChat() || WebMessanger.isRTCChat() ? "msg.sent" : "Read",
                m = !(n || WebMessanger.isExclusiveChat() || WebMessanger.isRTCChat()) && s,
                h = r !== Message.types.DELETEDMSG ? '<div class="wms_msg_receipt" title=\'{{msg_receipt_title}}\' data-read-receipt="' + c + '" data-msg-read="' + m + '"></div>' : "",
                g = "";
            a && a.translatemsg && r !== Message.types.DELETEDMSG && (g = "2" === WmsSettings.translation_mode && a.autotranslatedmsg ? Message.getOriginalMsgBtnHtml() : Message.getTranslateMsgBtnHtml(a.msg.detected_language), Message.translationmsgstore[a.msg.msguid] = a.msg);
            var p = "<div class='{{starclass}}' data-starmsg='true' data-starselected='{{starselected}}' data-startype='{{startype}}'></div>",
                f = "disable" == $WC.Config.get("starredmsg") ? " wms_hide_staricon" : "",
                v = "",
                C = "";
            return (o.deleted && !o.startype || WebMessanger.isExclusiveChat() || o.historyoff) && (p = ""), $WC.Util.isLocalUser(o.senderzuid) ? v = p : C = p, e = $WC.DateUtil.getTargetTimeZoneTimeInMs(e), $WC.template.replace("<div class='wms-msgtime' data-timefrag=\"true\">" + v + "<span title='{{date}}' data-timetext=\"true\">{{msgtime}}</span>" + h + d + g + C + "</div>", {
                msgtime: $WC.DateUtil.formatTime(e),
                date: $WC.DateUtil.formatDate(e),
                msg_receipt_title: $WC.I18N(u),
                starselected: !!o.star,
                startype: o.startype,
                starclass: o.star ? "wms_starsel wms_starbg" + o.startype : "wms_staricon" + f
            })
        }
        return ""
    }, Message.getReferenceContent = function(e, t) {
        var s = !1;
        t.closest("[data-type=" + Message.types.REPLYMSG + "]") && (s = !0);
        var i = Message.getMsgFromDom(e, t.getAttribute("data-msgid"), s, !0, !0);
        if ("object" == typeof i) {
            var n = "wms_pinmsg_att_icon";
            "CONTACTATT" === i.messagetype ? n += " wms_pinmsg_contact_icon" : "LOCATT" === i.messagetype ? n += " wms_pinmsg_location_icon" : "EVENTATT" === i.messagetype && (n += " wms_pinmsg_event_icon"), i = (i = i.fName || i.name || i.desc) + '<span class="' + n + '"></span>'
        } else if ("string" == typeof i) {
            var a = i.lastIndexOf("<br>"),
                o = i.lastIndexOf("\n");
            i = i.substring(-1 !== a ? a + 4 : -1 !== o ? o + 1 : 0), i = $WC.Markdown.apply(i), i = Smiley.replace(i, !0)
        }
        return i
    }, Message.getTranslateMsgBtnHtml = function(e) {
        return '<div class="wms_translate_msg" data-translatemsg="true" data-detectedlanguage="' + e + '">' + $WC.I18N("message.translatemsg") + "</div>"
    }, Message.getOriginalMsgBtnHtml = function() {
        var e = "1" == WmsSettings.message_translation_source ? "wms_googleicon" : "wms_zia_icon",
            t = "2" === WmsSettings.translation_mode ? "display : none" : "";
        return '<div class="wms_original_msg_container"><div style="' + t + '">' + $WC.I18N("message.translatedby", [""]).trim() + '</div><div class="' + e + '"></div><div class="wms_translatemsg_dot" style="' + t + '">&nbsp;&nbsp·&nbsp;&nbsp;&nbsp;</div><div class="wms_original_msg" data-showoriginalmsg="true">' + $WC.I18N("message.showoriginalmsg") + "</div></div>"
    }, Message.replaceTranslatedMessage = function(e, t, s) {
        var i = e.querySelector("[class*=wms-txtmsg]") || e.querySelector("[class*=wms-msgcomment]");
        t.translation = $WC.Util.safeHTML($WC.Util.unescapeHTML(t.translation));
        var n = s ? t.translation : t.msg;
        (Message.isMentionMsg(t) || Message.isAddMsg(t)) && (n = $WC.Util.formatMentions(t, !1, s)), t.ignoremarkdown || (n = $WC.Markdown.apply(n)), i && (i.innerHTML = Message.getDisplayContent(n))
    }, Message.checkAndRemoveUrlImage = function(e) {
        var t = function(e) {
                var t = e.target.getAttribute("data-urlpreviewimg") ? e.target.parentElement : e.target;
                $WC.Util.removeElement(t)
            },
            s = function(e) {
                for (var s = 0; s < e.length; s++) e[s].complete || (e[s].onerror = t)
            };
        s(e.querySelectorAll("[data-urlpreviewimg]")), s(e.querySelectorAll("[data-urlfavicon]"))
    }, Message.checkAndLoadAudioPlayer = function(e) {
        for (var t = e.querySelectorAll('[data-mountaudioplayer="true"]'), s = function() {
                WmsFileForwardUI.handlePreview(this)
            }, i = function() {
                WmsFileForwardUI.handleCopyFile(this)
            }, n = 0; n < t.length; n++) {
            var a = t[n],
                o = a.closest("[data-chid]") ? a.closest("[data-chid]").getAttribute("data-chid") : null;
            a.setAttribute("data-mountaudioplayer", "false");
            var r = a.getAttribute("data-fsrc"),
                l = a.closest("[data-msguid]").getAttribute("data-msguid"),
                d = !!WebMessanger.isGuestUser(),
                c = a.closest("[data-sendername]").getAttribute("data-sendername"),
                u = a.getAttribute("data-fcontent"),
                m = parseInt(a.getAttribute("data-duration") || "0"); - 1 == u.indexOf("audio/") && (u = "audio/mp3");
            var h = !1,
                g = !1;
            WindowHandler.chatrestrictions[o] && (WindowHandler.chatrestrictions[o].restrictFileForward && (h = !0), WindowHandler.chatrestrictions[o].restrictFileDownload && (g = !0));
            var p = !1;
            "WP" == WebMessanger.prd && WMSUI.zhShareInstance && WMSUI.zhShareInstance.isWpAttachmentCopyEnabled() && (p = !0), $WC.VideoPlayerFactory.create(o, e.parentElement, a, r, u, a.getAttribute("data-fname"), c, a.getAttribute("data-fposter"), $WC.Config.get("zindex"), s.bind(a), event, l, {
                hideforwardicon: !("false" !== a.getAttribute("data-filefrwrd") && !h),
                isguestuser: d,
                duration: m,
                hidedownloadicon: g,
                wpCopyHandled: p
            }, i.bind(a))
        }
    }, Message.handlePrivateReply = function(e) {
        var t = WebMessanger.ucmap[e];
        if (Message.replyPrivateMsgObj[e]) {
            var s = WindowHandler.getWinObjById(t),
                i = Message.replyPrivateMsgObj[e],
                n = i[0],
                a = i[1];
            if ((o = WindowHandler.getWinObjById(n)) && s) {
                var o, r = (o = WindowHandler.getWinObjById(n)).ctrlcomp.querySelector('[data-msguid="' + a + '"]'),
                    l = Message.constructReplyMessageFragment(o.constructReplyMessageObject(r, null, null, !0), !0, !1, !1, n);
                s.focus(), s.footernode.style.borderRadius = "0px 0px 5px 5px", s.editorreplydiv.innerHTML = l, s.editorreplydiv.style.display = "block", delete Message.replyPrivateMsgObj[e]
            }
        }
    }, Message.loadUrlThumbnail = function(e) {
        for (var t = e.querySelectorAll("[data-urlpreviewimg]"), s = 0; s < t.length; s++)
            if ($WC.Util.isScrolledIntoView(t[s], e) && t[s].getAttribute("data-originalsrc")) {
                var i = t[s].getAttribute("data-originalsrc");
                t[s].removeAttribute("data-originalsrc"), t[s].src = i
            }
    }, Message.isFileViewDisabled = function(e) {
        return !(!e.hasOwnProperty("xorgpolicy") || "0" != e.xorgpolicy) && e.fscope != _WMSAPPACCOUNTID
    }, Message.getDisabledFileView = function() {
        return '<div class="wms_disabledFile" data-attachmentdisabled="true" title="' + $WC.I18N("fileview.noaccess.tip") + '"><span class="wms_disabledinfoicon"></span><span class="wms_disabledinfocontent">' + $WC.I18N("fileview.noaccess") + "</span></div>"
    }, Message.getMessageActionHtml = function(e, t) {
        var s = e.closest("[data-chid]").getAttribute("data-chid"),
            i = e.closest(".wms-msgfrag").querySelector(".wms-msg").getBoundingClientRect().width,
            n = WindowHandler.getWinObjById(s),
            a = '<div class="wms_quickreact wms_reaction_add" title="' + $WC.I18N("message.actions.addreactions") + '" data-addreaction="true"></div>',
            o = "",
            r = "",
            l = [],
            d = "",
            c = 2,
            u = String.fromCharCode(parseInt("e9d9", 16)),
            m = String.fromCharCode(parseInt("e659", 16)),
            h = '<div class="wms_quickreact wms_threadreply" data-threadreplyaction="true" title="' + $WC.I18N("message.actions.thread_reply") + '" data-icon="' + u + '"></div>',
            g = '<div class="wms_quickreact wms_reply" data-replyaction="true" title="' + $WC.I18N("message.actions.reply") + '" data-icon="' + m + '"></div>';
        $WC.Util.isChannelChid(s) && ($WC.Channels.isBothReplyActionAllowed(s) || $WC.Channels.isThreadReplyAllowed(s)) ? r = h : !n.permdenied && $WC.Channels.isReplyActionAllowed(s) && (r = g);
        var p = !0;
        t && !$WC.Util.isEmptyObject(t) && (!1 === t.react && (p = !1, a = "", c--), !1 === t.reply && !1 === t.thread_reply && (r = "")), "" != r && c++;
        var f = [];
        if (p) {
            if (WmsSettings.adminsettings.quick_reactions) WmsSettings.adminsettings.quick_reactions.split(",").forEach((function(e) {
                "" !== e && (-1 !== e.indexOf("/#x") && (e = e.substring(0, e.indexOf("/#x"))), f.push(e))
            }));
            else f = Smiley.getFrequentSmileys().work.slice(0, 3);
            c += f.length
        }
        var v = "",
            C = "";
        if (e.closest("[data-sender]").getAttribute("data-sender") == WebMessanger.zuid && Math.floor(i) + 10 < 30 * (c - 1)) {
            C += " wms_msg_shorter_than_actions", f = f.reverse();
            var b = 30 * c - (e.closest(".wms-msgfrag").getBoundingClientRect().width - i - 15);
            b > 0 && (d += " wms_slide_on_hover", v += "--wms-quick-action-slide: " + b + "px; ")
        }(f.length && (o = f.reduce((function(e, t) {
            if (Smiley.smiley_lookup[Smiley.removeTonePrefFromCode(t)]) return e + '<div class="wms_quickreact" title="' + Smiley.getSmileyName(t) + '" data-quickreaction="true">' + Smiley.replace(Smiley.checkAndReplaceTonePrefCode(t)) + "</div>";
            if (Smiley.emoji_lookup[t]) {
                var s = $WC.I18N("smiley." + t.replace(/:/g, "")).trim(),
                    i = Smiley.getUnicode(t);
                return e + '<div class="wms_quickreact" title="' + s + '" data-quickreaction="true"><span class="wms_quickreact_emoji" title=' + s + ' data-smileycode="' + i + '" data-reaction="' + i + '" >' + i + "</span></div>"
            }
            if ($WC.Matcher.match("customemoji", t)) {
                var n = Smiley.preLoadCustomEmoji;
                Smiley.preLoadCustomEmoji = !0;
                var a = e + '<div class="wms_quickreact" title="' + (s = t.replaceAll(/[:$!]/g, "").split("_")[4]) + '" data-quickreaction="true">' + Smiley.getCustomEmojiHTML(t).replace("data-customemojicode", "data-reaction") + "</div>";
                return Smiley.preLoadCustomEmoji = n, a
            }
        }), "")), l = ['<div class="wms_quickreact" data-options="hide"></div>', o, a, r], "" !== C && (l = l.reverse()), c > 0 && c < 6) && (d += " wms_variablewidthaction", v += "--wms-quick-action-width: " + 30 * c + "px; ", "" !== C && (v += "--wms-short-msg-action-clip: " + 30 * (c - 1) + "px; "));
        1 == c && (d += " wms_emptyquickactions");
        var y = '<div class="' + d + '"data-options="hide" data-showaspopup="true" ' + (v = 'style="' + v + '"') + ">" + ('<div class="wms_quickreact_container">' + l.join("") + "</div>") + "</div>",
            _ = "",
            W = n.getStickyActionTopValue();
        if (W) {
            var S = e.closest('[class*="wms-msgfrag"]').getAttribute("data-type");
            _ = 'style="top: ' + (W += "TEXTMSG" === S || "EDITEDMSG" === S ? 8 : 3) + 'px;"'
        }
        return '<div class="wms_sticky_actions' + C + '" ' + _ + ' data-sticky_actions="true">' + y + '<div class="wms_sticky_actions_spacer"></div></div>'
    }, Chat.isExists = function(e) {
        return null != document.getElementById(e)
    }, Chat.isExistsInCliqbar = function(e) {
        return !(void 0 === WindowHandler || !WindowHandler.chatbar || !WindowHandler.chatbar.querySelector('[id="' + e + '"]'))
    };
var ChatBlink = function() {
    var e, t, s, i;

    function n() {
        1 == t && (t = !1, o(e), clearTimeout(s))
    }

    function a() {
        if (Self.Idle) {
            var t = e,
                l = r();
            i !== l && (e = l, t = i), o(t), s = setTimeout(a, 1500)
        } else n()
    }

    function o(e) {
        e && (document.title = e)
    }

    function r() {
        if (document.title) return document.title
    }
    return {
        start: function(s) {
            s && (n(), e = r(), o(Message.decodehtml(s)), i = r(), o(e), t = !0, a())
        },
        stopRepeat: n
    }
}();
document.onclick = function() {
    Self.Idle = !1
}, $WC.Util.addEvent(window, "focus", (function() {
    ChatBlink.stopRepeat()
}));
var _SOUND_PLAYER, _MEDIA_SOUND_PLAYER, wmsuserstatus = {};

function Self() {
    Self.prevIdleStatus
}

function WMSZohoApi() {}

function WMSKeyHandler() {}

function WMSSessionConfig() {}

function WmsSound() {}

function WmsSettings() {}

function WmsDragDrop() {}

function PubSubObject(e, t, s, i, n, a) {
    this.pskey = e, this.config = s, this.psuri = t, this.maxulist = -1, null != i && (this.maxulist = i), this.authtype = n, this.authid = a, this.userinfo = {}, this.wmsids = new Array, this.getUsers = function() {
        return this.userinfo
    }, this.reInitUsers = function() {
        this.userinfo = {}, this.wmsids = new Array
    }, this.addUsers = function(e) {
        for (var t in e) this.addUser(t, e[t])
    }, this.removeUsers = function(e) {
        for (var t in e) this.removeUser(t, e[t])
    }, this.addUser = function(e, t) {
        var s = this.wmsids.indexOf(e);
        if (-1 != s && this.wmsids.splice(s, 1), this.wmsids.push(e), this.userinfo[e] = t, -1 != this.maxulist && this.wmsids.length > this.maxulist) {
            var i = this.wmsids.splice(0, 1);
            delete this.userinfo[i]
        }
    }, this.removeUser = function(e) {
        var t = this.wmsids.indexOf(e);
        if (-1 != t) {
            var s = this.wmsids.splice(t, 1);
            delete this.userinfo[s]
        }
    }, this.userCount = function() {
        return this.wmsids.length
    }
}

function PubSubApi() {}

function PubSubBridge() {}

function WmsNotification() {}
Self.init = function() {
    Self.isIdle = {}, Self.prevIdleStatus = {}, Self.prevTypingTime = {}, Self.Timer = {}, setInterval((function() {
        Self.status.chkstatus()
    }), 1e4), Self.Idle = !0
}, Self.status = {
    init: function(e) {
        Self.isIdle[e] = !0, Self.Idle = !0, Self.prevIdleStatus[e] = !0
    },
    chkstatus: function() {
        try {
            var e = {};
            for (var t in wmsuserstatus) {
                var s = wmsuserstatus[t];
                if (null != s && void 0 !== s && "function" != typeof s) {
                    var i = 0;
                    for (i in s);
                    if (0 == i) continue;
                    if ((new Date).getTime() - Self.prevTypingTime[t] < 14e3) {
                        e[t] = s;
                        continue
                    }
                    "" != Self.status.getmsg(t) && Self.status.send(t, NFY_USER_ENTERED), Self.prevIdleStatus[t] = Self.isIdle[t], Self.isIdle[t] = !0, Self.Idle = !0
                }
            }
            wmsuserstatus = e
        } catch (e) {}
    },
    isEnabled: function() {
        return WebMessanger.scode != WMS_INVISIBLE && !WebMessanger.isRTCChat()
    },
    send: function(e, t) {
        try {
            if (-1 === $WC.Util.indexOf(WebMessanger.liveChats, e)) return
        } catch (e) {}
        if (t == NFY_USER_ENTERED && (wmsuserstatus[e] = {}), Self.status.isEnabled()) {
            var s = "userid=" + WebMessanger.getUserName() + "&chid=" + e + "&status=" + t + "&dname=" + encodeURIComponent(WebMessanger.getNickName()) + "&sid=" + encodeURIComponent(WebMessanger.getSid());
            $WC.Ajax.postRequest("sendstatus" + dext, s)
        }
    },
    idle: function(e) {
        var t = {};
        t[(new Date).getTime()] = NFY_USER_IDLE, Self.prevIdleStatus[e] = Self.isIdle[e], Self.isIdle[e] = !0, Self.Idle = !0, wmsuserstatus[e] = t
    },
    update: function(e) {
        var t = "" + e.chid,
            s = t + "." + e.sender;
        if ((clearTimeout(Self.Timer[s]), delete Self.Timer[s], e.sender != WebMessanger.getUserName() && e.sender != WebMessanger.getZuid()) && null != document.getElementById(t)) {
            WindowHandler.getWinObjById(t).typingstatusnode.title = "";
            var i = WindowHandler.getWinObjById(t).typingindicatornode;
            "" != e.msg ? i.style.display = "inline-block" : i.style.display = "none"
        }
    },
    check: function(e) {
        var t = {};
        t[(new Date).getTime()] = NFY_USER_TYPING, Self.isIdle[e] != Self.prevIdleStatus[e] && ("" != Self.status.getmsg(e) ? (WindowHandler.makeNormalWinById(e), ChatBlink.stopRepeat(), Self.status.send(e, NFY_USER_TYPING), Self.prevTypingTime[e] = (new Date).getTime()) : (Self.prevIdleStatus[e] = Self.isIdle[e], Self.Idle = !0, Self.isIdle[e] = !0, t[(new Date).getTime()] = NFY_USER_IDLE)), wmsuserstatus[e] = t
    },
    active: function(e) {
        Self.prevIdleStatus[e] = Self.isIdle[e], Self.isIdle[e] = !1, Self.Idle = !1, null != e && Self.status.check(e)
    },
    clear: function(e, t) {
        var s = e + "." + t;
        delete Self.Timer[s], Self.prevTypingTime[e] = {}, null != document.getElementById(e) && (WindowHandler.getWinObjById(e).typingindicatornode.style.display = "none")
    },
    getmsg: function(e) {
        try {
            if (null != document.getElementById(e)) return WindowHandler.getWinObjById(e).composer.value;
            if (null != document.getElementById("editor")) return document.getElementById("editor").value
        } catch (e) {}
        return ""
    }
}, Self.init(), WMSZohoApi.acceptLiveSupport = function(e, t, s, i) {
    if ("" != _WMSCHATURL) {
        var n;
        (n = document.createElement("script")).setAttribute("type", "text/javascript");
        var a = "?chid=" + e + "&guid=" + t + "&a=" + s + "&g=" + i;
        silent || (a = a + "&sid=" + encodeURIComponent(WebMessanger.getSid())), n.setAttribute("src", _WMSCHATURL + "acccsupport.ext" + a), document.body.appendChild(n)
    }
}, WMSKeyHandler.init = function() {
    ie ? document.attachEvent("onkeydown", WMSKeyHandler.handle) : document.addEventListener("keydown", WMSKeyHandler.handle), ie ? document.attachEvent("onclick", WMSKeyHandler.onclick) : document.addEventListener("click", WMSKeyHandler.onclick), WMSKeyHandler.skipeventlistener = !1
}, WMSKeyHandler.onclick = function(e) {
    !0 !== WMSKeyHandler.skipeventlistener ? (WmsProfileInfo.handleDocumentClick(e), WMSUI.handleDocumentClick(e), Message.handleMessageLinkClick(e), WMSUI.handleDownloadLinkClickOnDesktop(e)) : WMSKeyHandler.skipeventlistener = !1
}, WMSKeyHandler.handle = function(e) {
    e || (e = window.event);
    var t = window.event ? e.keyCode : e.which;
    WMSUI.imgPreview.handleKeyMovement(e) || ChatTour.handleKeyMovement(e) ? e.stopImmediatePropagation() : (27 == t && WMSKeyHandler.escapee(e) && WMSKeyHandler.cancelEvent(e), !1 === WebMessanger.allprdchatdeactivated && !1 === WebMessanger.chatdeactivated && !1 === WebMessanger.smartchatshortcutdisabled && !0 === WMSUI.smartchatenabled && 32 == t && !0 === e.ctrlKey && !1 === e.metaKey && (WmsHybridSearch.toggleUI(), WebMessanger.trackClientAction("Cliq Mini - Smart chat shortcut"), WMSKeyHandler.cancelEvent(e)), ZMSGUI.handleEvent(e))
}, WMSKeyHandler.escapee = function(e) {
    return WMSUI.handleDocumentEscape(e)
}, WMSKeyHandler.cancelEvent = function(e) {
    ie ? (e.cancelBubble = !0, e.returnValue = !1) : (e.preventDefault(), e.stopPropagation())
}, WMSKeyHandler.preventHandlingTabUpDownEnter = function(e) {
    e.keyCode !== $WC.WmsConstants.KEYCODES.DOWN && e.keyCode !== $WC.WmsConstants.KEYCODES.UP && e.keyCode !== $WC.WmsConstants.KEYCODES.ENTER && e.keyCode !== $WC.WmsConstants.KEYCODES.TAB || e.preventDefault()
}, WMSKeyHandler.init(), WMSSessionConfig.CHAT = 1, WMSSessionConfig.CHAT_PRESENCE = 2, WMSSessionConfig.PRESENCE_PERSONAL = 4, WMSSessionConfig.PRESENCE_ORG = 8, WMSSessionConfig.LOADBALANCED = 16, WMSSessionConfig.MP = 32, WMSSessionConfig.CROSS_PRD = 64, WMSSessionConfig.MULTI_DISPATCH = 128, WMSSessionConfig.REUSE_SESSION = 256, WMSSessionConfig.TRANSIENT_PEX = 512, WMSSessionConfig.APPNOTIFY = 1024, WmsSound.getTune = {}, WmsSound.players = {}, WmsSound.constants = {
    PERSONALCHAT: "mymsgsoundnotify",
    MENTION: "mentionsoundnotify",
    GROUPCHAT: "groupmessage_sound_notify",
    CHANNEL: "channelmessage_sound_notify",
    PINNEDCHAT: "pinnedchats_sound_notify",
    REMINDERS: "reminders_sound_notify",
    BOTMESSAGE: "botmessage_sound_notify",
    AVCALL: "av_call_sound_notify",
    SCREENSHARE: "screen_call_sound_notify"
}, WmsSound.annonUserSoundNotification = !1, WmsSound.notification_tunes = ["", "Cora", "Cue", "Celesta", "Hail", "Bell", "Pac", "Ting", "Triangle", "Wink", "Heavenly", "ViolinPing", "Reverberate", "Speedy", "MusicboxDuo", "MusicboxTriplet"], WmsSound.loadNotificationTunes = function() {
    for (var e = {}, t = [WmsSettings.adminsettings.smymessage, WmsSettings.adminsettings.smention, WmsSettings.adminsettings.groupmessage_tone, WmsSettings.adminsettings.botmessage_tone], s = 0; s < t.length; s++) {
        var i;
        (i = WmsSound.notification_tunes[t[s]]) && (e[i] = $WC.Config.get("cliqstaticserverpath") + "/officechat/sound/" + i + ".wav")
    }
    WmsSound.annonUserSoundNotification && (e[i = WmsSound.notification_tunes[1]] = $WC.Config.get("cliqstaticserverpath") + "/officechat/sound/" + i + ".wav");
    WmsSound.preloadFiles(e)
}, WmsSound.init = function() {
    "" != (new Audio).canPlayType("audio/wav") && "no" != (new Audio).canPlayType("audio/wav") ? WmsSound.getTune = {
        newchat: $WC.Config.get("staticserverpath") + "/sound/977ffcde_newchatmsg2.wav",
        chatmsg: $WC.Config.get("staticserverpath") + "/sound/666003f7_tik.wav"
    } : WmsSound.getTune = {
        newchat: $WC.Config.get("staticserverpath") + "/sound/33105394_newchatmsg2.mp3",
        chatmsg: $WC.Config.get("staticserverpath") + "/sound/823b32e2_tik.mp3"
    }, WmsSound.timer = null
}, WmsSound.isNotifyAllowed = function(e) {
    return 1 == WmsSettings.adminsettings.globalsoundnotify && 1 == WmsSettings.adminsettings[e] && WebMessanger.isNotificationAllowedExternally()
}, WmsSound.checkAndPlayTune = function(e, t, s, i, n) {
    s && (WmsSound.getTune[t] = s), (e || wmsnotifyowner && wmsnotifyowner.isOwner()) && WmsSound.playTune(t, null, i, n, !0)
}, WmsSound.playAVTone = function(e, t, s, i) {
    t && (WmsSound.getTune[e] = t), WmsSound.playTune(e, null, s, i, !0)
}, WmsSound.playTune = function(e, t, s, i, n) {
    if (n || WmsSound.isNotifyAllowed(t) || WmsSound.annonUserSoundNotification) try {
        e = e || "notify", WmsSound.players[e] = WmsSound.players[e] || new Audio(WmsSound.getTune[e]), i && (WmsSound.players[e].volume = i), s ? ((_MEDIA_SOUND_PLAYER = WmsSound.players[e]).currentTime = 0, _MEDIA_SOUND_PLAYER.play(), WmsSound.timer = setInterval((function() {
            _MEDIA_SOUND_PLAYER.play()
        }), 1400)) : ((_SOUND_PLAYER = WmsSound.players[e]).currentTime = 0, _SOUND_PLAYER.play())
    } catch (e) {}
}, WmsSound.stop = function() {
    try {
        _SOUND_PLAYER && (_SOUND_PLAYER.currentTime = 99, _SOUND_PLAYER = null), _MEDIA_SOUND_PLAYER && (_MEDIA_SOUND_PLAYER.currentTime = 99, _MEDIA_SOUND_PLAYER = null), clearInterval(WmsSound.timer)
    } catch (e) {}
}, WmsSound.getWinFocus = function() {
    return _WMSWINFOCUS
}, WmsSound.preloadFiles = function(e) {
    if (!$WC.Util.isEmptyObject(e))
        for (var t in e) WmsSound.players[t] || (WmsSound.players[t] = new Audio(e[t]))
}, WmsSettings.bsettings = {}, WmsSettings.bsettings = {
    sound: "0",
    soc: "1",
    scp: "0",
    vmessage: "0",
    vmymessage: "1",
    vmention: "1",
    groupmessage_visual_notify: "1",
    botmessage_visual_notify: "1",
    read_reciept: "1:0",
    vustatus: "0",
    disann: {},
    deact: "",
    chatenabled: !0,
    cpinnedchats: "1",
    cunreadchats: "1",
    crecentchats: "1",
    tourenabled: "0",
    wmstourprops: "0",
    primetime_onboard_count: "0",
    salesiq_chatbar: "0",
    salesiq_chatbar_prdlist: "",
    adminsettings: {
        mymsgsoundnotify: "1",
        mentionsoundnotify: "1",
        groupmessage_sound_notify: "1",
        botmessage_sound_notify: "1",
        av_call_sound_notify: "0",
        screen_call_sound_notify: "0",
        smymessage: "1",
        smention: "2",
        groupmessage_tone: "1",
        botmessage_tone: "1",
        globalsoundnotify: "1"
    }
}, WmsSettings.constants = {
    ONBOARD: 1
}, WmsSettings.populate = function() {
    for (var e in this.sound = WmsSettings.bsettings.sound, this.soc = WmsSettings.bsettings.soc, this.scp = WmsSettings.bsettings.scp, this.vmessage = WmsSettings.bsettings.vmessage, this.vmymessage = WmsSettings.bsettings.vmymessage, this.vmention = WmsSettings.bsettings.vmention, this.groupmessage_visual_notify = WmsSettings.bsettings.groupmessage_visual_notify, this.botmessage_visual_notify = WmsSettings.bsettings.botmessage_visual_notify, this.read_receipt = WmsSettings.bsettings.read_reciept, this.vustatus = WmsSettings.bsettings.vustatus, this.disann = WmsSettings.bsettings.disann, this.deact = WmsSettings.bsettings.deact && WmsSettings.bsettings.deact.split(","), this.chatenabled = WmsSettings.bsettings.chatenabled, this.cpinnedchats = WmsSettings.bsettings.cpinnedchats, this.cunreadchats = WmsSettings.bsettings.cunreadchats, this.crecentchats = WmsSettings.bsettings.crecentchats, this.primetime_onboard_count = WmsSettings.bsettings.primetime_onboard_count, this.salesiq_chatbar = WmsSettings.bsettings.salesiq_chatbar, this.salesiq_chatbar_prdlist = WmsSettings.bsettings.salesiq_chatbar_prdlist && WmsSettings.bsettings.salesiq_chatbar_prdlist.split(","), WmsSettings.adminsettings = {
            isChannelAllowed: !0,
            isMediacallAllowed: !0,
            isDisableHistoryAllowed: !0,
            cliqaccess: !0,
            user_read_receipt: "1:0"
        }, WmsSettings.bsettings.adminsettings) WmsSettings.adminsettings[e] = WmsSettings.bsettings.adminsettings[e];
    if ("object" == typeof WmsSettings.adminsettings.orgPolicies && ("false" === WmsSettings.adminsettings.orgPolicies.chat_with_non_org_users && $WC.Config.set({
            other_orguser_chat: "disable"
        }), "false" === WmsSettings.adminsettings.orgPolicies.allow_turn_off_chat_history && (WmsSettings.adminsettings.isDisableHistoryAllowed = !1)), WmsSettings.adminsettings.moduleconfig = "string" == typeof WmsSettings.adminsettings.moduleconfig && "" !== WmsSettings.adminsettings.moduleconfig ? JSON.parse(WmsSettings.adminsettings.moduleconfig) : "", "object" == typeof WmsSettings.adminsettings.moduleconfig && $WC.SecurityManager.update(WmsSettings.adminsettings.moduleconfig), "object" == typeof WmsSettings.adminsettings.service_configurations && (_DOWNLOADSERVERURL = WmsSettings.adminsettings.service_configurations.download_server_url, _UPLOADSERVERURL = WmsSettings.adminsettings.service_configurations.upload_server_url, $WC.Config.set({
            isUDSDownloadEnabled: function() {
                if (void 0 !== WebMessanger) return WebMessanger.isUDSDownloadEnabled()
            }
        }), this.send_message_expiry_time = WmsSettings.adminsettings.service_configurations.send_message_expiry_time), !1 === WmsSettings.adminsettings.isChannelAllowed && $WC.Config.set({
            channels: "disable"
        }), WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.chatdrafts && $WC.Drafts.checkAndUpdateLMTime(WmsSettings.adminsettings.features.chatdraft_lmtime), wmsUserConfig.infomsg) try {
        var t = JSON.parse(wmsUserConfig.infomsg);
        "true" == t.splann ? window.frameElement && "undefined" != typeof CrmPlusLib && CrmPlusLib.isLoadedInCrmplusFrame || WebMessanger.processSpecialAnnouncement(t) : WMSUI.processAnnMsg(wmsUserConfig.infomsg, wmsUserConfig.infomsgtype)
    } catch (e) {
        WMSUI.processAnnMsg(wmsUserConfig.infomsg, wmsUserConfig.infomsgtype)
    }
    if ("ie" !== $WC.$CUtil.getBrowserName() || $WC.$CUtil.isIEVersion11() || (silent = !0, WebMessanger.showEmptyBar()), WebMessanger.registerAnnonUser || setTimeout((function() {
            WebMessanger.appendPhoneBridge(), WebMessanger.appendSMSBridge()
        }), 1), WmsSettings.adminsettings.moduleconfig && WmsSettings.adminsettings.moduleconfig.messaging.configs && WmsSettings.adminsettings.moduleconfig.messaging.configs.message_translation && (this.message_translation_source = WmsSettings.adminsettings.moduleconfig.messaging.configs.message_translation), WmsSettings.adminsettings && WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.show_translate && (this.show_translate = WmsSettings.adminsettings.features.show_translate), WmsSettings.adminsettings && WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.translation_mode && (this.translation_mode = WmsSettings.adminsettings.features.translation_mode), WmsSettings.adminsettings && WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.auto_translation && (this.auto_translation = WmsSettings.adminsettings.features.auto_translation), WmsSettings.adminsettings && WmsSettings.adminsettings.emojiskintone && WmsSettings.adminsettings.emoji_skintone_enabled && (WmsSettings.adminsettings.showemojiskinpicker = !0, Smiley.isSkinToneSupported() || (WmsSettings.adminsettings.emojiskintone = "0"), $WC.Config.set({
            emojiskintone: parseInt(WmsSettings.adminsettings.emojiskintone)
        })), WmsSettings.adminsettings && WmsSettings.adminsettings.presence_keys && WmsSettings.adminsettings.presence_keys.length && (this.presence_keys = WmsSettings.adminsettings.presence_keys, $WC.Config.set({
            presence_keys: WmsSettings.adminsettings.presence_keys
        })), WmsSettings.adminsettings && WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.org_presence_enabled_client && $WC.Config.set({
            org_presence_enabled_client: WmsSettings.adminsettings.features.org_presence_enabled_client
        }), WmsSettings.adminsettings && WmsSettings.adminsettings.features && WmsSettings.adminsettings.features.close_thread_permission && (this.close_thread_permission = WmsSettings.adminsettings.features.close_thread_permission), WmsSettings.adminsettings && (this.is_free_user = !(!1 !== WmsSettings.adminsettings.licenseduser || !WmsSettings.adminsettings.activeappaccountuser)), WmsSettings.adminsettings.moduleconfig && (WmsSettings.adminsettings.moduleconfig.org_channels && WmsSettings.adminsettings.moduleconfig.org_channels.actions && (this.attachment_disabled_for_orgchannels = "disabled" == WmsSettings.adminsettings.moduleconfig.org_channels.actions.attachments), WmsSettings.adminsettings.moduleconfig.private_channels && WmsSettings.adminsettings.moduleconfig.private_channels.actions && (this.attachment_disabled_for_personalchannels = "disabled" == WmsSettings.adminsettings.moduleconfig.private_channels.actions.attachments), WmsSettings.adminsettings.moduleconfig.team_channels && WmsSettings.adminsettings.moduleconfig.team_channels.actions && (this.attachment_disabled_for_teamchannels = "disabled" == WmsSettings.adminsettings.moduleconfig.team_channels.actions.attachments), WmsSettings.adminsettings.moduleconfig.external_channels && WmsSettings.adminsettings.moduleconfig.external_channels.actions && (this.attachment_disabled_for_externalchannels = "disabled" == WmsSettings.adminsettings.moduleconfig.external_channels.actions.attachments), WmsSettings.adminsettings.moduleconfig.group_chat && WmsSettings.adminsettings.moduleconfig.group_chat.actions && (this.attachment_disabled_for_groupchat = "disabled" == WmsSettings.adminsettings.moduleconfig.group_chat.actions.attachments), WmsSettings.adminsettings.moduleconfig.organisation_member && WmsSettings.adminsettings.moduleconfig.organisation_member.actions && (this.direct_message_attachment_disabled = "disabled" == WmsSettings.adminsettings.moduleconfig.organisation_member.actions.attachments), WmsSettings.adminsettings.moduleconfig.messaging && WmsSettings.adminsettings.moduleconfig.messaging.configs && WmsSettings.adminsettings.moduleconfig.messaging.configs.restrict_non_participant_mention && (WmsSettings.restrict_non_participant_mention = WmsSettings.adminsettings.moduleconfig.messaging.configs.restrict_non_participant_mention), WmsSettings.adminsettings.moduleconfig.group_audio_call && WmsSettings.adminsettings.moduleconfig.group_audio_call.status && (this.group_audio_call_disabled = "disabled" == WmsSettings.adminsettings.moduleconfig.group_audio_call.status), WmsSettings.adminsettings.moduleconfig.group_video_call && WmsSettings.adminsettings.moduleconfig.group_video_call.status && (this.group_video_call_disabled = "disabled" == WmsSettings.adminsettings.moduleconfig.group_video_call.status)), _WMSEMPTYBAR) WMSUI.populateEmptyBar();
    else if (!1 === this.chatenabled) {
        WebMessanger.isServiceStatusSet ? (WebMessanger.showEmptyBar(), WMSUI.populateEmptyBar()) : silent = !0;
        try {
            WmsUIImpl.handleUIHidden()
        } catch (e) {}
    } else -1 === $WC.Util.indexOf(this.deact, "ALL") && -1 === $WC.Util.indexOf(this.deact, WebMessanger.prd) && !1 !== WmsSettings.adminsettings.cliqaccess || WebMessanger.is_chat_enabled_always ? (WebMessanger.chatdeactivated = !1, WebMessanger.allprdchatdeactivated = !1, WmsMainUI.maincontainer && WmsMainUI.maincontainer.parentNode && WmsMainUI.maincontainer.parentNode.removeChild(WmsMainUI.maincontainer), silent || (WMSUI.usersdiv = null, WMSUI.groupdiv = null, WMSUI.actchatdiv = null, WMSUI.populateMainBar(), WebMessanger.loadSalesIQJS())) : (-1 !== $WC.Util.indexOf(this.deact, "ALL") ? (WebMessanger.allprdchatdeactivated = !0, WebMessanger.chatdeactivated = !1) : -1 !== $WC.Util.indexOf(this.deact, WebMessanger.prd) && (WebMessanger.allprdchatdeactivated = !1, WebMessanger.chatdeactivated = !0), !1 === WmsSettings.adminsettings.cliqaccess && (WebMessanger.chatdisabled = !0), silent || WMSUI.populateDeactivatedChatUI())
}, WmsSettings.updateWmsSettings = $WC.Util.debounce((function(e, t, s, i, n, a) {
    "deact" === t ? s ? WebMessanger.UpdateWmsSettings(e, t, s, null, i, n, a) : WebMessanger.UpdateWmsSettings(e, t, WebMessanger.prd, null, i, n, a) : "disann" === t ? WebMessanger.UpdateWmsSettings(e, t, wmsUserConfig.infomsgid, wmsUserConfig.infomsgprd) : WebMessanger.UpdateWmsSettings(e, t, s)
}), null, 500, !1), WmsSettings.handleUpdateWmsSettings = function(e) {
    for (var t in e)
        if ("sound" == t) this.sound = e[t], WmsMainUI.handleSettings(this.sound, WmsMainUI.settingscontainer.querySelector('[data-setting="sound"]'));
        else if ("vmymessage" == t) this.vmymessage = e[t], WmsMainUI.handleSettings(this.vmymessage, WmsMainUI.settingscontainer.querySelector('[data-setting="vmymessage"]'));
    else if ("vmention" == t) this.vmention = e[t], WmsMainUI.handleSettings(this.vmention, WmsMainUI.settingscontainer.querySelector('[data-setting="vmention"]'));
    else if ("groupmessage_visual_notify" == t) this.groupmessage_visual_notify = e[t], WmsMainUI.handleSettings(this.groupmessage_visual_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="groupmessage_visual_notify"]'));
    else if ("channelmessage_visual_notify" == t) this.adminsettings.channelmessage_visual_notify = e[t], WmsMainUI.handleSettings(this.adminsettings.channelmessage_visual_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="channelmessage_visual_notify"]'));
    else if ("pinnedchats_visual_notify" == t) this.adminsettings.pinnedchats_visual_notify = e[t], WmsMainUI.handleSettings(this.adminsettings.pinnedchats_visual_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="pinnedchats_visual_notify"]'));
    else if ("reminders_visual_notify" == t) this.adminsettings.reminders_visual_notify = e[t], WmsMainUI.handleSettings(this.adminsettings.reminders_visual_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="reminders_visual_notify"]'));
    else if ("botmessage_visual_notify" == t) this.botmessage_visual_notify = e[t], WmsMainUI.handleSettings(this.botmessage_visual_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="botmessage_visual_notify"]'));
    else if ("read_reciept" == t) {
        this.read_receipt = e[t], this.adminsettings.user_read_receipt = e[t];
        var s = WebMessanger.isReadReceiptSettingEnabled() ? "1" : "0";
        WmsMainUI.handleSettings(s, WmsMainUI.settingscontainer.querySelector('[data-setting="read_receipt"]'))
    } else if ("last_seen" == t) {
        WmsSettings.adminsettings.last_seen = e[t];
        var i = WmsSettings.isLastSeenEnabled();
        WmsMainUI.handleSettings(i, WmsMainUI.settingscontainer.querySelector('[data-setting="show_lastseen"]'))
    } else if ("vustatus" == t) this.vustatus = e[t], WmsMainUI.handleSettings(this.vustatus, WmsMainUI.settingscontainer.querySelector('[data-setting="vustatus"]'));
    else if ("show_translate_option" == t) {
        this.show_translate = e[t], WmsMainUI.handleSettings(WmsSettings.show_translate, WmsMainUI.settingscontainer.querySelector('[data-setting="messagetranslation"]'));
        var n = document.getElementById("wms_settings_translation");
        $WC.Util.setAttribute(n.querySelector(".wms_translation_settings"), "data-expanded", "0" == this.show_translate ? "false" : "true")
    } else if ("translation_mode" == t) {
        this.translation_mode = e[t], document.getElementById("translationpermission").selectedIndex = "1" == this.translation_mode ? "0" : "1"
    } else if ("cpinnedchats" == t) this.cpinnedchats = e[t];
    else if ("cunreadchats" == t) this.cunreadchats = e[t];
    else if ("crecentchats" == t) this.crecentchats = e[t];
    else if ("primetime_onboard_count" == t) this.primetime_onboard_count = e[t];
    else if ("scp" == t) {
        this.scp = e[t];
        try {
            WMSUI.populateusrs(!1)
        } catch (e) {}
    } else if ("disann" === t) this.disann = e[t], WMSUI.isAnnBlocked() && WMSUI.clearAnnBanner();
    else if ("deact" === t) this.deact = e[t].split(","), -1 === $WC.Util.indexOf(this.deact, "ALL") && -1 === $WC.Util.indexOf(this.deact, WebMessanger.prd) || WebMessanger.is_chat_enabled_always ? !0 !== WebMessanger.chatdeactivated && !0 !== WebMessanger.allprdchatdeactivated || !1 !== WebMessanger.chatdisabled || (WebMessanger.chatdeactivated = !1, WebMessanger.allprdchatdeactivated = !1, WebMessanger.turnOnChat(), wmsnotifyowner && wmsnotifyowner.clearOwnerSync(), WebMessanger.registerAnnonUser || (wmsnotifyowner = new $WC.NotificationOwner("chat", !0), avcliqnotifyowner = new $WC.NotificationOwner("avcliq", !0)), WMSUI.contactsenabled = !(WebMessanger.disabledmenus & WebMessanger.uisettingsconst.contacts), WMSUI.groupsenabled = !(WebMessanger.disabledmenus & WebMessanger.uisettingsconst.groups), WMSUI.activechatenabled = !(WebMessanger.disabledmenus & WebMessanger.uisettingsconst.activechats), WMSUI.profileenabled = !(WebMessanger.disabledmenus & WebMessanger.uisettingsconst.settings), WMSUI.smartchatenabled = !(WebMessanger.disabledmenus & WebMessanger.uisettingsconst.smartchat), WMSUI.populateMainBar(), _WMSCHATHIDDEN && WebMessanger.hideChatBar()) : !1 !== WebMessanger.chatdeactivated && !1 !== WebMessanger.allprdchatdeactivated || (-1 !== $WC.Util.indexOf(this.deact, "ALL") ? (WebMessanger.allprdchatdeactivated = !0, WebMessanger.chatdeactivated = !1) : (WebMessanger.allprdchatdeactivated = !1, WebMessanger.chatdeactivated = !0), WebMessanger.turnOffChat(), WMSUI.populateDeactivatedChatUI(), _WMSCHATHIDDEN && WebMessanger.hideChatBar());
    else if ("salesiq_chatbar" === t) this.salesiq_chatbar = e[t], WebMessanger.loadSalesIQJS();
    else if ("salesiq_chatbar_prdlist" === t) this.salesiq_chatbar_prdlist = e[t].split(","), WebMessanger.loadSalesIQJS();
    else if ("hidden_chatlets_product" === t) WmsSettings.adminsettings.hidden_chatlets_product = e[t], silent || $WC.HybridSearch.populateRecentChats();
    else if ("mymsgsoundnotify" === t) this.adminsettings.mymsgsoundnotify = e[t], WmsMainUI.handleSettings(this.adminsettings.mymsgsoundnotify, WmsMainUI.settingscontainer.querySelector('[data-setting="mymsgsoundnotify"]'));
    else if ("mentionsoundnotify" === t) this.adminsettings.mentionsoundnotify = e[t], WmsMainUI.handleSettings(this.adminsettings.mentionsoundnotify, WmsMainUI.settingscontainer.querySelector('[data-setting="mentionsoundnotify"]'));
    else if ("groupmessage_sound_notify" === t) this.adminsettings.groupmessage_sound_notify = e[t], WmsMainUI.handleSettings(this.adminsettings.groupmessage_sound_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="groupmessage_sound_notify"]'));
    else if ("channelmessage_sound_notify" === t) this.adminsettings.channelmessage_sound_notify = e[t], WmsMainUI.handleSettings(this.adminsettings.channelmessage_sound_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="channelmessage_sound_notify"]'));
    else if ("pinnedchats_sound_notify" === t) this.adminsettings.pinnedchats_sound_notify = e[t], WmsMainUI.handleSettings(this.adminsettings.pinnedchats_sound_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="pinnedchats_sound_notify"]'));
    else if ("reminders_sound_notify" === t) this.adminsettings.reminders_sound_notify = e[t], WmsMainUI.handleSettings(this.adminsettings.reminders_sound_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="reminders_sound_notify"]'));
    else if ("botmessage_sound_notify" === t) this.adminsettings.botmessage_sound_notify = e[t], WmsMainUI.handleSettings(this.adminsettings.botmessage_sound_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="botmessage_sound_notify"]'));
    else if ("av_call_sound_notify" === t) this.adminsettings.av_call_sound_notify = e[t], WmsMainUI.handleSettings(this.adminsettings.av_call_sound_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="av_call_sound_notify"]'));
    else if ("screen_call_sound_notify" === t) this.adminsettings.screen_call_sound_notify = e[t], WmsMainUI.handleSettings(this.adminsettings.screen_call_sound_notify, WmsMainUI.settingscontainer.querySelector('[data-setting="screen_call_sound_notify"]'));
    else if ("smymessage" === t) this.adminsettings.smymessage = e[t], WmsSound.loadNotificationTunes();
    else if ("smention" === t) this.adminsettings.smention = e[t], WmsSound.loadNotificationTunes();
    else if ("groupmessage_tone" === t) this.adminsettings.groupmessage_tone = e[t], WmsSound.loadNotificationTunes();
    else if ("channelmessage_tone" === t) this.adminsettings.channelmessage_tone = e[t], WmsSound.loadNotificationTunes();
    else if ("pinnedchats_tone" === t) this.adminsettings.pinnedchats_tone = e[t], WmsSound.loadNotificationTunes();
    else if ("reminders_tone" === t) this.adminsettings.reminders_tone = e[t], WmsSound.loadNotificationTunes();
    else if ("botmessage_tone" === t) this.adminsettings.botmessage_tone = e[t], WmsSound.loadNotificationTunes();
    else if ("globalsoundnotify" === t) {
        this.adminsettings.globalsoundnotify = e[t];
        var a = document.getElementById("wms_settings_soundnotification");
        WmsMainUI.handleSettings(this.adminsettings.globalsoundnotify, a.querySelector('[data-setting="globalsoundnotify"]')), $WC.Util.setAttribute(a.querySelector(".wms_settings_list"), "data-expanded", "0" == e[t] ? "false" : "true")
    } else "quick_reactions" === t ? (this.adminsettings.quick_reactions = e[t], WindowHandler.deleteAllMessageActionNodes()) : this[t] = e[t]
}, WmsSettings.isTourEnabled = function() {
    return 1 == +WmsSettings.bsettings.tourenabled
}, WmsSettings.isOnboardSeen = function() {
    return (+WmsSettings.bsettings.wmstourprops & WmsSettings.constants.ONBOARD) === WmsSettings.constants.ONBOARD
}, WmsSettings.isLastSeenEnabled = function() {
    return 1 == WmsSettings.adminsettings.last_seen
}, WmsSettings.setOnboardSeen = function() {
    return +WmsSettings.bsettings.wmstourprops | WmsSettings.constants.ONBOARD
}, WmsSettings.isEmailIDHidden = function() {
    return !!(WmsSettings.adminsettings.moduleconfig && WmsSettings.adminsettings.moduleconfig.email_visibility && "enabled" === WmsSettings.adminsettings.moduleconfig.email_visibility.status && "disabled" === WmsSettings.adminsettings.moduleconfig.email_visibility.actions.allow || WMSUI.isEmailVisibilityHidden)
}, WmsSettings.getAdminSetting = function(e) {
    return WmsSettings.adminsettings[e]
}, WmsSettings.handleTourSettings = function(e) {
    WmsSettings.bsettings.wmstourprops = e, WmsSettings.isOnboardSeen() && ChatTour.exit(!1)
}, WmsSettings.updateTourSettings = function(e, t) {
    if (e === WmsSettings.constants.ONBOARD) {
        var s = WmsSettings.setOnboardSeen();
        WebMessanger.updateTourSettings(s, t)
    }
}, WmsSettings.initModulesPermissions = function() {
    $WC.SecurityManager.init({
        direct_message: {
            status: "enabled"
        },
        audio_call: {
            status: "enabled"
        },
        video_call: {
            status: "enabled"
        },
        screen_sharing: {
            status: "enabled"
        },
        channels: {
            status: "enabled"
        },
        external_channels: {
            status: "enabled"
        },
        org_channels: {
            status: "enabled"
        },
        private_channels: {
            status: "enabled"
        },
        team_channels: {
            status: "enabled"
        },
        bots: {
            status: "enabled"
        },
        commands: {
            status: "enabled"
        }
    });
    var e = {
        audio_call: WindowHandler.updateMediacallPermissions,
        video_call: WindowHandler.updateMediacallPermissions,
        screen_sharing: WindowHandler.updateMediacallPermissions,
        direct_message: $WC.HybridSearch.populateRecentChats,
        channels: WmsHybridSearch.populateGroupResultInMainUI,
        external_channels: WmsHybridSearch.populateGroupResultInMainUI,
        team_channels: WmsHybridSearch.populateGroupResultInMainUI,
        org_channels: WmsHybridSearch.populateGroupResultInMainUI,
        private_channels: WmsHybridSearch.populateGroupResultInMainUI,
        bots: WmsHybridSearch.populateContactListInMainUI
    };
    $WC.SecurityManager.registerCallbacks(e)
}, WmsSettings.restrictFileSharingForExternalUser = function() {
    return !!WebMessanger.isCliqUser() && "false" == WmsSettings.adminsettings.orgPolicies.allow_external_orgusers_to_view_files
}, WmsSettings.showCustomEmojiOptions = function() {
    return !1
}, WmsSettings.getEmoticonTypes = function() {
    if (WmsSettings.adminsettings && WmsSettings.adminsettings.moduleconfig && WmsSettings.adminsettings.moduleconfig.messaging && WmsSettings.adminsettings.moduleconfig.messaging.configs) {
        var e = WmsSettings.adminsettings.moduleconfig.messaging.configs;
        return {
            hideemoji: "true" !== e.emojis,
            hidezomoji: "true" !== e.zomoji,
            hidelivezomoji: "true" !== e.animoji,
            hidegifs: "true" !== e.gif,
            hidecustomemoji: "true" !== e.customemoji,
            hidestickers: "true" !== e.sticker,
            gif_server: e.gif_server
        }
    }
}, WmsSettings.getModuleConfig = function(e) {
    if (WmsSettings.adminsettings && WmsSettings.adminsettings.moduleconfig) return WmsSettings.adminsettings.moduleconfig[e]
}, WmsSettings.getMaxTimeToSetIdle = function() {
    var e = WmsSettings.getModuleConfig("default_status");
    return e && "enabled" == e.status && e.configs && e.configs.max_time_to_set_idle ? +e.configs.max_time_to_set_idle : 9e5
}, WmsSettings.isAllowedStatusConfigEnabled = function() {
    var e = WmsSettings.getModuleConfig("default_status");
    return !(!e || "enabled" !== e.status)
}, WmsSettings.getAllowedStatuses = function() {
    var e = WmsSettings.getModuleConfig("default_status");
    if (e && e.configs) {
        var t = WmsSettings.getAllowedStatusesDetails().filter((function(e) {
            return e.isAllowed
        }));
        return t = t.map((function(e) {
            return e.scode
        }))
    }
    return []
}, WmsSettings.getAllowedStatusesDetails = function() {
    var e = WmsSettings.getModuleConfig("default_status");
    if (e && e.configs) {
        var t = $WC.Config.get("localUserData"),
            s = [];
        return Object.keys(e.configs).forEach((function(i) {
            if (-1 !== i.indexOf("status")) {
                var n = {
                    isAllowed: !1,
                    isRestricted: !1,
                    scode: i.substring(0, i.indexOf("_")),
                    value: e.configs[i]
                };
                "allow" == e.configs[i] ? n.isAllowed = !0 : t && t.checkin_status && "allow_checked_in" == e.configs[i] ? n.isAllowed = !0 : t && 0 == t.checkin_status && "allow_checked_out" == e.configs[i] && (n.isAllowed = !0), (t && t.checkin_status && "allow_checked_out" == e.configs[i] || t && 0 == t.checkin_status && "allow_checked_in" == e.configs[i]) && (n.isRestricted = !0), s.push(n)
            }
        })), s
    }
    return []
}, WmsSettings.isActivityStatusConfigEnabled = function() {
    var e = WmsSettings.getModuleConfig("activity_status");
    return !(!e || "enabled" !== e.status)
}, WmsSettings.isActivityStatusEnabled = function(e) {
    var t = WmsSettings.getModuleConfig("activity_status");
    return !(t && t.configs && e) || "enabled" == t.configs[e + "_status"]
}, WmsSettings.isActivityStatusOverrideAllowed = function(e) {
    var t = WmsSettings.getModuleConfig("activity_status");
    return !(t && t.configs && e) || "true" == t.configs[e + "_status_override"]
}, WmsSettings.isCurrentActivityStatusOverrideDisabled = function() {
    var e = WmsSettings.getModuleConfig("activity_status");
    if (!e || "disabled" == e.status) return !1;
    if (3 == WebMessanger.scode || 5 == WebMessanger.scode) {
        var t = {
            101: "call",
            102: "meeting",
            103: "calender",
            104: "showtime",
            105: "remote_session",
            106: "telephony",
            107: "salesiq",
            108: "webinar",
            109: "voice",
            110: "broadcast",
            111: "cliq_live_event"
        };
        return WmsSettings.isActivityStatusEnabled(t[WebMessanger.stype]) && !WmsSettings.isActivityStatusOverrideAllowed(t[WebMessanger.stype])
    }
    return !1
}, WmsSettings.isQuickStatusConfigEnabled = function() {
    var e = WmsSettings.getModuleConfig("quick_status");
    return !(!e || "enabled" != e.status)
}, WmsSettings.getAllowedQuickStatusList = function() {
    var e = WmsSettings.getModuleConfig("quick_status");
    return e && e.configs && e.configs.custom_quick_status_list ? e.configs.custom_quick_status_list : []
}, WmsDragDrop.onDropEvent = function(e, t, s, i, n) {
    if (t && t.preventDefault(), i) {
        var a = WmsDragDrop.dragged_file || n;
        if (!(a = a.getAttribute("data-filefrwrd") ? a : a.closest("[data-msgid]").querySelector("[data-filefrwrd]"))) return void(WmsDragDrop.dragged_file = "");
        WmsFileForwardUI.handlePreview(a);
        var o = {};
        o.chid = e;
        var r = WindowHandler.getWinObjById(e);
        if ("8" == r.ctype) o.imagehtml = $WC.HybridSearch.generateImageHtml(e, $WC.WmsConstants.HYBRIDSEARCH.CHANNEL);
        else if ("1" == r.ctype && r.partcount > 2) o.imagehtml = $WC.HybridSearch.generateImageHtml(e, $WC.WmsConstants.HYBRIDSEARCH.GROUP, {
            TITLE: r.title
        });
        else {
            var l = r.recipant || $WC.Bots.getBotId(e),
                d = WmsContacts.get(l);
            o.imagehtml = $WC.HybridSearch.generateImageHtml(l, $WC.WmsConstants.HYBRIDSEARCH.CONTACT, d)
        }
        return o.dname = r.title, o.type = r.ctype, WmsFileForwardUI.insertSuggestion("", "", o), void document.getElementById("wms-fileupldcmt").focus()
    }
    var c = t.dataTransfer.files;
    WmsDragDrop.nooffiles = c.length, WmsDragDrop.pos = 0;
    var u = WindowHandler.getWinObjById(e);
    if ("5" != u.ctype && "true" !== u.editorreplydiv.getAttribute("data-editmsg") && !u.permdenied) return !$WC.Util.isFilesizeExceeded(c) && void(WmsFileUploadUI.checkSupport() && c.length ? WmsFileUploadUI.handlePreview(e, c) : WmsDragDrop.uploadFile(e, c))
}, WmsDragDrop.uploadFile = function(e, t) {
    var s = {
        onprogress: function(t) {
            var s = Math.round(t.loaded / t.total * 100);
            WindowHandler.showProgress(e, s, WmsDragDrop.pos)
        },
        oncomplete: function() {},
        success: function() {
            WindowHandler.showProgress(e, 100, WmsDragDrop.pos), WmsDragDrop.pos < WmsDragDrop.nooffiles ? (WindowHandler.showProgress(e, 0, WmsDragDrop.pos), WmsDragDrop.uploadFileUsingPost(e, t[WmsDragDrop.pos], s, t), WmsDragDrop.pos++) : WindowHandler.clearProgress(e)
        }
    };
    WmsDragDrop.uploadFileUsingPost(e, t[WmsDragDrop.pos], s, t), WmsDragDrop.pos++
}, WmsDragDrop.uploadFileUsingPost = function(e, t, s, i) {
    try {
        if (t.size > 1e7) return alert($WC.I18N("You_have_exceeded_the_maximum_allowed_file_size_of_10MB")), WindowHandler.clearProgress(e), void(WmsDragDrop.nooffiles > WmsDragDrop.pos + 1 && (WmsDragDrop.pos++, WmsDragDrop.uploadFileUsingPost(e, i[WmsDragDrop.pos], s, i)));
        var n = new XMLHttpRequest,
            a = ["chid", "username", "sender", "mod", "sid", _CHATCFPARAMNAME],
            o = [e, WebMessanger.getUserName(), WebMessanger.getUserName(), "att", WebMessanger.getSid(), $WC.Cookie.get(_CHATCFTOKEN)];
        n.onreadystatechange = function() {
            if (4 == n.readyState) {
                var e = 200 == n.status ? s.success : s.fail;
                e && e(n.responseText)
            }
        }, s.onprogress && (n.addEventListener("progress", s.onprogress, !1), n.upload.addEventListener("progress", s.onprogress, !1)), s.oncomplete && (n.addEventListener("load", s.oncomplete, !1), n.upload.addEventListener("load", s.oncomplete, !1));
        var r = "/" + _CHATCONT + "/upload.do";
        if (n.open("POST", r, !0), "undefined" != typeof FormData) {
            for (var l = new FormData, d = 0; d < a.length; d++) l.append(a[d], o[d]);
            return l.append("file1", t), n.send(l), n
        }
        var c = (new Date).getTime(),
            u = "";
        u += "\r\n--" + c;
        var m, h = "\r\n",
            g = t.fileName;
        m || (m = []);
        for (var p = 0; p < a.length; p++) m[m.length] = WmsDragDrop.getMultiPartParamObject(a[p], o[p]);
        for (p = 0; p < m.length; p++) {
            var f = m[p];
            h += WmsDragDrop.getMultiPartParamStr(f.name, encodeURIComponent(f.value)) + "\r\n--" + c + "\r\n"
        }
        return u += h, null == (g = t.fileName) && (g = "file1"), u += 'Content-Disposition: form-data; name="file1";filename="' + g + '"\r\nContent-Type:' + t.type + "\r\n\r\n" + t.getAsBinary(), u += "\r\n--" + c + "--", n.setRequestHeader("Content-Length", u.length), n.setRequestHeader("Content-Type", "multipart/form-data; charset: UTF-8; accept-charset: UTF-8; boundary=" + c), n.setRequestHeader("Connection", "close"), n.sendAsBinary(u), n
    } catch (e) {}
}, WmsDragDrop.getMultiPartParamStr = function(e, t) {
    return 'Content-Disposition: form-data; name="' + e + '"\r\n\r\n' + t
}, WmsDragDrop.getMultiPartParamObject = function(e, t) {
    return {
        name: e,
        value: t
    }
}, WmsDragDrop.isFileSharable = function() {
    return !(WmsDragDrop.dragged_file && !WmsDragDrop.dragged_file.getAttribute("data-filefrwrd") && !WmsDragDrop.dragged_file.closest("[data-msgid]").querySelector("[data-filefrwrd]"))
}, WmsDragDrop.addDragDropListeners = function(e, t, s, i) {
    var n = !1,
        a = null;
    e.addEventListener("dragover", (function(e) {
        e.preventDefault()
    }), !0), e.addEventListener("drop", (function(e) {
        if (e.preventDefault(), !t.permdenied && !t.restrict_file_upload)
            if (e.dataTransfer.getData("isdragfromcwin")) WmsDragDrop.onDropEvent(s, e, !0, !0), WmsDragDrop.dragged_file = "";
            else if (WmsDragDrop.file_drag) WmsDragDrop.onDropEvent(s, e, !0, !0);
        else if ("undefined" != typeof zmUtil && "function" == typeof zmUtil.processDroppedFile && e.dataTransfer.getData("dragAttrs")) try {
            zmUtil.processDroppedFile(e.dataTransfer.getData("dragAttrs"), s)
        } catch (e) {} else WmsDragDrop.onDropEvent(s, e, !0);
        i ? (document.getElementsByClassName("wms_filedetails_wrapper")[0].style.display = "none", i.style.display = "flex") : (t.ctrlcomp.style.display = "block", t.dragcomp.style.display = "none");
        n = !1, e.stopPropagation()
    }), !0), e.addEventListener("dragenter", (function(e) {
        if (e.preventDefault(), a = e.target, !n && WmsDragDrop.isFileSharable() && "true" !== t.editorreplydiv.getAttribute("data-editmsg") && !t.permdenied && !t.restrict_file_upload) {
            if (i) document.getElementsByClassName("wms_filedetails_wrapper")[0].style.display = "none", i.style.display = "flex";
            else t.ctrlcomp.style.display = "none", t.dragcomp.style.display = "flex";
            n = !0
        }
    }), !0), e.addEventListener("dragleave", (function(e) {
        if (e.preventDefault(), a == e.target) {
            if (i) document.getElementsByClassName("wms_filedetails_wrapper")[0].style.display = "flex", i.style.display = "none";
            else t.ctrlcomp.style.display = "block", t.dragcomp.style.display = "none";
            n = !1
        }
    }), !0)
}, PubSubApi.initialised = !1, PubSubApi.heartBeat = function() {
    for (var e in this.subinfo) try {
        PubSubApi.resubscribe(this.subinfo[e])
    } catch (e) {}
    setTimeout((function() {
        PubSubApi.heartBeat()
    }), 3e4)
}, PubSubApi.init = function() {
    if (this.iframeObj = document.getElementById("psconnect"), this.uname = "", this.wms_samedomain = "", this.prdid = "", this.userid = "", this.sid = "", this.nname = "", "function" == typeof WebMessanger ? (this.uname = "" != WebMessanger.zuid ? WebMessanger.zuid : WebMessanger.uname, this.wms_samedomain = _WMS_SAMEDOMAIN, this.prdid = WebMessanger.getPrd(), this.userid = WebMessanger.getUserId(), this.sid = WebMessanger.getSid(), this.nname = WebMessanger.getNickName(), this.staticdomain = WebMessanger.jsstaticdomain, this.staticversion = wmsjsversion, this.frameorigin = WebMessanger.frameorigin) : "function" == typeof WmsLite && (this.uname = "" != WmsLite.zuid ? WmsLite.zuid : WmsLite.uname, this.wms_samedomain = WM_SAMED, this.prdid = getPrd(), this.userid = getUserId(), this.sid = getSid(), this.nname = getNickName(), this.staticdomain = WmsLite.jsstaticdomain, this.staticversion = wmsjsversion, this.frameorigin = WmsLite.frameorigin), null == this.iframeObj) {
        if (this.iframeObj = document.createElement("iframe"), this.iframeObj.name = "wmspsconnect", this.iframeObj.id = "psconnect", this.iframeObj.style.display = "none", this.iframeObj.src = "/" + _WMSCONT + "/psconnect.sas?wmscont=" + _WMSCONT + "&samedomain=" + this.wms_samedomain + "&nodomainchange=" + _WMS_NODOMAINCHANGE + "&uname=" + this.uname + "&staticdomain=" + this.staticdomain + "&staticversion=" + this.staticversion, ("function" == typeof WebMessanger && WebMessanger.tokenpairauth || "function" == typeof WmsLite && WmsLite.tokenpairauth) && (this.iframeObj.src += "&tokenpair=true"), "function" == typeof WebMessanger && WebMessanger.fp_hash && (this.iframeObj.src += "&hash=" + WebMessanger.fp_hash["psconnect.js"].split("_")[0]), _WMSZAID && (this.iframeObj.src += "&zaid=" + _WMSZAID), _WMSPOTYPE && (this.iframeObj.src += "&potype=" + _WMSPOTYPE), this.frameorigin) this.iframeObj.src += "&frameorigin=" + this.frameorigin;
        else {
            var e = window.location.protocol + "//" + window.location.host;
            if (window !== window.top)
                if ("about:" == window.location.protocol && (e = parent.location.protocol + "//" + parent.location.host), void 0 !== location.ancestorOrigins)
                    for (var t = 0; t < window.location.ancestorOrigins.length; t++) - 1 === e.indexOf(window.location.ancestorOrigins[t]) && (e.length && (e += ","), e += window.location.ancestorOrigins[t]);
                else if (window.location.search) {
                var s = new URLSearchParams(window.location.search).get("frameorigin");
                s && (e.length && (e += ","), e += s)
            } else document.referrer && (e.length && (e += ","), e += new URL(document.referrer).origin);
            this.iframeObj.src += "&frameorigin=" + encodeURIComponent(e)
        }
        document.body.appendChild(this.iframeObj), !1 === this.initialised && (this.initialised = !0, this.subinfo = {}, this.psids = {}, setTimeout((function() {
            PubSubApi.heartBeat()
        }), 3e4))
    } else PubSubImpl.onConnect()
}, PubSubApi.subscribe = function(e, t, s, i, n, a) {
    var o = "pskey=" + e + "&prd=" + this.prdid + "&wmsid=" + this.userid + "&sid=" + encodeURIComponent(this.sid) + "&config=" + s + "&dname=" + this.nname + "&opr=subscribe";
    null != a && null != n && (o = o + "&authtype=" + n + "&authid=" + a), "function" == typeof getZAID && getZAID() && (o += "&zaid=" + getZAID());
    var r = [e, t, s, i, n, a];
    this.wms_samedomain ? PubSubBridge.httpPost("subscribe", "/pubsubsrv/" + t + "/pubsub", o, r) : PubSubBridge.httpPost("subscribe", "/" + t + "/pubsub", o, r)
}, PubSubApi.resubscribe = function(e) {
    var t = "pskey=" + e.pskey + "&prd=" + this.prdid + "&wmsid=" + this.userid + "&sid=" + encodeURIComponent(this.sid) + "&config=" + e.config + "&dname=" + this.nname + "&opr=resubscribe";
    null != e.authid && null != e.authtype && (t = t + "&authtype=" + e.authtype + "&authid=" + e.authid), "function" == typeof getZAID && getZAID() && (t += "&zaid=" + getZAID());
    var s = [e.pskey];
    this.wms_samedomain ? PubSubBridge.httpPost("resubscribe", "/pubsubsrv/" + e.psuri + "/pubsub", t, s) : PubSubBridge.httpPost("resubscribe", "/" + e.psuri + "/pubsub", t, s)
}, PubSubApi.unSubscribe = function(e) {
    if (PubSubApi.isSubscribed(e)) {
        var t = PubSubApi.subinfo[e],
            s = "pskey=" + e + "&prd=" + this.prdid + "&wmsid=" + this.userid + "&sid=" + encodeURIComponent(this.sid) + "&config=" + t.config + "&dname=" + this.nname + "&opr=unsubscribe";
        null != t.authid && null != t.authtype && (s = s + "&authtype=" + t.authtype + "&authid=" + t.authid), "function" == typeof getZAID && getZAID() && (s += "&zaid=" + getZAID());
        var i = [e];
        this.wms_samedomain ? PubSubBridge.httpPost("unsubscribe", "/pubsubsrv/" + t.psuri + "/pubsub", s, i) : PubSubBridge.httpPost("unsubscribe", "/" + t.psuri + "/pubsub", s, i)
    }
}, PubSubApi.handleAuthFailure = function(e) {
    PubSubBridge.httpPost("authfailure", e)
}, PubSubApi.getSubscribedList = function() {
    var e = new Array;
    for (var t in this.psids) e.push(t);
    return e
}, PubSubApi.isSubscribed = function(e) {
    return null != this.psids[e]
}, PubSubApi.getUsers = function(e) {
    return PubSubApi.isSubscribed(e) ? this.subinfo[e].getUsers() : null
}, PubSubApi.isValidPSID = function(e, t) {
    return this.psids[e] == t
}, PubSubApi.getPsid = function(e) {
    return this.psids[e]
}, PubSubApi.ackSubscribe = function(e, t, s, i, n, a, o) {
    var r = new PubSubObject(e, t, s, i, n, a);
    PubSubApi.subinfo[e] = r, PubSubApi.psids[e] = o
}, PubSubApi.ackUnSubscribe = function(e) {
    delete PubSubApi.psids[e], delete PubSubApi.subinfo[e]
}, PubSubApi.ackResubscribe = function(e, t) {
    PubSubApi.psids[e] != t && PubSubApi.subinfo[e].reInitUsers(), PubSubApi.psids[e] = t
}, PubSubApi.handleError = function(e, t) {
    delete PubSubApi.psids[e], delete PubSubApi.subinfo[e]
}, PubSubApi.removeUsers = function(e, t, s) {
    PubSubApi.isValidPSID(e, t) && PubSubApi.subinfo[e].removeUsers(s)
}, PubSubApi.addUsers = function(e, t, s) {
    PubSubApi.isValidPSID(e, t) && PubSubApi.subinfo[e].addUsers(s)
}, PubSubBridge.onconnect = function() {
    PubSubImpl.onConnect()
}, PubSubBridge.handleHttpPost = function(e, t, s) {
    try {
        if ("subscribe" == e) {
            var i = JSON.parse(t)[0];
            if (null != i.errcode) {
                var n = i.errcode;
                PubSubApi.handleError(i.pskey, n), PubSubImpl.handleError(e, i.pskey, n)
            } else PubSubApi.ackSubscribe(s[0], s[1], s[2], s[3], s[4], s[5], i.psid), PubSubImpl.handleSubscribe(s[0])
        } else "unsubscribe" == e ? null != (i = JSON.parse(t)[0]).errcode ? (n = i.errcode, PubSubImpl.handleError(e, s[0], n)) : (PubSubApi.ackUnSubscribe(s[0]), PubSubImpl.handleUnSubscribe(s[0])) : "resubscribe" == e && "" != t && (null != (i = JSON.parse(t)[0]).errcode ? (n = i.errcode, PubSubApi.handleError(i.pskey, n), PubSubImpl.handleError(e, i.pskey, n)) : PubSubApi.ackResubscribe(s[0], i.psid))
    } catch (e) {}
}, WmsChatCache = function() {
    var e = {},
        t = [];
    return {
        insert: function(e, t) {},
        get: function(t) {
            if (e[t]) return e[t]
        },
        remove: function(s) {
            if (this.isAvailable(s)) return delete e[s], t.splice($WC.Util.indexOf(t, s), 1), !0
        },
        removeAll: function() {
            e = {}, t = []
        },
        isAvailable: function(e) {
            return !!this.get(e)
        }
    }
}(), WmsNotification.notifyNewMessage = function(e, t, s) {
    var i = e.sender,
        n = e.threadchatid || e.chid,
        a = WindowHandler.getWinObjById(n),
        o = a ? a.getTitle() : e.title,
        r = a ? a.ctype : e.ctype,
        l = !!$WC.RecentChats.getFromPinnedChatList(n);
    if ((i !== WebMessanger.zuid || e.includesenderinunread || "9" === r) && (a && a.highlight(), s || wmsnotifyowner && wmsnotifyowner.isOwner())) {
        var d = WMSUI.getNotificationTitle(e) + " " + $WC.I18N("Says") + "...";
        "9" === r && (d = o + " " + $WC.I18N("Says") + "..."), (WebMessanger.isExclusiveChat() || WebMessanger.isRTCChat() || WMSUI.isBarVisible() || WebMessanger.is_custom_menu_opted) && "3" !== WebMessanger.scode && "5" !== WebMessanger.scode && 0 == WebMessanger.isTitleBlinkDisabled && ChatBlink.start(d)
    }
    if (3 != WebMessanger.scode && 5 != WebMessanger.scode && (s || wmsnotifyowner && wmsnotifyowner.isOwner()) && (!$WC.Util.isLocalUser(i) || e.includesenderinunread)) {
        var c = "",
            u = "";
        "1" === r ? (c = "true" === e.customgroup ? WmsSound.constants.GROUPCHAT : WmsSound.constants.PERSONALCHAT, u = "true" === e.customgroup ? WmsSettings.adminsettings.groupmessage_tone : WmsSettings.adminsettings.smymessage) : "9" === r ? (c = WmsSound.constants.BOTMESSAGE, u = WmsSettings.adminsettings.botmessage_tone) : "8" === r ? (c = WmsSound.constants.CHANNEL, u = WmsSettings.adminsettings.channelmessage_tone) : (c = WmsSound.constants.GROUPCHAT, u = WmsSettings.adminsettings.groupmessage_tone), e.meta && e.meta.mentions && e.meta.mentions[WebMessanger.zuid] && WmsSound.isNotifyAllowed(WmsSound.constants.MENTION) && (c = WmsSound.constants.MENTION, u = WmsSettings.adminsettings.smention), l && WmsSound.isNotifyAllowed(WmsSound.constants.PINNEDCHAT) && (c = WmsSound.constants.PINNEDCHAT, u = WmsSettings.adminsettings.pinnedchats_tone), e.meta && e.meta.native_widget && "reminder" == e.meta.native_widget.type && WmsSound.isNotifyAllowed(WmsSound.constants.REMINDERS) && (c = WmsSound.constants.REMINDERS, u = WmsSettings.adminsettings.reminders_tone), WmsSound.annonUserSoundNotification && (u = "1"), (t = WmsSound.notification_tunes[u]) && WmsSound.playTune(t, c)
    }
    WMSUI.checkAndNotifyMsg(e)
}, WmsNotification.notifyNewCall = function(e, t, s, i, n, a) {
    if (WMSUI.isBarVisible() && "3" !== WebMessanger.scode && "5" !== WebMessanger.scode && wmsnotifyowner.isOwner()) {
        var o = t == WMSUI.avCall.CALL_TYPE_VIDEO ? "mediacall.incoming.video" : t == WMSUI.avCall.CALL_TYPE_VOICE ? "mediacall.incoming.audio" : a,
            r = e ? e + " " + $WC.I18N("mediacall.calling") : $WC.I18N(o);
        0 == WebMessanger.isTitleBlinkDisabled && ChatBlink.start(r), _WMSWINFOCUS || 1 != WmsSettings.vmymessage || $WC.DesktopNotification.show({
            title: e || "",
            body: $WC.I18N(o),
            icon: n || WmsContacts.getUserPhoto(s),
            checkownership: wmsnotifyowner,
            requireInteraction: !0,
            duration: WMSUI.avCall.notification_close_timer,
            id: "call"
        })
    }
}, WMSUI.imgPreview = {
    images: [],
    curimgpos: -1,
    init: function(e, t) {
        var s = e.querySelectorAll('img[data-previewable="true"]:not([data-rich="true"]):not([data-originalsrc]) , div[data-unfurl="true"] , div[data-attachment="true"]');
        "true" === t.getAttribute("data-rich") && (t = t.closest('[data-urlpreview="true"]').querySelector('div[data-unfurl="true"]')), WMSUI.imgPreview.getCurrentImgPosition(t, s), WMSUI.imgPreview.createOverlay(), WMSUI.imgPreview.bindevents();
        var i = e.getAttribute("data-chid");
        WMSUI.imgPreview.getAndReplaceImageDetails(WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos], i), $WC.Util.pubsub.publish("uievent/attachmentpreviewopen"), this.resizeOberver = new ResizeObserver((function(e) {
            e.forEach((function(e) {
                var t = document.getElementById("wms-imgpreviewlist");
                if (t) {
                    var s = t.querySelector("img") || t.querySelector("iframe");
                    s && WMSUI.imgPreview.populateUI(s)
                }
            }))
        })), this.resizeOberver.observe(document.getElementById("wms-imgoverlay"))
    },
    getAndReplaceImageDetails: function(e, t) {
        var s = null != e.getAttribute("data-fname") ? decodeURIComponent(e.getAttribute("data-fname")) : "",
            i = null != e.getAttribute("data-fsize") ? e.getAttribute("data-fsize") : "",
            n = e.getAttribute("data-fsender"),
            a = e.getAttribute("data-fdate"),
            o = e.getAttribute("data-ftime"),
            r = e.getAttribute("data-fcomment");
        r = null === r ? "" : r;
        var l = e.getAttribute("data-dname"),
            d = e.getAttribute("data-fcontent"),
            c = e.getAttribute("data-src") || e.getAttribute("data-furl"),
            u = e.getAttribute("data-customimg"),
            m = "false" !== e.getAttribute("data-filefrwrd") && !WebMessanger.isGuestUser(),
            h = e.getAttribute("data-isv1"),
            g = e.getAttribute("data-msguid"),
            p = e.getAttribute("data-timestamp"),
            f = e.getAttribute("data-infected"),
            v = '<span id="wms-imgpreviewfdate">' + $WC.Util.escapeHTML(a) + '</span> | <span id="wms-imgpreviewftime">' + $WC.Util.escapeHTML(o) + "</span>";
        if (v += i ? ' | <span id="wms-imgpreviewfsize">' + $WC.Util.escapeHTML(i) + "</span>" : "", t = t || e.getAttribute("data-chid"), $WC.Util.isLocalUser(n)) var C = $WC.I18N("Me");
        else C = $WC.Util.getContactName(n, l);
        var b = WMSUI.imgPreview.curimgpos + 1,
            y = WMSUI.imgPreview.images.length,
            _ = WMSUI.imgPreview.generateUI(),
            W = "";
        e.getAttribute("originalsrc") ? W = WMSUI.imgPreview.trimThumbnailImageUrl(e.getAttribute("originalsrc"), !0) : e.getAttribute("src") && (W = WMSUI.imgPreview.trimThumbnailImageUrl(e.getAttribute("src"), !0)), W.startsWith("data:") && (W = "/" + _CHATCONT + "/v1/attachments/" + c);
        var S = W; - 1 !== S.indexOf("coi=true") && (S = S.replace("&coi=true", ""));
        var w = !0;
        WindowHandler.chatrestrictions[t] && (WindowHandler.chatrestrictions[t].restrictFileForward && (m = !1), WindowHandler.chatrestrictions[t].restrictFileDownload && (w = !1));
        var M = "display: none";
        /^image\/.+$/.test(d) && (M = "");
        var I = "",
            T = !1,
            A = "";
        if ("WP" == WebMessanger.prd && WMSUI.zhShareInstance && WMSUI.zhShareInstance.isWpAttachmentCopyEnabled()) {
            I = "zhshare-src", A = e.closest(".zhshare-src") ? e.closest(".zhshare-src").getAttribute("data-zhshare-src-meta") : e.getAttribute("data-zhshare-src-meta"), A = JSON.parse(A);
            var E = {
                msguid: g,
                src: W,
                data_isv1: h,
                comment: r
            };
            A = Object.assign(A, E), A = JSON.stringify(A), T = !0
        }
        r = $WC.Matcher.replacer(/<span .*?>(.*?)<\/span>/gi, null, r, (function(e, t) {
            return t
        })), _ += "</div>", _ += u ? "" : '<div id="wms-imgpreviewsenderinfo" class="wms-imgpreviewfsenderinfo"><div style="display:table-row"><div class="wms-imgpreviewuserinfo"><img src="{{SENDERPIC}}" class="wms-imgpreviewfsenderpic"><span id="wms-imgpreviewfsender" class="wms-imgpreviewfsender">{{FSENDERNAME}}</span><div id="wms-imgpreviewcomment" class="wms-imgpreviewcomment wms-truncate-ellipsis" title="{{COMMENT}}"><div id="wms-imgpreviewfcomment" class="wms-imgpreviewfcomment"></div></div></div>', _ += u ? "" : '<div id="wms-imgpreviewfinfo" class="wms-imgpreviewfinfo"><div id="wms-imgpreviewfname" class="wms-imgpreviewfname">{{FNAME}}</div><div class="wms-imgpreviewfdetails" id="wms-imgpreviewfdetails"></div></div>', _ += u ? "" : '<div class="wms-imgpreviewactions"><div class="wms-imgpreviewfdownload" data-fsize="{{FSIZE}}">', _ += !u && w ? '<a id="wms-imgpreviewfdownload" data-documentclick="attdownload" target="_blank" href="{{DOWNLOADSRC}}" download="{{FNAME}}" data-infected="{{ISINFECTED}}" data-purpose="download"></a></div>' : "</div>", _ += s && m ? '<span class="wms-fileforwardimg" data-msguid="{{MSGUID}}" data-chid="{{CHID}}" data-fcomment="{{COMMENT}}" data-fcontent="{{CONTENT}}" data-furl="{{URL}}" data-fname="{{FNAME}}" data-fsrc="{{IMGSRC}}" data-purpose="forward" data-isv1={{ISV1}} title="Forward" data-infected="{{ISINFECTED}}"></span>' : "", _ += u ? "" : '<div id="wms-imgpreviewgotomessage" class="wms-imgpreviewgotomessage" title="Go to Message" data-purpose="gotomessage" data-chid="{{CHID}}" data-msguid="{{MSGUID}}" data-timestamp="{{TIMESTAMP}}"></div>', _ += WMSUI.show_imgedit_icon ? '<div class="wms-imgpreviewannotation" data-msguid="{{MSGUID}}" data-chid="{{CHID}}" data-fcomment data-fcontent="{{CONTENT}}" data-furl="{{URL}}" data-fname="{{FNAME}}" data-fsrc="{{IMGSRC}}" data-isv1={{ISV1}} title="' + $WC.I18N("chat.edit.image") + '" data-purpose="annotateimage" style="' + M + '"></div>' : "", _ += T ? '<div class="zhshare-copyicon zhshare-src" data-msguid="{{MSGUID}}" data-isv1={{ISV1}} data-fcomment="{{COMMENT}}" src="{{IMGSRC}}" data-zhshare-src-meta="{{zhshare_metaobj}}" data-zhshare-src-fname="{{FNAME}}" title="' + $WC.I18N("message.actions.copyfile") + '" data-purpose="copyimage"></div></div></div></div>' : "</div></div></div>", _ += '<span class="wms-imgpreviewclose" data-purpose="close"></span>', _ = $WC.template.replace(_, {
            FNAME: s,
            FSIZE: i,
            FDATE: a,
            FTIME: o,
            COMMENT: r,
            $IMGSTATUS: ["chat.imgpreview.status", [b, y]],
            FSENDERNAME: C,
            IMGSRC: W,
            DOWNLOADSRC: S,
            SENDERPIC: $WC.WmsContacts.getUserPhoto(n),
            CONTENT: d,
            URL: WMSUI.imgPreview.trimThumbnailImageUrl(c),
            ISV1: h,
            CHID: t,
            MSGUID: g,
            TIMESTAMP: p,
            ISINFECTED: f,
            zhshare_class: I,
            zhshare_metaobj: A
        }), document.getElementById("wms-imgpreviewcontainer").innerHTML = _, document.getElementById("wms-imgpreviewfdetails") && (document.getElementById("wms-imgpreviewfdetails").innerHTML = v), r && (document.getElementById("wms-imgpreviewfsender").style.margin = "0px 0px 0px 15px", document.getElementById("wms-imgpreviewcomment").style.display = "block", r = $WC.Markdown.apply($WC.Util.safeHTML($WC.Util.unescapeHTML(r))), r = Smiley.replace(r), document.getElementById("wms-imgpreviewfcomment").insertAdjacentHTML("beforeend", r)), 1 === y ? (document.getElementById("wms-imgpreviewnext").style.display = "none", document.getElementById("wms-imgpreviewprev").style.display = "none") : 1 === b ? document.getElementById("wms-imgpreviewprev").style.display = "none" : b === y && (document.getElementById("wms-imgpreviewnext").style.display = "none"), WMSUI.imgPreview.resize()
    },
    bindevents: function() {
        document.getElementById("wms-imgpreviewcontainer").addEventListener("click", (function(e) {
            var t = e.target.getAttribute("data-purpose");
            if ("close" == t) WMSUI.imgPreview.removeOverlay();
            else if ("nextimg" == t) WMSUI.imgPreview.next();
            else if ("previmg" == t) WMSUI.imgPreview.prev();
            else if ("forward" == t) {
                WMSUI.imgPreview.removeOverlay(), "true" === (d = e.target).getAttribute("data-infected") ? WMSUI.showFileInfectedDialog(e.target, !0) : WmsFileForwardUI.handlePreview(e.target)
            } else if ("startchat" == t) WMSUI.imgPreview.removeOverlay(), WmsHybridSearch.parseAndOpenChat(e.target);
            else if ("gotomessage" == t) {
                var s = document.getElementById("wms-imgpreviewgotomessage");
                WMSUI.imgPreview.removeOverlay();
                var i = s.getAttribute("data-timestamp"),
                    n = document.querySelector('[data-msgtime="' + i + '"]').closest(".wms_cw_main_parent"),
                    a = s.getAttribute("data-chid");
                Message.glowBubble(i, n, a)
            } else if ("annotateimage" == t) {
                var o = e.target;
                WMSUI.imgPreview.imgPreviewAnnotationHandling(o, !0)
            } else if ("download" == t) {
                if (e.preventDefault(), "true" === (d = e.target).getAttribute("data-infected")) WMSUI.showFileInfectedDialog(e.target, !1);
                else {
                    var r = d.getAttribute("download"),
                        l = d.getAttribute("href");
                    WmsFileUploadUI.handleDownload(r, l)
                }
            } else if ("copyimage" == t) {
                var d = e.target;
                WmsFileForwardUI.handleCopyFile(d)
            }
        }))
    },
    trimThumbnailImageUrl: function(e, t) {
        var s = e,
            i = s.split("&"),
            n = s.split("/");
        if (WebMessanger.isGuestUser() && -1 !== e.indexOf("thumbnail")) {
            var a = "thumbnail?guest_id=" + WebMessanger.guest_info.encrypt_id;
            n.splice(n.indexOf(a), 1), s = n.join("/"), s += "?guest_id=" + WebMessanger.guest_info.encrypt_id
        } else -1 !== i.indexOf("x-cli-msg=" + encodeURIComponent("{thumbnail:true}")) ? (i.splice(i.indexOf("x-cli-msg=" + encodeURIComponent("{thumbnail:true}")), 1), s = i.join("&")) : WebMessanger.crossoriginisolation && -1 !== i.indexOf("x-cli-msg=" + encodeURIComponent("{thumbnail:true,coi:true}")) ? (i.splice(i.indexOf("x-cli-msg=" + encodeURIComponent("{thumbnail:true,coi:true}")), 1), s = i.join("&")) : -1 !== n.indexOf("thumbnail") && (n.splice(n.indexOf("thumbnail"), 1), s = n.join("/"));
        return t && -1 !== s.indexOf("/view") && (s = s.replace("/view", "")), s
    },
    removeLoadingDiv: function() {
        var e = document.getElementById("wms_contactdetails_loadingdiv") || document.getElementById("wms_imagepreview_loadingdiv");
        e && (e.style.display = "none", e.className += " wms-fadeOut")
    },
    cloneImgElement: function(e) {
        var t = e.getAttribute("src");
        if (WMSUI.deletedattachments[t]) return t;
        var s = e.cloneNode(),
            i = e.getAttribute("originalsrc"),
            n = e.getAttribute("style");
        s.setAttribute("tempsrc", t), s.setAttribute("style", "background:transparent"), i = i ? WMSUI.imgPreview.trimThumbnailImageUrl(i) : WMSUI.imgPreview.trimThumbnailImageUrl(t);
        var a = s.getAttribute("data-fcontent"),
            o = s.getAttribute("data-fname");
        (a && (a.includes("heic") || a.includes("tiff")) || o && (o.includes("heic") || o.includes("tiff"))) && (i = t), i && (s.style.visibility = "hidden", s.src = i, s.onload = function() {
            WMSUI.imgPreview.removeLoadingDiv(), s.style.visibility = "visible", this.removeAttribute("originalsrc"), WMSUI.loadedimg[i] = !0
        }, s.onerror = function() {
            if (s.getAttribute("data-failedimage")) return $WC.Util.removeElement(s), void WMSUI.imgPreview.showImagePreviewError(t);
            var e = {
                    "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
                    "X-XHR-exception": !0
                },
                a = i,
                o = "";

            function r() {
                s.src = t, s.setAttribute("style", n), s.setAttribute("class", "wms-hvalign"), s.setAttribute("originalsrc", i), s.setAttribute("data-failedimage", !0)
            }
            WebMessanger.isGuestUser() && (a = i.split("?")[0], o = i.split("?")[1]), $WC.Ajax._getRequest(null, a, o, r, (function() {
                this.status >= 400 ? this.getResponseHeader("x-error") && (WMSUI.deletedattachments[t] = !0, WMSUI.imgPreview.showImagePreviewError(t)) : r()
            }), null, !0, e, {
                withCredentials: !0
            })
        }), s.removeAttribute("class"), s.setAttribute("id", "wms-imgpreview" + WMSUI.imgPreview.curimgpos), s.setAttribute("width", e.getAttribute("data-fwidth") + "px"), s.setAttribute("height", e.getAttribute("data-fheight") + "px");
        var r = e.closest("[data-msgdisp]") && e.closest("[data-msgdisp]").getAttribute("data-chid");
        return r && WindowHandler.chatrestrictions[r] && WindowHandler.chatrestrictions[r].restrictFileDownload && $WC.Util.addEvent(s, "contextmenu", (function(e) {
            e.preventDefault(), e.stopPropagation()
        })), s
    },
    showImagePreviewError: function(e) {
        var t = $WC.Util.createElement("img", "wms-imgnotfound", null, {
            "data-deletedurl": e,
            src: $WC.Config.get("staticserverpath") + "/images/bar/5ba42205_download_failed.svg",
            width: 90,
            height: 90
        });
        WMSUI.imgPreview.removeLoadingDiv(), WMSUI.imgPreview.populateUI(t)
    },
    createOverlay: function() {
        if (null == document.getElementById("wms-imgpreviewcontainer")) {
            var e = WebMessanger.isDarkModeEnabled ? "wms-imgpreviewcontainer zmNightMode" : "wms-imgpreviewcontainer";
            e += WebMessanger.isDNDBackupIconEnabled() ? " wms_dnd_backup_icon" : "";
            var t = $WC.Util.createElement("div", "wms-imgpreviewcontainer", e);
            t.style.zIndex = $WC.Config.get("zindex"), document.body.appendChild(t)
        }
        if (null == document.getElementById("wms-imgoverlay")) {
            var s = $WC.Util.createElement("div", "wms-imgoverlay", "wms-imgoverlay");
            s.style.zIndex = $WC.Config.get("zindex"), document.body.insertBefore(s, document.getElementById("wms-imgpreviewcontainer"))
        }
    },
    generateUI: function() {
        return '<div id="wms-imgpreviewleft" class="wms-imgpreviewleft" data-purpose="close"></div><div id="wms-imgpreviewright" class="wms-imgpreviewright" data-purpose="close"></div><div id="wms-imgpreviewnext" data-purpose="nextimg" class="wms-imgpreviewnext wms-valign-mid-block"><span class="wms-imgnext" data-purpose="nextimg"></span></div><div id="wms-imgpreviewprev" data-purpose="previmg" class="wms-imgpreviewprev wms-valign-mid-block"><span class="wms-imgprev" data-purpose="previmg"></span></div><div id="wms-imgpreviewholder" class="wms-imgpreviewholder"><div id="wms-imgpreviewlist" class="wms-imgpreviewlist {{zhshare_class}}" data-zhshare-src-meta="{{zhshare_metaobj}}" data-zhshare-src-fname="{{FNAME}}"></div>'
    },
    resize: function() {
        var e, t = document.getElementById("wms-imgpreviewnext"),
            s = document.getElementById("wms-imgpreviewprev");
        if (t && s)
            if (document.getElementById("wms-imgpreview" + WMSUI.imgPreview.curimgpos)) e = document.getElementById("wms-imgpreview" + WMSUI.imgPreview.curimgpos);
            else {
                var i = (e = WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos]).getAttribute("data-fname") && e.getAttribute("data-fname").split(".")[e.getAttribute("data-fname").split(".").length - 1];
                if ("true" === e.getAttribute("data-attachment") && $WC.UrlPreview.isFileSupportedByCliq(e.getAttribute("data-fcontent"), i)) {
                    var n = function() {
                        WMSUI.imgPreview.removeLoadingDiv(), document.getElementById("wms-imgpreviewfinfo").style.display = "block", WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos].removeAttribute("src"), WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos].setAttribute("data-nopreview", "true"), e = WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos], WMSUI.imgPreview.populateUI(e)
                    };
                    document.getElementById("wms-imgpreviewcontainer").insertAdjacentHTML("beforeend", '<span id="wms_imagepreview_loadingdiv" class="wms-hvalign wms_imagepreview_loadingdiv"></span>'), document.getElementById("wms-imgpreviewfinfo").style.display = "none", $WC.Ajax.requestToChat("v1/attachments/" + e.getAttribute("data-fsrc") + "/preview", "", (function(t) {
                        if (200 === (t = JSON.parse(t)).code) {
                            document.getElementById("wms-imgpreviewfinfo").style.display = "block", WMSUI.imgPreview.removeLoadingDiv();
                            var s = t.data.response;
                            WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos].setAttribute("src", s), e = WMSUI.imgPreview.cloneImgElement(WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos]), WMSUI.imgPreview.populateUI(e)
                        } else n()
                    }), n)
                } else "string" == typeof(e = WMSUI.imgPreview.cloneImgElement(WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos])) ? WMSUI.imgPreview.showImagePreviewError(e) : WMSUI.imgPreview.populateUI(e)
            }
    },
    getCurrentImgPosition: function(e, t) {
        for (var s = 0; s < t.length; s++) t[s + 1] && t[s + 1].getAttribute("data-furl") == t[s].getAttribute("data-furl") && t[s].getAttribute("src") && t[s].getAttribute("src").startsWith("data:image") ? e = t[s] === e ? t[s + 1] : e : (t[s].getAttribute("data-unfurl") || t[s].getAttribute("data-attachment") ? WMSUI.imgPreview.images.push(WMSUI.imgPreview.getIframeNode(t[s])) : WMSUI.imgPreview.images.push(t[s]), t[s] === e && (WMSUI.imgPreview.curimgpos = WMSUI.imgPreview.images.length - 1))
    },
    next: function() {
        WMSUI.imgPreview.curimgpos + 1 < WMSUI.imgPreview.images.length && (WMSUI.imgPreview.curimgpos++, WMSUI.imgPreview.getAndReplaceImageDetails(WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos]))
    },
    prev: function() {
        WMSUI.imgPreview.curimgpos > 0 && (WMSUI.imgPreview.curimgpos--, WMSUI.imgPreview.getAndReplaceImageDetails(WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos]))
    },
    populateUI: function(e) {
        var t = window.innerWidth,
            s = window.innerHeight;
        document.getElementById("wms-imgpreviewsenderinfo") && (s -= .8 * document.getElementById("wms-imgpreviewsenderinfo").clientHeight), "IFRAME" != e.nodeName && "wms-nopreview" != e.getAttribute("id") || (e.height = .8 * window.innerHeight, e.width = .8 * window.innerWidth);
        var i = e.getAttribute("data-maxwidth") || e.width,
            n = e.getAttribute("data-maxheight") || e.height,
            a = 400,
            o = 300,
            r = 0,
            l = 0,
            d = document.getElementById("wms-imgpreviewholder");
        if (e instanceof HTMLImageElement && (d.style.backgroundColor = "transparent"), e.getAttribute("data-maxwidth") && e.getAttribute("data-maxheight") || (e.setAttribute("data-maxwidth", i), e.setAttribute("data-maxheight", n)), i > t || n > s) {
            var c = [t / i, s / n];
            (c = Math.min(c[0], c[1])) < 1 && (i *= c, n *= c)
        }
        a = i, o = n;
        var u = s / 2 - n / 2,
            m = t / 2 - i / 2;
        if ((i < 400 || n < 300) && (i < 400 && (a = 400), n < 300 && (o = 300), r = u, l = m, u = s / 2 - o / 2, m = t / 2 - a / 2), d.style.top = u + "px", d.style.left = m + "px", d.style.width = a + "px", d.style.height = o + "px", 0 == r && 0 == l || (r -= u, l -= m), e.style.top = r + "px", e.style.left = l + "px", e.style.width = i + "px", e.style.height = n + "px", e.style.objectFit = "contain", e.style.position = "absolute", document.getElementById("wms-imgpreviewlist").appendChild(e), "wms-imgnotfound" === e.id || e.getAttribute("data-deletedimg")) {
            var h = $WC.I18N("attachment.not.found");
            e.getAttribute("data-deletedimg") && (h = $WC.I18N("attachment.deleted"), e.style.width = "130px", e.style.height = "130px", e.style.top = "", e.style.left = "", $WC.Util.addClass(e, "wms-hvalign"));
            var g = $WC.Util.createElement("span", null, "wms-halign", {
                style: "bottom:30px;"
            }, h);
            document.getElementById("wms-imgpreviewlist").appendChild(g)
        }
        if ("true" === e.getAttribute("data-nopreview") && "IFRAME" == e.nodeName && (document.getElementById("wms-imgpreviewlist").querySelector('[data-nopreview="true"]').contentWindow.document.body.innerHTML = '<div id="wms-nopreview" style=" display: flex;align-items: center;justify-content: center;background-color: #141414;border: 6px solid #fff;border-bottom: none;color: #fff;font-size: 20px;box-sizing: border-box;height:100%;width:100%;">' + $WC.I18N("chat.nopreview") + "</div>"), document.getElementById("wms_contactdetails_loadingdiv") || "true" === e.getAttribute("data-nopreview") || "true" === e.getAttribute("data-disablepreview") || WMSUI.isLoadedImg(e.getAttribute("src")) || WMSUI.deletedattachments[e.getAttribute("data-deletedurl")] || document.getElementById("wms-imgpreviewlist").insertAdjacentHTML("beforeend", '<span id="wms_contactdetails_loadingdiv" class="wms-hvalign wms_loading_div"></span>'), "true" === e.getAttribute("data-disablepreview") && "IFRAME" == e.nodeName) {
            setTimeout((function() {
                document.getElementById("wms-imgpreviewlist").querySelector('[data-disablepreview="true"]').contentWindow.document.body.innerHTML = '<div id="wms-nopreview" style=" display: flex;align-items: center;justify-content: center;background-color: #141414;border: 6px solid #fff;border-bottom: none;color: #fff;font-size: 20px;box-sizing: border-box;height:100%;width:100%;">' + $WC.I18N("chat.nopreview") + "</div>"
            }), 1e3)
        }
    },
    removeOverlay: function() {
        var e = document.getElementById("wms-imgoverlay"),
            t = document.getElementById("wms-imgpreviewcontainer");
        e && t && (document.body.removeChild(e), document.body.removeChild(t), $WC.Util.pubsub.publish("uievent/attachmentpreviewclose")), WMSUI.imgPreview.images.length && (WMSUI.imgPreview.images.length = 0), this.resizeOberver && (this.resizeOberver.disconnect(), this.resizeOberver = null)
    },
    handleKeyMovement: function(e) {
        if (null !== document.getElementById("wms-imgoverlay")) {
            var t = $WC.Util.getEventTarget(e);
            if ("TEXTAREA" == t.nodeName || "text" == t.type || "wms-filefrwrdrecipant" === t.id) return !0;
            var s = window.event ? e.keyCode : e.which;
            return 39 == s ? WMSUI.imgPreview.next() : 37 == s ? WMSUI.imgPreview.prev() : 27 == s && WMSUI.imgPreview.removeOverlay(), !0
        }
    },
    getIframeNode: function(e) {
        var t = document.createElement("div");
        t.innerHTML = e.getAttribute("src");
        var s = {};
        return "true" === e.getAttribute("data-attachment") ? (s["data-fcontent"] = e.getAttribute("data-fcontent"), s["data-attachment"] = e.getAttribute("data-attachment"), s["data-fsrc"] = e.getAttribute("data-fsrc"), s["data-furl"] = e.getAttribute("data-furl"), s["data-filefrwrd"] = e.getAttribute("data-filefwd"), s["data-isv1"] = e.getAttribute("data-isv1"), WMSUI.zhShareInstance && WMSUI.zhShareInstance.isWpAttachmentCopyEnabled() && (s["data-zhshare-src-meta"] = e.getAttribute("data-zhshare-src-meta"))) : (s["data-fsrc"] = t.childNodes[0].src, s["data-furl"] = t.childNodes[0].src, s.sandbox = "allow-scripts allow-same-origin"), s.src = t.childNodes[0].src, "true" === e.getAttribute("data-disablepreview") && (s.src = "", s["data-disablepreview"] = e.getAttribute("data-disablepreview")), s["data-fname"] = e.getAttribute("data-fname"), s["data-ftime"] = e.getAttribute("data-ftime"), s["data-fdate"] = e.getAttribute("data-fdate"), s["data-fsender"] = e.getAttribute("data-fsender"), s["data-dname"] = e.getAttribute("data-dname"), s["data-timestamp"] = e.getAttribute("data-timestamp"), s["data-chid"] = e.getAttribute("data-chid"), s["data-msguid"] = e.getAttribute("data-msguid"), s.frameBorder = "0", s.src.indexOf("frameorigin=") > -1 && -1 == s.src.indexOf(window.location.host) && (s.src = s.src.replace("frameorigin=", "frameorigin=" + window.location.origin + ",")), $WC.Util.createElement("iframe", "wms-url-preview", null, s)
    },
    checkAndShowAttDeletedInfo: function(e) {
        var t = document.getElementById("wms-imgpreviewcontainer");
        if (t) {
            var s = $WC.Config.get("staticserverpath") + "/images/bar/33299036_deleted_file_info.svg",
                i = $WC.Util.createElement("img", "wms-imgdeleted", "wms-imgdeleted", {
                    src: s,
                    width: 130,
                    height: 130,
                    "data-src": s,
                    "data-customimg": !0,
                    "data-deletedimg": !0
                }),
                n = t.querySelector("img, iframe");
            if (n && n.getAttribute("data-msguid") == e) {
                $WC.Util.removeElement(n);
                var a = t.querySelector("#wms_contactdetails_loadingdiv");
                $WC.Util.removeElement(a), WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos] = i, WMSUI.imgPreview.getAndReplaceImageDetails(WMSUI.imgPreview.images[WMSUI.imgPreview.curimgpos]), WMSUI.imgPreview.removeLoadingDiv()
            } else
                for (var o = 0; o < WMSUI.imgPreview.images.length; o++) WMSUI.imgPreview.images[o] && WMSUI.imgPreview.images[o].getAttribute("data-msguid") == e && (WMSUI.imgPreview.images[o] = i)
        }
    },
    imgPreviewAnnotationHandling: function(e, t) {
        var s = e.getAttribute("data-fsrc"),
            i = e.getAttribute("data-fname"),
            n = e.getAttribute("data-fcontent");
        ! function(e, t) {
            if (e.startsWith("data")) return t(e);
            var s = new XMLHttpRequest;
            s.onload = function() {
                var e = new FileReader;
                e.onloadend = function() {
                    t(e.result)
                }, e.readAsDataURL(s.response)
            }, s.open("GET", e), s.responseType = "blob", s.withCredentials = !0, s.send()
        }(s, (function(s) {
            var a = {
                url: s,
                type: n,
                name: i,
                success: function(s, i) {
                    e.setAttribute("data-fsrc", s), e.setAttribute("data-furl", s), i[0].annotated = !0, i[0].retain_samechid = t, WmsFileForwardUI.handlePreview(e, i), $WC.Util.isEmptyObject(WmsFileForwardUI.recipient_data) || (WmsFileForwardUI.insertSuggestion(WmsFileForwardUI.recipient_data.eventobj, WmsFileForwardUI.recipient_data.gettarget, WmsFileForwardUI.recipient_data.recipient), WmsFileForwardUI.recipient_data = {})
                }
            };
            WMSUI.imgPreview.removeOverlay(), $WC.Util.annotateImage(a)
        }))
    }
};
var WmsFileUploadHandler = {
        live_file_uploads: {},
        scheduleFileForUpload: {},
        isUdsNotReachable: !1,
        islivefupExist: function(e) {
            return this.live_file_uploads.hasOwnProperty(e)
        },
        getLivefupObj: function(e) {
            return this.live_file_uploads[e]
        },
        handleAckReceived: function(e, t) {
            this.islivefupExist(e) && this.getLivefupObj(e).handleAckReceived(t)
        },
        addToPendingFilesList: function(e, t) {
            this.islivefupExist(t.chat_id) && (this.getLivefupObj(t.chat_id).pendingfiles[e] = t)
        },
        setReplyMsgId: function(e, t, s) {
            var i = this.live_file_uploads[e];
            i && i.filesdetails[s] && (i.filesdetails[s].replyMsgUid = t)
        },
        setReplyChatId: function(e, t, s) {
            var i = this.live_file_uploads[e];
            i && i.filesdetails[s] && (i.filesdetails[s].replyChatId = t)
        },
        setThreadMsgId: function(e, t, s) {
            var i = this.live_file_uploads[e];
            i && i.filesdetails[s] && (i.filesdetails[s].threadMsgId = t)
        },
        addFileForUpload: function(e, t, s, i, n, a) {
            return this.islivefupExist(e) || (this.live_file_uploads[e] = new WmsFileUpload(e)), this.getLivefupObj(e).addFileForUpload(t, s, i, n, a)
        },
        startNextFileUpload: function(e, t) {
            this.startFileUpload(e, t)
        },
        startFileUpload: function(e, t) {
            if (this.islivefupExist(e)) {
                var s = this.getLivefupObj(e);
                if (1 == Object.keys(s.filesdetails).length) {
                    var i = WindowHandler.getWinObjById(e);
                    i.composer.value = "", i.invisiblediv.innerHTML = "", $WC.WmsSessionStorage.setChatInfo({
                        chid: e,
                        text: ""
                    }), i.changeFooterHeight()
                }
                if (!s.isAlreadyInProgress()) {
                    var n = function(e) {
                        for (var t = Object.keys(e), s = 0; s < t.length; s++)
                            if (!e[t[s]].error) return t[s];
                        return ""
                    }(s.filesdetails);
                    if (!n) return;
                    this.doPost(e, n, t), WmsFileUploadUI.toggleCancelButton(e, n)
                }
            }
        },
        trimFileName: function(e, t) {
            if (e.length > t) {
                var s = e.lastIndexOf("."),
                    i = s > 0 ? e.substring(s) : "";
                i = i.length > t / 2 ? i.substring(0, t / 2) : i, e = (e = s > 0 ? e.substring(0, s) : e).substring(0, t - (i.length + 1)) + i
            }
            return e
        },
        doPost: function(e, t, s) {
            var i = s.progresscallback,
                n = s.successcallback,
                a = s.errorcallback,
                o = this.getLivefupObj(e),
                r = o.getFileDetails(t),
                l = (new Date).getTime();
            0 == o.uploaded && (o.startingtime = (new Date).getTime());
            var d = t.substring(t.lastIndexOf("."), t.length),
                c = d ? t.substring(0, t.lastIndexOf(".")) + d.split("_")[0] : t,
                u = this.trimFileName($WC.Matcher.replace("invalidfilenamechars", c, "-"), WmsFileUploadUI.MAX_ALLOWED_FILE_NAME_LENGTH),
                m = WebMessanger.isUDSUploadEnabled(),
                h = new XMLHttpRequest;
            if (WebMessanger.isNetworkUser()) var g = "/" === WebMessanger.network_info.url[0] ? WebMessanger.network_info.url.slice(1) : WebMessanger.network_info.url,
                p = "/" + _CHATCONT + "/" + g + "/v1/attachments";
            else p = "/" + _CHATCONT + "/v1/attachments";
            if (h._debug = {
                    timestamp: (new Date).getTime()
                }, h.upload.addEventListener("progress", (function(s) {
                    if ($WC.Ajax.isStallTrackingNeeded(p) && $WC.Ajax.logResponseTimeIfGreaterThan3Seconds(h, p, s), "function" == typeof i) return i(s, e, t)
                }), e), h.onreadystatechange = function() {
                    if (4 == h.readyState)
                        if (200 == h.status || 204 == h.status) WmsFileUploadHandler.cleanUpFileUpload(e, s, t, !0), "function" == typeof n && n(e, t, h), WmsFileUploadHandler.isUdsNotReachable = !1, this.startNextFileUpload(e, s);
                        else {
                            ! function(e) {
                                return e && !(e.getResponseHeader("x-error") || "abort" === e.statusText || e.status >= 400 && e.status < 500)
                            }(h) || "function" != typeof a ? this.cleanUpFileUpload(e, s, t) : WmsFileUploadHandler.isUdsNotReachable ? (this.markAsError(e, t), a(e, t)) : (WmsFileUploadHandler.isUdsNotReachable = !0, WmsFileUploadHandler.doPost(e, t, s)), this.startNextFileUpload(e, s)
                        }
                }.bind(this), m && !this.isUdsNotReachable) {
                p = _UPLOADSERVERURL + "/webupload", h.open("POST", p, !0), h.withCredentials = !0;
                var f = {
                    "upload-id": e,
                    "x-service": WebMessanger.isRTCChat() ? _UDS_RTC_SERVICE : _UDS_CLIQ_SERVICE,
                    "x-cliq-sid": WebMessanger.sid,
                    "x-dfs-service": WebMessanger.isRTCChat() ? "wms" : "zfs",
                    charset: "UTF-8",
                    "x-streammode": "1",
                    "x-cliq-content-type": encodeURIComponent(r.fileobj.type),
                    "file-name": encodeURIComponent(u),
                    "Content-type": encodeURIComponent(r.fileobj.type)
                };
                for (var v in f) h.setRequestHeader(v, f[v]);
                WebMessanger.isRTCChat() && $WC.Cookie.get("x-client-access-token") && h.setRequestHeader("x-client-access-token", encodeURIComponent($WC.Cookie.get("x-client-access-token"))), r.comment && h.setRequestHeader("x-cliq-comment", encodeURIComponent(r.comment)), r.replyMsgUid && h.setRequestHeader("x-cliq-replyto", r.replyMsgUid), r.replyChatId && h.setRequestHeader("x-cliq-replyfrom", r.replyChatId), r.threadMsgId && h.setRequestHeader("x-cliq-thread_message_id", r.threadMsgId), r.postmsg_in_parent && h.setRequestHeader("x-cliq-post_in_parent", r.postmsg_in_parent), WebMessanger.isNetworkUser() && WebMessanger.network_info.screen_name && h.setRequestHeader("x-cliq-screen-name", WebMessanger.network_info.screen_name)
            } else if (WebMessanger.isGuestUser()) p = "/" + _CHATCONT + "/guestapi/v2/chats/" + e + "/files", h.open("POST", p, !0);
            else {
                if (r.comment) {
                    var C = {};
                    C[1] = r.comment, r.comment = C
                }
                h.open("POST", p, !0)
            }
            h.setRequestHeader("X-XHR-exception", "true"), h.setRequestHeader("X-ZCSRF-TOKEN", $WC.Util.getCSRF()), r.startingtime = (new Date).getTime(), r.req = h, h.opts = r;
            var b = h.opts.fileobj;
            if (h.opts.id = l, h.opts.comment = r.comment, h.opts.thread_message_id = r.threadMsgId ? r.threadMsgId : "", h.opts.post_in_parent = !!r.postmsg_in_parent || "", h.opts.zchat_csrparam = $WC.Util.getCSRF().split("=")[1], WebMessanger.isGuestUser()) {
                var y = {
                    id: l,
                    sid: WebMessanger.getSid(),
                    guest_id: WebMessanger.guest_info.encrypt_id,
                    zchat_csrparam: $WC.Util.getCSRF().split("=")[1]
                };
                if (h.setRequestHeader("x-cliq-guid", WebMessanger.guest_info.encrypt_id), h.opts.comment && (y.comments = JSON.stringify([h.opts.comment])), "undefined" != typeof FormData) {
                    for (var _ in b = new FormData, y) b.append(_, y[_]);
                    b.append("files", h.opts.fileobj)
                }
            } else m && !this.isUdsNotReachable ? h.setRequestHeader("x-cliq-msgid", l) : (b = o.getFormData(e, l, t), h.opts.thread_message_id && b.append("thread_message_id", r.threadMsgId), h.opts.zchat_csrparam && b.append("zchat_csrparam", $WC.Util.getCSRF().split("=")[1]), h.opts.post_in_parent && b.append("post_in_parent", h.opts.post_in_parent), h.opts.comment ? (b.append("comment", JSON.stringify(h.opts.comment)), b.append("files", h.opts.fileobj, "1_" + WmsFileUploadUI.validateAndReplaceFilename("replace", h.opts.fileobj.name))) : b.append("files", h.opts.fileobj, WmsFileUploadUI.validateAndReplaceFilename("replace", h.opts.fileobj.name)));
            h.send(b), WmsFileUploadHandler.addToPendingFilesList(r.id, {
                chat_id: e,
                callbackobj: s,
                filename: t
            });
            var W = WindowHandler.getWinObjById(e);
            W && W.closeReplyPreview(), WMSUI.imgPreview.removeOverlay(), WindowHandler.getWinObjById(e).composer.focus()
        },
        markAsError: function(e, t) {
            this.islivefupExist(e) && this.getLivefupObj(e).markAsError(t)
        },
        cleanUpFileUpload: function(e, t, s, i) {
            var n, a = !this.islivefupExist(e) || $WC.Util.isEmpty(s);
            a || !this.islivefupExist(e) || $WC.Util.isEmpty(s) || (n = this.getLivefupObj(e)).removeFileFromUpload(s, i), (a || 0 == n.getRemainingFilesCount()) && ($WC.Util.isEmpty(t) || "function" != typeof t.oncompletecallback || t.oncompletecallback(e, null, !0), this.islivefupExist(e) && ((n = this.getLivefupObj(e)).removeFileFromUpload(), delete this.live_file_uploads[e]))
        },
        getFailFilesCount: function(e) {
            if (this.islivefupExist(e)) return this.getLivefupObj(e).getFailedFilesCount()
        },
        resendFile: function(e, t, s, i) {
            this.islivefupExist(e) && t && (this.getLivefupObj(e).markForResend(t), this.startFileUpload(e, s, i))
        }
    },
    WmsFileUpload = function(e) {
        this.chid = e, this.uploadedfilecount = 0, this.filesdetails = {}, this.total = 0, this.uploaded = 0, this.startingtime = (new Date).getTime(), this.failfilecount = 0, this.pendingfiles = {}
    };
WmsFileUpload.prototype = {
    getTotalFileCount: function() {
        return this.uploadedfilecount + $WC.Util.getObjectLength(this.filesdetails)
    },
    getSharingFilesCount: function() {
        var e = this.uploadedfilecount + 1,
            t = this.getTotalFileCount();
        return e > t ? t : e
    },
    getRemainingFilesCount: function() {
        return $WC.Util.getObjectLength(this.filesdetails)
    },
    getPendingFilesCount: function() {
        var e = 0;
        for (var t in this.pendingfiles) this.pendingfiles[t].isuploaded && e++;
        return e
    },
    getFileDetails: function(e) {
        return e ? this.filesdetails[e] : this.filesdetails
    },
    getFailedFilesCount: function() {
        return this.failfilecount
    },
    isReplyMessage: function(e) {
        return this.filesdetails[e] && this.filesdetails[e].replyMsgUid
    },
    getReplyMsgId: function(e) {
        return this.filesdetails[e].replyMsgUid
    },
    addFileForUpload: function(e, t, s, i, n) {
        var a = this.getTotalFileCount(),
            o = i;
        if (!o) {
            var r = e.type,
                l = r.substring(r.indexOf("/") + 1, r.length);
            o = $WC.I18N("chat.file.upload") + $WC.DateUtil.formatTime(new Date) + "." + l, e.name = o
        }
        return o = o + "_" + a + "_" + $WC.DateUtil.formatTime(new Date), void 0 === this.filesdetails[o] && (this.filesdetails[o] = [], this.filesdetails[o].fileobj = e, this.filesdetails[o].comment = t, this.filesdetails[o].atmentions = s, this.filesdetails[o].fname = i, this.filesdetails[o].uploaded = 0, this.filesdetails[o].total = e.size, this.filesdetails[o].startingtime = (new Date).getTime(), this.filesdetails[o].req = null, this.filesdetails[o].progressing = !1, this.filesdetails[o].error = !1, this.filesdetails[o].postmsg_in_parent = n, this.total = this.total + e.size), o
    },
    isAlreadyInProgress: function() {
        for (var e in this.filesdetails)
            if (null !== this.filesdetails[e].req) return !0;
        return !1
    },
    markAsError: function(e) {
        var t = this.filesdetails;
        if (e && !$WC.Util.isEmptyObject(t) && void 0 !== t[e]) {
            var s = t[e];
            this.uploaded -= s.uploaded, s.req = null, s.error = !0, this.failfilecount++
        }
    },
    removeFileFromUpload: function(e, t) {
        var s = this.filesdetails;
        if (e) {
            if (!$WC.Util.isEmptyObject(s) && void 0 !== s[e]) {
                var i = s[e].req,
                    n = s[e].fileobj.size - s[e].uploaded;
                null === i || t || 0 === i.status && "abort" === i.statusText || s[e].req.abort(), this.uploadedfilecount += t ? 1 : 0, this.failfilecount -= s[e].error ? 1 : 0, this.uploaded = this.uploaded + (n > 0 ? n : 0), delete this.filesdetails[e]
            }
        } else {
            var a = {};
            for (var o in this.failfilecount = 0, s) void 0 !== s[o] && null !== s[o].req ? a[o] = s[o] : delete this.filesdetails[o];
            for (var r in a) a[r].req.abort(), delete this.filesdetails[r]
        }
    },
    markForResend: function(e) {
        var t = this.filesdetails;
        e && !$WC.Util.isEmptyObject(t) && t[e] && t[e].error && (t[e].error = !1, t[e].uploaded = 0, this.failfilecount--)
    },
    updateProgressDetails: function(e, t) {
        t > this.filesdetails[e].uploaded && (this.uploaded = this.uploaded + (t - this.filesdetails[e].uploaded), this.filesdetails[e].uploaded = t)
    },
    getFormData: function(e, t, s) {
        var i = {
            id: e,
            sid: WebMessanger.getSid()
        };
        1 === this.getTotalFileCount() && t && (i.msgid = t);
        var n = this.getReplyMsgId(s);
        if (n && (i.reply_to = n), "undefined" != typeof FormData) {
            var a = new FormData;
            for (var o in i) a.append(o, i[o]);
            return a
        }
    },
    handleAckReceived: function(e) {
        if (this.pendingfiles[e]) {
            var t = this.pendingfiles[e],
                s = t.chat_id,
                i = t.filename;
            delete this.pendingfiles[e], WmsFileUploadUI.cleanUpFileUpload(s, t.callbackobj, i, !0, !1)
        }
    }
};
var WmsFileUploadUI = {
        zomojicomponent: new $WC.ZomojiComponent,
        zomojicomponentvisible: !1,
        autocompletepickervisible: !1,
        chidvsfiles: {},
        filedetails: [],
        MAX_ALLOWED_FILE_SIZE: 52428800,
        MAX_ALLOWED_FILE_NAME_LENGTH: 100,
        FILE_EXTENSION: ["plain", "quicktime", "javascript", "x-sh"],
        handlePreview: function(e, t) {
            this.validateInput(e, t) && (WMSUI.imgPreview.createOverlay(), this.showPreview(e, t))
        },
        validateInput: function(e, t) {
            return !$WC.Util.isFile(t[0]) || !$WC.Util.isFilesizeExceeded(t, WebMessanger.getFileUploadLimit() || WmsFileUploadUI.MAX_ALLOWED_FILE_SIZE) || (this.resetForm(e), !1)
        },
        resetForm: function(e) {
            (delete this.chidvsfiles[e], this.filedetails = [], WindowHandler.getWinObjById(e)) && document.getElementById(e).querySelector("#formsend").reset();
            this.listcommon = "", WMSUI.atMentions.autocompletediv = "", WMSUI.atMentions.invisiblediv = ""
        },
        showPreview: function(e, t) {
            $WC.Util.isEmpty(this.chidvsfiles[e]) || (t = this.chidvsfiles[e].concat(Array.prototype.slice.call(t)));
            var s = document.getElementById("wms-fileupldcmt");
            if (s) {
                var i = parseInt(s.getAttribute("data-fileindex"));
                this.storeComments(i, s, e)
            }
            var n = 1 == t.length ? "wms-fileupldwinbody1" : "wms-fileupldwinbody",
                a = 1 == t.length ? "style=display:none" : "",
                o = this.getFileUploadWindowHTML();
            o = $WC.template.replace(o, {
                $SHAREINFO: ["share.file.user", $WC.Util.unescapeHTML(WindowHandler.getWinObjById(e).title)],
                PREVIEWCLASS: n,
                CHID: e,
                UPLOADCHID: "uploads" + e,
                FILESLIST_HOLDER: a
            }), document.getElementById("wms-imgpreviewcontainer").innerHTML = o, $WC.Button.mountComponent(document.getElementById("wms_fileshare_button"), "button", "12", $WC.I18N("common.share"), "", "wms_fileupld_share", $WC.I18N("common.share"), this.uploadFile.bind(this, e)), $WC.Button.mountComponent(document.getElementById("wms_filecancel_button"), "button", "12", $WC.I18N("common.cancel"), "", "wms_fileupld_cancel", $WC.I18N("common.cancel"), this.cancelFileUpload.bind(this, e));
            var r = this.fillFileDetails(e, t);
            r = $WC.template.replace(r, {
                STYLE: a
            }), document.getElementById("wms-fileupldcontainer").insertAdjacentHTML("beforeend", r);
            var l = document.getElementById("wms-fileupldpreview0");
            this.setPreview(l, t[0], 0), s = document.getElementById("wms-fileupldcmt");
            var d = WindowHandler.getWinObjById(e);
            if (1 == t.length) this.storeComments(0, d.composer, e);
            else {
                document.getElementById("wms_fileslistholder").innerHTML = this.getMiniFilesPreview(t);
                for (var c = 0; c < t.length; c++) {
                    var u = document.getElementById("wms_filespreview" + c);
                    this.setMiniPreview(u, t[c])
                }
            }
            this.bindEvents(e), this.chidvsfiles[e] = Array.prototype.slice.call(t), this.fillComments(0, s, e), this.updateCommentCount(s), s.onpaste = function(t) {
                var s = WindowHandler.getWinObjById(e);
                "5" == s.ctype || "true" === s.editorreplydiv.getAttribute("data-editmsg") || s.permdenied || WmsFileUploadUI.handlePaste(t), t.stopPropagation()
            }, $WC.Util.pubsub.publish("uievent/fileuploaduiopen")
        },
        setMiniPreview: function(e, t) {
            var s = t.name.split("."),
                i = s[s.length - 1];
            if (!i && t.type && -1 == this.FILE_EXTENSION.indexOf(t.type.split("/")[1]) && (i = t.type.split("/")[1]), i = "." + $WC.Util.safeHTML($WC.Util.unescapeHTML(i)), $WC.Matcher.check("imagemimetype", t.type)) {
                var n = new FileReader;
                n.onload = function(t) {
                    var s = '<img src="' + t.target.result + '">';
                    e.insertAdjacentHTML("beforeend", s)
                }, n.readAsDataURL(t)
            } else e.insertAdjacentHTML("beforeend", '<div class="wms-fileimgpreview_mini"><div class="wms_fileextn_mini">' + i + "</div></div>")
        },
        getMiniFilesPreview: function(e) {
            for (var t = "", s = 0; s < e.length; s++) {
                var i = '<div class="' + (0 == s ? "wms_fileslist_wrappersel" : "wms_fileslist_wrapper") + '"><div data-purpose="preview" data-fileindex={{index}} id="wms_filespreview{{index}}" class="wms_fileslist"><div data-purpose="close" class="wms_fileslist_close"></div></div></div>';
                t += $WC.template.replace(i, {
                    index: s
                })
            }
            return t
        },
        getFileUploadWindowHTML: function() {
            return '<div id="wms-fileupldwin" class="wms-fileupldwin wms-hvalign ' + (WebMessanger.rtlmode ? "wms-rtl" : "") + '"><div id="wms-fileupldwinheader" class="wms-fileupldwinheader">{{SHAREINFO}}<span class="wms-fileupldclose" data-purpose="cancel"></span></div><div id="wms-fileupldwinbody" class="{{PREVIEWCLASS}}"><div id="wms-filefrwrderrormsg" class="wms-fileuploaderror"></div><div id="wms-fileupldcontainer" class="wms-fileupldcontainer1"><div id="wms_fileslistholder" class="wms_fileslistholder" {{FILESLIST_HOLDER}}></div></div><div class="wms-fileupldactions" id="wms_fileupldactions"><div class="wms_addfiles_wrapper"><div class="wms_addfiles" id="wms_addfiles">' + $WC.I18N("upload.add.files") + '</div><form type="html5" name="{{UPLOADCHID}}" enctype="multipart/form-data" class="wms_cw_actualfile" chid="{{CHID}}" id="formsend" title="Add files"><input name="file2" data-purpose="addfiles" id="wms-file1" tabindex="0" type="file" multiple size="30"></form></div><div class="wms_fileupld_button"><div data-purpose="upload" id="wms_fileshare_button"></div><div data-purpose="cancel" id="wms_filecancel_button"></div></div></div><div data-dragcomp="true" class="wms-fileupldwindrag" style="display:none"><span>' + $WC.I18N("chat.file.drop") + "</span></div></div></div>"
        },
        fillFileDetails: function(e, t) {
            var s, i = "",
                n = "",
                a = WindowHandler.getWinObjById(e).salesiqchat ? " wms_filecomment_hide" : "";
            i = this.getFileHTML(e), (s = t[0].name && this.validateAndReplaceFilename("replace", t[0].name)) || (s = $WC.I18N("chat.file.upload") + $WC.DateUtil.formatTime(new Date));
            var o = s.lastIndexOf(".");
            return -1 != o ? n = s.substring(o) : o = s.length, s = s.substring(0, o), i = $WC.template.replace(i, {
                FNAME: s,
                FEXTN: n,
                INDEX: 0,
                HIDEFILECOMMENT: a,
                CHID: e
            })
        },
        setPreview: function(e, t, s) {
            var i = this.filedetails[s] && this.filedetails[s].fname || t.name,
                n = t.name.split("."),
                a = n[n.length - 1];
            if (!a && t.type && -1 == this.FILE_EXTENSION.indexOf(t.type.split("/")[1]) && (a = t.type.split("/")[1]), a = "." + $WC.Util.safeHTML($WC.Util.unescapeHTML(a)), $WC.Matcher.check("imagemimetype", t.type)) {
                var o = new FileReader;
                o.onload = function(s) {
                    var n = '<img src="' + s.target.result + '">',
                        o = WMSUI.show_imgedit_icon ? '<div id="imgannotation" class="imgannotation" data-purpose="annotateimage" title="' + $WC.I18N("chat.edit.image") + '"></div>' : "";
                    e.innerHTML = n + '<div class="wms_filedetails_wrapper"><div class="wms_filedetails"><div class="wms_fname_wrapper"><input id="wms_fnameinput" data-fextn="' + a + '" data-purpose="edit_fname" type="text" maxlength="50"/><span id="wms_fnameholder" data-fextn="' + a + '" class="wms_fname">' + $WC.Util.safeHTML($WC.Util.unescapeHTML(i)) + '</span></div><div class="wms_fextn">' + $WC.Util.getFileSize(t.size) + "</div></div>" + o + "</div>"
                }, e.innerHTML = '<div class="wms_filedetails_wrapper"><div class="wms_filedetails"><div class="wms_fname_wrapper"><input id="wms_fnameinput" data-fextn="' + a + '" data-purpose="edit_fname" type="text" maxlength="50"/><span id="wms_fnameholder" data-fextn="' + a + '" class="wms_fname">' + $WC.Util.safeHTML($WC.Util.unescapeHTML(i)) + '</span></div><div class="wms_fextn">' + $WC.Util.getFileSize(t.size) + "</div></div></div>", o.readAsDataURL(t)
            } else $WC.Util.addClass(e, "wms_fileupldbg"), e.innerHTML = '<span class="wms-fileimgpreview wms-hvalign"><span class="wms_fileextn">' + a + '</span></span><div class="wms_filedetails_wrapper"><div class="wms_filedetails"><div class="wms_fname_wrapper"><input id="wms_fnameinput" data-fextn="' + a + '" data-purpose="edit_fname" type="text" maxlength="50"/><span id="wms_fnameholder" data-fextn="' + a + '" class="wms_fname">' + $WC.Util.safeHTML($WC.Util.unescapeHTML(i)) + '</span></div><div class="wms_fextn">' + $WC.Util.getFileSize(t.size) + "</div></div></div>"
        },
        getFileHTML: function(e) {
            var t = $WC.Util.isMacOS() ? $WC.I18N("file.upload.comment.mac") : $WC.I18N("file.upload.comment"),
                s = WindowHandler.getWinObjById(e),
                i = s.thread_parentid ? s.thread_parentid : e,
                n = "block" === s.editorreplydiv.style.display && (s.editorreplydiv.getAttribute("data-threadmsg") || s.editorreplydiv.getAttribute("data-threadreply")) && s.editorreplydiv.querySelector('[data-type="custom"]').className || "wms_settings_customcheckbox",
                a = s.editorreplydiv.getAttribute("data-threadreply") || $WC.Util.isThreadChid(e) ? '<div id="wms_thread_postmsg" data-checkbox_setting="0" data-purpose="post_threadmsg" class="wms_settings_chckbx wms_thread_postmsg"><span data-type="custom" class=' + n + ' ></span><input id="wms_notifyeditmsg" data-setting="notifyedit" type="checkbox" class="wms_settings_checkbox"><label id="wms_notifyeditlabel" class="wms_settings_label">' + $WC.I18N("thread.msgs.post", [$WC.Util.safeHTML($WC.Channels.getChannelName(i) || s.thread_parent_title)]) + "</label></div>" : "";
            return this.checkSupport() ? '<div data-fileindex="{{INDEX}}" data-type="file" class="wms-fileupldcnt1 wms-fileupldpreview"><div id="wms-fileupldpreview{{INDEX}}" class="wms-fileupldimgpreview"></div><div class="wms-smileycontainer wms-fileupldsmileycon" data-smileycontainer="true"></div><div id="wms-footer" class="wms-footer{{HIDEFILECOMMENT}}"><div class="wms-smileycontainer wms-smileyautocomplete" data-smileyautocomplete="true"></div><div id="wms-autocomplete" class="wms-autocomplete" data-autocomplete="true" style="display:none"></div><div id="wms-invisiblediv" class="wms-invisiblediv wms-fileupldcmt" data-invisiblediv="true"></div><textarea chid={{CHID}} id="wms-fileupldcmt" data-fileindex="0" data-purpose="keyupload" placeholder="' + t + '" class="wms-fileupldcmt"></textarea><div class="wms-filecmntcount" data-limit="1000">1000</div>' + a + '<div id="wms-smileyinvoker" class="wms-smileyinvoker wms-fileupldsmileyinvoker" data-purpose="smiley"></div></div></div>' : '<div data-fileindex="{{INDEX}}" data-type="file" class="wms-fileupldcnt1 wms-fileupldpreview"><input class="wms-fileupldfname" id="wms-fileupldfname" style="height:10%" value="{{FNAME}}" disabled><div id="wms-fileupldpreview{{INDEX}}" class="wms-fileupldimgpreview" style="height:90%"></div></div>'
        },
        validateAndReplaceFilename: function(e, t) {
            if (t) {
                var s = /[`~!$%^&|\\"<>?/]/g;
                return "check" === e ? s.test(t) || !t : "replace" === e ? t.replace(s, "-") : void 0
            }
        },
        checkSupport: function() {
            if (void 0 !== (new XMLHttpRequest).upload && void 0 !== new FormData) return !0
        },
        handleSmileyClick: function(e) {
            var t = e.target.parentNode.parentNode.querySelector("[data-smileycontainer]");
            this.zomojicomponentvisible ? this.hideEmojiPicker(t) : this.showEmojiPicker(t)
        },
        updateSmiley: function(e, t) {
            var s = null;
            document.getElementById("wms-fileupldwin") && (s = $WC.Util.getEventTarget(t).closest('[data-type="file"]').querySelector('[id="wms-fileupldcmt"]'));
            Smiley.updateSmiley(s, e)
        },
        handleClose: function(e, t) {
            var s = !1,
                i = e.parentNode.parentNode,
                n = e.parentNode.getAttribute("data-fileindex");
            "wms_fileslist_wrappersel" === i.className && (s = !0), i.remove();
            var a = this.chidvsfiles[t];
            a.splice(parseInt(n), 1), this.filedetails.length && this.filedetails.splice(parseInt(n), 1);
            for (var o = document.getElementById("wms_fileslistholder"), r = o.querySelectorAll("[data-fileindex]"), l = document.getElementById("wms-fileupldcmt"), d = r.length, c = 0; c < d; c++) 0 == c && s && (r[c].parentNode.setAttribute("class", "wms_fileslist_wrappersel"), this.setPreview(document.getElementById("wms-fileupldpreview0"), a[c])), s && this.filedetails.length && this.fillComments(0, l, t), "wms_fileslist_wrappersel" === r[c].parentNode.className && document.getElementById("wms-fileupldcmt").setAttribute("data-fileindex", c), r[c].setAttribute("data-fileindex", c);
            1 == d && (o.style.display = "none", document.getElementById("wms-fileupldwinbody").setAttribute("class", "wms-fileupldwinbody1"))
        },
        initialiseMentions: function(e, t) {
            if (e.keyCode === $WC.WmsConstants.KEYCODES.ESCAPE) WMSUI.atMentions.autocompletediv && "none" != WMSUI.atMentions.autocompletediv.style.display ? (WmsFileUploadUI.listcommon.showUI(""), WMSUI.atMentions.autocompletediv.style.display = "none") : e.target.value ? (e.target.value = "", WMSUI.atMentions.invisiblediv = "", WmsFileUploadUI.updateCommentCount(e.target)) : (WMSUI.imgPreview.removeOverlay(), WmsFileUploadUI.resetForm(t));
            else if (e.keyCode !== $WC.WmsConstants.KEYCODES.UP && e.keyCode !== $WC.WmsConstants.KEYCODES.DOWN) {
                var s = e.target.selectionStart,
                    i = e.target.value;
                "" == i && (WMSUI.atMentions.invisiblediv.innerHTML = "", WMSUI.atMentions.autocompletediv.style.display = "none"), i = i.substring(0, s);
                for (var n = 0, a = (WMSUI.atMentions.invisiblediv.innerHTML, ["@"]), o = 0; o < a.length; o++) {
                    var r = i.lastIndexOf(" " + a[o]) + 1;
                    0 == r && (r = i.lastIndexOf("\n" + a[o]) + 1), 0 === r && 0 !== i.indexOf(a[o]) && (r = -1), -1 !== r && r >= n && (n = r, WMSUI.curtrigger = a[o])
                }
                WMSUI.atMentions.init(t, e.target, null, WMSUI.atMentions.invisiblediv, WMSUI.atMentions.autocompletediv)
            }
        },
        bindEvents: function(e) {
            var t = document.getElementById("wms-fileupldwin");
            this.listcommon = new ListCommon(document.getElementById("wms-fileupldcmt"), t.querySelector('[id="wms-autocomplete"]')), WMSUI.atMentions.invisiblediv = t.querySelector('[id="wms-invisiblediv"]'), WMSUI.atMentions.autocompletediv = t.querySelector('[id="wms-autocomplete"]');
            var s = document.getElementById("wms-fileupldcmt");
            $WC.Util.addEvent(s, "scroll", (function(e) {
                WMSUI.handleSync(e.target)
            })), Gator(t).on("change", "#wms-file1", (function(t) {
                var s = t.target.files;
                WMSUI.submitFile(e, s)
            })), Gator(t).on("keyup", function(s) {
                var i = s.target.getAttribute("data-purpose");
                if ("keyupload" === i) this.initialiseMentions(s, e), this.updateCommentCount(s.target);
                else if ("edit_fname" == i && 13 == s.keyCode) {
                    var n = document.getElementById("wms-fileupldcmt"),
                        a = t.querySelector('[id="wms_fnameholder"]'),
                        o = s.target.value + a.getAttribute("data-fextn");
                    $WC.$CUtil.setInnerText(a, o), n.focus()
                }
            }.bind(this)), t.addEventListener("click", function(s) {
                var i = s.target.getAttribute("data-purpose") || s.target.closest("[data-purpose]") && s.target.closest("[data-purpose]").getAttribute("data-purpose");
                if ("cancel" === i) this.cancelFileUpload(e);
                else if ("close" === i) this.handleClose(s.target, e);
                else if ("smiley" == i) this.handleSmileyClick(s);
                else if ("search" !== i && this.zomojicomponentvisible) {
                    for (var n = t.querySelectorAll("[data-smileycontainer]"), a = 0; a < n.length; a++) n[a].className = n[a].className.replace(" wms-smileyborder", "");
                    this.zomojicomponent.unmountComponent(), this.zomojicomponentvisible = !1
                } else if ("preview" == i) {
                    var o = document.getElementById("wms_fileslistholder").querySelectorAll('[class*="wms_fileslist_wrapper"]');
                    for (a = 0; a < o.length; a++) o[a].setAttribute("class", "wms_fileslist_wrapper");
                    s.target.closest("[data-purpose]").parentNode.setAttribute("class", "wms_fileslist_wrappersel");
                    var r = parseInt(s.target.closest("[data-purpose]").getAttribute("data-fileindex")),
                        l = document.getElementById("wms-fileupldpreview0"),
                        d = document.getElementById("wms-fileupldcmt"),
                        c = this.chidvsfiles[e],
                        u = parseInt(d.getAttribute("data-fileindex"));
                    d = document.getElementById("wms-fileupldcmt");
                    this.storeComments(u, d, e), this.setPreview(l, c[r], r), d.setAttribute("data-fileindex", r), this.fillComments(r, d, e), $WC.Config.get("disableAttachmentComposerAutoFocus") || d.focus(), this.updateCommentCount(d)
                } else if ("edit_fname" == i) {
                    var m = t.querySelector('[id="wms_fnameholder"]'),
                        h = $WC.Util.getInnerText(m);
                    s.target.value = h.substring(0, h.lastIndexOf("."))
                } else if ("post_threadmsg" == i) {
                    var g = s.target.closest("[data-checkbox_setting]") || t.querySelector("[data-checkbox_setting]"),
                        p = t.querySelector('[data-type="custom"]');
                    "1" === (s.target.getAttribute("data-checkbox_setting") || g && g.getAttribute("data-checkbox_setting")) ? ($WC.Util.removeClass(p, "wms_settings_customcheckboxsel"), $WC.Util.addClass(p, "wms_settings_customcheckbox"), g.setAttribute("data-checkbox_setting", "0")) : ($WC.Util.removeClass(p, "wms_settings_customcheckbox"), $WC.Util.addClass(p, "wms_settings_customcheckboxsel"), g.setAttribute("data-checkbox_setting", "1"))
                } else if ("annotateimage" == i) {
                    var f = s.target.closest(".wms-fileupldimgpreview"),
                        v = {
                            url: f.querySelector("img").getAttribute("src"),
                            type: "image/png",
                            name: f.querySelector(".wms_fname").innerHTML,
                            success: function(t, s) {
                                var i = s;
                                WmsFileUploadUI.updateAnnotatedImage(i, e)
                            }
                        };
                    $WC.Util.annotateImage(v)
                }
            }.bind(this)), t.addEventListener("keydown", function(t) {
                "keyupload" == t.target.getAttribute("data-purpose") && 13 == t.keyCode && (t.ctrlKey || t.metaKey) && (this.uploadFile(e), t.preventDefault())
            }.bind(this)), t.addEventListener("focusin", function(e) {
                var s = e.target.getAttribute("data-purpose");
                if ("fileupload" == s) {
                    for (var i = this.getElementsByClassName("wms-fileupldfname"), n = 0; n < i.length; n++) i[n].setAttribute("style", "border-color: transparent");
                    document.getElementById("wms-filefrwrderrormsg").setAttribute("style", "display:none")
                } else if ("edit_fname" == s) {
                    var a = t.querySelector('[id="wms_fnameholder"]'),
                        o = $WC.Util.getInnerText(a);
                    e.target.value = o.substring(0, o.lastIndexOf("."))
                } else if ("addfiles" == s) {
                    var r = t.querySelector('[id="wms_addfiles"]');
                    $WC.Util.setAttribute(r, "data-addfiles", !0)
                }
            }.bind(this)), t.addEventListener("focusout", function(e) {
                var s = e.target.getAttribute("data-purpose");
                if ("edit_fname" == s) {
                    var i = document.getElementById("wms-fileupldcmt"),
                        n = t.querySelector('[id="wms_fnameholder"]'),
                        a = e.target.value + n.getAttribute("data-fextn");
                    $WC.$CUtil.setInnerText(n, a), i.focus()
                } else if ("addfiles" == s) {
                    t.querySelector('[id="wms_addfiles"]').removeAttribute("data-addfiles")
                }
            }.bind(this));
            var i = WindowHandler.getWinObjById(e);
            if (_WMSDRAGDROP && !i.permdenied && !i.restrict_file_upload) {
                var n = document.getElementsByClassName("wms-fileupldwindrag")[0];
                WmsDragDrop.addDragDropListeners(t, i, e, n)
            }
            s.addEventListener("input", function(e) {
                var i = e.target.value;
                WmsFileUploadUI.initiateEmojiPicker(i, t, s)
            }.bind(this))
        },
        fillComments: function(e, t, s) {
            var i = WindowHandler.getWinObjById(s);
            this.filedetails[e] && this.filedetails[e].comment ? (t.value = this.filedetails[e].comment, this.filedetails[e].atmentions ? (i.atmentions = this.filedetails[e].atmentions, WMSUI.atMentions.changeColor(t)) : WMSUI.atMentions.invisiblediv && (WMSUI.atMentions.invisiblediv.innerHTML = "")) : (t.value = "", WMSUI.atMentions.invisiblediv && (WMSUI.atMentions.invisiblediv.innerHTML = "")), $WC.Config.get("disableAttachmentComposerAutoFocus") || t.focus()
        },
        storeComments: function(e, t, s) {
            var i = WindowHandler.getWinObjById(s),
                n = document.getElementById("wms_fnameinput"),
                a = n.getAttribute("data-fextn"),
                o = n.value ? n.value + a : this.filedetails[e] && this.filedetails[e].fname;
            this.filedetails[e] = {
                comment: Smiley.replaceTextToEnglishCodes(t.value),
                atmentions: i.atmentions,
                fname: o
            }, i.atmentions = ""
        },
        updateCommentCount: function(e) {
            var t = e.parentNode.querySelector("[data-limit]"),
                s = e.value.length,
                i = t.getAttribute("data-limit"),
                n = i - s;
            n < 10 ? $WC.Util.addClass(t, "wms_cntred") : $WC.Util.removeClass(t, "wms_cntred"), n < 0 ? e.value = e.value.substring(0, i) : $WC.$CUtil.setInnerText(t, n)
        },
        setAndClearReplyMsg: function(e, t, s) {
            var i = WindowHandler.getWinObjById(e),
                n = i.getReplyMessageId();
            $WC.Util.isEmpty(n) || (i && i.editorreplydiv.getAttribute("data-threadreply") ? WmsFileUploadHandler.setThreadMsgId(e, n, t) : WmsFileUploadHandler.setReplyMsgId(e, n, t));
            var a = i.editorreplydiv.querySelector("[data-replymsgtime]");
            if (null !== a) {
                var o = a.getAttribute("data-privatereplychid");
                WmsFileUploadHandler.setReplyChatId(e, o, t)
            }
            s && i && i.closeReplyPreview()
        },
        cancelFileUpload: function(e) {
            WMSUI.imgPreview.removeOverlay(), this.resetForm(e)
        },
        uploadFile: function(e) {
            var t = this.chidvsfiles[e],
                s = document.getElementById("wms-fileupldcontainer").querySelectorAll('[data-type="file"]'),
                i = WindowHandler.getWinObjById(e);
            if (i && i.salesiqchat) return WmsUIImpl.uploadFile(t, this.getCommentsDetails(s), e), this.resetForm(e), WMSUI.imgPreview.removeOverlay(), void i.composer.focus();
            var n = document.getElementById("wms-fileupldcmt"),
                a = parseInt(n.getAttribute("data-fileindex"));
            this.storeComments(a, n, e);
            for (var o = !(!document.getElementById("wms_thread_postmsg") || "1" !== document.getElementById("wms_thread_postmsg").getAttribute("data-checkbox_setting")), r = 0; r < t.length; r++) {
                var l = "",
                    d = "";
                this.filedetails[r] && (l = this.filedetails[r].atmentions ? $WC.Util.unescapeHTML(WMSUI.atMentions.formatAtMentions(this.filedetails[r].comment, this.filedetails[r].atmentions, e, !0)) : this.filedetails[r].comment, d = this.filedetails[r].atmentions);
                var c = t[r],
                    u = this.filedetails[r] && this.filedetails[r].fname || c.name,
                    m = !1;
                r === t.length - 1 && (m = !0);
                var h = WmsFileUploadHandler.addFileForUpload(e, c, l, d, u, o);
                this.setAndClearReplyMsg(e, h, m)
            }
            var g = this.getCallBackObject();
            WmsFileUploadHandler.startFileUpload(e, g), this.resetForm(e), WMSUI.imgPreview.removeOverlay(), i.composer.focus(), this.addProgressBarForEachFile(e, g)
        },
        getCallBackObject: function() {
            return {
                progresscallback: this.handleProgress,
                successcallback: this.handlesuccess,
                errorcallback: this.errorUploadProgress,
                oncompletecallback: this.clearUploadProgress
            }
        },
        toggleCancelButton: function(e, t) {
            if (!$WC.Util.isEmpty(e)) {
                var s = WindowHandler.getWinObjById(e).progressbarnode;
                if (!$WC.Util.isEmpty(t) && WmsFileUploadHandler.islivefupExist(e)) {
                    s.querySelector('[data-purpose="uploadcancel"]').display = "none";
                    var i = s.querySelector('[data-filename="' + WmsFileUploadUI.validateAndReplaceFilename("replace", t) + '"]');
                    WmsFileUploadHandler.getLivefupObj(e).getTotalFileCount() > 1 && i && (i.querySelector('[data-purpose="close"]').display = "none")
                }
            }
        },
        addProgressBarForEachFile: function(e) {
            var t = WmsFileUploadHandler.getLivefupObj(e),
                s = t.getFileDetails(),
                i = "",
                n = WindowHandler.getWinObjById(e).progressbarnode;
            if (t.getTotalFileCount() > 1) {
                for (var a in s) {
                    if (!n.querySelector('[data-filename="' + WmsFileUploadUI.validateAndReplaceFilename("replace", a) + '"]')) {
                        var o = s[a];
                        i += $WC.template.replace('<div  class="wms_uploaddetails {{FAIL}}" data-filename="{{FILENAME}}"><div class="wms_uploadprogress"><div class="wms_uploadfiledetails"><span class="wms_uploadfilename" title="{{FILE_DISPLAY_NAME}}">{{FILE_DISPLAY_NAME}}</span><span class="wms_file_errorinfo"></span></div><div class="wms_uploadprogresswrapper"><div id="wmsloadingtxt" class="wms-loading-sub" data-progressindicator="true"></div></div></div><div class="wms_uploadicons"><span data-purpose="resend" data-filename="{{FILENAME}}" title="Retry" class="wms_fileupld_resend"></span><span data-purpose="close" data-filename="{{FILENAME}}" title="Cancel" class="wms_fileupld_close"></span></div></div>', {
                            FILE_DISPLAY_NAME: $WC.Util.safeHTML(o.fname) + this.getFileSizeForDisplay(o),
                            FAIL: o.error ? "sending-failed" : "",
                            FILENAME: a
                        })
                    }
                }
                n.querySelector('[id="wms_expandfilescontainer" ]').insertAdjacentHTML("beforeend", i)
            }
            this.updateUploadProgressBarContainer(n, e, t)
        },
        getFileSizeForDisplay: function(e) {
            return " - (" + $WC.Util.getFileSize(e.fileobj.size) + ")"
        },
        cleanUpFileUpload: function(e, t, s, i, n) {
            WmsFileUploadHandler.cleanUpFileUpload(e, t, s, i), this.clearUploadProgress(e, s, i, n)
        },
        resendFile: function(e, t, s) {
            e && t && (WmsFileUploadHandler.resendFile(e, t, this.getCallBackObject()), this.handleResend(e, t, s))
        },
        resendAllFiles: function(e) {
            if (WmsFileUploadHandler.islivefupExist(e)) {
                var t = WmsFileUploadHandler.getLivefupObj(e).filesdetails,
                    s = WindowHandler.getWinObjById(e).progressbarnode;
                for (var i in t) this.resendFile(e, i, s)
            }
        },
        handleResend: function(e, t, s) {
            if (e) {
                var i = WmsFileUploadHandler.getFailFilesCount(e),
                    n = (s = s || WindowHandler.getWinObjById(e).progressbarnode).querySelector('[data-filename="' + WmsFileUploadUI.validateAndReplaceFilename("replace", t) + '"]');
                t && n && $WC.Util.removeClass(n, "wms_sending_failed");
                var a = i ? $WC.I18N("common.file.fail", [i]) : "";
                a = 1 === i ? $WC.I18N("common.status.failed") : a, $WC.$CUtil.setInnerText(s.querySelector('[id="wms_failcountbar"]'), a), i || $WC.Util.removeClass(s.querySelector('[data-purpose="filecontainer" ]'), "wms_sending_failed")
            }
        },
        handleProgress: function(e, t, s) {
            if (e.lengthComputable) {
                var i = WmsFileUploadHandler.getLivefupObj(t);
                if (!$WC.Util.isEmpty(i) && !$WC.Util.isEmptyObject(i) && i.getTotalFileCount() > 0 && void 0 !== i.getFileDetails(s)) {
                    var n = i.getFileDetails();
                    if (!$WC.Util.isEmpty(n[s])) {
                        i.updateProgressDetails(s, e.loaded);
                        var a = n[s],
                            o = {
                                uploaded: a.uploaded,
                                total: a.total,
                                fup: i
                            };
                        WmsFileUploadUI.updateUploadprogressBar(t, o, s)
                    }
                }
            }
        },
        updateUploadprogressBar: function(e, t, s) {
            var i, n, a, o = WindowHandler.getWinObjById(e);
            if (o) {
                var r = o.progressbarnode,
                    l = r.querySelector("[data-progressindicator]"),
                    d = t.fup,
                    c = (i = d.uploaded, n = d.total, a = i / n * (100 / d.getTotalFileCount()), ((a += (d.getTotalFileCount() - d.getRemainingFilesCount()) * (100 / d.getTotalFileCount())) && a > 100 ? 100 : Math.round(a)) / 100);
                if (l.style.transform = "scaleX(" + c + ")", d.getTotalFileCount() > 1) {
                    c = (t.uploaded / t.total).toFixed(2);
                    var u = r.querySelector('[data-filename="' + s + '"]');
                    if (u) u.querySelector("[data-progressindicator]").style.transform = "scaleX(" + c + ")"
                }
            }
        },
        updateUploadProgressBarContainer: function(e, t, s) {
            s = $WC.Util.isEmpty(s) ? WmsFileUploadHandler.getLivefupObj(t) : s;
            var i = e.querySelector('[id="wms_failcountbar"]');
            if ($WC.Util.isEmpty(s)) e.querySelector("[data-progressindicator]").style = "", i.style.display = "none";
            else {
                var n = Object.keys(s.getFileDetails())[0];
                if (!$WC.Util.isEmpty(n)) {
                    var a = e.querySelector('[id="wms_fileexpandicon"]'),
                        o = e.querySelector("[data-progresstext]");
                    if (1 == s.getTotalFileCount()) {
                        var r = s.getFileDetails(n);
                        o.innerHTML = $WC.I18N("chat.file.sharing", ["<b>" + $WC.Util.safeHTML(r.fname) + "</b>", this.getFileSizeForDisplay(r)]), $WC.Util.removeClass(a, "wms_fileupld_shrink"), $WC.Util.addClass(a, "wms_fileupld_expand"), a.setAttribute("title", $WC.I18N("common.expand")), a.setAttribute("data-purpose", "expand"), a.style.display = "none", e.querySelector("[data-progressholder]").style.display = "block", e.querySelector('[id="wms_expandfilescontainer"]').style.display = "none"
                    } else o.innerHTML = $WC.I18N("chat.files.sharing", ["<b>" + s.getSharingFilesCount() + "</b>", "<b>" + s.getTotalFileCount() + "</b>"]), a.style.display = "block", i.style.display = "block";
                    e.style.display = "block"
                }
            }
        },
        handlesuccess: function(e, t, s) {
            var i = WmsFileUploadHandler.getLivefupObj(e);
            i && i.pendingfiles.hasOwnProperty(s.opts.id) && (i.pendingfiles[s.opts.id].isuploaded = !0), WmsFileUploadUI.clearUploadProgress(e, t);
            WindowHandler.getWinObjById(e);
            s.opts.threadMsgId || WmsFileUploadUI.updateLocalFileData(e, t, s), WmsFileUploadUI.customCallBackObj && "function" == typeof WmsFileUploadUI.customCallBackObj.successCallBack && (WmsFileUploadUI.customCallBackObj.successCallBack(), WmsFileUploadUI.clearCustomCallBackObj())
        },
        updateLocalFileData: function(e, t, s) {
            var i = WindowHandler.getWinObjById(e),
                n = s.opts && s.opts.id,
                a = s.opts && s.opts.comment,
                o = s.opts && s.opts.atmentions,
                r = s.opts && s.opts.fname,
                l = s.opts && s.opts.replyMsgUid,
                d = s.opts && s.opts.fileobj,
                c = d && d.type;
            if (!i.msgdisp.querySelector('[data-msgackid="' + n + '"]') && !l && "video/quicktime" !== c && "video/mov" !== c && "application/x-matroska" !== c) {
                var u = {
                    msg: {}
                };
                u.msg.dim = {};
                var m = u,
                    h = i,
                    g = new FileReader;
                g.onload = function(e) {
                    if (m.url = e.target.result, m.msg.url = e.target.result, u.msg.comment && Message.isCustomEmoji(u.msg.comment) && !$WC.Util.isEmptyObject($WC.CustomEmoji.constructCustomEmojiMeta(u.msg.comment)) && (u.meta || (u.meta = {}), u.meta.customemoji = $WC.CustomEmoji.constructCustomEmojiMeta(u.msg.comment)), $WC.Matcher.check("imagemimetype", d.type)) {
                        var t = new Image;
                        t.onload = function() {
                            m.msg.dim.width = this.width, m.msg.dim.height = this.height, m.msg.dim.size = d.size, h.msgdisp.querySelector('[data-msgackid="' + m.msgackid + '"]') || h.updateMessage(u)
                        }, t.src = e.target.result
                    } else h.msgdisp.querySelector('[data-msgackid="' + m.msgackid + '"]') || h.updateMessage(u)
                }, u.zuid = WebMessanger.zuid, u.sender = WebMessanger.zuid, u.ctype = i.ctype, u.chid = e, u.mod = "att", u.time = n, u.msgackid = n, u.msg.isv1local = !0, u.msguid = escape(WebMessanger.zuid + " " + n), u.msg.isv1 = !0, u.msg.fName = WmsFileUploadUI.validateAndReplaceFilename("replace", r), u.msg.content = d.type || "text/plain", u.msg.size = $WC.Util.getFileSize(d.size), u.msg.comment = a, d.duration && (u.msg.duration = d.duration), o && (u.msg.meta = {}, u.msg.meta.mentions = {}, o.split(",").forEach((function(t) {
                    if (t) {
                        var s = {};
                        s.id = t, s.type = $WC.Bots.isBotId(t) ? 4 : 1, s.name = $WC.Util.getContactName(t, null, !0) || $WC.Util.unescapeHTML(WindowHandler.getWinObjById(e).title), u.msg.meta.mentions[t] = s
                    }
                }))), g.readAsDataURL(d), "11" != h.ctype || "false" !== h.thread_follower || WebMessanger.threadmap[e] || (WebMessanger.threadmap[e] = "true")
            }
        },
        clearUploadProgress: function(e, t, s, i) {
            var n, a, o = WindowHandler.getWinObjById(e).progressbarnode,
                r = o.querySelector('[id="wms_expandfilescontainer"]'),
                l = o.querySelector('[id="wms_fileexpandicon"]'),
                d = o.querySelector('[data-filename="' + WmsFileUploadUI.validateAndReplaceFilename("replace", t) + '"]');
            if (t && d) {
                var c = d.querySelector('[data-purpose="close"]');
                if (s) {
                    i || ($WC.Util.removeClass(c, "wms_fileupld_close"), $WC.Util.addClass(c, "wms_fileupld_sel"), c.style.display = "block"), n = r.getBoundingClientRect().height;
                    var u = WmsFileUploadHandler.getLivefupObj(e);
                    u ? setTimeout((function() {
                        var e = u.getRemainingFilesCount() + u.getPendingFilesCount(),
                            t = e * (d.getBoundingClientRect().height + 4) > n ? n : e * (d.getBoundingClientRect().height + 4);
                        $WC.Util.animate(r, "height", n, t), t || 0 != $WC.Util.getObjectLength(u.filedetails) || (r.innerHTML = "", r.style.border = "none", r.style.padding = "0px", WmsFileUploadUI.toggleExpandContainerIcon(l), o.querySelector("[data-progressindicator]").style.display = "block"), d.style.display = "none", c.style.display = "none"
                    }), 1e3) : (o.style.display = "none", r.innerHTML = "", r.style = "", WmsFileUploadUI.toggleExpandContainerIcon(l))
                } else c.style.display = "none"
            } else s && (a = function() {
                r.innerHTML = "", r.style.border = "none", r.style.padding = "0px"
            }, n = r.getBoundingClientRect().height, $WC.Util.animate(r, "height", n, 0, a), WmsFileUploadUI.toggleExpandContainerIcon(l), o.querySelector("[data-progressindicator]").style.display = "block", o.style.display = "none");
            WmsFileUploadUI.handleResend(e, t, o), WmsFileUploadUI.updateUploadProgressBarContainer(o, e), WmsFileUploadUI.toggleCancelButton(e, t, !0)
        },
        toggleExpandContainerIcon: function(e) {
            "none" !== e.style.display && ($WC.Util.removeClass(e, "wms_fileupld_shrink"), $WC.Util.addClass(e, "wms_fileupld_expand"), e.setAttribute("data-purpose", "expand"), e.setAttribute("title", $WC.I18N("common.expand")))
        },
        errorUploadProgress: function(e, t) {
            var s = WindowHandler.getWinObjById(e).progressbarnode,
                i = s.querySelector('[id="wms_failcountbar"]'),
                n = WmsFileUploadHandler.getLivefupObj(e);
            $WC.Util.addClass(s.querySelector('[data-purpose="filecontainer" ]'), "wms_sending_failed"), i.innerHTML = 1 == n.getTotalFileCount() ? $WC.I18N("common.status.failed") : $WC.I18N("common.file.fail", [WmsFileUploadHandler.getFailFilesCount(e)]), i.style.display = "block", t && s && $WC.Util.addClass(s.querySelector('[data-filename="' + t + '"]'), "wms_sending_failed"), WmsFileUploadUI.toggleCancelButton(e, t, !0), WmsFileUploadUI.customCallBackObj && "function" == typeof WmsFileUploadUI.customCallBackObj.errorCallBack && (WmsFileUploadUI.customCallBackObj.errorCallBack(), WmsFileUploadUI.clearCustomCallBackObj())
        },
        expandFilesContainer: function(e, t) {
            var s, i, n = WindowHandler.getWinObjById(e).progressbarnode,
                a = n.querySelector('[id="wms_expandfilescontainer"]'),
                o = n.querySelector('[id="wms_fileexpandicon"]'),
                r = n.querySelector("[data-progressindicator]");
            "expand" === t ? (a.style = "", a.style.display = "block", i = function() {
                setTimeout((function() {
                    a.style.overflowY = "auto"
                }), 500)
            }, s = a.getBoundingClientRect().height, $WC.Util.animate(a, "height", 0, s, i), $WC.Util.removeClass(o, "wms_fileupld_expand"), $WC.Util.addClass(o, "wms_fileupld_shrink"), o.setAttribute("title", $WC.I18N("common.collapse")), o.setAttribute("data-purpose", "collapse"), r.style.display = "none") : (i = function() {
                setTimeout((function() {
                    a.style.border = "none", a.style.padding = "0px"
                }), 500)
            }, a.style.overflow = "hidden", s = a.getBoundingClientRect().height, $WC.Util.animate(a, "height", s, 0, i), $WC.Util.removeClass(o, "wms_fileupld_shrink"), $WC.Util.addClass(o, "wms_fileupld_expand"), o.setAttribute("title", $WC.I18N("common.expand")), o.setAttribute("data-purpose", "expand"), r.style.display = "block")
        },
        handlePaste: function(e) {
            var t = e.target.getAttribute("chid"),
                s = [],
                i = WindowHandler.getWinObjById(t),
                n = (e.originalEvent || e).clipboardData;
            if (n) {
                var a = n.items;
                if (a) {
                    for (var o = 0; o < a.length; o++) d = a[o].type, $WC.Matcher.check("imagemimetype", a[o].type) && null !== a[o].getAsFile() && s.push(a[o].getAsFile());
                    if (0 === s.length || i.restrict_file_upload || (WmsFileUploadUI.handlePreview(t, s), e.preventDefault(), $WC.Config.get("disableAttachmentComposerAutoFocus") || document.getElementById("wms-fileupldcmt").focus()), 0 == s.length && !i.restrict_file_upload && n.getData(d)) {
                        var r = n.getData(d),
                            l = /<img.*?src=['"](.*?)['"]/;
                        if (r && l.exec(r) && (r = l.exec(r)[1]).startsWith("data")) {
                            var d, c = /data:([a-zA-Z0-9]+\/[a-zA-Z0-9-.+]+).*,.*/,
                                u = (d = c.exec(r) && c.exec(r)[1]) ? $WC.Util.constructAnnotateImgFile(r, d, "image.png") : "";
                            u && u.length && WmsFileUploadUI.handlePreview(t, u)
                        }
                    }
                }
            }
        },
        getCommentsDetails: function(e) {
            for (var t = {
                    comments: {}
                }, s = 0; s < e.length; s++) {
                var i = parseInt(e[s].getAttribute("data-fileindex")),
                    n = e[s].querySelector('[id="wms-fileupldcmt"]').value;
                n && (t.comments[i + 1] = n.trim())
            }
            return t
        },
        initiateEmojiPicker: function(e, t, s) {
            var i = Message.getCurtriggers("text");
            if (WMSUI.getCurtriggers(e, i) == $WC.WmsConstants.TRIGGERS.SMILEY || this.autocompletepickervisible) {
                var n = t.querySelector('[data-smileyautocomplete="true"]'),
                    a = s.value.substring(0, s.selectionStart),
                    o = a.lastIndexOf(" " + $WC.WmsConstants.TRIGGERS.SMILEY) + 1,
                    r = WMSUI.autoComplete.isSmileyTriggerPresent(o, a);
                WmsFileUploadUI.autocompletepickervisible && !r ? WmsFileUploadUI.hideEmojiPicker(n, s, !0) : r && "false" != WMSUI.autoComplete.getSearchTermForComposer(a) && WmsFileUploadUI.showEmojiPicker(n, s, !0, WMSUI.autoComplete.getSearchTermForComposer(a))
            }
        },
        showEmojiPicker: function(e, t, s, i) {
            if (this.autocompletepickervisible && i) this.zomojicomponent.updateSearchTerm(i);
            else {
                var n = {
                    hidesearch: s,
                    autocomplete: s,
                    hidestickers: !0,
                    hidecustomemoji: !0,
                    hidegifs: !0
                };
                i && (n.searchterm = i), this.autocompletepickervisible && !s && this.hideEmojiPicker(this.zomojicomponent.node), e.className += " wms-smileyborder", s ? (this.autocompletepickervisible = !0, WMSUI.autoComplete.setKeyNavigation(t, this.zomojicomponent)) : this.zomojicomponentvisible = !0;
                var a = WmsSettings.getEmoticonTypes();
                a && (n.hidelivezomoji = a.hidelivezomoji, n.hidezomoji = a.hidezomoji, n.hideemoji = a.hideemoji);
                var o = WmsImplHandler.invokeSynchronously(WmsUIImpl.getChatWindowOptions);
                o && !$WC.Util.isEmptyObject(o) && ("disable" == o.zomoji && (n.hidezomoji = !0), "disable" == o.live_zomoji && (n.hidelivezomoji = !0), "disable" == o.emoji && (n.hideemoji = !0)), this.zomojicomponent.mountComponent(e, !0, function(i, n) {
                    s ? WMSUI.autoComplete.select(t, i) : WmsFileUploadUI.updateSmiley(i, n), this.hideEmojiPicker(e)
                }.bind(this), function() {
                    this.hideEmojiPicker(e, s)
                }.bind(this), n)
            }
        },
        hideEmojiPicker: function(e) {
            this.zomojicomponent.unmountComponent(), e.className = e.className.replace(" wms-smileyborder", ""), this.autocompletepickervisible ? (this.autocompletepickervisible = !1, WMSUI.autoComplete.removeKeyNavigation(e.parentElement.querySelector("#wms-fileupldcmt"), this.zomojicomponent)) : this.zomojicomponentvisible = !1
        },
        isConfirmationNeeded: function(e) {
            var t = e.split(".").pop();
            if ($WC.Util.isMacOSMojaveOrOlder()) {
                return ["url", "fileloc"].includes(t)
            }
            if ($WC.Util.isWindowsOS()) {
                return ["lnk"].includes(t)
            }
            return !1
        },
        handleDownload: function(e, t) {
            if (this.isConfirmationNeeded(e)) {
                var s = [$WC.I18N("file.download.confirmation"), $WC.I18N("file.download.confirmation")],
                    i = new $WC.ConfirmationDialog,
                    n = {
                        actions: [{
                            text: $WC.I18N("file.open.anyway"),
                            onclick: function() {
                                window.open(t, "_blank", "noopener,noreferrer"), i.unmountComponent()
                            },
                            buttonstyle: "confirmation_button"
                        }, {
                            text: $WC.I18N("common.cancel"),
                            onclick: function() {
                                i.unmountComponent()
                            },
                            buttonstyle: "cancel_button"
                        }],
                        heading: s,
                        headercontent: [$WC.I18N("filename.download.confirmation", e)]
                    };
                return i.mountComponent(n), !1
            }
            window.open(t, "_blank", "noopener,noreferrer")
        },
        setCustomCallBackObj: function(e) {
            this.customCallBackObj = e
        },
        clearCustomCallBackObj: function() {
            this.customCallBackObj = null
        },
        updateAnnotatedImage: function(e, t) {
            var s = document.getElementById("wms-fileupldpreview0"),
                i = this.chidvsfiles[t].length;
            if (1 == i) this.chidvsfiles[t].splice(0, 1, e[0]);
            else
                for (var n = 0; n < i; n++) this.chidvsfiles[t][n].name == e[0].name && this.chidvsfiles[t].splice(n, 1, e[0]);
            var a = this.chidvsfiles[t];
            if (this.setPreview(s, a[a.length - 1], a.length - 1), 1 !== a.length) {
                document.getElementById("wms_fileslistholder").innerHTML = this.getMiniFilesPreview(a);
                for (n = 0; n < a.length; n++) {
                    var o = document.getElementById("wms_filespreview" + n);
                    this.setMiniPreview(o, a[n])
                }
            }
        }
    },
    WmsFileForwardUI = {
        mentions: [],
        recipient_data: {},
        handlePreview: function(e, t, s) {
            WMSUI.imgPreview.createOverlay();
            var i = e ? e.getAttribute("data-chid") || e.closest("[data-chid]").getAttribute("data-chid") : s.chatId,
                n = e ? e.getAttribute("data-msguid") || e.closest("[data-msguid]").getAttribute("data-msguid") : s.msguid,
                a = this.getWindowHTML();
            document.getElementById("wms-imgpreviewcontainer").innerHTML = a;
            var o = !(!t || !t[0].annotated) && t[0].annotated,
                r = o ? this.uploadAnnotatedFile.bind(this, i, t) : this.createChatAndForward.bind(this, i, n);
            ($WC.Button.mountComponent(document.getElementById("wms-fileforward"), "button", "12", $WC.I18N("message.actions.forward"), "", "wms_fileupld_share", $WC.I18N("message.actions.forward"), r), $WC.Button.mountComponent(document.getElementById("wms-filecancel"), "button", "12", $WC.I18N("common.cancel"), "", "wms_fileupld_cancel", $WC.I18N("common.cancel"), this.cancelFileForward.bind(this, i)), document.getElementById("wms-filefrwrdrecipant").focus(), e && "true" == e.getAttribute("data-filefrwrd") && !e.getAttribute("src") && e.closest("#wms-videoplayer") && (e = e.closest("#wms-videoplayer")), this.fill(e, i, o, s), o) && (document.getElementById("wms_forwardinfo").innerHTML = '<span class="wms_forwardinfoicon"></span><span>' + $WC.I18N("forward.info.notallowed") + "</span>", t && t[0].retain_samechid && this.constructDefaultSelection(i));
            this.bindEvents(i, n)
        },
        getWindowHTML: function() {
            this.retain_trace = $WC.WmsLocalStorage.getItem($WC.Config.get("zuid") + "_allow_forward_info");
            var e = this.retain_trace ? "wms_show_forwardinfo" : "wms_hide_forwardinfo";
            return '<div id="wms-fileupldwin" class="wms-fileupldwin wms-hvalign ' + (WebMessanger.rtlmode ? "wms-rtl" : "") + '"><div id="wms-fileupldwinheader" class="wms-fileupldwinheader">' + $WC.I18N("file.forward") + '<span class="wms-fileupldclose" data-purpose="cancel"></span></div><div id="wms-fileupldwinbody" class="wms-fileupldwinbody wms_filefrwrdwinbody"><div id="wms-filefrwrderrormsg" class="wms-filefrwrderror"></div><span><div class="wms_filefrwrd_info">' + $WC.I18N("file.forward.to") + ':</div><div id="wms-filefrwrdrecipant" data-type="contact" contenteditable="true" class="wms-filefrwrdrecipant" data-purpose="selectrecipant" placeholder="' + $WC.I18N("fileforward.select.recipient") + '"></div><div id="wms_filefrwrdsugg_wrapper" class="wms_filefrwrdsugg_wrapper"><div class="wms_filefrwrdsugg_container"><span class="wms_filefrwrdsugg_info">' + $WC.I18N("chat.suggestions") + '</span><div class="wms_filefrwrdsugg">' + this.getSuggestionsHTML() + '</div></div></div><div id="wms-selrecipant" class="wms-filefrwrdrecipant" style="display:none"></div><div id="wms-filefrwrdautocomplete" class="wms-filefrwrdautocomplete" style="display:none"></div><div id="wms-fileupldcontainer" class="wms-filefrwrdwinbody"></div><div class="wms_forwardinfo" data-purpose="forwardinfo"><div id="wms_forwardinfo"><span data-purpose="toggleforwardinfo" class="' + e + '"></span><input type="checkbox"/><label>' + $WC.I18N("forward.show.info") + '</label></div><div class="wms-fileupldactions wms_filefrwrdactions"><div data-purpose="forwardfile" id="wms-fileforward"></div><div data-purpose="cancel" id="wms-filecancel"></div></div></div></span></div></div>'
        },
        getSuggestionsHTML: function() {
            var e = $WC.HybridSearch.filter("DNAME", "", WmsContacts.getContactsList(), 5, "", "EMAILID"),
                t = "",
                s = '<img title="{{DNAME}}" data-dname="{{DNAME}}" data-type="' + $WC.WmsConstants.HYBRIDSEARCH.CONTACT + '" data-id="{{USERID}}" data-purpose="usersugg" src="{{WMSPHOTOSERVER}}/file?ID={{USERID}}&exp=6000&t=user&fs=thumb">';
            return e.forEach((function(e) {
                t += $WC.template.replace(s, {
                    DNAME: e.DNAME,
                    USERID: e.USERID,
                    WMSPHOTOSERVER: _WMSPHOTOSERVER
                })
            })), t
        },
        getFileHTML: function() {
            var e = $WC.Util.isMacOS() ? $WC.I18N("file.forward.comment.mac") : $WC.I18N("file.forward.comment");
            return WmsFileUploadUI.checkSupport() ? '<div data-type="file" data-fextn="{{FEXTN}}" data-content="{{CONTENT}}" data-url="{{URL}}" data-isv1={{ISV1}} class="wms-filefrwrdcnt1 wms-fileupldpreview"><input class="wms-fileupldfname" id="wms-fileupldfname" data-purpose="forwardfilename" placeholder="' + $WC.I18N("file.add.name") + '" value="{{FNAME}}"><div id="wms-fileupldpreview0" class="wms-fileupldimgpreview"></div><div class="wms-smileycontainer wms-filefrwrdsmileycon" data-smileycontainer="true"></div><div id="wms-footer" class="wms-footer"><div id="wms-autocomplete" class="wms-autocomplete" data-autocomplete="true" style="display:none"></div><div id="wms-invisiblediv" class="wms-invisiblediv wms-fileupldcmt" data-invisiblediv="true"></div><div class="wms-smileycontainer wms-smileyautocomplete" data-smileyautocomplete="true"></div><textarea chid={{CHID}} id="wms-fileupldcmt" data-purpose="keyforward" placeholder="' + e + '" class="wms-fileupldcmt"></textarea><div class="wms-filecmntcount" data-limit="1000">1000</div><div id="wms-smileyinvoker" class="wms-smileyinvoker wms-fileupldsmileyinvoker" data-purpose="smiley"></div></div></div>' : '<div data-type="file" data-fextn="{{FEXTN}}" data-content="{{CONTENT}}" data-url="{{URL}}" data-isv1={{ISV1}} class="wms-filefrwrdcnt1 wms-fileupldpreview"><input class="wms-fileupldfname" id="wms-fileupldfname" placeholder="' + $WC.I18N("file.add.name") + '" style="height:10%" value="{{FNAME}}"><div id="wms-fileupldpreview0" class="wms-fileupldimgpreview" style="height:90%"></div></div>'
        },
        fill: function(e, t, s, i) {
            var n = "",
                a = e && "null" !== e.getAttribute("data-fcomment") ? e.getAttribute("data-fcomment") : i ? i.comment : "",
                o = e ? e.getAttribute("data-furl") || e.src : i.src;
            o = -1 == o.indexOf(_DOWNLOADSERVERURL) && !0 !== s && null == i ? Message.getDownloadUrl({
                isv1: !0,
                url: o
            }) : o;
            var r = e ? e.getAttribute("data-fcontent") : i.contentType,
                l = e ? e.getAttribute("data-src") || e.getAttribute("data-furl") : i.id,
                d = e ? e.getAttribute("data-fname") : i.name,
                c = e ? e.getAttribute("data-isv1") : i.data_isv1,
                u = e ? e.getAttribute("data-msguid") : i.msguid,
                m = e && e.getAttribute("data-fsrc") || o,
                h = this.getFileHTML();
            h = $WC.template.replace(h, {
                FNAME: d,
                FEXTN: "",
                COMMENT: a,
                URL: l,
                CONTENT: r,
                ISV1: c,
                CHID: t
            });
            var g = document.getElementById("wms-fileupldcontainer");
            g.innerHTML = h, WmsFileUploadUI.listcommon = new ListCommon(document.getElementById("wms-fileupldcmt"), g.querySelector('[id="wms-autocomplete"]')), WMSUI.atMentions.invisiblediv = g.querySelector('[id="wms-invisiblediv"]'), WMSUI.atMentions.autocompletediv = g.querySelector('[id="wms-autocomplete"]');
            var p = document.getElementById("wms-fileupldpreview0"),
                f = WindowHandler.getWinObjById(t);
            a = e ? e.getAttribute("data-fcomment") : i ? i.comment : "", WMSUI.atMentions.invisiblediv.innerHTML = $WC.Util.safeHTML($WC.Util.unescapeHTML(a));
            g.querySelector("#wms-fileupldcmt").value = $WC.Matcher.replacer(/<span .*?>(.*?)<\/span>/gi, null, a, (function(e, t) {
                return t
            }));
            $WC.Matcher.replacer(/<span .*? data-zcprofileid="(.*?)">(.*?)<\/span>/gi, null, a, (function(e, t) {
                WmsFileForwardUI.mentions.push(t)
            })), f.atmentions = f.atmentions.concat(WmsFileForwardUI.mentions.join(",")).concat(",");
            var v = "display: none";
            /^image\/.+$/.test(r) ? (n = "<img src=" + o + ">", v = "") : (n = '<span class="wms-fileimgpreview wms-hvalign"></span>', $WC.Util.addClass(p, "wms_fileupldbg"));
            var C = WMSUI.show_imgedit_icon ? '<div class="imgannotation frwdimgannotation" data-msguid="{{MSGUID}}" data-chid="{{CHID}}" data-fcomment data-fcontent="{{CONTENT}}" data-furl="{{URL}}" data-fname="{{FNAME}}" data-fsrc="{{IMGSRC}}" data-isv1={{ISV1}} title="' + $WC.I18N("chat.edit.image") + '" data-purpose="annotateimage" style="' + v + '"></div>' : "";
            C = $WC.template.replace(C, {
                MSGUID: u,
                FNAME: d,
                URL: l,
                CONTENT: r,
                ISV1: c,
                CHID: t,
                IMGSRC: m
            }), n += '<div class="wms_filedetails_wrapper"><div class="wms_filedetails"><div class="wms_fname_wrapper"><input id="wms_fnameinput" data-purpose="edit_fname" type="text" maxlength="50"/><span id="wms_fnameholder" class="wms_fname">' + $WC.Util.safeHTML($WC.Util.unescapeHTML(d)) + "</span></div></div>" + C + "</div>", p.innerHTML = n
        },
        cancelFileForward: function(e) {
            var t = WindowHandler.getWinObjById(e);
            WMSUI.imgPreview.removeOverlay(), this.mentions = [], t.atmentions = "", WmsFileUploadUI.listcommon = "", WMSUI.atMentions.invisiblediv = "", WMSUI.atMentions.autocompletediv = "", this.recipient_data = {}
        },
        bindEvents: function(e, t) {
            var s = document.getElementById("wms-fileupldwin");
            WindowHandler.getWinObjById(e);
            s.addEventListener("click", function(t) {
                var i = s.querySelector("[data-smileycontainer]"),
                    n = $WC.Util.getEventTarget(t),
                    a = n.getAttribute("data-purpose") || n.closest("[data-purpose]") && n.closest("[data-purpose]").getAttribute("data-purpose");
                if ("cancel" == a) this.cancelFileForward(e);
                else if ("selectrecipant" == a || "keyforward" == a) "keyforward" == a && (WmsFileUploadUI.zomojicomponentvisible && WmsFileUploadUI.hideEmojiPicker(i), this.closeRecipientList()), document.getElementById("wms-filefrwrderrormsg").setAttribute("style", "display:none"), $WC.Util.removeClass(document.getElementById("wms_filefrwrdsugg_wrapper"), "wms_filefrwrderr");
                else if ("smiley" == a) WmsFileUploadUI.zomojicomponentvisible ? WmsFileUploadUI.hideEmojiPicker(i) : WmsFileUploadUI.showEmojiPicker(i);
                else if ("usersugg" == a) this.insertSuggestion(t);
                else if ("delsugg" == a) this.removeSuggestion(t);
                else if (n.closest("[data-id]")) this.insertSuggestion(t);
                else if ("search" !== a && WmsFileUploadUI.zomojicomponentvisible) i.className = i.className.replace(" wms-smileyborder", ""), WmsFileUploadUI.zomojicomponent.unmountComponent(), WmsFileUploadUI.zomojicomponentvisible = !1, this.closeRecipientList();
                else if ("forwardinfo" === a) {
                    this.retain_trace = !this.retain_trace;
                    var o = n.closest("[data-purpose]").querySelector('[data-purpose="toggleforwardinfo"]');
                    this.retain_trace ? ($WC.Util.removeClass(o, "wms_hide_forwardinfo"), $WC.Util.addClass(o, "wms_show_forwardinfo")) : ($WC.Util.removeClass(o, "wms_show_forwardinfo"), $WC.Util.addClass(o, "wms_hide_forwardinfo"))
                } else if ("annotateimage" === a) {
                    var r = t.target;
                    WMSUI.imgPreview.imgPreviewAnnotationHandling(r)
                }
            }.bind(this)), s.addEventListener("keyup", function(t) {
                var i = $WC.Util.getEventTarget(t),
                    n = i.getAttribute("data-purpose"),
                    a = document.getElementById("wms-filefrwrdautocomplete");
                "keyforward" === n && "Alt" !== t.key ? (WmsFileUploadUI.initialiseMentions(t, e), WmsFileUploadUI.updateCommentCount(t.target), s.querySelector('[id="wms_forwardinfo"]').innerHTML = '<span class="wms_forwardinfoicon"></span><span>' + $WC.I18N("forward.info.notallowed") + "</span>", this.retain_trace = !1) : "selectrecipant" == n ? 40 == t.keyCode || 38 == t.keyCode ? this.handleNavigation(t) : 13 == t.keyCode ? (i = this.getSelectedRecipient(), this.insertSuggestion(i, !0)) : 27 == t.keyCode ? "" == i.textContent ? this.cancelFileForward(e) : "block" === a.style.display ? this.closeRecipientList() : i.textContent = "" : this.populateRecipant() : 27 == t.keyCode ? i.value ? (i.value = "", WmsFileUploadUI.updateCommentCount(i)) : this.cancelFileForward(e) : "search" !== n && WmsFileUploadUI.updateCommentCount(i)
            }.bind(this)), s.addEventListener("keydown", function(s) {
                var i = $WC.Util.getEventTarget(s).getAttribute("data-purpose");
                "keyforward" == i ? 13 == s.keyCode && (s.ctrlKey || s.metaKey) && this.createChatAndForward(e, t) : "selectrecipant" == i && 13 == s.keyCode && s.preventDefault()
            }.bind(this)), s.addEventListener("mouseover", function(e) {
                var t = $WC.Util.getEventTarget(e).closest("[data-id]");
                if (t && 0 == t.className.indexOf("wms_menu_item")) {
                    var s = document.getElementById("wms-filefrwrdautocomplete").getElementsByClassName("wms-hysearch-result-hover")[0];
                    s && $WC.Util.removeClass(s, "wms-hysearch-result-hover"), $WC.Util.addClass(t, "wms-hysearch-result-hover")
                }
            }.bind(this)), s.querySelector("#wms-fileupldcmt").addEventListener("input", function(e) {
                var t = $WC.Util.getEventTarget(e),
                    i = t.value;
                WmsFileUploadUI.initiateEmojiPicker(i, s, t)
            }.bind(this))
        },
        createChatAndForward: function(e, t) {
            var s, i = WindowHandler.getWinObjById(e),
                n = document.getElementById("wms-filefrwrdrecipant"),
                a = document.getElementById("wms-fileupldcontainer").querySelector('[data-type="file"]'),
                o = document.getElementById("wms-fileupldfname").value;
            if (document.getElementById("wms-fileupldcmt")) {
                var r = document.getElementById("wms-fileupldcmt").value.trim();
                r = Smiley.replaceTextToEnglishCodes(r), r = i.atmentions ? $WC.Util.unescapeHTML(WMSUI.atMentions.formatAtMentions(r, i.atmentions, e, !0)) : r
            }
            if (!this.validate(o, r, n)) {
                $WC.WmsLocalStorage.setItem($WC.Config.get("zuid") + "_allow_forward_info", this.retain_trace);
                var l, d = n.getAttribute("data-type"),
                    c = d == $WC.WmsConstants.HYBRIDSEARCH.CONTACT || d == $WC.WmsConstants.HYBRIDSEARCH.ORGCONTACT ? "im" : d == $WC.WmsConstants.HYBRIDSEARCH.CHANNEL ? "channel" : "chat",
                    u = a.getAttribute("data-url"),
                    m = a.getAttribute("data-fextn"),
                    h = a.getAttribute("data-content"),
                    g = a.getAttribute("data-isv1");
                s = "id=" + n.getAttribute("data-userid"), s += "&type=" + c + "&mod=att&sid=" + encodeURIComponent(WebMessanger.getSid()), r && (s += "&comment=" + encodeURIComponent(r)), this.retain_trace && (s += "&retain_trace=" + this.retain_trace + "&source_chid=" + e + "&source_msguid=" + encodeURIComponent(t));
                var p = function() {
                    400 == JSON.parse(this.response)[0].objString.ERRCODE && WMSUI.showErrorMsg($WC.I18N("Sharing_failed"))
                };
                "true" === g ? (l = {
                    "X-XHR-exception": "true",
                    "X-ZCSRF-TOKEN": $WC.Util.getCSRF(),
                    "x-consents-version": "1"
                }, $WC.Ajax.postRequestToChat("v1/attachments/" + u + "/forward", s, null, p, null, null, l)) : (l = {
                    "X-XHR-exception": "true"
                }, s += "&fname=" + o + m + "&url=" + u + "&mime=" + h, $WC.Ajax.postRequestToChat("fileforward.do", s, null, p, null, null, l)), this.cancelFileForward(e)
            }
        },
        closeRecipientList: function() {
            var e = document.getElementById("wms-filefrwrdautocomplete");
            "block" == e.style.display && (e.innerHTML = "", e.style.display = "none")
        },
        insertSuggestion: function(e, t, s) {
            var i = document.getElementById("wms-filefrwrdrecipant"),
                n = t ? e : $WC.Util.getEventTarget(e),
                a = n && n.closest("[data-id]"),
                o = a ? a.getAttribute("data-id") : s.chid,
                r = a ? a.getAttribute("data-dname") : s.dname,
                l = n && "usersugg" == n.getAttribute("data-purpose") ? n : s ? s.imagehtml : a.getElementsByClassName("wms_badge_imgwrapper")[0],
                d = l.outerHTML || l,
                c = a ? a.getAttribute("data-type") : s.type,
                u = d + '<span id="wms_filefrwrd_recipient">{{DNAME}}</span><div data-purpose="delsugg" class="wms_filefrwrddel"></div>';
            i.innerHTML = $WC.template.replace(u, {
                DNAME: r
            }), $WC.Util.loadOriginalImage(i), $WC.Util.setAttribute(i, "data-type", c), $WC.Util.setAttribute(i, "data-userid", o), $WC.Util.setAttribute(i, "contenteditable", !1), document.getElementById("wms-filefrwrdautocomplete").style.display = "none", this.recipient_data.eventobj = e, this.recipient_data.gettarget = t, this.recipient_data.recipient = s
        },
        removeSuggestion: function() {
            var e = document.getElementById("wms-filefrwrdrecipant");
            e.innerHTML = "", $WC.Util.setAttribute(e, "contenteditable", !0), e.removeAttribute("data-userid"), e.removeAttribute("data-type")
        },
        handleNavigation: function(e) {
            var t = document.getElementById("wms-filefrwrdautocomplete"),
                s = t.getElementsByClassName("wms-hysearch-result-hover")[0],
                i = null;
            40 == e.keyCode ? i = s.nextSibling || t.firstChild : 38 == e.keyCode && (i = s.previousSibling || t.lastChild), "wms_menu_item_date" == i.className && (i = 40 == e.keyCode ? i.nextSibling : i.previousSibling || t.lastChild), $WC.Util.bringElemToView(i, e.keyCode), $WC.Util.removeClass(s, "wms-hysearch-result-hover"), $WC.Util.addClass(i, "wms-hysearch-result-hover")
        },
        getSelectedRecipient: function() {
            var e = document.getElementById("wms-filefrwrdautocomplete"),
                t = e.getElementsByClassName("wms-hysearch-result-hover")[0];
            return e.setAttribute("style", "display:none"), document.getElementById("wms-fileupldcmt").focus(), t
        },
        populateRecipant: function() {
            var e = document.getElementById("wms-filefrwrdautocomplete"),
                t = $WC.Util.getInnerText(document.getElementById("wms-filefrwrdrecipant"));
            if (!t) return e.innerHTML = "", void(e.style.display = "none");
            e.style.display = "block";
            var s = {
                searchtext: t,
                inpresultset: $WC.WmsConstants.HYBRIDSEARCH.GENERICLIST,
                silentload: !0
            };
            WmsHybridSearch.getNextResultSet(s), $WC.Util.loadOriginalImage(e), $WC.Util.addEvent(e, "scroll", $WC.Util.loadImageWithDebounce(e)), e.firstChild && -1 == e.firstChild.className.indexOf("wmswms_menu_item_date") && $WC.Util.addClass(e.firstChild, "wms-hysearch-result-hover")
        },
        validate: function(e, t, s) {
            return !(!s || !$WC.Util.isEmptyObject(s.childNodes)) && ($WC.$CUtil.setInnerTextById("wms-filefrwrderrormsg", $WC.I18N("fileforward.error.norecipient")), document.getElementById("wms-filefrwrderrormsg").setAttribute("style", "display:block"), $WC.Util.addClass(document.getElementById("wms_filefrwrdsugg_wrapper"), "wms_filefrwrderr"), !0)
        },
        uploadAnnotatedFile: function(e, t) {
            var s = t[0],
                i = WindowHandler.getWinObjById(e),
                n = document.getElementById("wms-filefrwrdrecipant"),
                a = document.getElementById("wms-fileupldfname").value || s.name,
                o = "",
                r = "";
            if (document.getElementById("wms-fileupldcmt") && (o = document.getElementById("wms-fileupldcmt").value.trim(), o = Smiley.replaceTextToEnglishCodes(o), r = i.atmentions ? $WC.Util.unescapeHTML(WMSUI.atMentions.formatAtMentions(o, i.atmentions, e, !0)) : ""), !this.validate(a, o, n)) {
                var l = n.getAttribute("data-userid");
                if (l) {
                    o = o || "", r = r || "";
                    i = WindowHandler.getWinObjById(l);
                    var d = WmsFileUploadUI.getCallBackObject();
                    if (i) WmsFileUploadHandler.addFileForUpload(l, s, o, r, a, !1), WmsFileUploadHandler.startFileUpload(l, d), WmsFileUploadUI.addProgressBarForEachFile(l, d);
                    else {
                        if (WmsMainUI.scheduleAutoFocus(l), n.getAttribute("data-type") == $WC.WmsConstants.HYBRIDSEARCH.CONTACT || n.getAttribute("data-type") == $WC.WmsConstants.HYBRIDSEARCH.ORGCONTACT) WebMessanger.openUserChat(l);
                        else if ($WC.Util.isBotChid(l) || n.getAttribute("data-type") == $WC.WmsConstants.HYBRIDSEARCH.BOT) {
                            if (!$WC.Util.isBotChid(l)) {
                                var c = $WC.Bots.get(l);
                                c && c.ISSUBSCRIBED && (l = c.CHID)
                            }
                            WmsMainUI.scheduleAutoFocus(l), WebMessanger.attachSession(l)
                        } else WebMessanger.createChatWindowFromCache(l);
                        WindowHandler.getWinObjById(l) ? (WmsFileUploadHandler.addFileForUpload(l, s, o, r, a, !1), WmsFileUploadHandler.startFileUpload(l, d), WmsFileUploadUI.addProgressBarForEachFile(l, d)) : WmsFileUploadHandler.scheduleFileForUpload[l] = {
                            fileObj: s,
                            comment: o,
                            atmention: r,
                            fname: a
                        }
                    }
                }
                this.cancelFileForward(e)
            }
        },
        constructDefaultSelection: function(e, t) {
            var s, i, n = WindowHandler.getWinObjById(e),
                a = {};
            a.chid = n.objId, 1 != n.ctype || 2 != n.partcount || n.customgroup && "false" != n.customgroup ? $WC.Util.isChannelChid(n.objId) ? (s = $WC.HybridSearch.generateImageHtml(n.objId, $WC.WmsConstants.HYBRIDSEARCH.CHANNEL), i = $WC.WmsConstants.HYBRIDSEARCH.CHANNEL) : $WC.Util.isBotChid(n.objId) ? (s = $WC.HybridSearch.generateImageHtml($WC.Bots.getBotId(n.objId), $WC.WmsConstants.HYBRIDSEARCH.BOT), i = $WC.WmsConstants.HYBRIDSEARCH.BOT) : 11 == n.ctype ? (s = $WC.HybridSearch.generateImageHtml(n.recipant, $WC.WmsConstants.HYBRIDSEARCH.THREAD, {
                TITLE: n.title
            }), i = $WC.WmsConstants.HYBRIDSEARCH.THREAD) : (s = $WC.HybridSearch.generateImageHtml(n.objId, $WC.WmsConstants.HYBRIDSEARCH.CHAT, {
                TITLE: n.title,
                SALESIQCHAT: n.salesiqchat
            }, !0), i = $WC.WmsConstants.HYBRIDSEARCH.CHAT) : (s = $WC.HybridSearch.generateImageHtml(n.recipant, $WC.WmsConstants.HYBRIDSEARCH.CONTACT), i = i = t ? $WC.WmsConstants.HYBRIDSEARCH.CHAT : $WC.WmsConstants.HYBRIDSEARCH.CONTACT), a.dname = n.title, a.imagehtml = s, a.type = i, this.insertSuggestion("", "", a)
        },
        handleDragDrop: function() {
            WMSUI.zhShareInstance.dndHandleSelfServiceAttachment = function(e) {
                var t = e && e.sourceDomRef,
                    s = e && e["data-zhshare-dest-meta"] && e["data-zhshare-dest-meta"].id;
                t && s ? WmsDragDrop.onDropEvent(s, null, null, !0, t) : e["data-zhshare-dest-meta"] && s && (WmsFileForwardUI.handlePreview(null, null, e["data-zhshare-src-meta"]), WmsFileForwardUI.constructDefaultSelection(s, !0))
            }
        },
        handleCopyFile: function(e) {
            var t = e.querySelector(".zhshare-src") || e.closest(".zhshare-src"),
                s = t ? t.getAttribute("data-zhshare-src-meta") : null,
                i = e.querySelector("[src]") ? e.querySelector("[src]").getAttribute("src") : t.closest("[src]") ? t.closest("[src]").getAttribute("src") : e.getAttribute("data-furl"),
                n = e.querySelector("[data-msguid]") ? e.querySelector("[data-msguid]").getAttribute("data-msguid") : t.closest("[data-msguid]").getAttribute("data-msguid"),
                a = e.querySelector("[data-isv1]") ? e.querySelector("[data-isv1]").getAttribute("data-isv1") : t.closest("[data-isv1]") ? t.closest("[data-isv1]").getAttribute("data-isv1") : "true",
                o = e.querySelector("[data-fcomment]") ? e.querySelector("[data-fcomment]").getAttribute("data-fcomment") : t.closest("[data-fcomment]") ? t.closest("[data-fcomment]").getAttribute("data-fcomment") : "";
            (s = s ? JSON.parse(s) : "") && (s.src = i, s.msguid = n, s.data_isv1 = a, s.comment = o, WMSUI.zhShareInstance.copyAttachmentDataToClipboard({
                srcMeta: s
            }))
        }
    },
    WmsHybridSearch = function() {};
WmsHybridSearch.tempmsgdetails = [], WmsHybridSearch.hintindex = 0, WmsHybridSearch.showUI = function() {
    $WC.$CUtil.createOverlay(WmsHybridSearch.hideUI), WmsHybridSearch.resshowntext = "";
    var e = document.createElement("div");
    e.id = "wms-hysearch", WmsHybridSearch.keydownlistener = $WC.Util.addEvent(e, "keydown", WmsHybridSearch.handleEvent, !1), WmsHybridSearch.keyuplistener = $WC.Util.addEvent(e, "keyup", WmsHybridSearch.handleKeyUp, !1), e.className = "wms-hysearch wms-hvalign", e.className += WebMessanger.isDarkModeEnabled ? " zmNightMode" : "", e.className += WebMessanger.isDNDBackupIconEnabled() ? " wms_dnd_backup_icon" : "", WebMessanger.rtlmode && (e.className += " wms-rtl"), e.style.zIndex = $WC.Config.get("zindex"), e.innerHTML = $WC.template.replace('<div class="wms-hysearch-toppart"><div class="wms_searchicon wms-hysearch-searchicon"></div><div id="wms-hysearch-inpcontainer" class="wms-hysearch-inpcontainer"><input id="wms-hysearch-actualinp" data-selectable="true" data-selected="true" autocomplete="off" required></input><input style="width:0px;opacity:0" id="wms-fakeinput"><label id="wms-hysearch-placeholder" class="wms-hysearch-placeholder"></label></div><div class="wms-hysearch-tipsicon"><div id="wms-hysearch-tips-container" class="wms-hysearch-tips-container" style="display: none;"><div class="wms-hysearch-tips-header">' + $WC.I18N("smartsearch.tips") + '</div><div class="wms-hysearch-tips"><span class="wms-hysearch-tips-desc">' + $WC.I18N("smartsearch.tips.hint1") + '</span><div class="wms-hysearch-tips-content"><span class="wms-hysearch-tips-format wms-hysearch-tips-name">' + $WC.I18N("smartsearch.tips.format.name") + '</span><div class="wms-hysearch-tips-example">' + $WC.I18N("smartsearch.tips.example") + '<span class="wms-hysearch-tips-eg1">' + $WC.I18N("smartsearch.tips.eg1") + '</span><span class="wms-hysearch-tips-eg3">' + $WC.I18N("smartsearch.tips.eg3") + '</span></div></div></div><div class="wms-hysearch-tips"><span class="wms-hysearch-tips-desc">' + $WC.I18N("smartsearch.tips.hint2") + '</span><div class="wms-hysearch-tips-content"><span class="wms-hysearch-tips-format wms-hysearch-tips-name">' + $WC.I18N("smartsearch.tips.format.name1") + '</span><span class="wms-hysearch-tips-format wms-hysearch-tips-name">' + $WC.I18N("smartsearch.tips.format.name2") + '</span><span class="wms-hysearch-tips-format wms-hysearch-tips-title">' + $WC.I18N("smartsearch.tips.format.title") + '</span><span class="wms-hysearch-tips-format wms-hysearch-tips-message">' + $WC.I18N("common.message") + '</span><div class="wms-hysearch-tips-example">' + $WC.I18N("smartsearch.tips.example") + '<span class="wms-hysearch-tips-eg1">' + $WC.I18N("smartsearch.tips.eg4") + '</span><span class="wms-hysearch-tips-eg2">' + $WC.I18N("smartsearch.tips.eg2") + '</span><span class="wms-hysearch-tips-eg3">' + $WC.I18N("smartsearch.tips.eg3") + '</span></div></div></div></div></div><div class="wms-hysearch-closeicon"></div></div><div id="wms-hysearch-rescont" class="wms-hysearch-rescont"><div id="wms-hysearch-defrescont" class="wms-hysearch-defrescont"></div><div id="wms-hysearch-searchres" class="wms-hysearch-searchres"></div></div>', {}), document.body.appendChild(e);
    var t = $WC.template.replace('<div class="wms-hysearch-defres" data-selectable="true"><div class="wms-hysearch-resheading">' + $WC.I18N("menuname.chats") + '</div><div id="wms-hysearch-rchats" data-resset="true" class="wms-hysearch-resset"></div></div>', {}),
        s = $WC.template.replace('<div class="wms-hysearch-defres" data-selectable="true"><div class="wms-hysearch-resheading">' + $WC.I18N("Contacts") + '</div><div id="wms-hysearch-fcontacts" data-resset="true" class="wms-hysearch-resset"></div></div>', {}),
        i = $WC.template.replace('<div class="wms-hysearch-defres" data-selectable="true"><div id="wms-hysearch-thirdcolheading" style="visibility:hidden" class="wms-hysearch-resheading">' + $WC.I18N("Contacts") + '</div><div id="wms-hysearch-thirdcol" data-resset="true" class="wms-hysearch-resset"><center><div class="wms_loading_container wms-halign"><div></div><div></div><div></div></div></center></div></div>', {}),
        n = document.getElementById("wms-hysearch-defrescont");
    n.insertAdjacentHTML("beforeend", t), "disable" != $WC.Config.get("contacts") && n.insertAdjacentHTML("beforeend", s), $WC.Config.get("isOrgUser")() && "disable" != $WC.Config.get("channels") && $WC.SecurityManager.hasPermission("channels") && !WebMessanger.isPortalUser() && (n.insertAdjacentHTML("beforeend", i), $WC.Util.addEvent($WC.HybridSearch.getNode("thirdcolumn"), "scroll", $WC.Util.debounce((function(e) {
        WmsHybridSearch.checkScrollAndloadMoreChannels(e)
    }), null, 300))), WmsHybridSearch.showRotationalHint(), $WC.Util.addEvent($WC.HybridSearch.getNode("inputcontainer"), "click", WmsHybridSearch.focusInput), $WC.Util.addEvent($WC.HybridSearch.getNode("recentchatsdiv"), "scroll", $WC.Util.debounce((function(e) {
        $WC.Util.loadOriginalImage($WC.HybridSearch.getNode("recentchatsdiv")), WmsHybridSearch.checkScrollAndloadMoreChatlist(e)
    }), null, 300)), WmsHybridSearch.populateRecentChatsInSmartChat(), WmsHybridSearch.bindEvents(), "disable" != $WC.Config.get("contacts") && ($WC.Util.addEvent($WC.HybridSearch.getNode("freqcontactsdiv"), "scroll", $WC.Util.loadImageWithDebounce($WC.HybridSearch.getNode("freqcontactsdiv"))), $WC.Util.addEvent($WC.HybridSearch.getNode("freqcontactsdiv"), "click", (function(e) {
        var t = e.target.closest("[data-id]");
        e.target.getAttribute("data-operation") ? WmsContacts.handleInviteOperation(e.target) : t && WmsHybridSearch.handleSelection(t)
    })), WmsHybridSearch.populateFrequentContactsInSmartChat(), setTimeout((function() {
        $WC.Util.loadOriginalImage($WC.HybridSearch.getNode("freqcontactsdiv"))
    }), 300)), $WC.Config.get("isOrgUser")() && "disable" != $WC.Config.get("channels") && $WC.SecurityManager.hasPermission("channels") && !WebMessanger.isPortalUser() && ($WC.Channels.initChannels(), WmsHybridSearch.populateThirdColumnInSmartChat(), $WC.Util.addEvent($WC.HybridSearch.getNode("thirdcolumn"), "scroll", $WC.Util.loadImageWithDebounce($WC.HybridSearch.getNode("thirdcolumn")))), !!document.getElementById("wmstoolbar") && $WC.Bots.initBots(), $WC.Util.addEvent($WC.HybridSearch.getNode("searchresultdiv"), "scroll", $WC.Util.loadImageWithDebounce($WC.HybridSearch.getNode("searchresultdiv"))), WmsHybridSearch.focusInput()
}, WmsHybridSearch.populateThirdColumnInSmartChat = function() {
    $WC.Config.get("isRegistered")() && $WC.Config.get("isOrgUser")() && "disable" != $WC.Config.get("channels") && $WC.SecurityManager.hasPermission("channels") && WmsHybridSearch.populateActiveChannels()
}, $WC.Util.pubsub.subscribe("/chatlist/updateui", (function(e, t) {
    var s = t && t.reqid;
    t.stat === $WC.WmsConstants.REQSTATUS.FAILED ? $WC.HybridSearch.updateManager("failureupdate", null, s) : $WC.HybridSearch.updateManager("update", null, s)
})), $WC.Util.pubsub.subscribe("/bots/updateui", (function() {
    var e = {
        suggestions: "show_suggestions"
    };
    silent || $WC.Config.get("customContacts") || (WmsHybridSearch.populateContactListInMainUI(!0, e), $WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT && WmsHybridSearch.populateFrequentContactsInSmartChat())
})), $WC.Util.pubsub.subscribe("/channels/updateui", (function(e, t) {
    var s = t && t.reqid;
    t.stat === $WC.WmsConstants.REQSTATUS.FAILED ? $WC.HybridSearch.updateManager("failureupdate", null, s) : $WC.HybridSearch.updateManager("update", null, s), $WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT && (WmsHybridSearch.populateActiveChannels(), WmsHybridSearch.populateRecentChatsInSmartChat()), (!!document.getElementById("wmstoolbar") || WebMessanger.is_custom_menu_opted) && ($WC.HybridSearch.getSearchText() || $WC.HybridSearch.populateRecentChats(null, $WC.WmsConstants.HYBRIDSEARCH.modules.CHATMENU), WmsHybridSearch.populateGroupResultInMainUI(), void 0 !== WmsMainUI && (WmsMainUI.updateLoadingForPinnedChats(!1), $WC.Util.loadOriginalImage(WmsMainUI.defaultgrouplist)))
})), $WC.Util.pubsub.subscribe("/orgcontacts/updateui", (function(e, t) {
    var s = t && t.reqid;
    t.stat === $WC.WmsConstants.REQSTATUS.FAILED ? $WC.HybridSearch.updateManager("failureupdate", null, s) : ($WC.HybridSearch.updateManager("update", null, s, null, null, null, null, null, WmsHybridSearch.contact_excludelist), WmsHybridSearch.contact_excludelist = [])
})), $WC.Util.pubsub.subscribe("/orgcontacts/suggestionui", (function(e, t) {
    var s = {};
    t.stat === $WC.WmsConstants.REQSTATUS.FAILED ? s.suggestions = "suggestion_req_failed" : s.suggestions = "show_suggestions", _WMSEMPTYBAR || silent || $WC.Config.get("customContacts") || WmsHybridSearch.populateContactListInMainUI(!0, s)
})), $WC.Util.pubsub.subscribe("/recentchats/updateui", (function(e, t) {
    document.getElementById("wms-hysearch") && $WC.HybridSearch.populateRecentChats(t, $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT), (!!document.getElementById("wmstoolbar") || WebMessanger.is_custom_menu_opted) && $WC.HybridSearch.populateRecentChats(t)
})), WmsHybridSearch.populateSuggestionList = function(e) {
    var t = "",
        s = '<div class="wms_menu_subheading" >' + $WC.I18N("chat.suggestions") + "</div>";
    if (e) {
        var i = '<span data-retry="true">' + $WC.I18N("suggestions.retry") + "</span>";
        t += s, t += '<div class="wms-suggestions-failed">' + $WC.I18N("suggestions.failed", i) + "</div>"
    } else if (WmsOrgContacts.checkAndUpdateContactsList(), $WC.Util.getObjectLength(WmsOrgContacts.getOrgContactsList()) > 0) {
        var n = {
                USERID: $WC.HybridSearch.generateContactResults(null, !0).map((function(e) {
                    return e.USERID
                }))
            },
            a = $WC.HybridSearch.generateOrgContactResults("", "", n, !0);
        $WC.Util.getObjectLength(a) > 0 && (t += s, t += $WC.HybridSearch.generateHtml(a))
    }
    return t
}, WmsHybridSearch.focusInput = function() {
    setTimeout((function() {
        $WC.HybridSearch.getNode("inputdiv").focus()
    }), 1)
}, WmsHybridSearch.hideUI = function() {
    $WC.$CUtil.removeEvent(document, "keydown", WmsHybridSearch.keydownlistener), $WC.$CUtil.removeEvent(document, "keyup", WmsHybridSearch.keyuplistener), $WC.$CUtil.removeOverlay(), $WC.HybridSearch.getNode("mainUI") && Gator($WC.HybridSearch.getNode("mainUI")).off(), $WC.Util.removeElement($WC.HybridSearch.getNode("mainUI")), WmsHybridSearch.hintindex++
}, WmsHybridSearch.createInnerSearchFragment = function(e, t, s) {
    var i = "wms-hysearch-chosentext";
    "user" === t && (i += " wms-hysearch-atmen"), "topic" === t && (i += " wms-hysearch-topic");
    return $WC.template.replace('<span data-id="{{id}}" class="{{classname}}" data-innerfrag="true" data-selectable="true" data-type={{type}}>{{name}}<span class="wms-hysearch-chosentext-closeicon" data-innerfragclose="true"></span></span>', {
        id: s,
        name: e,
        classname: i,
        type: t
    })
}, WmsHybridSearch.showCloseIcon = function(e) {
    WmsHybridSearch.resetChosenClose(), $WC.Util.addClass(e, "wms-hysearch-chosentext-close")
}, WmsHybridSearch.hideCloseIcon = function(e) {
    $WC.Util.removeClass(e, "wms-hysearch-chosentext-close")
}, WmsHybridSearch.resetChosenClose = function() {
    var e = $WC.HybridSearch.getNode("inputcontainer").getElementsByClassName("wms-hysearch-chosentext-close");
    if (e.length) {
        e = $WC.Util.convertToArray(e);
        for (var t = 0; t < e.length; t++) $WC.Util.removeClass(e[t], "wms-hysearch-chosentext-close")
    }
}, WmsHybridSearch.removeChosenText = function(e, t) {
    $WC.Util.removeElement(t.parentNode), WmsHybridSearch.getNextResultSet()
}, WmsHybridSearch.toggleTipsUI = function() {
    var e = document.getElementById("wms-hysearch-tips-container");
    "none" === e.style.display ? e.style.display = "block" : e.style.display = "none"
}, WmsHybridSearch.virtual_list_objs = [], WmsHybridSearch.populateContactsUsingVirtualList = function(e, t, s, i, n, a) {
    var o = $WC.HybridSearch.generateContactResults(null, !0),
        r = void 0 !== WebMessanger && WebMessanger.isNetworkUser();
    if (($WC.Config.get("isOrgUser")() || r) && a && a.suggestions && o.length < 10) {
        var l = a.suggestions;
        if ("suggestion_req_failed" === l) o.push("suggestions"), o.push("suggestions_failed");
        else if ("show_suggestions" === l) {
            WmsOrgContacts.checkAndUpdateContactsList();
            var d = {
                    USERID: o.map((function(e) {
                        return e.USERID
                    }))
                },
                c = $WC.HybridSearch.generateOrgContactResults("", "", d, !0);
            c.length && (o.push("suggestions"), o = o.concat(c))
        } else "suggestions_heading" === l && o.push("suggestions_heading")
    }
    WmsHybridSearch.virtual_list_objs[n] && WmsHybridSearch.virtual_list_objs[n].remove_event_listeners(), o.length && (WmsHybridSearch.virtual_list_objs[n] = new $WC.VirtualList({
        w: e,
        h: t,
        itemHeight: s,
        totalRows: o.length,
        generatorFn: function(e) {
            var t = o[e],
                i = "",
                n = $WC.WmsConstants.HYBRIDSEARCH.modules.CONTACTMENU,
                a = $WC.HybridSearch.getResultInfo(t._filtertype),
                r = $WC.HybridSearch.getDescription(t);
            if (t.ISBOT) i = $WC.HybridSearch.createResultFragment(t.USERID, t.DNAME, $WC.Util.safeHTML($WC.Util.unescapeHTML(t.STATUSMSG)), $WC.Bots.getPhoto(t.USERID), a, $WC.WmsConstants.HYBRIDSEARCH.BOT, null, null, t, n);
            else if (t.USERID) i = $WC.HybridSearch.createResultFragment(t.USERID, t.DNAME, $WC.Util.safeHTML($WC.Util.unescapeHTML(r)), null, a, $WC.WmsConstants.HYBRIDSEARCH.CONTACT, null, null, null, n);
            else if ("suggestions" == t) i = '<div class="wms_menu_subheading" data-heading="suggestions" data-show="false">' + $WC.I18N("chat.suggestions") + "</div>";
            else if ("suggestions_heading" == t) i = '<div class="wms_menu_subheading" data-heading="suggestions" data-show="true">' + $WC.I18N("chat.suggestions") + "</div>";
            else {
                var l = '<span data-retry="true">' + $WC.I18N("suggestions.retry") + "</span>";
                i = '<div class="wms-suggestions-failed">' + $WC.I18N("suggestions.failed", l) + "</div>"
            }
            var d = document.createElement("div");
            d.innerHTML = i;
            var c, u = d.firstChild;
            return c = t.USERID ? $WC.HybridSearch.getCurrentModule() == $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT ? 103 - s : 77 - s : 29 - s, "wms_menu_item" != u.className && "wms-hysearch-result" != u.className && (u = [u, c]), u
        },
        container: i,
        hoverFunction: function(e) {
            var t = e.target ? e.target.closest("[data-id]") : e;
            t && $WC.HybridSearch.changeHover(t)
        }
    }))
}, WmsHybridSearch.populateFrequentContactsInSmartChat = function() {
    if (!(silent || WebMessanger.isChatPaused() || _WMSEMPTYBAR)) {
        var e = $WC.HybridSearch.getNode("freqcontactsdiv");
        $WC.Util.getObjectLength(WmsContacts.getContactsList()) || $WC.Util.getObjectLength(WmsOrgContacts.getOrgContactsList()) || $WC.Util.getObjectLength($WC.Bots.getList(!0)) ? (e.innerHTML = "", WmsHybridSearch.populateContactsUsingVirtualList(325, 370, 62, e, "smartchat")) : e.innerHTML = '<div class="wms-welcome-msg">' + $WC.I18N("contacts.welcomemessage") + "</div>"
    }
}, WmsHybridSearch.populateRecentChatsInSmartChat = function(e) {
    $WC.HybridSearch.populateRecentChats(e, $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT)
}, WmsHybridSearch.checkScrollAndloadMoreChatlist = function(e) {
    var t = e.target;
    ("wms-hysearch-rchats" == t.id || !1 === $WC.HybridSearch.isUnreadFilterOpen()) && t.scrollTop + t.clientHeight > Math.floor(.75 * t.scrollHeight) && $WC.RecentChats.loadPreviousChatList()
}, WmsHybridSearch.checkScrollAndloadMoreChannels = function(e) {
    var t = e.target;
    t.scrollTop + t.clientHeight > Math.floor(.75 * t.scrollHeight) && $WC.Channels.fetchNextResultSet()
}, WmsHybridSearch.populateActiveChannels = function() {
    if ($WC.Channels.getLastFetchedTime()) {
        var e = $WC.Channels.getJoinedChannels($WC.Util.getObjectLength($WC.Channels.list));
        if (e && e.length) {
            for (var t, s = "", i = 0; i < e.length; i++) t = e[i].cd || $WC.I18N("channel.nodescription"), s += $WC.HybridSearch.createResultFragment(e[i].chid, $WC.Channels.getChannelName(e[i].chid), $WC.Util.safeHTML(t), $WC.Channels.getChannelImageHTML(e[i].chid), null, $WC.WmsConstants.HYBRIDSEARCH.CHANNEL);
            $WC.$CUtil.setInnerText($WC.HybridSearch.getNode("thirdcolumnheading"), $WC.I18N("menuname.channelsandgroups")), $WC.HybridSearch.getNode("thirdcolumnheading").style.visibility = "visible", $WC.HybridSearch.getNode("thirdcolumn").innerHTML = s, $WC.Channels.getNextToken() && $WC.HybridSearch.updateLoadingStatus($WC.HybridSearch.getNode("thirdcolumn"), $WC.WmsConstants.REQSTATUS.LOADING), $WC.Util.loadOriginalImage($WC.HybridSearch.getNode("thirdcolumn"))
        } else $WC.HybridSearch.getNode("thirdcolumnheading") && $WC.Util.removeElement($WC.HybridSearch.getNode("thirdcolumnheading").parentNode)
    }
}, WmsHybridSearch.toggleUI = $WC.Util.debounce((function() {
    null === $WC.HybridSearch.getNode("mainUI") ? ("undefined" != typeof WmsProfileInfo && WmsProfileInfo.unmountComponent(), WmsHybridSearch.showUI()) : WmsHybridSearch.hideUI()
}), null, 300, !0), WmsHybridSearch.handleClick = function(e) {
    WmsHybridSearch.handleSelection(e)
}, WmsHybridSearch.generateFreqContactResults = function() {
    var e = WmsContacts.getSortedContacts("UC", !0, null, WmsContacts.getContactsList().length),
        t = "";
    if (0 === e.length) t = '<span class="wms-hysearch-infotxt">' + $WC.I18N("contacts.frequent.none") + "</span>";
    else
        for (var s = 0; s < e.length; s++) e[s].ISBOT ? t += $WC.HybridSearch.createResultFragment(e[s].USERID, e[s].DNAME, e[s].EMAILID, null, null, $WC.WmsConstants.HYBRIDSEARCH.CONTACT, null, null, e[s]) : t += $WC.HybridSearch.createResultFragment(e[s].USERID, e[s].DNAME, e[s].EMAILID, null, null, $WC.WmsConstants.HYBRIDSEARCH.CONTACT);
    return t
}, WmsHybridSearch.handleEvent = function() {
    function e(e) {
        var t, s, i, n = $WC.HybridSearch.getNode("resultcontainer");
        if (i = "block" === getComputedStyle($WC.HybridSearch.getNode("searchresultdiv")).display ? $WC.HybridSearch.getNode("searchresultdiv").getElementsByClassName("wms-hysearch-result-select")[0] : $WC.HybridSearch.getNode("defaultresultdiv").getElementsByClassName("wms-hysearch-result-select")[0], !$WC.HybridSearch.getNode("inputcontainer").querySelectorAll("[data-type='user'],[data-type='topic']").length || e !== $WC.WmsConstants.KEYCODES.LEFT && e !== $WC.WmsConstants.KEYCODES.RIGHT) {
            if (i) {
                if ($WC.HybridSearch.resetHover(), e === $WC.WmsConstants.KEYCODES.LEFT || e === $WC.WmsConstants.KEYCODES.RIGHT)
                    if ($WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT) {
                        s = n.firstChild, i && (s = i.parentNode.parentNode);
                        var a = i.getBoundingClientRect(),
                            o = {
                                x: a.left + s.offsetWidth / 2,
                                y: a.top + i.offsetHeight / 2
                            },
                            r = $WC.Util.convertToArray(s.parentNode.children),
                            l = r.indexOf(s) + 1;
                        e === $WC.WmsConstants.KEYCODES.LEFT ? 1 === l ? o.x += (r.length - 1) * s.offsetWidth : o.x -= s.offsetWidth : e === $WC.WmsConstants.KEYCODES.RIGHT && (l === r.length ? o.x -= (r.length - 1) * s.offsetWidth : o.x += s.offsetWidth), null === (t = document.elementFromPoint(o.x, o.y)).getAttribute("data-id") && (t = t.closest("[data-id]"))
                    } else t = i;
                else if (e === $WC.WmsConstants.KEYCODES.UP || e === $WC.WmsConstants.KEYCODES.DOWN)
                    if ($WC.HybridSearch.getCurrentModule() !== $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT && $WC.HybridSearch.getCurrentModule() !== $WC.WmsConstants.HYBRIDSEARCH.modules.CONTACTMENU && $WC.HybridSearch.getCurrentModule() !== $WC.WmsConstants.HYBRIDSEARCH.modules.CHATMENU || !(i == i.parentNode.querySelector("[data-id]") && e === $WC.WmsConstants.KEYCODES.UP || i == i.parentNode.lastChild && e === $WC.WmsConstants.KEYCODES.DOWN)) t = $WC.$CUtil.getConditionalNextNode(i, e, "data-type");
                    else {
                        var d = i.closest("[data-menu]");
                        if (e === $WC.WmsConstants.KEYCODES.UP) {
                            var c = d && d.previousSibling;
                            c && "wms_menu_pinnedchats" === c.id && (c = c.previousSibling);
                            var u = c && c.querySelectorAll("[data-type]");
                            t = u && u[u.length - 1] || i
                        } else {
                            var m = d && d.nextSibling;
                            m && "wms_menu_pinnedchats" === m.id && (m = m.nextSibling), t = m && m.querySelector("[data-type]") || i
                        }
                    }
                else e === $WC.WmsConstants.KEYCODES.TAB && $WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT && (s = n.firstChild, i && (s = i.parentNode.parentNode), t = $WC.$CUtil.getConditionalNextNode(s, e, "data-selectable").querySelector("[data-resset]").querySelector("[data-id]"));
                t && $WC.Util.bringElemToView(t, e)
            } else t = $WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT ? "block" === getComputedStyle($WC.HybridSearch.getNode("searchresultdiv")).display ? $WC.HybridSearch.getNode("searchresultdiv").firstChild : n.firstChild.getElementsByClassName("wms-hysearch-result")[0] : "block" === getComputedStyle($WC.HybridSearch.getNode("searchresultdiv")).display ? $WC.HybridSearch.getNode("searchresultdiv").querySelector("[data-type]") : $WC.HybridSearch.getNode("defaultresultdiv").querySelector('[data-type][class="wms_menu_item"]');
            t && $WC.HybridSearch.changeHover(t)
        } else {
            var h = $WC.HybridSearch.getNode("inputcontainer").querySelector("[data-selected='true']");
            if (h) {
                WmsHybridSearch.resetChosenClose(), h.setAttribute("data-selected", "false");
                var g = $WC.$CUtil.getConditionalNextNode(h, e, "data-selectable");
                g.setAttribute("data-selected", "true"), "INPUT" === h.nodeName && (h.blur(), $WC.HybridSearch.getNode("fakeinput").focus()), "INPUT" !== g.nodeName ? WmsHybridSearch.showCloseIcon(g) : g.focus(), $WC.Util.bringElemToView(g, e, !0)
            }
        }
    }
    return function(t) {
        "" === $WC.HybridSearch.getSearchText() && (WmsHybridSearch.removesearchpart = !0), (!$WC.Util.isEmptyString($WC.HybridSearch.getSearchText()) || t.keyCode !== $WC.WmsConstants.KEYCODES.LEFT && t.keyCode !== $WC.WmsConstants.KEYCODES.RIGHT) && t.keyCode !== $WC.WmsConstants.KEYCODES.UP && t.keyCode !== $WC.WmsConstants.KEYCODES.DOWN && t.keyCode !== $WC.WmsConstants.KEYCODES.TAB || e(t.keyCode), $WC.$CUtil.preventHandlingTabUpDownEnter(t)
    }
}(), WmsHybridSearch.removesearchpart = !1, WmsHybridSearch.handleKeyUp = function(e) {
    "" !== WmsHybridSearch.resshowntext && WmsHybridSearch.resshowntext === $WC.HybridSearch.getSearchText() && e.keyCode !== $WC.WmsConstants.KEYCODES.ENTER && e.keyCode !== $WC.WmsConstants.KEYCODES.BACKSPACE || (WmsHybridSearch.resshowntext = $WC.HybridSearch.getSearchText(), WmsHybridSearch.parseTextInput(e.keyCode))
}, WmsHybridSearch.parseTextInput = function(e) {
    var t = $WC.HybridSearch.getSearchText();
    if (e === $WC.WmsConstants.KEYCODES.BACKSPACE && $WC.Util.isEmptyString($WC.HybridSearch.getSearchText())) {
        var s = $WC.HybridSearch.getNode("inputcontainer").getElementsByClassName("wms-hysearch-chosentext-close");
        if (1 === s.length) $WC.Util.removeElement(s[0]), WmsHybridSearch.focusInput(), $WC.HybridSearch.getNode("inputdiv").setAttribute("data-selected", "true");
        else if (!0 === WmsHybridSearch.removesearchpart) {
            WmsHybridSearch.removesearchpart = !1, $WC.HybridSearch.getNode("inputdiv").setAttribute("data-selected", "false");
            var i = $WC.HybridSearch.getNode("inputcontainer").querySelectorAll("[data-type]");
            i.length && (i[i.length - 1].setAttribute("data-selected", !0), $WC.Util.addClass(i[i.length - 1], "wms-hysearch-chosentext-close"))
        }
    }
    e === $WC.WmsConstants.KEYCODES.ENTER ? WmsHybridSearch.handleSelection() : t ? ($WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT && (WmsHybridSearch.removesearchpart = !1, WmsHybridSearch.resetChosenClose()), $WC.HybridSearch.getNode("defaultresultdiv").style.display = "none", $WC.HybridSearch.getNode("searchresultdiv").style.display = "block", void 0 !== WmsMainUI && WmsMainUI.updateLoadingForPinnedChats(!1), WmsHybridSearch.getNextResultSet(), $WC.HybridSearch.getNode("searchresultdiv").querySelector("[data-type]") && $WC.HybridSearch.changeHover($WC.HybridSearch.getNode("searchresultdiv").querySelector("[data-type]"))) : WmsHybridSearch.getNextResultSet()
}, WmsHybridSearch.handleSelection = function(e) {
    var t, s = $WC.HybridSearch.getSearchText();
    e || (e = "block" === getComputedStyle($WC.HybridSearch.getNode("searchresultdiv")).display ? $WC.HybridSearch.getNode("searchresultdiv").getElementsByClassName("wms-hysearch-result-select")[0] : $WC.HybridSearch.getNode("defaultresultdiv").getElementsByClassName("wms-hysearch-result-select")[0]);
    var i = e && +e.getAttribute("data-type");
    if (e && "wms_menu_feedsnotify" === e.getAttribute("data-id")) ZMSGUI.launchHistory();
    else if ($WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT) {
        var n = $WC.HybridSearch.getNode("inputcontainer").querySelector("[data-type='topic']");
        if (e && "true" === e.getAttribute("data-retry")) $WC.HybridSearch.invokeRetry();
        else if (i === $WC.WmsConstants.HYBRIDSEARCH.CHAT || i === $WC.WmsConstants.HYBRIDSEARCH.CHANNEL) WmsHybridSearch.parseAndOpenChat(e, $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT);
        else if (s.startsWith("#") && 1 == $WC.HybridSearch.getChosenUsers().length || n && 1 == $WC.HybridSearch.getChosenUsers().length && !s.startsWith("@")) WmsHybridSearch.showInfoMessage($WC.I18N("Error"), $WC.I18N("topic.not.allowed"));
        else if (s.startsWith("#") && WmsUIImpl.getChatBarOptions() && "disable" === WmsUIImpl.getChatBarOptions().adhocchats) WmsHybridSearch.showInfoMessage($WC.I18N("Error"), $WC.I18N("adhocchats.not.allowed"));
        else if (e && s.startsWith("@")) {
            var a = e.getElementsByClassName("wms-hysearch-result-name")[0];
            a = $WC.Util.getInnerText(a), t = e.getAttribute("data-id"), $WC.HybridSearch.getNode("inputdiv").insertAdjacentHTML("beforebegin", WmsHybridSearch.createInnerSearchFragment("@" + a, "user", t)), $WC.HybridSearch.getNode("inputdiv").value = "", $WC.HybridSearch.getNode("inputdiv").focus(), WmsHybridSearch.resshowntext = "", WmsHybridSearch.getNextResultSet()
        } else if (n && s.startsWith("#")) WmsHybridSearch.showInfoMessage($WC.I18N("Error"), $WC.I18N("topic.alreadyselected"));
        else if (n && 0 === $WC.HybridSearch.getChosenUsers().length) WmsHybridSearch.showInfoMessage($WC.I18N("Error"), $WC.I18N("topic.nouser"));
        else if (!n && s.startsWith("#")) {
            var o = $WC.HybridSearch.getNode("inputdiv").value;
            $WC.HybridSearch.getNode("inputdiv").insertAdjacentHTML("beforebegin", WmsHybridSearch.createInnerSearchFragment(o, "topic")), $WC.HybridSearch.getNode("inputdiv").value = "", $WC.HybridSearch.getNode("inputdiv").focus(), WmsHybridSearch.resshowntext = "", WmsHybridSearch.getNextResultSet()
        } else e && WmsContacts.isInvitedContact(e.getAttribute("data-id")) ? (WmsHybridSearch.hideUI(), void 0 !== WmsMainUI && WmsMainUI.showPendingInvitations()) : WmsHybridSearch.parseAndOpenChat(e, $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT)
    } else if (e && "true" === e.getAttribute("data-retry")) $WC.HybridSearch.invokeRetry();
    else if (e && "addcontact" === e.getAttribute("data-operation")) t = e.getAttribute("data-id") || e.getAttribute("data-dname"), WMSUI.inviteMember(t, t), WmsMainUI.resetToDefaultUI();
    else {
        t = e.getAttribute("data-id");
        var r = e.getAttribute("data-chid"),
            l = !1;
        $WC.Config.get("customContacts") && (l = WmsImplHandler.invokeSynchronously($WC.Config.get("customContacts").customContactClick, t, e), WMSUI.handleChatExist(r)), l || WmsContacts.isInvitedContact(t) || WmsHybridSearch.parseAndOpenChat(e)
    }
    $WC.HybridSearch.getNode("inputdiv") && $WC.Util.bringElemToView($WC.HybridSearch.getNode("inputdiv"), $WC.WmsConstants.KEYCODES.RIGHT, !0)
}, WmsHybridSearch.parseAndOpenChat = function(e, t) {
    var s, i, n, a, o, r, l, d, c, u = $WC.HybridSearch.getNode("inputcontainer") && $WC.HybridSearch.getNode("inputcontainer").querySelectorAll("[data-type='user']") || [],
        m = $WC.HybridSearch.getNode("inputcontainer") && $WC.HybridSearch.getNode("inputcontainer").querySelector("[data-type='topic']"),
        h = [];
    if (u.length && (i = $WC.Util.convertToArray(u).map((function(e) {
            return e.getAttribute("data-id")
        }))), m && (n = $WC.Util.getInnerText(m).slice(1)), i && (l = $WC.WmsConstants.HYBRIDSEARCH.CONTACT, r = i.join(","), i.length > 1 && !n && (i.forEach((function(e) {
            h.push({
                zuid: e
            })
        })), n = WmsHybridSearch.createChatTitle(h)), s = $WC.HybridSearch.getSearchText(), WmsHybridSearch.tempmsgdetails.push(s)), e)
        if (+e.getAttribute("data-type") === $WC.WmsConstants.HYBRIDSEARCH.CONTACT || +e.getAttribute("data-type") === $WC.WmsConstants.HYBRIDSEARCH.ORGCONTACT) r = e.getAttribute("data-id"), l = $WC.WmsConstants.HYBRIDSEARCH.CONTACT;
        else if (+e.getAttribute("data-type") === $WC.WmsConstants.HYBRIDSEARCH.BOT) r = e.getAttribute("data-id"), l = $WC.WmsConstants.HYBRIDSEARCH.BOT;
    else if (+e.getAttribute("data-type") === $WC.WmsConstants.HYBRIDSEARCH.GROUP) d = e.getAttribute("data-id"), l = $WC.WmsConstants.HYBRIDSEARCH.GROUP;
    else if (+e.getAttribute("data-type") === $WC.WmsConstants.HYBRIDSEARCH.CHAT) a = e.getAttribute("data-id"), l = $WC.WmsConstants.HYBRIDSEARCH.CHAT;
    else if (+e.getAttribute("data-type") === $WC.WmsConstants.HYBRIDSEARCH.CHANNEL) o = e.getAttribute("data-id"), c = e.getAttribute("data-oc_id"), l = $WC.WmsConstants.HYBRIDSEARCH.CHANNEL;
    else if (+e.getAttribute("data-type") === $WC.WmsConstants.HYBRIDSEARCH.ADDCONTACT) {
        var g = e.closest("[data-operation]");
        l = $WC.WmsConstants.HYBRIDSEARCH.ADDCONTACT
    } else +e.getAttribute("data-type") === $WC.WmsConstants.HYBRIDSEARCH.THREAD && (a = e.getAttribute("data-id"), l = $WC.WmsConstants.HYBRIDSEARCH.THREAD);
    if (l) {
        if (void 0 !== WmsMainUI) {
            if (a) var p = a;
            else if (o) p = o;
            else if (r && $WC.Bots.getList(!0)[r]) p = $WC.Bots.getList(!0)[r].CHID;
            else p = r;
            WmsMainUI.scheduleAutoFocus(p)
        }
        WmsHybridSearch.hideUI(), "disable" == $WC.Config.get("adhocchats") && i && i.length > 1 || WmsHybridSearch.checkAndOpenChat(l, r, n, s, d, o, a, g, t, c), void 0 !== WmsMainUI && WmsMainUI.resetToDefaultUI()
    } else WmsHybridSearch.showInfoMessage($WC.I18N("Error"), $WC.I18N("selection.none"))
}, WmsHybridSearch.checkAndOpenChat = function(e, t, s, i, n, a, o, r, l, d) {
    var c;
    if ((o = o || WebMessanger.ucmap[t] || WebMessanger.ucmap[n] || a || $WC.RecentChats.getChidFor121UnreadChat(t)) && WMSUI.handleChatExist(o), o && $WC.RecentChats.get(o) && $WC.RecentChats.get(o).LASTSEEN && ($WC.RecentChats.get(o).uc_useropened = !0), l = l == $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT ? "smartchat" : "mainui", e === $WC.WmsConstants.HYBRIDSEARCH.BOT) {
        var u = $WC.Bots.get(t);
        if (u)
            if (u.ISSUBSCRIBED) WebMessanger.createChatWindowFromCache(u.CHID, l);
            else {
                var m = {
                    bodyhtml: '<div class="wms-dialog-txtcont">' + $WC.Util.safeHTML($WC.I18N("bot.subscribe.confirm", u.DNAME)) + "</div>",
                    focusbutton: 2,
                    operations: [{
                        name: $WC.I18N("bot.action.subscribe"),
                        action: function() {
                            WmsMainUI.scheduleAutoFocus(t), $WC.Bots.subscribe(t), WmsDialog.removeModal()
                        }
                    }, {
                        name: $WC.I18N("common.cancel"),
                        classname: "wms-dialog-rejectbtn",
                        action: function() {
                            WmsDialog.removeModal()
                        }
                    }]
                };
                WmsDialog.showModal(m)
            }
    } else if (e === $WC.WmsConstants.HYBRIDSEARCH.CONTACT) {
        if (s && (c = !0), "1" == t.split(",").length && !$WC.SecurityManager.hasPermission("direct_message")) return void $WC.SecurityManager.handleError({
            message: $WC.I18N("module.disabled.directmsg")
        });
        !c && o && i ? Chat.isExists(o) ? Message.send(o, i) : (WmsChatCache.remove(o), Message.deletedMessages.remove(o), WebMessanger.openUserChat(t, c, s, i, l)) : WebMessanger.openUserChat(t, c, s, i, l)
    }
    if (e === $WC.WmsConstants.HYBRIDSEARCH.CHAT && o) WebMessanger.createChatWindowFromCache(o, l);
    else if (e === $WC.WmsConstants.HYBRIDSEARCH.CHANNEL && a)
        if (!1 === $WC.Channels.isJoinedChannel(a)) {
            var h = $WC.Channels.get(a).un;
            WebMessanger.fetchChannelDetails(h)
        } else WebMessanger.createChatWindowFromCache(a, l);
    else if (e === $WC.WmsConstants.HYBRIDSEARCH.ADDCONTACT) {
        var g = r.getAttribute("data-email");
        WmsHybridSearch.inviteMember(g)
    } else e === $WC.WmsConstants.HYBRIDSEARCH.THREAD && WebMessanger.attachSession(o)
}, WmsHybridSearch.createChatTitle = function(e) {
    var t, s = e.length;
    return s > 1 && (t = $WC.Util.getContactName(e[0].zuid, e[0].dname) + ", " + $WC.Util.getContactName(e[1].zuid, e[1].dname) + " & ", 2 === s ? t += WebMessanger.getNickName() : s > 2 && (t += s - 1 + " " + $WC.I18N("more"))), t
}, WmsHybridSearch.getNextResultSet = function(e) {
    var t, s = e && e.inpresultset || WmsHybridSearch.decideResultSet(),
        i = $WC.HybridSearch.getNode("searchresultdiv"),
        n = e && e.searchtext || $WC.HybridSearch.getSearchText();
    if (s === $WC.WmsConstants.HYBRIDSEARCH.EMPTY) i.innerHTML = "";
    else if (s === $WC.WmsConstants.HYBRIDSEARCH.EMPTYUSERHINT) i.innerHTML = "", WmsHybridSearch.setPlaceHolderHint($WC.I18N("hint.chooseuser"));
    else if (s === $WC.WmsConstants.HYBRIDSEARCH.EMPTYTITLEHINT) i.innerHTML = "", WmsHybridSearch.setPlaceHolderHint($WC.I18N("hint.choosetopic"));
    else if (s === $WC.WmsConstants.HYBRIDSEARCH.EMPTYMSGHINT) i.innerHTML = "", WmsHybridSearch.setPlaceHolderHint($WC.I18N("hint.sendmessage"));
    else if (s === $WC.WmsConstants.HYBRIDSEARCH.FREQCONTACTS) i.innerHTML = $WC.HybridSearch.generateHtml(WmsHybridSearch.generateFreqContactResults());
    else if (s === $WC.WmsConstants.HYBRIDSEARCH.USERLIST || s === $WC.WmsConstants.HYBRIDSEARCH.USER_CHANNELLIST) {
        n = e && e.searchtext || $WC.HybridSearch.getPlainSearchText(), t = [], s === $WC.WmsConstants.HYBRIDSEARCH.USER_CHANNELLIST && (t = $WC.HybridSearch.generateChannelResults(n, null, null, null));
        var a = [];
        if ($WC.Config.get("customContacts") && !$WC.Config.get("customContacts").separatePane) a = WmsHybridSearch.generateCustomContactResults(n), i.innerHTML = WmsHybridSearch.generateCustomContactsListHtml(a);
        else {
            var o = {
                    USERID: (a = $WC.HybridSearch.generateContactResults(n)).map((function(e) {
                        return e.USERID
                    }))
                },
                r = a.concat($WC.HybridSearch.generateOrgContactResults(n, !1, o));
            available_limited_contactlist = $WC.HybridSearch.filter("DNAME", n, r, null, null, "EMAILID", "UC", !1), r = available_limited_contactlist.length > 10 ? $WC.HybridSearch.filter("DNAME", n, r, null, null, "EMAILID", "UC", !1) : available_limited_contactlist;
            var l = $WC.HybridSearch.generateUnsubscribedBotResults(n, o);
            r = r.concat(l), e && e.inpresultset || (i.innerHTML = $WC.HybridSearch.generateHtml(r.concat(t))), (r.length <= 10 || $WC.Matcher.check("emailid", n, !0)) && ($WC.HybridSearch.updateManager("fetch", $WC.WmsConstants.HYBRIDSEARCH.ORGCONTACT, null, null, null, e), WmsHybridSearch.contact_excludelist = r)
        }
    } else if (s === $WC.WmsConstants.HYBRIDSEARCH.CUSTOMCONTACTLIST) {
        n = e && e.searchtext || $WC.HybridSearch.getPlainSearchText();
        a = WmsHybridSearch.generateCustomContactResults(n);
        i.innerHTML = WmsHybridSearch.generateCustomContactsListHtml(a)
    } else if (s === $WC.WmsConstants.HYBRIDSEARCH.TITLEHINT || s === $WC.WmsConstants.HYBRIDSEARCH.CHANNELLIST)
        if ("" !== (n = $WC.HybridSearch.getPlainSearchText())) {
            if (t = $WC.HybridSearch.generateChannelResults(n), $WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT && s === $WC.WmsConstants.HYBRIDSEARCH.TITLEHINT ? i.innerHTML = $WC.HybridSearch.createResultFragment("", n, "", "<span></span>", null, $WC.WmsConstants.HYBRIDSEARCH.TITLEHINT) + $WC.HybridSearch.generateHtml(t) : i.innerHTML = $WC.HybridSearch.generateHtml(t), t.length < 10) {
                var d = s === $WC.WmsConstants.HYBRIDSEARCH.TITLEHINT;
                $WC.HybridSearch.updateManager("fetch", $WC.WmsConstants.HYBRIDSEARCH.CHANNEL, null, d)
            }
        } else i.innerHTML = $WC.HybridSearch.generateHtml($WC.HybridSearch.generateChannelResults("", null, !0));
    else if (s === $WC.WmsConstants.HYBRIDSEARCH.MESSAGEHINT) i.innerHTML = $WC.HybridSearch.createResultFragment("", n, "", "<span></span>", "", $WC.WmsConstants.HYBRIDSEARCH.MESSAGEHINT);
    else if (s === $WC.WmsConstants.HYBRIDSEARCH.GENERICLIST) {
        i.innerHTML = "";
        var c = $WC.HybridSearch.generateSearchResults(n, null, null, null, !0);
        c.length >= 10 && (c = $WC.HybridSearch.generateSearchResults(n), $WC.HybridSearch.updateStatusContainer(c)), i.innerHTML = $WC.HybridSearch.generateHtml(c), (c.length < 10 || $WC.Matcher.check("emailid", n, !0)) && ($WC.Config.get("iscontacts_listing_disabled") ? $WC.HybridSearch.updateManager("fetch", $WC.WmsConstants.HYBRIDSEARCH.CHANNEL, null, !0) : $WC.HybridSearch.updateManager("fetch", null, null, !0))
    } else s === $WC.WmsConstants.HYBRIDSEARCH.DEFAULTRESULT && (WmsHybridSearch.showRotationalHint(), $WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT ? $WC.HybridSearch.getNode("defaultresultdiv").style.display = "table" : $WC.HybridSearch.getNode("defaultresultdiv").style.display = "block", i.style.display = "none");
    $WC.Util.loadOriginalImage($WC.HybridSearch.getNode("searchresultdiv"))
}, WmsHybridSearch.updatePresence = function(e) {
    var t = document.getElementById("wms_menu_listcontainer");
    if (t) {
        var s = t.querySelectorAll('[data-id="' + e + '"],[data-userid="' + e + '"]'),
            i = $WC.Util.unescapeHTML(WmsContacts.getStatusMsg(e));
        (s = $WC.Util.convertToArray(s)).forEach((function(t) {
            t.firstChild.className = "wms_badge_imgwrapper wms_badge_statusicon_" + WmsContacts.getStatusClassName(e), t.querySelector("[data-cutouticon]").className = "wms_badge_statusicon_" + WmsContacts.getStatusClassName(e) + "_cutout wms_badge_img_cutout", $WC.$CUtil.setInnerText(t.querySelector("[data-smsg]"), i), $WC.Util.setAttribute(t.querySelector("[data-smsg]"), "title", i)
        }))
    }
}, WmsHybridSearch.populateContactListInMainUI = function(e, t) {
    if (!WebMessanger.isExclusiveChat() && (WmsMainUI.decideRepopulate("contactlist") || e)) {
        if (!WebMessanger.is_custom_menu_opted && (silent || WebMessanger.isChatPaused() || _WMSEMPTYBAR)) return;
        var s = WebMessanger.is_custom_menu_opted ? "custom_list" : "mainui",
            i = $WC.HybridSearch.getNode("defaultresultdiv", $WC.WmsConstants.HYBRIDSEARCH.modules.CONTACTMENU);
        ($WC.Util.getObjectLength(WmsContacts.getContactsList()) || $WC.Util.getObjectLength(WmsOrgContacts.getOrgContactsList()) || $WC.Util.getObjectLength($WC.Bots.getList(!0)) || !$WC.WmsOrgContacts.isSuggestionsRequested()) && (i.innerHTML = "", WmsHybridSearch.populateContactsUsingVirtualList(238, 293, 54, i, s, t)), $WC.Util.loadOriginalImage(WmsMainUI.defaultcontactlist), WmsMainUI.setRePopulateStatus("contactlist", !1)
    }
}, WmsHybridSearch.populateCustomContactListInMainUI = function() {
    var e = $WC.Config.get("customContacts").separatePane ? $WC.WmsConstants.HYBRIDSEARCH.modules.CUSTOMCONTACTMENU : $WC.WmsConstants.HYBRIDSEARCH.modules.CONTACTMENU,
        t = $WC.HybridSearch.getNode("defaultresultdiv", e),
        s = WmsHybridSearch.generateCustomContactResults(null, !0);
    t.innerHTML = "";
    var i = WmsHybridSearch.generateCustomContactsListHtml(s);
    t.innerHTML = i, $WC.Util.loadOriginalImage(WmsMainUI.defaultcontactlist)
}, WmsHybridSearch.populateGroupResultInMainUI = function() {
    if ($WC.HybridSearch.getCurrentModule() !== $WC.WmsConstants.HYBRIDSEARCH.modules.SMARTCHAT && void 0 !== WmsMainUI && WmsMainUI.decideRepopulate("grouplist")) {
        var e = $WC.HybridSearch.generateHtml($WC.HybridSearch.generateChannelResults("", null, !0));
        e && (document.getElementById("wms_menu_grouplist_def").innerHTML = e, $WC.Channels.getNextToken() && $WC.HybridSearch.updateLoadingStatus(document.getElementById("wms_menu_grouplist_def"), $WC.WmsConstants.REQSTATUS.LOADING))
    }
}, WmsHybridSearch.decideResultSet = function() {
    var e = $WC.HybridSearch.getSearchText();
    if ($WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.CUSTOMCONTACTMENU) return "" === e ? $WC.WmsConstants.HYBRIDSEARCH.DEFAULTRESULT : $WC.WmsConstants.HYBRIDSEARCH.CUSTOMCONTACTLIST;
    if ($WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.CONTACTMENU) return "" === e ? $WC.WmsConstants.HYBRIDSEARCH.DEFAULTRESULT : $WC.WmsConstants.HYBRIDSEARCH.USERLIST;
    if ($WC.HybridSearch.getCurrentModule() === $WC.WmsConstants.HYBRIDSEARCH.modules.GROUPMENU) return "" === e ? $WC.WmsConstants.HYBRIDSEARCH.DEFAULTRESULT : $WC.WmsConstants.HYBRIDSEARCH.CHANNELLIST;
    var t, s, i = $WC.HybridSearch.getNode("inputcontainer").querySelectorAll("[data-type]");
    return i.length && "" === e ? (t = $WC.HybridSearch.getNode("inputcontainer").querySelectorAll("[data-type='user']"), (s = $WC.HybridSearch.getNode("inputcontainer").querySelector("[data-type='topic']")) && (!t.length || 1 == t.length) || 1 == t.length ? $WC.WmsConstants.HYBRIDSEARCH.EMPTYUSERHINT : s && t.length > 1 ? $WC.WmsConstants.HYBRIDSEARCH.EMPTYMSGHINT : t && t.length > 1 ? $WC.WmsConstants.HYBRIDSEARCH.EMPTYTITLEHINT : $WC.WmsConstants.HYBRIDSEARCH.EMPTY) : "" === e ? $WC.WmsConstants.HYBRIDSEARCH.DEFAULTRESULT : (t = $WC.HybridSearch.getNode("inputcontainer").querySelector("[data-type='user']"), s = $WC.HybridSearch.getNode("inputcontainer").querySelector("[data-type='topic']"), e.startsWith("@") ? e.indexOf("#") > 0 ? $WC.WmsConstants.HYBRIDSEARCH.CHANNELLIST : $WC.WmsConstants.HYBRIDSEARCH.USER_CHANNELLIST : e.startsWith("#") ? e.indexOf("@") > 0 || !t ? $WC.WmsConstants.HYBRIDSEARCH.CHANNELLIST : s ? $WC.WmsConstants.HYBRIDSEARCH.EMPTY : $WC.WmsConstants.HYBRIDSEARCH.TITLEHINT : t ? $WC.WmsConstants.HYBRIDSEARCH.MESSAGEHINT : i.length ? $WC.WmsConstants.HYBRIDSEARCH.EMPTY : $WC.WmsConstants.HYBRIDSEARCH.GENERICLIST)
}, WmsHybridSearch.showInfoMessage = function() {
    var e;
    return function(t, s) {
        WmsHybridSearch.hideInfoMessage();
        var i = $WC.template.replace('<div id="wms-hysearch-infomsg" class="wms-hysearch-infomsg"><div class="wms-shake"><span style="font-weight: bold;">{{heading}}: </span><span>{{msg}}</span></div></div>', {
            heading: t,
            msg: s
        });
        $WC.HybridSearch.getNode("mainUI").insertAdjacentHTML("beforeend", i), clearTimeout(e), e = setTimeout(WmsHybridSearch.hideInfoMessage, 3e3)
    }
}(), WmsHybridSearch.hideInfoMessage = function() {
    $WC.Util.removeElement($WC.HybridSearch.getNode("infomsgdiv"))
}, WmsHybridSearch.showRotationalHint = function() {
    var e = ["hint.chatwithmsg", "hint.searchtopic"];
    $WC.Config.get("isOrgUser")() && "disable" != $WC.Config.get("channels") && $WC.SecurityManager.hasPermission("channels") ? e.unshift("search.commontitle") : e.unshift("search.contactsandchats"), "disable" != $WC.Config.get("adhocchats") && e.push("hint.groupchat"), void 0 === e[WmsHybridSearch.hintindex] && (WmsHybridSearch.hintindex = 0);
    var t = $WC.I18N(e[WmsHybridSearch.hintindex]);
    WmsHybridSearch.setPlaceHolderHint(t)
}, WmsHybridSearch.setPlaceHolderHint = function(e) {
    $WC.$CUtil.setInnerTextById("wms-hysearch-placeholder", e)
}, WmsHybridSearch.inviteMember = function(e) {
    WMSUI.inviteMember(e)
}, WmsHybridSearch.debouncedRepopulate = $WC.Util.debounce((function() {
    if (void 0 !== WmsMainUI && !$WC.Config.get("customContacts")) {
        var e = {
            suggestions: "show_suggestions"
        };
        WmsHybridSearch.populateContactListInMainUI(!0, e), WmsMainUI.resetToDefaultUI()
    }
}), null, 5e3, !0), WmsHybridSearch.clearInvite = function(e) {
    e.status == $WC.WmsConstants.CONTACTSTATUS.NOCHAT && -1 === WmsContacts.getPendingInvitedContactsList().indexOf(e.zuid) ? WmsContacts.setPendingInvitedContactsList(e.zuid) : e.status != $WC.WmsConstants.CONTACTSTATUS.NOCHAT && $WC.Util.removeElementFromArray(WmsContacts.getPendingInvitedContactsList(), e.zuid), $WC.Util.removeElementFromArray(WmsContacts.getInvitedContactsList(), e.zuid), document.getElementById("wms-hysearch") && WmsHybridSearch.populateFrequentContactsInSmartChat(), void 0 !== WmsMainUI && WmsMainUI.updateChatInvitationCount(), WmsHybridSearch.debouncedRepopulate()
}, WmsHybridSearch.showInvite = function(e) {
    if (-1 === WmsContacts.getInvitedContactsList().indexOf(e.zuid) && -1 === WmsContacts.getPendingInvitedContactsList().indexOf(e.zuid) && (WmsContacts.setInvitedContactsList(e.zuid), WmsContacts.setPendingInvitedContactsList(e.zuid)), void 0 !== WmsMainUI && !$WC.Config.get("customContacts")) {
        WmsMainUI.updateChatInvitationCount();
        var t = {
            suggestions: "show_suggestions"
        };
        WmsHybridSearch.populateContactListInMainUI(!0, t)
    }
    document.getElementById("wms-hysearch") && WmsHybridSearch.populateFrequentContactsInSmartChat()
}, WmsHybridSearch.generateCustomContactResults = function(e, t) {
    var s = [],
        i = [],
        n = WmsImplHandler.invokeSynchronously($WC.Config.get("customContacts").customContactsList);
    if (t)
        if (s = (s = WmsImplHandler.invokeSynchronously($WC.Config.get("customContacts").invitationsList)) || [], $WC.Util.isArray(n)) i = s.concat(n);
        else if ($WC.Util.getObjectLength(n)) {
        var a = [];
        for (var o in n) {
            if ($WC.Util.isArray(n[o])) a.push(o), n[o].forEach((function(e) {
                a.push(e)
            }))
        }
        i = s.concat(a)
    } else i = s;
    else i = WmsImplHandler.invokeSynchronously($WC.Config.get("customContacts").customContactsList, e);
    return i
}, WmsHybridSearch.generateCustomContactsListHtml = function(e) {
    var t = "";
    return e.forEach((function(e) {
        t += function(e) {
            var t, i, n, a, o = "wms_menu_item",
                r = "",
                l = "",
                d = "",
                c = "",
                u = "";
            if ("string" == typeof e) {
                return $WC.template.replace('<div class="wms_menu_subheading" data-heading="{{heading}}">{{heading}}</div>', {
                    heading: e
                })
            }
            e.time && (r = '<span class="wms_menu_item_time" title="' + $WC.DateUtil.formatDateWithWords(e.time) + '">' + $WC.DateUtil.formatTime(e.time) + "</span>");
            var m = WmsImplHandler.invokeSynchronously($WC.Config.get("customContacts").getUnreadCount, e.id) || !1;
            m ? (l = '<span style="display:flex" class="wms_menu_item_count" data-unreadcount=true>' + m + "</span>", WmsMainUI.setUnreadCount(e.id, m, $WC.Config.get("customContacts").separatePane)) : (l = '<span class="wms_menu_item_count" data-unreadcount=true></span>', WmsMainUI.resetUnreadCount(e.id, $WC.Config.get("customContacts").separatePane));
            WmsMainUI.updateUnreadCountInUI(e.id);
            var h = WmsImplHandler.invokeSynchronously($WC.Config.get("customContacts").isInvitationPending, e) || !1;
            h ? (u = e.statusMsg ? e.statusMsg : e.mailId, o = "wms_menu_item_invitations") : u = e.statusMsg;
            if (n = '<div class="' + (u ? "wms_menu_item_name wms-truncate-ellipsis" : "wms_menu_item_name wms-truncate-ellipsis wms-valign-mid-block") + '" title="{{dname}}">{{dname}}</div>', t = s(e), i = '<div class="wms_menu_item_msg wms-truncate-ellipsis" data-smsg="true" title="' + u + '">' + u + "</div>", $WC.Config.get("customContacts").getChatOwner) {
                var g = WmsImplHandler.invokeSynchronously($WC.Config.get("customContacts").getChatOwner, e.id);
                if (g && g.id != $WC.Config.get("zuid")) var p = s(g)
            }
            h && (c = '<div class="wms_menu_inv" data-dname="{{dname}}"><span data-customoperation="{{invitationAcceptLabel}}" data-id="{{id}}" data-type="{{type}}" title="{{invitationAcceptLabel}}" class="wms_menu_invaccept" > {{invitationAcceptLabel}} </span><span>  |  </span><span data-customoperation="{{invitationDeclineLabel}}" data-id="{{id}}" data-type="{{type}}" title="{{invitationDeclineLabel}}" class="wms_menu_invreject" > {{invitationDeclineLabel}} </span></div>');
            p ? d = '<div class="wms_menu_item_profile_icon_img wms-valign-mid-block" data-zcprofileid="' + e.id + '" style="visibility:visible">' + p + "</div>" : m || !0 === $WC.Config.get("customContacts").disableProfileIcon || (d = '<div class="wms_menu_item_profile_icon wms-valign-mid-block" data-zcprofileid="' + e.id + '"></div>');
            a = '<div class="' + o + '" data-id="{{id}}" data-chid="{{chid}}" data-dname="{{dname}}" data-type="{{type}}">' + t + n + r + i + c + l + d + "</div>";
            var f = e.invitationActions || $WC.Config.get("customContacts").invitationActions || null,
                v = {
                    id: e.id,
                    chid: e.chid || "",
                    time: e.time,
                    type: $WC.WmsConstants.HYBRIDSEARCH.CONTACT,
                    dname: $WC.Util.unescapeHTML(e.name),
                    invitationAcceptLabel: f ? f[0].label : $WC.I18N("common.accept"),
                    invitationDeclineLabel: f ? f[1].label : $WC.I18N("remind.later")
                };
            return $WC.template.replace(a, v)
        }(e)
    })), t;

    function s(e) {
        var t = WmsImplHandler.invokeSynchronously($WC.Config.get("customContacts").getStatusClass, e.id) || "",
            s = $WC.Config.get("customContacts").separatePane ? "" : 'data-zcprofileid="' + e.id + '"';
        return '<span class="wms_badge_imgwrapper wms_badge_statusicon_' + t + '">' + (e.name && e.photo ? "<img " + s + 'src="' + e.photo + '"/>' : "<span " + s + 'class="wms_badge_letter">' + $WC.HybridSearch.getBadgeLetters(e.name) + "</span>") + "</span>"
    }
}, WmsHybridSearch.bindEvents = function() {
    var e = $WC.HybridSearch.getNode("mainUI");
    Gator(e).on("click", "[class~=wms-hysearch-result] ", (function() {
        WmsHybridSearch.handleClick(this)
    })), Gator(e).on("click", "[data-retry]", (function() {
        WmsHybridSearch.handleClick(this)
    })), Gator(e).on("click", "[data-addcontact]", (function() {
        WmsHybridSearch.handleClick(this)
    })), Gator(e).on("click", "[data-innerfragclose]", (function(e) {
        WmsHybridSearch.removeChosenText(e, this)
    })), Gator(e).on("mouseover", "[data-innerfrag]", (function() {
        WmsHybridSearch.showCloseIcon(this)
    })), Gator(e).on("mouseout", "[data-innerfrag]", (function() {
        WmsHybridSearch.hideCloseIcon(this)
    })), Gator(e).on("click", "#wms-hysearch-placeholder", WmsHybridSearch.focusInput), Gator(e).on("click", "[class=wms-hysearch-closeicon]", WmsHybridSearch.hideUI), Gator(e).on("click", "[class=wms-hysearch-tipsicon]", WmsHybridSearch.toggleTipsUI)
}, WmsHybridSearch.showJoinChannelDialog = function(e) {
    if (e.data.joined) WmsMainUI.scheduleAutoFocus(e.data.chid), WebMessanger.attachSession(e.data.chid);
    else {
        var t = JSON.parse("[" + e.data.re_conv.slice(0, -1) + "]"),
            s = Message.constructChatContent(t),
            i = new $WC.ChannelPreview,
            n = {
                handleCopyLink: ChatWindow.prototype.handleCopyPermaLink,
                handleJoinChannel: function(e) {
                    WmsMainUI.scheduleAutoFocus(e), WebMessanger.joinChannel(e)
                },
                handleProfileInfo: WebMessanger.showProfileInfo,
                handleLoadImages: WMSUI.loadImages
            };
        i.mountComponent(e.data, s, n)
    }
};
var WmsDialog = {
        showModal: function(e, t) {
            WmsDialog.removeModal(), ZMSGUI.createOverlay(), WmsDialog.operations = e.operations;
            for (var s = e.imghtml ? e.imghtml : "", i = e.width || "480", n = e.bodyhtml ? e.bodyhtml : "", a = '</div><div class="wms-dialog-inpcont">', o = 0; o < e.operations.length; o++) {
                var r = e.operations[o].classname ? e.operations[o].classname : "wms-dialog-acceptbtn",
                    l = e.operations[o].name;
                e.operations[o].link ? a += '<a href="' + e.operations[o].link + '" target="_blank" rel="noopener"><input type="button" class="' + r + '" tabindex="' + (o + 1) + '" value="' + l + '"></input></a>' : a += '<input type="button" class="' + r + '" tabindex="' + (o + 1) + '" value="' + l + '"></input>'
            }
            var d = '<div class="wms-dialogheader"><span class="wms-dialogclose" data-operation="close"></span></div><div class="wms-dialogcontent"><div class="wms-dialogtext">' + s + n + (a += "</div></div>"),
                c = t ? {
                    "data-ownerchatid": t
                } : null,
                u = $WC.Util.createElement("div", "wms-dialog", "wms-dialogparent wms-hvalign", c, d);
            WebMessanger.isDarkModeEnabled && $WC.Util.addClass(u, "zmNightMode"), u.style.zIndex = $WC.Config.get("zindex"), u.style.width = i + "px", u.onclick = function(e) {
                var t = $WC.Util.getEventTarget(e),
                    s = t.getAttribute("tabindex");
                if ("close" == t.getAttribute("data-operation")) WmsDialog.removeModal();
                else if (s) {
                    var i = WmsDialog.operations[s - 1].action;
                    i && i.call(), WmsDialog.removeModal()
                }
            }, document.body.appendChild(u).querySelector('[tabindex="' + e.focusbutton + '"]').focus()
        },
        removeModal: function() {
            if (ZMSGUI.removeOverlay(), document.getElementById("wms-dialog")) {
                var e = document.getElementById("wms-dialog").getAttribute("data-ownerchatid");
                $WC.Util.removeElement(document.getElementById("wms-dialog")), e && WindowHandler.focusChatById(e)
            }
        }
    },
    WmsMediaPlayer = {
        supported_audio_formats: [],
        supported_video_formats: [],
        initSupportedAudioFormats: function() {
            for (var e = new Audio, t = ["mp3", "mpeg", "wav", "aac", "amr", "flac", "gsm", "tta", "wv", "x-wav", "x-m4a", "mp4"], s = 0, i = t.length; s < i; s++) "" !== e.canPlayType("audio/" + t[s]) && "no" !== e.canPlayType("audio/" + t[s]) && this.supported_audio_formats.push("audio/" + t[s])
        },
        initSupportedVideoFormats: function() {
            var e = $WC.Util.createElement("video");
            this.IS_VIDEO_TAG_SUPPORTED = !!e.canPlayType;
            for (var t = ["webm", "mkv", "flv", "ogg", "avi", "mov", "qt", "wmv", "asf", "mp4", "3gp", "quicktime"], s = 0, i = t.length; s < i; s++) "" !== e.canPlayType("video/" + t[s]) && "no" !== e.canPlayType("video/" + t[s]) && this.supported_video_formats.push("video/" + t[s])
        },
        isSupportedAudioFormat: function(e) {
            return this.supported_audio_formats.indexOf(e) > -1
        },
        isSupportedVideoFormat: function(e) {
            return this.supported_video_formats.indexOf(e) > -1
        },
        isSupportedAudioType: function(e, t) {
            return this.isSupportedAudioFormat(e) || this.isSupportedAudioFormat("audio/" + t)
        },
        isSupportedVideoType: function(e, t) {
            return e = this.getVideoType(e), this.isSupportedVideoFormat(e) || this.isSupportedVideoFormat("video/" + t)
        },
        getVideoType: function(e) {
            return ["image/heif", "image/heif-sequence", "image/heic", "image/heic-sequence", "video/mov", "video/quicktime"].includes(e) ? "video/mp4" : e
        }
    };

function ListCommon(e, t) {
    this.container = t, this.input = e, this.selectedelem = "";
    var s = this;
    e.addEventListener("keydown", (function(e) {
        var t = e.keyCode;
        WebMessanger && (WebMessanger.userslist || WebMessanger.forkedlist) ? t !== $WC.WmsConstants.KEYCODES.ENTER && t !== $WC.WmsConstants.KEYCODES.UP && t !== $WC.WmsConstants.KEYCODES.DOWN || e.preventDefault() : "none" === s.container.style.display || t !== $WC.WmsConstants.KEYCODES.ENTER && t !== $WC.WmsConstants.KEYCODES.UP && t !== $WC.WmsConstants.KEYCODES.DOWN && t !== $WC.WmsConstants.KEYCODES.LEFT && t !== $WC.WmsConstants.KEYCODES.RIGHT || e.preventDefault()
    })), e.addEventListener("keyup", (function(e) {
        "none" !== s.container.style.display && s.handleKeyMovement(e, s)
    })), t.addEventListener("click", (function(e) {
        var t = $WC.Util.getEventTarget(e);
        s.handleClick(t, s), "undefined" != typeof WmsUIImpl && WmsImplHandler.invoke(WmsUIImpl.onChatWindowDropUpClick, e, s), e.stopPropagation()
    }))
}
ListCommon.prototype.getListHTML = function(e, t) {
    var s = "",
        i = e.USERID || e.id;
    i = e.ISBOT ? "b-" + i : i;
    var n = $WC.Util.getContactName(i) || e.DNAME || e.name,
        a = WmsContacts.getEmailId(i) || e.EMAILID || e.description || "";
    void 0 !== WmsSettings && WmsSettings.isEmailIDHidden() && (a = "");
    var o = e.STATUS || "",
        r = e.STYPE || "",
        l = e.STATUSCLASS || "";
    t ? s = e.photo || "" : e.id || (s = $WC.Bots.isBotId(i) ? $WC.Bots.getPhoto(i) : WmsContacts.getUserPhoto(i));
    var d = '<div class="wms-filefrwrdcontact" data-dname="{{dname}}" data-userid="' + i + '" data-list="true">';
    return s && (d += '<span class="wms-filefrwrdcontactspan"><div class="wms-filefrwrdcontactdiv"><img class="wms-filefrwrdcontactimg wms-autocompleteimg" src={{image}}><span class="{{statusclass}}"></span></div></span>'), d += '<span class="wms-filefrwrdcontactdetails wms-truncate-ellipsis" title="{{dname}}">{{dname}}</span><span class="wms-truncate-ellipsis wms-filefrwrddesc wms-valign-mid-block" title="{{emailid}}">{{emailid}}</span></div>', WmsContacts.getContactsList(i) ? r == WmsContacts.userstatus.MOB_LOGIN ? o == WmsContacts.userstatus.OFFLINE ? l = "wms-filefrwrdcontactstatus wms-contactstatus wms-statusicon-offline" : o == WmsContacts.userstatus.ONLINE ? l = "wms-filefrwrdcontactstatus wms-contactstatus wms-statusicon-available-mobile" : o == WmsContacts.userstatus.BUSY ? l = "wms-filefrwrdcontactstatus wms-contactstatus wms-statusicon-busy-mobile" : o == WmsContacts.userstatus.AWAY ? l = "wms-filefrwrdcontactstatus wms-contactstatus wms-statusicon-away" : o == WmsContacts.userstatus.IDLE ? l = "wms-filefrwrdcontactstatus wms-contactstatus wms-statusicon-idle-mobile" : o == WmsContacts.userstatus.DONOTDISTURB && (l = "wms-filefrwrdcontactstatus wms-contactstatus wms-statusicon-dnd-mobile") : o && (l = o == WmsContacts.userstatus.AWAY ? "wms-filefrwrdcontactstatus wms-contactstatus wms-statusicon-away" : o == WmsContacts.userstatus.DONOTDISTURB ? "wms-filefrwrdcontactstatus wms-contactstatus wms-statusicon-dnd" : "wms-filefrwrdcontactstatus wms-filefrwrdscode-" + o) : e.ISBOT && (l = "wms-filefrwrdcontactstatus wms_boticon"), $WC.template.replace(d, {
        dname: $WC.Util.unescapeHTML(n),
        emailid: a,
        statusclass: l,
        image: s
    })
}, ListCommon.prototype.showUI = function(e, t, s, i, n) {
    this.sethtml = s;
    var a = this,
        o = "";
    $WC.Util.isArray(e) && !s ? e.forEach((function(e) {
        if (i) {
            var t = e.USERID || e.id;
            t = e.ISBOT ? "b-" + t : t, a.container.querySelector('[data-userid="' + t + '"]') || (o += a.getListHTML(e, n))
        } else o += a.getListHTML(e, n)
    })) : s && (o = e), i ? (this.container.innerHTML += o, s || (this.selectedelem = this.container.querySelector('[class="wms-filefrwrdcontactsel"]'), this.selectElem(this.selectedelem, !0))) : (this.container.innerHTML = o, this.container.scrollTop = 0, this.selectedelem = "", t && (this.container.firstChild.getAttribute("data-list") ? this.selectedelem = this.container.firstChild : this.selectedelem = this.container.firstChild.firstChild, this.selectElem(this.selectedelem, !0)))
}, ListCommon.prototype.handleKeyMovement = function(e, t) {
    var s, i = e.keyCode,
        n = $WC.Util.getEventTarget(e);
    if (i !== $WC.WmsConstants.KEYCODES.LEFT && i !== $WC.WmsConstants.KEYCODES.RIGHT || ":" !== WMSUI.curtrigger) i === $WC.WmsConstants.KEYCODES.UP || i === $WC.WmsConstants.KEYCODES.DOWN ? (t.selectElem(t.selectedelem, !1), t.selectedelem = t.selectedelem ? $WC.$CUtil.getConditionalNextNode(t.selectedelem, i, "data-list") : t.container.firstChild, t.selectElem(t.selectedelem, !0), t.selectedelem && $WC.Util.bringElemToView(t.selectedelem, i), e.preventDefault()) : i === $WC.WmsConstants.KEYCODES.ENTER ? t.selectedelem && (WebMessanger.userslist ? WebMessanger.userslist.handleKeyMovement(e) : WebMessanger.forkedlist ? WebMessanger.forkedlist.handleKeyMovement(e) : WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.SLASH || "-" === WMSUI.curtrigger && -1 != n.value.indexOf($WC.WmsConstants.TRIGGERS.SLASH) ? Commands.select(n, t.selectedelem) : WMSUI.curtrigger !== $WC.WmsConstants.TRIGGERS.ATMENTION && WMSUI.curtrigger !== $WC.WmsConstants.TRIGGERS.ADDMEM || WMSUI.atMentions.select(n, t.selectedelem), e.preventDefault()) : WebMessanger.userslist ? WebMessanger.userslist.handleKeyMovement(e) : WebMessanger.forkedlist && WebMessanger.forkedlist.handleKeyMovement(e);
    else {
        t.selectElem(t.selectedelem, !1);
        var a = t.container.firstChild,
            o = 0;
        for (t.selectedelem && (a = t.selectedelem.parentNode); o < a.childElementCount;) t.selectedelem === a.childNodes[o] && (s = o), o++;
        var r = $WC.$CUtil.getNextRotationalNode(a, i);
        t.selectedelem = r.childNodes[s], t.selectElem(t.selectedelem, !0), e.preventDefault()
    }
}, ListCommon.prototype.selectElem = function(e, t) {
    if (e || !this.sethtml) {
        var s = e.getAttribute("class").replace(/sel$/, ""),
            i = t ? s + "sel" : s;
        e.setAttribute("class", i)
    }
}, ListCommon.prototype.handleClick = function(e, t) {
    e = e.closest('[data-list="true"]'), WebMessanger.userslist ? WebMessanger.userslist.handleClick(e) : WebMessanger.forkedlist ? WebMessanger.forkedlist.handleClick(e) : WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.SLASH || "-" === WMSUI.curtrigger && -1 != t.input.value.indexOf($WC.WmsConstants.TRIGGERS.SLASH) ? Commands.select(t.input, e) : WMSUI.curtrigger !== $WC.WmsConstants.TRIGGERS.ATMENTION && WMSUI.curtrigger !== $WC.WmsConstants.TRIGGERS.ADDMEM || WMSUI.atMentions.select(t.input, e), t.selectedelem = e
}, WMSUI.autoComplete = {
    init: function(e, t) {
        WMSUI.atMentions.changeColor(t);
        var s = t.value.substring(0, t.selectionStart),
            i = s.lastIndexOf(" " + $WC.WmsConstants.TRIGGERS.SMILEY) + 1;
        if (e) var n = WindowHandler.getWinObjById(e);
        this.isSmileyTriggerPresent(i, s) && "false" != this.getSearchTermForComposer(s) ? n && "disable" !== $WC.Config.get("emoji") && n.showSmileyUI(!0, this.getSearchTermForComposer(s)) : n && n.autocompletepickervisible && n.hideSmileyUI()
    },
    select: function(e, t) {
        var s = e.selectionStart,
            i = e.getAttribute("chid");
        if (i) var n = document.getElementById(i).querySelector('[id="wms-editorscrolldiv"]');
        Smiley.textcodes_lookup[t] && (t = t.indexOf("!") > -1 ? ":" + Smiley.textcodes_lookup[t] + "!: " : ":" + Smiley.textcodes_lookup[t] + ": ");
        var a = e.value,
            o = (a = a.substring(0, s)).lastIndexOf(" " + $WC.WmsConstants.TRIGGERS.SMILEY) + 1;
        (o > 0 || 0 === o && 0 === a.indexOf($WC.WmsConstants.TRIGGERS.SMILEY) || 0 === o && "\n" === a[a.lastIndexOf($WC.WmsConstants.TRIGGERS.SMILEY) - 1]) && ("\n" === a[a.lastIndexOf($WC.WmsConstants.TRIGGERS.SMILEY) - 1] && (o = a.lastIndexOf("\n" + $WC.WmsConstants.TRIGGERS.SMILEY) + 1), e.value = e.value.substring(0, o) + t + e.value.substring(s), $WC.Util.moveCaretPosition(e, o + t.length, o + t.length), i && (WMSUI.atMentions.setScrollPosition(n, e), WMSUI.atMentions.changeColor(e))), WMSUI.currenttrigger = ""
    },
    setKeyNavigation: function(e, t) {
        e.addEventListener("keydown", t.handleCustomNavigation)
    },
    removeKeyNavigation: function(e, t) {
        e.removeEventListener("keydown", t.handleCustomNavigation)
    },
    isSmileyTriggerPresent: function(e, t) {
        return e > 0 || 0 === e && 0 === t.indexOf($WC.WmsConstants.TRIGGERS.SMILEY) || 0 === e && "\n" === t[t.lastIndexOf($WC.WmsConstants.TRIGGERS.SMILEY) - 1]
    },
    getSearchTermForComposer: function(e) {
        var t = (e = e.replace(/:\w+:/g, "")).lastIndexOf($WC.WmsConstants.TRIGGERS.SMILEY);
        return "\n" === e[t - 1] || " " === e[t - 1] || 0 === t ? e.substring(t + 1) : "false"
    }
}, WMSUI.atMentions = {
    specialmentions: {
        keys: ["available", "participants"],
        getDisplayName: function(e, t) {
            var s = WmsSettings.adminsettings.features.specialmentions_hash;
            for (var i in s)
                if (e == i || -1 !== s[i].unique_key.indexOf(t)) return s[i].display_name
        }
    },
    fetchmentionlist: !0,
    init: function(e, t, s, i, n) {
        var a = [],
            o = t.value.substring(0, t.selectionStart),
            r = o.lastIndexOf(" " + WMSUI.curtrigger) + 1,
            l = WindowHandler.getWinObjById(e),
            d = n || l.autocompletediv,
            c = WmsFileUploadUI.listcommon || l.listcommon,
            u = s && s.callbackargs && s.callbackargs.silentload;
        if (!(!0 === l.disablemembercontrol && WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ADDMEM || WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ATMENTION && !0 === l.disablemention || l.salesiqchat)) {
            if (WMSUI.atMentions.changeColor(t), r > 0 || 0 == r && 0 == o.indexOf(WMSUI.curtrigger) || 0 == r && "\n" == o[o.indexOf(WMSUI.curtrigger) - 1]) {
                var m = WMSUI.atMentions.getSearchTerm(e, o);
                WMSUI.atMentions.fetchmentionlist && (a = WMSUI.atMentions.getContactList(e, t, i, n, m))
            }
            WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ADDMEM && (a = a.filter((function(e) {
                if ($WC.Bots.isBotId(e.USERID)) {
                    var t = $WC.Bots.get(e.USERID);
                    return !(!t || !t.ISSUBSCRIBED)
                }
                return !0
            }))), a && a.length && ("@" == WMSUI.curtrigger || "+" == WMSUI.curtrigger && ("1" !== l.ctype || l.isZohoGroupChat())) ? (c.showUI(a, !0, null, u), d.style.display = "block", l.footernode.style.borderRadius = "0px 0px 5px 5px", $WC.Channels.get(e) && 0 != WebMessanger.isPaginationEnabledForParticipantsSearch() || !(a.length < 5 || $WC.Matcher.check("emailid", m, !0)) || !1 !== WmsOrgContacts.isCachedRequest(m) || WmsHybridSearch.getNextResultSet({
                searchtext: m,
                inpresultset: $WC.WmsConstants.HYBRIDSEARCH.USERLIST,
                chid: e,
                topicname: "listview",
                silentload: !0
            })) : $WC.Channels.get(e) || !m || s && s.stat === $WC.WmsConstants.REQSTATUS.NORESULTS ? ":" !== WMSUI.curtrigger && l.autocompletepickervisible && l.hideSmileyUI() : WmsHybridSearch.getNextResultSet({
                searchtext: m,
                inpresultset: $WC.WmsConstants.HYBRIDSEARCH.USERLIST,
                chid: e,
                topicname: "listview"
            })
        }
    },
    getDname: function(e, t) {
        if (t) {
            var s = $WC.Util.getContactName(t);
            if (!s)(WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ATMENTION ? WindowHandler.getWinObjById(e).allowedmentions.members : WindowHandler.getWinObjById(e).allowedmembers.members).forEach((function(e) {
                t === e.USERID && (s = e.DNAME)
            }));
            return s
        }
    },
    getSearchTerm: function(e, t) {
        var s = WindowHandler.getWinObjById(e),
            i = s.atmentions ? s.atmentions.split(",") : "";
        $WC.Util.isArray(i) && i.forEach((function(s) {
            var i = WMSUI.atMentions.getDname(e, s),
                n = '<span class="wms-atmtntext"> ' + WMSUI.curtrigger + i + "</span>",
                a = WMSUI.curtrigger + i;
            a = a.replace(/(?=[$*+\[\]() ])/g, "\\");
            var o = new RegExp(a, "g");
            t = t.replace(o, n)
        }));
        var n = t.replace(/<span class="wms-atmtntext">(.+?)<\/span>/g, ""),
            a = n.lastIndexOf(WMSUI.curtrigger),
            o = n.indexOf(WMSUI.curtrigger);
        return "\n" === n[a - 1] || " " === n[a - 1] || 0 === a ? (WMSUI.atMentions.fetchmentionlist = !0, n.substring(a + 1)) : "@" != WMSUI.curtrigger || "\n" !== n[o - 1] && " " !== n[o - 1] && 0 !== o ? void(WMSUI.atMentions.fetchmentionlist = !1) : (WMSUI.atMentions.fetchmentionlist = !0, n.substring(o + 1))
    },
    getContactList: function(e, t, s, i, n) {
        var a, o = [],
            r = [],
            l = WindowHandler.getWinObjById(e),
            d = l.ctype,
            c = "8" == d,
            u = "1" == d,
            m = "11" == d;

        function h(e) {
            var t = [];
            if (WindowHandler.getWinObjById(e).atmentions) {
                var s = WindowHandler.getWinObjById(e).atmentions.slice(0, -1).split(",");
                $WC.Util.isArray(s) && s.forEach((function(e) {
                    t.push(e)
                }))
            }
            return t
        }

        function g(e, t) {
            var s = WindowHandler.getWinObjById(e);
            return t === $WC.WmsConstants.TRIGGERS.ADDMEM && s.allowedmembers.members.length ? s.allowedmembers.members : s.allowedmentions.members.length ? s.allowedmentions.members : void 0
        }

        function p(e, t) {
            var s, i = [];
            if (e || t > 2) {
                for (var n in s = WmsSettings.adminsettings.features.specialmentions_hash) i.push({
                    id: s[n].unique_key.slice(s[n].unique_key.indexOf("@") + 1),
                    name: s[n].display_name,
                    description: s[n].desc
                });
                return i
            }
        }

        function f(e, t, s) {
            var i, n = [],
                a = [];
            for (var o in i = s === $WC.WmsConstants.CHANNELS.TEAM ? $WC.Channels.getTeamChannelMembers(e) : WindowHandler.getWinObjById(e).partinfo) $WC.Util.isLocalUser(o) || (WmsContacts.get(o, !0) ? n.push(WmsContacts.get(o, !0)) : n.push(WMSUI.atMentions.wrapParticipantsObj(i[o])), a.push(o));
            return t ? a : n
        }
        if (r = {
                USERID: h(e)
            }, c && 1 == WebMessanger.isPaginationEnabledForParticipantsSearch() || WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ADDMEM && $WC.Util.isThreadChid(e)) WMSUI.curtrigger !== $WC.WmsConstants.TRIGGERS.ADDMEM || "5" == d || c && !$WC.Channels.isUserHasPermission(e, $WC.WmsConstants.USERPERMISSIONS.ADD_MEMBER) || $WC.Util.isThreadChid(e) && "true" !== l.thread_follower ? WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ATMENTION && (WebMessanger.isSpecialMentionEnabled() && (o = $WC.HybridSearch.filter("name", n, p(c, l.partcount), 10)), (o = o.concat($WC.HybridSearch.filter("DNAME", n, g(e, WMSUI.curtrigger), 10, r, "EMAILID"))).length ? o.length < 10 && WebMessanger.fetchChannelMembers(e, n, WMSUI.curtrigger) : Commands.hideLoadingIcon(e)) : l.allowedmembers.members.length || l.allowedmembers.token_mapping[n] ? (o = o.concat($WC.HybridSearch.filter("DNAME", n, g(e, WMSUI.curtrigger), 10, r, "EMAILID"))).length ? o.length < 10 && WebMessanger.fetchChannelMembers(e, n, WMSUI.curtrigger) : Commands.hideLoadingIcon(e) : (Commands.showLoadingIcon(WMSUI.atMentions.autocompletediv || l.autocompletediv, e), WebMessanger.fetchChannelMembers(e, n, WMSUI.curtrigger));
        else if (WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ATMENTION || !c || $WC.Channels.isUserHasPermission(e, $WC.WmsConstants.USERPERMISSIONS.ADD_MEMBER))
            if (WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ADDMEM && "5" != d && (r = {
                    USERID: h(e).concat(f(e, !0))
                }), c && $WC.Channels.isTeamChannel(e) && WMSUI.curtrigger === $WC.WmsConstants.TRIGGERS.ADDMEM) $WC.Util.isEmptyObject($WC.Channels.getTeamChannelMembers(e)) && (Commands.showLoadingIcon(WMSUI.atMentions.autocompletediv || l.autocompletediv, e), WebMessanger.fetchTeamChannelMembers(e)), o = $WC.HybridSearch.filter("DNAME", n, f(e, null, $WC.WmsConstants.CHANNELS.TEAM), 10, r, "EMAILID");
            else {
                $WC.Util.isEmptyObject(l.partinfo) && WebMessanger.fetchChannelMembers(e), WebMessanger.isSpecialMentionEnabled() && (m ? o = $WC.HybridSearch.filter("name", n, p(!0, l.partcount), 10) : u && l.partcount > 2 && (o = $WC.HybridSearch.filter("name", n, p(!0, l.partcount), 10)));
                var v = $WC.HybridSearch.filter("DNAME", n, function(e, t) {
                        return t = {
                            USERID: t || []
                        }, "true" == WmsSettings.restrict_non_participant_mention ? $WC.HybridSearch.filter("DNAME", e, WmsContacts.getContactsList(), 10, t, "EMAILID").filter((function(e) {
                            if (e.USERID == l.recipant) return !0
                        })) : $WC.HybridSearch.filter("DNAME", e, WmsContacts.getContactsList(), 10, t, "EMAILID")
                    }(n), 10, r, "EMAILID"),
                    C = v.concat(function(e, t) {
                        return t = {
                            USERID: t || []
                        }, "true" == WmsSettings.restrict_non_participant_mention ? [] : $WC.HybridSearch.filter("DNAME", e, WmsOrgContacts.getOrgContactsList(), 10, t, "EMAILID")
                    }(n, r.USERID.concat((a = [], v.filter((function(e) {
                        a.push(e.USERID)
                    })), a))));
                o = o.concat($WC.HybridSearch.filter("DNAME", n, C, 20, null, "EMAILID"))
            }
        return o
    },
    wrapParticipantsObj: function(e) {
        var t = {};
        return t.DNAME = e.dname || e.DNAME, t.USERID = e.uname || e.zuid || e.ZUID, t.STATUS = e.scode, t.STYPE = e.st, t.EMAILID = e.email || e.EMAILID, t.UC = t.UC || "0", t
    },
    select: function(e, t) {
        var s = t.getAttribute("data-userid"),
            i = e.getAttribute("chid"),
            n = WindowHandler.getWinObjById(e.getAttribute("chid")),
            a = WMSUI.atMentions.autocompletediv || n.autocompletediv;
        if ($WC.Bots.isBotId(s)) return n.listcommon.showUI(""), n.composer.value = "", n.invisiblediv.innerHTML = "", a.style.display = "none", void WMSUI.showAddBotToChatDialog(s, i);
        var o = $WC.Util.unescapeHTML(WMSUI.atMentions.getDname(i, s) || t.getAttribute("data-dname")) + " ",
            r = e.selectionStart,
            l = document.getElementById(i).querySelector('[id="wms-editorscrolldiv"]'),
            d = e.value;
        d = d.substring(0, r), o = 0 === o.indexOf(WMSUI.curtrigger) ? o.substring(1) : o, WindowHandler.getWinObjById(i).listcommon.showUI(""), a.style.display = "none";
        var c = d.lastIndexOf(" " + WMSUI.curtrigger) + 1;
        (c > 0 || 0 === c && 0 === d.indexOf(WMSUI.curtrigger) || 0 === c && "\n" === d[d.lastIndexOf(WMSUI.curtrigger) - 1]) && ("\n" === d[d.lastIndexOf(WMSUI.curtrigger) - 1] && (c = d.lastIndexOf("\n" + WMSUI.curtrigger) + 1), e.value = e.value.substring(0, c + 1) + o + e.value.substring(r), $WC.Util.moveCaretPosition(e, c + o.length + 1, c + o.length + 1), WMSUI.atMentions.setScrollPosition(l, e), WMSUI.atMentions.insertAtmentions(e.getAttribute("chid"), s), WMSUI.atMentions.changeColor(e)), n.footernode.style.borderRadius = "5px"
    },
    changeColor: function(e) {
        var t = $WC.Util.escapeHTML(e.value),
            s = e.getAttribute("chid"),
            i = WindowHandler.getWinObjById(s);
        if (invisiblediv = WMSUI.atMentions.invisiblediv || i.invisiblediv, i.selectedoptions ? invisiblediv.innerHTML = Commands.format(t, i.selectedoptions, s) : i.atmentions && (invisiblediv.innerHTML = WMSUI.atMentions.formatAtMentions(t, i.atmentions, s)), e.getAttribute("data-command")) {
            var n = invisiblediv.innerHTML;
            invisiblediv.innerHTML = n.replace(e.getAttribute("data-command"), '<span class="wms-commandtext">' + e.getAttribute("data-command") + "</span>")
        }
        invisiblediv.scrollTop = e.scrollTop
    },
    getSilentMentionHtml: function(e, t) {
        if ("string" == typeof e) {
            var s = e.split("o-CT-")[1],
                i = s ? s.split("-")[0] : "";
            if (i) {
                var n = "o-CT-" + i + "-";
                e = e.replace(n, "")
            }
        }
        return $WC.Matcher.replace("usersilentmention", e, (function(e, s, i, n) {
            var a = i,
                o = n;
            o && (a = WmsContacts.getZuid(o));
            var r = $WC.Util.isLocalUser(a) ? WebMessanger.getNickName() : WmsContacts.getDisplayName(a) || s;
            return t ? "@" + $WC.Util.safeHTML($WC.Util.unescapeHTML(r)) : '<span class="wms-atmtnlink" data-zcprofileid="' + a + '">@' + $WC.Util.safeHTML($WC.Util.unescapeHTML(r)) + "</span>"
        }))
    },
    insertAtmentions: function(e, t, s) {
        var i = WindowHandler.getWinObjById(e),
            n = i.composer.value,
            a = i.atmentions ? i.atmentions.split(",") : "";
        s ? (i.atmentions = i.atmentions.replace(t + ",", ""), i.selectedoptions = i.selectedoptions.replace(WMSUI.atMentions.getDname(e, t) + ",", "")) : a.indexOf(t) < 0 && (i.atmentions += t.concat(","), n.startsWith($WC.WmsConstants.TRIGGERS.SLASH) && (i.selectedoptions += WMSUI.curtrigger + WMSUI.atMentions.getDname(e, t).concat(","))), $WC.WmsSessionStorage.setChatInfo({
            chid: e,
            atmentions: i.atmentions
        })
    },
    isLocalUserMentioned: function(e) {
        return !!(e.meta && e.meta.mentions && (e.meta.mentions.participants || e.meta.mentions.available && "1" === WebMessanger.scode || e.meta.mentions[$WC.Config.get("zuid")]))
    },
    formatAtMentions: function(e, t, s, i) {
        var n = WMSUI.atMentions.invisiblediv || WindowHandler.getWinObjById(s).invisiblediv,
            a = a || Message.getMsgCategory(n.innerHTML),
            o = "";
        o = "atmentions" == a || "command" == a ? "@" : "addmem" == a ? "+" : WMSUI.curtrigger;
        var r = (t = t.replace(/,+$/, "")).split(","),
            l = "",
            d = "";
        return e = $WC.Util.escapeHTML(e), $WC.Util.isArray(r) && r.forEach((function(t) {
            if (-1 !== WMSUI.atMentions.specialmentions.keys.indexOf(t)) {
                var n = WMSUI.atMentions.specialmentions.getDisplayName("", t);
                l = i ? "{" + o + t + "}" : '<span class="wms-atmtntext">' + n + "</span>", d = new RegExp(n), e = e.replace(d, (function() {
                    return l
                }))
            } else {
                n = $WC.Util.escapeHTML(WMSUI.atMentions.getDname(s, t));
                if (l = i ? "+" === o ? "{addchatmember:" + t + ":1:" + n + ":addchatmember}" : "{" + o + t + "}" : '<span class="wms-atmtntext">' + o + n + "</span>", n) n = n.replace(/(?=[$*+\[\]() \\])/g, "\\"), (d = new RegExp("[" + o + "]" + n)).test(e) || WMSUI.atMentions.insertAtmentions(s, t, !0), e = e.replace(d, (function() {
                    return l
                }))
            }
        })), e
    },
    updateMessage: function(e, t, s, i) {
        var n = WMSUI.atMentions.invisiblediv || WindowHandler.getWinObjById(t).invisiblediv;
        i = i || Message.getMsgCategory(n.innerHTML);
        var a = "";
        if ("atmentions" == i) {
            a = "@", atmentions = s || WindowHandler.getWinObjById(t).atmentions.replace(/,+$/, "");
            var o = atmentions.split(",");
            e = $WC.Util.escapeHTML(e), $WC.Util.isArray(o) && o.forEach((function(s) {
                var i = $WC.Util.escapeHTML(WMSUI.atMentions.getDname(t, s)),
                    n = new RegExp("{@" + s + "}");
                e = e.replace(n, (function() {
                    return -1 !== WMSUI.atMentions.specialmentions.keys.indexOf(s) ? (i = WMSUI.atMentions.specialmentions.getDisplayName("", s), '<span class="wms-atmtnlink" data-zcprofileid="' + s + '">' + i + "</span>") : '<span class="wms-atmtnlink" data-zcprofileid="' + s + '">' + a + i + "</span>"
                }))
            }))
        }
        return e
    },
    setScrollPosition: function(e, t) {
        var s = t.value.substring(0, t.selectionStart);
        e.innerHTML = $WC.Util.escapeHTML(s), t.scrollTop = e.scrollHeight, e.innerHTML = ""
    },
    replaceAtMentionsForHtml: function(e, t) {
        var s = "";
        return e.replace(/<span(?:.*?)data-zcprofileid="(.*?)">@(.*?)<\/span>/g, (function(e, t, i) {
            $WC.Users.getInfo(t) || $WC.Users.storeInfo(t, {
                dname: $WC.Util.safeHTML(i)
            }), s += "{@" + t + "}"
        })), s
    },
    isLocationAllowedForMentionedBots: function(e) {
        var t = WindowHandler.getWinObjById(e);
        if (t.atmentions) return t.atmentions.split(",").some((function(e) {
            if ($WC.Bots.isBotId(e)) {
                var t = $WC.Bots.get(e);
                if (t && t.PERMISSION) return (2 & t.PERMISSION) > 0
            }
        }))
    }
};
var Commands = {
        recent_commands: [],
        get: function(e) {
            var t = $WC.WmsSessionStorage.getItem("commands") || {},
                s = "limit=1000";
            Commands.sync && t && t.sync_token && (s += "&sync_token=" + t.sync_token);
            $WC.Ajax.requestToChat("v2/commands", s, (function() {
                var t = JSON.parse(this.response);
                Commands.sync = !1, Commands.updateList(t.data, t.sync_token), Commands.deleteObj(t.deleted || []), Commands.show(e)
            }))
        },
        showLoadingIcon: function(e, t) {
            var s = WindowHandler.getWinObjById(t);
            s.listcommon.showUI('<div class="wms-cmdloading"><div class="wms-loadingicon"><div class="wms_loading_container"><div></div><div></div><div></div></div></div></div>', !1, !0), e.style.display = "block", s.footernode.style.borderRadius = "0px 0px 5px 5px"
        },
        hideLoadingIcon: function(e) {
            var t = WindowHandler.getWinObjById(e),
                s = t.autocompletediv;
            t.listcommon.showUI(""), s.style.display = "none", t.footernode.style.borderRadius = "5px"
        },
        showProgressBar: function(e) {
            Commands.removeProgressBar(e);
            WindowHandler.getWinObjById(e).autocompletediv.insertAdjacentHTML("beforebegin", '<div id="loadingline" class="wms-loadinglinediv"><div class="wms-loadingline"></div></div>')
        },
        removeProgressBar: function(e) {
            var t = document.getElementById(e);
            if (t) {
                var s = t.querySelector('[id="loadingline"]');
                $WC.Util.removeElement(s)
            }
        },
        show: function(e, t) {
            if (!1 !== WebMessanger.isCliqUser()) {
                var s = $WC.WmsSessionStorage.getItem("commands"),
                    i = WindowHandler.getWinObjById(e),
                    n = i.autocompletediv,
                    a = i.composer.value;
                if (!s || Commands.sync) return Commands.get(e), s = $WC.WmsSessionStorage.getItem("commands"), void Commands.showLoadingIcon(n, e);
                Commands.remove(n, e);
                var o = a.lastIndexOf(" " + WMSUI.curtrigger) + 1;
                if (t || (0 == o || 0 == a.indexOf(WMSUI.curtrigger)) && a.startsWith(WMSUI.curtrigger)) {
                    var r = '<div class="wms-commandlist" data-command="{{commandname}}" data-list="true"><span class="wms-commandname wms-truncate-ellipsis" title="{{commandname}}">{{commandname}}</span><span title="{{commandhint}}" class="wms-commandhint wms-truncate-ellipsis">{{commandhint}}</span></div>',
                        l = "",
                        d = Commands.getSearchTerm(i.composer),
                        c = "";
                    if (t) {
                        d = d.substring(1), c = a.split(" ")[0], WMSUI.atMentions.changeColor(i.composer, !0);
                        for (var u = Commands.getByName(c).options, m = i.selectedoptions.split(","), h = 0; h < m.length; h++) {
                            if ("" !== m[h] && -1 !== m[h].indexOf(d)) delete u[m[h].substring(1)]
                        }
                        for (var g in u) {
                            var p = u[g];
                            g.startsWith(d) && (l += $WC.template.replace(r, {
                                commandname: "-" + g,
                                commandhint: p
                            }))
                        }
                    } else {
                        WMSUI.atMentions.changeColor(i.composer, !0), $WC.HybridSearch.filter("name", "", s.list, "", "", "", "name").forEach((function(e) {
                            c = e.name;
                            var t = e.hint;
                            c.startsWith(d) && (l += $WC.template.replace(r, {
                                commandname: "/" + c,
                                commandhint: t
                            }))
                        }))
                    }
                    CommandSuggestions.init(e, d), "" != l && (i.listcommon.showUI(l, !0, !0), n.style.display = "block", i.footernode.style.borderRadius = "0px 0px 5px 5px")
                }
            }
        },
        remove: function(e, t) {
            var s = WindowHandler.getWinObjById(t);
            s.listcommon.showUI(""), e.style.display = "none", s.footernode.style.borderRadius = "5px"
        },
        getSearchTerm: function(e) {
            var t = e.selectionStart,
                s = e.value.substring(1, t);
            return s.substring(s.lastIndexOf(" " + WMSUI.curtrigger) + 1, t)
        },
        isCommandMsg: function(e) {
            return !!e.startsWith($WC.WmsConstants.TRIGGERS.SLASH)
        },
        getCommandId: function(e) {
            var t = e.substr(0, e.indexOf(" ")),
                s = Commands.getByName(t);
            if (s) return s.id
        },
        select: function(e, t) {
            if (t.getAttribute("data-suggestion")) CommandSuggestions.handleClick(e, t);
            else {
                var s = t.getAttribute("data-command");
                e.setAttribute("data-command", s);
                var i = e.selectionStart,
                    n = e.value.substring(0, i).lastIndexOf(" " + WMSUI.curtrigger) + 2,
                    a = e.getAttribute("chid"),
                    o = WindowHandler.getWinObjById(a),
                    r = o.autocompletediv,
                    l = o.invisiblediv;
                o.selectedoptions += s.concat(","), l.innerHTML = '<span class="wms-commandtext">/' + s.substring(1) + "</span>", Commands.remove(r, a);
                var d = e.value;
                e.value = d.substring(0, n) + s.substring(1) + " " + d.substring(i), $WC.Util.moveCaretPosition(e, n + s.length, n + s.length), WMSUI.atMentions.changeColor(e, !0), CommandSuggestions.init(a, s.substring(1))
            }
        },
        format: function(e, t, s) {
            var i = WindowHandler.getWinObjById(s);
            if ("" !== t && "" !== e)
                for (var n = t.split(","), a = 0; a < n.length; a++) {
                    var o = new RegExp($WC.Util.escapeHTML(n[a]), "g");
                    "" !== n[a] && (o.test(e) || (i.selectedoptions = t.replace(n[a] + ",", "")), e = e.replace(o, '<span class="wms-commandtext">' + n[a] + "</span>"))
                }
            return e
        },
        handle: function(e, t, s) {
            var i, n = WindowHandler.getWinObjById(s),
                a = Commands.getByName(e).id,
                o = $WC.Util.unescapeHTML(WMSUI.atMentions.formatAtMentions(t.value, n.atmentions, s, !0)),
                r = "&commandid=" + a;
            $WC.Util.isEmptyString(CommandSuggestions.getSelections(s)) || (r += "&selections=" + CommandSuggestions.getSelections(s));
            return i = Message.send(s, o, [], a, r, !0), n.selectedoptions = "", Commands.showProgressBar(s), i
        },
        clear: function() {
            $WC.WmsSessionStorage.removeItem("commands")
        },
        showResponse: function(e, t, s) {
            Commands.removeProgressBar(e);
            var i = WindowHandler.getWinObjById(e),
                n = [];
            if (s.output ? s.output.sender = t > 0 ? t + "command" : "" : s.output = {}, s.output.meta || (s.output.meta = {}, s.output.meta.usermessagedetails = {}, t < 0 && (s.output.meta.usermessagedetails.custom_sender_name = Commands.getById(t).name, s.output.meta.usermessagedetails.custom_sender_imageurl = $WC.Config.get("staticserverpath") + "/images/bar/c" + t + ".png", s.output.meta.shareIntegrationResponse = !0)), "Success" !== s.status && "success" !== s.status || !s.output) {
                if ("Failure" === s.status) {
                    if ($WC.Util.isEmpty(s.resumeUrl))
                        if (s.output.msg) n.push(s.output), i.updateMessage(n);
                        else {
                            var a = {
                                sender: s.output.sender,
                                time: s.output.time,
                                meta: s.output.meta,
                                msg: s.errorMsg || $WC.I18N("commands.exec.error")
                            };
                            n.push(a), i.updateMessage(n)
                        }
                    else(new $WC.Consents).mountComponent(e, s)
                }
            } else {
                if (s.output.msg) n.push(s.output);
                else if (s.output && s.output.inputs) {
                    $WC.Channels.initChannels(), (new $WC.Forms).mountComponent(s, Commands.showResponse, (function() {
                        var t = WindowHandler.getWinObjById(e);
                        t && t.composer.focus()
                    }))
                } else "banner" === s.output.type && ("success" === s.output.status ? WMSUI.showInfoMsg(s.output.text) : "failure" === s.output.status && WMSUI.showErrorMsg(s.output.text));
                n.length && i.updateMessage(n)
            }
        },
        getObject: function(e) {
            var t = $WC.WmsSessionStorage.getItem("commands") || {};
            return t && t.list && t.list[e]
        },
        getImgUrl: function(e, t) {
            var s = Commands.getObject(e);
            return (t = !$WC.Util.isEmpty(s) && s.photo_id ? s.photo_id : t) ? $WC.Config.get("isUDSDownloadEnabled")() ? _DOWNLOADSERVERURL + "/webdownload?x-service=cliq_resources&event-id=" + t + "&x-cli-msg=" + encodeURIComponent('{"x-cliq-resource-module":"photos",type:"commandimg"}') : _WMSCHATURL + "commandimg/" + t + "/photo.do" : $WC.Config.get("staticserverpath") + "/images/bar/95b9d288_slash.png"
        },
        deleteObj: function(e) {
            var t = $WC.WmsSessionStorage.getItem("commands");
            t && t.list && (e.forEach((function(e) {
                delete t.list[e]
            })), $WC.WmsSessionStorage.setItem("commands", t))
        },
        updateList: function(e, t) {
            var s = $WC.WmsSessionStorage.getItem("commands") || {},
                i = s.list || {},
                n = function(e, t) {
                    for (var s in t)
                        if (t.id < 0)
                            if ("object" == typeof t[s] && t[s].constructor == Object)
                                for (var i in e[s] || (e[s] = {}), t[s]) e[s][i] = "boolean" == typeof t[s][i] ? t[s][i] : $WC.I18N(t[s][i]);
                            else if ($WC.Util.isArray(t[s])) {
                        e[s] || (e[s] = []);
                        for (var n = 0; n < t[s].length; n++) e[s][n] = "boolean" == typeof t[s][i] ? t[s][n] : $WC.I18N(t[s][n])
                    } else e[s] = "boolean" == typeof t[s] ? t[s] : $WC.I18N(t[s]);
                    else e[s] = t[s];
                    return e
                };
            ! function(e) {
                for (var t = 0; t < e.length; t++) {
                    var s = e[t],
                        a = s.id;
                    i[a] = i[a] || {}, i[a] = n(i[a], s)
                }
            }(e), s.list = i, s.sync_token = t, $WC.WmsSessionStorage.setItem("commands", s)
        },
        getAllowedTriggers: function(e) {
            if (e.getAttribute("data-command")) return ["@", "-", "/", ":"]
        },
        getByName: function(e) {
            var t = $WC.WmsSessionStorage.getItem("commands");
            if (t)
                for (var s in e = e.toLowerCase(), t.list) {
                    if (e == "/" + t.list[s].name.toLowerCase()) return t.list[s]
                }
        },
        getById: function(e) {
            var t = $WC.WmsSessionStorage.getItem("commands");
            if (t)
                for (var s in t.list)
                    if (e == t.list[s].id) return t.list[s]
        },
        isLocationAllowedForExecution: function(e) {
            return (1 & Commands.getById(e).permission) > 0
        },
        isLocationAllowedForSuggestion: function(e) {
            return (2 & Commands.getById(e).permission) > 0
        },
        consentsCallback: function(e, t) {
            if (!t.data.bots) {
                var s = t.data,
                    i = s.dreResponse.message_source || s.dreResponse.output.meta.message_source;
                "Success" === s.dreResponse.status && s.dreResponse.result && s.dreResponse.result.output.length > 0 ? (Commands.hideLoadingIcon(e), CommandSuggestions.populate(e, s.dreResponse.result.output)) : Commands.showResponse(e, i.id, t.data.dreResponse)
            }
        }
    },
    CommandSuggestions = {
        prevSugg: null,
        suggestiontimer: "",
        execute: function(e, t, s, i) {
            var n = "chid=" + t + "&message=" + encodeURIComponent(s);
            i && (n += "&selections=" + i);
            var a = function() {
                    var e = JSON.parse(this.response).data;
                    if ("Consent" === e.status || "Failure" === e.status) {
                        Commands.hideLoadingIcon(t);
                        var i = WindowHandler.getWinObjById(t).composer;
                        (new $WC.Consents).mountComponent(t, e, Commands.consentsCallback, i)
                    } else "Success" === e.status && CommandSuggestions.prevSugg === s && CommandSuggestions.populate(t, e.result.output)
                },
                o = function() {
                    Commands.hideLoadingIcon(t)
                },
                r = {
                    "x-consents-version": "1"
                };
            Commands.isLocationAllowedForSuggestion(e) ? $WC.Ajax.postRequestToChatWithLocation("v1/commands/" + e + "/suggestions", n, a, o, null, null, r) : $WC.Ajax.postRequestToChat("v1/commands/" + e + "/suggestions", n, a, o, null, null, r)
        },
        populate: function(e, t) {
            if (t.length) {
                for (var s = "", i = WindowHandler.getWinObjById(e), n = i.autocompletediv, a = t[0], o = a && a.imageurl && !a.title && !a.description, r = 0; r < t.length; r++) {
                    var l = "",
                        d = t[r].id,
                        c = t[r].title,
                        u = t[r].description,
                        m = t[r].imageurl;
                    o ? l += '<div data-list="true" class="wms-cmdsuggimgdiv" data-suggestion="true" data-imgurl="{{IMGURL}}"><img src="{{IMGURL}}" class="wms-cmdsuggimg"></div>' : c && (l += '<div class="wms-cmndlist wms-filefrwrdcontact" data-list="true" data-suggestion="true" data-id="{{ID}}" data-title="{{TITLE}}" data-desc="{{DESC}}" data-imgurl="{{IMGURL}}">', l += m ? '<img class="wms-filefrwrdcontactimg wms-cmndlistimg" src="{{IMGURL}}"><div class="wms-cmndlistdetails">' : '<div class="wms-cmndlistdetails wms-valign-mid-block">', l += '<div class="wms-filefrwrdcontactdetails wms-cmndlisttitle wms-truncate-ellipsis" title="{{TITLE}}">{{TITLE}}</div>', u && (l += '<div class="wms-cmndlistdesc wms-truncate-ellipsis" title="{{DESC}}">{{DESC}}</div>'), l += "</div></div>"), s += $WC.template.replace(l, {
                        ID: d || "",
                        TITLE: c || "",
                        DESC: u || "",
                        IMGURL: m || ""
                    })
                }
                i.listcommon.showUI(s, !0, !0), n.style.display = "block", i.footernode.style.borderRadius = "0px 0px 5px 5px"
            } else Commands.hideLoadingIcon(e)
        },
        handleClick: function(e, t) {
            var s = e.value,
                i = e.getAttribute("chid"),
                n = WindowHandler.getWinObjById(i),
                a = !1,
                o = {};
            n.selectedoptions += t.getAttribute("data-title") + ",", t.getAttribute("data-title") && (o.title = t.getAttribute("data-title"), a = !0), t.getAttribute("data-desc") && (o.description = t.getAttribute("data-desc")), t.getAttribute("data-imgurl") && (o.imageurl = t.getAttribute("data-imgurl")), t.getAttribute("data-id") && (o.id = t.getAttribute("data-id")), o = $WC.Util.isEmptyObject(o) ? "" : JSON.stringify([o]);
            var r = e.getAttribute("data-command"),
                l = Commands.getByName(r),
                d = l.id,
                c = "&commandid=" + d;
            $WC.Util.isEmptyObject(o) || (c += "&selections=" + encodeURIComponent(o)), CommandSuggestions.format(n, t), CommandSuggestions.init(i, e.value.trim(), CommandSuggestions.getSelections(i)), 1 === l.max_suggestions ? (Message.send(i, s, [], d, c, a), n.listcommon.showUI(""), n.autocompletediv.style.display = "none", n.footernode.style.borderRadius = "5px", e.value = "", n.invisiblediv.innerHTML = "", n.changeFooterHeight()) : CommandSuggestions.isSelectionLimitReached(l, i) && (Commands.handle(r, e, i), n.listcommon.showUI(""), n.autocompletediv.style.display = "none", n.footernode.style.borderRadius = "5px", e.value = "", n.invisiblediv.innerHTML = "", n.changeFooterHeight())
        },
        format: function(e, t) {
            var s = t.getAttribute("data-title"),
                i = ' <span class="wms-commandtext" data-suggestion=true data-title="' + t.getAttribute("data-title") + '" data-desc="' + t.getAttribute("data-desc") + '" data-imgurl="' + t.getAttribute("data-imgurl") + '" data-id="' + t.getAttribute("data-id") + '">' + t.getAttribute("data-title") + "</span> ",
                n = "",
                a = "",
                o = !0;
            $WC.Util.convertToArray(e.invisiblediv.childNodes).forEach((function(e) {
                e.nodeType === Node.TEXT_NODE && " " !== e.textContent ? (n += s || e.textContent.trim() + " ", a += i, o = !1) : " " !== e.textContent && (n += e.textContent + " ", a += " " + e.outerHTML)
            })), e.invisiblediv.innerHTML = o ? a.trim() + i : a.trim(), e.composer.value = o && s ? n + s : n
        },
        isSelectionLimitReached: function(e, t) {
            var s = WindowHandler.getWinObjById(t),
                i = "/" + e.name + ",",
                n = new RegExp(i + "|^,\\s*|,\\s*$", "g");
            if (s.selectedoptions.replace(n, "").split(",").length > e.max_suggestions) return !0
        },
        getSelections: function(e) {
            for (var t = [], s = WindowHandler.getWinObjById(e).invisiblediv.querySelectorAll("[data-suggestion]"), i = 0; i < s.length; i++) {
                var n = {};
                s[i].getAttribute("data-title") && (n.title = encodeURIComponent(s[i].getAttribute("data-title"))), s[i].getAttribute("data-desc") && (n.description = encodeURIComponent(s[i].getAttribute("data-desc"))), s[i].getAttribute("data-imgurl") && (n.imageurl = encodeURIComponent(s[i].getAttribute("data-imgurl"))), s[i].getAttribute("data-id") && (n.id = encodeURIComponent(s[i].getAttribute("data-id"))), t.push(n)
            }
            return t.length ? JSON.stringify(t) : ""
        },
        getFormattedNode: function(e) {
            var t = e.getAttribute("data-title");
            return ' <span class="wms-commandtext" data-suggestion=true data-title="' + t + '" data-desc="' + e.getAttribute("data-desc") + '" data-imgurl="' + e.getAttribute("data-imgurl") + '" data-id="' + e.getAttribute("data-id") + '">' + t + "</span>"
        },
        init: function(e, t, s) {
            var i = WindowHandler.getWinObjById(e);
            if ("" != i.selectedoptions) {
                var n = i.composer.getAttribute("data-command"),
                    a = Commands.getByName(n);
                if (a && a.id > 0) {
                    var o = a.id;
                    CommandSuggestions.prevSugg != t && t && a.has_suggestions && (!s || !a.max_suggestions || JSON.parse(s).length < a.max_suggestions) && (clearTimeout(CommandSuggestions.suggestiontimer), CommandSuggestions.prevSugg = "/" + t, Commands.showLoadingIcon(i.autocompletediv, e), CommandSuggestions.suggestiontimer = setTimeout((function() {
                        CommandSuggestions.execute(o, e, "/" + t, s)
                    }), 1e3))
                }
            }
        }
    };
Commands.getRecentlyUsedCommand = function(e, t) {
    var s = "";
    Commands.recent_commands && Commands.recent_commands.length && (38 == t ? e.command_index ? (e.command_index--, s = Commands.recent_commands[e.command_index].msg) : 0 == e.command_index ? s = Commands.recent_commands[e.command_index].msg : (e.command_index = Commands.recent_commands.length - 1, s = Commands.recent_commands[e.command_index].msg) : 40 == t && e.command_index < Commands.recent_commands.length && (e.command_index++, s = Commands.recent_commands[e.command_index].msg), e.composer.value = s)
}, ($WC = $WC || {}).CMsgUtil = {
    UserMention: 1,
    GroupMention: 2,
    ChannelMention: 3,
    BotMention: 4,
    SpecialMention: {
        participants: 6,
        available: 7
    },
    OldMention: 8,
    isCustomMessage: function(e) {
        return !!e && !$WC.Util.isEmptyObject(e["brief.msg"])
    },
    isCustomFormattedMsg: function(e) {
        return !!e && (void 0 !== e["long.msg"] && e["long.msg"].length > 0)
    },
    isMessageCardAttachment: function(e) {
        return void 0 !== e && void 0 !== e["att.msg"]
    },
    getTimeFromMsgObj: function(e) {
        return $WC.Util.isEmpty(e) || $WC.Util.isEmptyObject(e) ? "-1" : e.origin_time ? e.origin_time : e.time
    },
    getDisplayContent: function(e, t) {
        var s = e.msg;
        if (!s) return "";
        s = s.trim(), s = this.processMsg(s, e, t), ($WC.Matcher.check("atmentiontemplate", s) || this.isNewMentionMsg(s)) && (s = this.getDisplayableMention(e, s, '<span elemtype="{{mention_elem_type}}" hover="true" uid="{{uid}}" class="{{mentioned_class_name}}" mentionedid="{{mentioned_id}}" {{mention_attributes}}>{{dname}}</span>'));
        var i = e.chid;
        return s = this.getMarkedEmailIds(s, Date.now(), {
            flags: "igu",
            chid: i
        }), s = this.markPhoneNumbers(s, Date.now(), {
            chid: i
        }), s = $WC.CMsgUtil.DateTimeContextualAction.markTimeInstances(s, e, {
            chid: i
        })
    },
    getMarkedEmailIds: function(e, t, s) {
        var i = s && s.flags ? s.flags : "ig",
            n = new RegExp("(<a.*?>.*?</a>)|(<pre>(.|\n)*?</pre>)|(\\s|^|<br>)" + $WC.Matcher.regexes.mail.source + "(?=\\s|<br>|$)", i),
            a = this,
            o = s && s.chid ? s.chid : "";
        return e = e.replace(n, (function(e, s, i, n, r, l) {
            return a.isAllowedforParsing(e) ? r + $WC.template.replace('<a href="mailto:{{content}}" class="eventnotifier"  id="MCPE_{{time_stamp}}" parsertype="emailid" cardContextualAction chid="{{chid}}" >{{content}}</a>', {
                time_stamp: t,
                content: l,
                chid: o
            }) : e
        }))
    },
    markPhoneNumbers: function(e, t, s) {
        var i = this;
        return e = e.replace(/((<a.*?>.*?<\/a>)|(<img(.|\n)*?>)|(<em(.|\n)*?\/em>)|(<pre>(.|\n)*?<\/pre>)|((\s|^|<br>)((\+[0-9]{0,4})?((([\(0-9\)]{0,5})?([\-\s][\(0-9\)]{0,5}){0,3}([\-\s]{1}([0-9]{4,11})))|[\-\s]{0,1}([0-9]{9,12})))(?=\s|$|<br>)))/gi, (function(e, n, a, o, r, l, d, c, u, m, h, g) {
            return i.isAllowedforParsing(e) && !$WC.Util.isEmptyString(g) ? h + $WC.template.replace('<span class="eventnotifier"  id="MCPM_{{time}}" parsertype="phonenumber" cardContextualAction chid="{{chid}}">{{content}}</span>', {
                time: t,
                content: g,
                chid: s.chid
            }) : e
        }))
    },
    isAllowedforParsing: function(e) {
        return -1 === e.indexOf("</a>") && -1 === e.indexOf("</pre>")
    },
    isNewMentionMsg: function(e) {
        return $WC.Matcher.check("zcatmention_v2", e)
    },
    getDisplayableMentionHTML: function(e, t, s, i) {
        var n = t.type,
            a = t.mentionedid,
            o = t.operation,
            r = t.dname,
            l = "",
            d = "hvrinfo";
        if (null == r) return t.mentionmsg;
        (r = $WC.$CUtil.processXSS(r), n === $WC.CMsgUtil.UserMention) ? (r = ("addchatmember" == o ? "+" : "deletechatmember" == o ? "-" : "@") + r, l = "user", void 0 !== WmsMainUI && (s += " data-zcprofileid=" + a, d = "wms-atmtnlink")) : n === $WC.CMsgUtil.GroupMention ? (-1 != a.search("G") && (a = a.substring(1)), r = "@" + r, l = "group") : n === $WC.CMsgUtil.ChannelMention ? (r = r || WmsChannels.getChannelName(a), l = "channel") : n === $WC.CMsgUtil.BotMention ? (r = "@" + r, l = "user") : n !== $WC.CMsgUtil.AvailableMention && n !== $WC.CMsgUtil.ParticipantsMention || (l = n === $WC.CMsgUtil.ParticipantsMention ? r + "mention" : r, r = "@" + r);
        var c = s + ' mentiontype="' + n + '"';
        return void 0 === WmsMainUI && (d += WmsImpl.isLocalUser(a) ? " atme" : ""), $WC.template.replace(i, {
            mention_elem_type: l,
            uid: a,
            mentioned_class_name: d,
            mentioned_id: a,
            mention_attributes: c,
            dname: $WC.Matcher.replace("escapeReplacementString", r)
        })
    },
    getDisplayableMention: function(e, t, s) {
        var i = ' mention_on="' + (void 0 !== e.ctype ? parseInt(e.ctype) : 1) + '"';
        if (this.isNewMentionMsg(t)) {
            var n = function(e, t, s, i, n) {
                this.type = s, this.mentionedid = i, this.dname = t, this.action = void 0 !== n ? n : "", this.mentionmsg = $WC.Util.isEmpty(e) ? this.getMentionFormat() : e, this.mentionregex = $WC.Util.isEmpty(e) ? this.getMentionFormat(!0) : e
            };
            n.prototype.getMentionFormat = function(e) {
                var t = this.type === $WC.CMsgUtil.ChannelMention ? "#" : "@",
                    s = this.type === $WC.CMsgUtil.GroupMention ? "G" : "";
                return "{" + ((e && !$WC.Util.isEmpty(this.action) ? "\\" + this.action : this.action) + t + s + this.mentionedid) + "}"
            }, n.prototype.getOperation = function() {
                return $WC.Util.isEmpty(this.action) ? "mention" : "+" === this.action ? "addchatmember" : "deletechatmember"
            };
            var a = function(e) {
                var t = e.hasOwnProperty("meta") ? e.meta.hasOwnProperty("mentions") ? e.meta.mentions : e.meta : {};
                e.hasOwnProperty("mentions") && $WC.Util.extend(t, e.mentions);
                e.hasOwnProperty("replied") && e.replied.hasOwnProperty("info") && e.replied.info.hasOwnProperty("meta") && $WC.Util.extend(t, e.replied.info.meta.mentions);
                return void 0 !== t ? t : {}
            }(e);
            if (void 0 !== a && !$WC.Util.isEmptyObject(a))
                for (var o in a) {
                    var r = a[o],
                        l = new n("", r.name, r.type, r.id, r.action),
                        d = {};
                    d.mentionmsg = l.mentionmsg, d.operation = l.getOperation(), d.mentionedid = r.id, d.type = r.type, d.dname = r.name;
                    var c = new RegExp(l.mentionregex, "gi");
                    t = t.replace(c, this.getDisplayableMentionHTML(e, d, i, s))
                }
            return t
        }
        return $WC.Matcher.replaceWithFlag("atmentiontemplate", t, "g", (function(e, t, n, a, o) {
            var r = a.split(":"),
                l = r[0].slice(1),
                d = r[1],
                c = parseInt(r[2]),
                u = "";
            (r = r.slice(3)).pop();
            var m = $WC.Util.decodeHTMLEntities(r.join(":"));
            (m = $WC.$CUtil.processXSS(m), c === $WC.CMsgUtil.UserMention) ? (m = ("addchatmember" == l ? "+" : "deletechatmember" == l ? "-" : "@") + m, u = "user") : c === $WC.CMsgUtil.GroupMention ? (m = "@" + m, u = "group") : c === $WC.CMsgUtil.ChannelMention ? u = "channel" : c === $WC.CMsgUtil.BotMention && (m = "@" + m, u = "user");
            var h = i + ' mentiontype="' + c + '"';
            return s.replace(/{MENTIONATTRIBUTES}/g, h).replace(/{MENTIONELEMTYPE}/g, u).replace(/\$1/g, d).replace(/\$2/g, $WC.Matcher.replace("escapeReplacementString", m))
        }))
    },
    processMsg: function(e, t, s) {
        if (void 0 !== t && t.raw) {
            var i = t.chid;
            e = $WC.$CUtil.processXSS(e), e = $WC.Markdown.replaceInstantButton(e, t), e = $WC.Markdown.apply(e, void 0, t), e = this.getMarkedEmailIds(e, Date.now(), {
                flags: "igu",
                chid: i
            }), e = this.markPhoneNumbers(e, Date.now(), {
                chid: i
            }), e = $WC.CMsgUtil.DateTimeContextualAction.markTimeInstances(e, t, {
                chid: i
            })
        }
        return this.getMarkedDownContent(e, s)
    },
    getMarkedDownContent: function(e, t) {
        if (e = e.trim(), e = Smiley.replace(e), e = this.trim(e), "function" == typeof $WC.Config.get("getSilentUserMention") && (e = $WC.Config.get("getSilentUserMention")(e)), !t) {
            for (var s = e.split(" "), i = [], n = 0; n < s.length; n++) {
                var a = s[n];
                a = this.convertLinks(a), a = this.getSafeATagTarget(a), a = this.addAttributesToViewableImg(a), i.push(a)
            }
            e = i.join(" ")
        }
        return e
    },
    trim: function(e) {
        return e = e.replace(/<p>/gi, "").replace(/<\/p>/gi, "").replace(/\n/gi, "<br>")
    },
    convertMailIds: function(e) {
        return e = " " + e, e = (e = $WC.Matcher.replaceWithFlag("mail", e, "gi")).trim()
    },
    convertHomographToText: function(e) {
        var t = e;
        0 !== e.indexOf("http://") && 0 !== e.indexOf("https://") && (t = "http://" + e);
        var s = document.createElement("a");
        s.href = t;
        var i = s.href.toLowerCase();
        return i === t.toLowerCase() || i === e.toLowerCase() + "/" || i === t.toLowerCase() + "/" ? e : s.href
    },
    convertLinks: function(e) {
        var t = !1;
        return e.startsWith("(") && e.endsWith(")") && (e = e.slice(1, -1), t = !0), e = $WC.Matcher.replaceWithFlag("linkRegExp", e, "gi", (function(t, s) {
            return t !== e && $WC.Matcher.checkWithFlag("invalidlink", $WC.Util.decodeHTMLEntities(e), "i") ? t : "<a href='" + $WC.CMsgUtil.convertHomographToText(s) + "' target='_blank' rel='noopener'>" + s + "</a>"
        })), e = $WC.Matcher.replaceWithFlag("zcWWWlinkRegExp", e, "gi", (function(t, s, i) {
            return t !== e && $WC.Matcher.checkWithFlag("invalidlink", $WC.Util.decodeHTMLEntities(e), "i") ? t : "<a href='http://" + $WC.CMsgUtil.convertHomographToText(s) + "' target='_blank' rel='noopener'>" + s + "</a>"
        })), e = $WC.Matcher.replaceWithFlag("twoletterendinglink", e, "gi", "$1<a href='http://$2' target='_blank' rel='noopener'>$2</a>"), e = (e = $WC.Matcher.replaceWithFlag("threeletterendinglink", e, "gi", "$1<a href='http://$2' target='_blank'rel='noopener'>$2</a>")).trim(), e = t ? "(" + e + ")" : e
    },
    getSafeATagTarget: function(e) {
        return $WC.Matcher.replacer($WC.Matcher.getRegexToGetAttrValueInHtmlTag("a", "href"), null, e, (function(e, t, s, i, n, a, o, r) {
            return 0 === n.indexOf("mailto:") ? e : t + n + o + ' dataurl="' + $WC.$CUtil.processXSS(n) + '" ' + r
        }))
    },
    addAttributesToViewableImg: function(e) {
        return $WC.Matcher.replacer($WC.Matcher.getRegexToAddAttrToHtmlTag("img"), null, e, '$1 documentclick="viewattachment" previewelem $3')
    },
    getFormattedMsgContent: function(e) {
        for (var t, s = "", i = e["long.msg"], n = 0; n < i.length; n++) {
            var a = i[n],
                o = a.buttons;
            if (s += '<div class="msgbox ' + (o && o.length ? "zccustmsg" : "") + '" >', s += a.title ? '<div class="msgtitle ellips"><span class="subtitle">' + this.processMsg("" + a.title, e) + "</span></div>" : "", "text" === a.type) s += ['<div class="cntmsgtxt">', "<div>" + this.processMsg(a.data, e) + "</div>", "</div>"].join("");
            else if ("list" === a.type) {
                var r = "";
                a.styles && (r = a.styles.type), s += ['<div class="msgcntbdy dIB">', '<ul class="lst mrgL8 ' + (r || "non_type") + '">' + G(a) + "</ul>", "</div>"].join("")
            } else if ("table" === a.type) {
                var l = [],
                    d = [];
                a.styles && (a.styles.width && (l = a.styles.width), a.styles.text_align && (d = a.styles.text_align), c = a.styles.sticky);
                var c, u = "",
                    m = "style=max-width:fit-content; ",
                    h = 0;
                if (l.length && (u = "tblefxed", m = ""), a.data.style)(c = a.data.style.sticky) && (c.header && (u += " sticky-head"), c.column && (u += " sticky-column"));
                else c && (c.rows && (u += " sticky-head-" + c.rows, h = c.rows), c.columns && (u += " sticky-column-" + c.columns, c.columns));
                s += "<div " + m + 'class="msgcntbdy dIB">', s += '<div class="msgtble ' + (void 0 !== WmsMainUI ? "is-from-chatbar" : "") + '"><div class="msgtblecnt ' + u + '">';
                var g = a.data.rows,
                    p = a.data.headers;
                l = [];
                a.styles && a.styles.width && (l = a.styles.width);
                for (var f = "", v = '<div class="tblerow">{{total_table_cell_elements}}</div>', C = '<div class="tblecel" {{style}}>{{processed_message}}</div>', b = "", y = "", _ = 0; _ < p.length; _++) {
                    var W = "style=text-align:" + (d[_] ? d[_] + ";" : "center;");
                    l[_] && (W = W + "width:" + l[_] + "%;"), b += $WC.template.replace(C, {
                        style: W,
                        processed_message: this.processMsg("" + p[_], e)
                    }, "InSecureHTML")
                }
                var S = $WC.template.replace(v, {
                    total_table_cell_elements: b
                }, "InSecureHTML");
                if (h && (f = $WC.template.replace('<div id="sticky-container-inside-table" class="sticky-container-inside-table">{{first_sticky_element}}{{second_sticky_element}}</div>', {
                        first_sticky_element: S,
                        second_sticky_element: 1 === h ? "" : "{{second_sticky_element}}"
                    }, "InSecureHTML")), y += h ? 2 === h ? "" : f : S, g) {
                    for (var w = "", M = 0; M < g.length; M++) {
                        for (var I = g[M], T = "", A = 0; A < I.length; A++) {
                            W = "style=text-align:" + (d[A] ? d[A] : "center");
                            T += $WC.template.replace(C, {
                                style: W,
                                processed_message: I[A] ? this.processMsg("" + I[A], e) : "-"
                            }, "InSecureHTML")
                        }
                        var E = $WC.template.replace(v, {
                            total_table_cell_elements: T
                        }, "InSecureHTML");
                        2 !== h || 0 !== M ? w += E : w += f = $WC.template.replace(f, {
                            second_sticky_element: E
                        }, "InSecureHTML")
                    }
                    y += w
                }
                s += y + "</div></div></div>"
            } else if ("images" === a.type) {
                for (var U = "", k = 0; k < a.data.length; k++) {
                    var N = a.data[k],
                        x = {
                            previewelem: "",
                            documentclick: "viewattachment"
                        };
                    "undefined" != typeof MessageBuilderUI && (x.purpose = "custom_image_preview"), U += $WC.CustomMsgUI.getMessageCardImageHTML(N.url, "slide", x)
                }
                var O = void 0 === WmsMainUI ? "undefined" == typeof MessageBuilderUI ? Users.getName(e.sender, e.nname || e.dname) : "" : $WC.Util.getContactName(e.sender, e.nname || e.dname),
                    R = void 0 === WmsMainUI ? "undefined" == typeof MessageBuilderUI ? Users.getImgUrlById(e.sender) : "" : WmsContacts.getUserPhoto(e.sender);
                s += '<div purpose="sender" sender="' + e.sender + '" customsender_name="' + O + '" style="display:none"><img src="' + R + '"></div><div class="zcimgsldr" style="height:200px;" msgtime="' + $WC.CMsgUtil.getTimeFromMsgObj(e) + '" chid="' + e.chid + '" msguid="' + e.msguid + '">' + U + "</div>"
            } else if ("image" === a.type) {
                if ($WC.Util.isEmptyObject(a.data)) continue;
                var D = a.data;
                s += '<div><img previewelem documentclick="viewattachment" style = "max-width:100%; width:' + (D.width ? D.width + "px;" : "100%;") + " height=" + (D.height ? D.height + "px;" : "224px;") + '" src="' + a.url + '" /></div>'
            } else if ("label" === a.type) {
                s += '<div class="msgcntbdy dIB"><div class="msgtble"><div class="thmeslabcnt">';
                for (var $ = a.styles, H = (l = "100%", $ && $.short ? "short" : "lblmsgcnt"), L = 0; L < a.data.length; L++) {
                    var P = a.data[L];
                    for (var F in P) s += '<div class="zclblpair ' + H + '"><div class="zcmslble">' + this.processMsg(F, e) + '</div><div class="zcmsnme">' + this.processMsg(P[F], e) + "</div></div>"
                }
                s += "</div></div></div>"
            } else if ("percentage_chart" === a.type || "graph" === a.type) {
                var B = "",
                    j = 1 == (t = t || $WC.ChartsUtility.getChartsObjCount(i));
                a.hasSingleChart = j, a.hasLastChartInMessage = !j && n == i.length - 1, a.hasFirstChartInMessage = !j && 0 == n, a.msgtime = $WC.CMsgUtil.getTimeFromMsgObj(e), B = "graph" === a.type ? "zcq-graph-inline" : "zcq-piecharts-inline", j || a.hasFirstChartInMessage || (B += " zcq-dN"), s += "<div data-chartindex=" + n + " data-operation='openchartpreview' class='" + B + "' data-inlinechart-cont >", a.totalCharts = i.length - 1;
                var z = {
                    chartObjInfo: a,
                    isPreview: !1,
                    showLegends: !1
                };
                s += $WC.Charts.getChartsHtml(z) + "</div></div>"
            }
            s += o ? $WC.CustomMsgUI.getButtonHTML(e, o, !0) : "", s = (s += "</div>").replace(/PRIMARY_INDEX/g, n)
        }

        function G(t) {
            for (var s = t.data, i = "", n = 0; n < s.length; n++) i += "<li>" + $WC.CMsgUtil.processMsg("" + s[n], e) + "</li>";
            return i
        }
        return s
    },
    getMsgCardAttWin: function(e, t, s, i) {
        t.chid = e.chid, t.time = $WC.CMsgUtil.getTimeFromMsgObj(e), $WC.CustomMsg.storeMsgCardAttObj(t), e["btnindexvsdetails.msg"], t.btnindexvsdetails = e["btnindexvsdetails.msg"], MessageCardAttachments.getMsgAttWindow(t, s, i)
    },
    handleMsgCardAtt: function(e, t, s) {
        var i, n = {};
        if (s || (i = $(e.currentTarget).children(), n.status = {
                loading: i
            }), s || void 0 === t["att.msg"].data) {
            n.success = function(e) {
                $WC.CMsgUtil.getMsgCardAttWin(t, e, void 0, s)
            }, n.error = function() {
                MessageCardAttachments.handleErrorOnFetchFile()
            };
            var a = t["att.msg"].key;
            if ($WC.Matcher.check("qq", a)) n.url = "/api/v2/chats/" + t.chid + "/messages/" + t.msguid + "/attachments";
            else {
                var o = MessageCardAttachments.getMsgAttFileUrl(a);
                if (!o.startsWith("/v2")) return s || $Util.Button.addLoadIconForAjax(i), FileDownload.fetchFile(o, i, {
                    onSuccess: function(e) {
                        $WC.CMsgUtil.getMsgCardAttWin(t, e, i, s)
                    },
                    onError: MessageCardAttachments.handleErrorOnFetchFile
                });
                n.url = o
            }
            $ZCAjx.ajax(n)
        } else {
            $Util.Button.addLoadIconForAjax(i);
            var r = t["att.msg"].data;
            t["btnindexvsdetails.msg"], r.btnindexvsdetails = t["btnindexvsdetails.msg"], MessageCardAttachments.getMsgAttWindow(r, i, s)
        }
    },
    getFormattedWebUrl: function(e) {
        const t = new URL(e.url),
            s = new URLSearchParams(t.search);
        if (e.set_frameorigin) {
            const e = {
                    "https://workplace.zoho.com": "wp",
                    "https://one.zoho.com": "zohoone"
                },
                i = void 0 === WmsMainUI ? $zcg._ZOHO_DOMAIN : _WMSDOMAIN,
                n = void 0 === WmsMainUI ? $zcg._PARENTSERVICENAME : e[document.referrer.slice(0, -1)],
                a = void 0 === WmsMainUI ? $zcg._CLIQ_FRAME_ORIGIN : document.referrer.slice(0, -1),
                o = void 0 === WmsMainUI ? window.location.origin : _WMSCHATURL;
            s.delete("frameorigin"), t.host.endsWith("." + i) && ("wp" !== n && "zohoone" !== n || $WC.Util.isEmpty(a) ? s.append("frameorigin", o) : s.append("frameorigin", a + "," + o), t.search = s.toString())
        }
        return t.href
    },
    handleButtons: function({
        elem: e,
        event: t,
        actionclbck: s,
        chid: i,
        msgtime: n,
        isTempResponse: a,
        botAlertHandlerObj: o
    }) {
        var r, l;
        if (o) r = o.botActionButtonObj, l = o.sender;
        else {
            var d = $WC.CustomMsg.getMsgObj(e, i, n);
            if (!d) return;
            if ($WC.CMsgUtil.isMessageCardAttachment(d) && t.currentTarget.hasAttribute("attbtn")) return $WC.CMsgUtil.handleMsgCardAtt(t, d, !1);
            var c = d.msguid;
            if (d["btnindexvsdetails.msg"]) {
                var u = e.getAttribute("btnindex");
                r = d["btnindexvsdetails.msg"][u]
            } else {
                var m = e.parentElement.getAttribute("primaryindex"),
                    h = (u = e.getAttribute("index"), m ? d["long.msg"][m] : d["brief.msg"]);
                r = h.buttons[u]
            }
        }
        var g = r.action,
            p = g.data;
        if (void 0 !== p) {
            var f = g.type;
            if (!o) {
                l = d.sender;
                var v, C = g.confirm;
                i = d.chid, n = $WC.CMsgUtil.getTimeFromMsgObj(d)
            }
            if (void 0 !== C && ((v = $WC.Util.extend(!0, {}, C)).type = "confirm"), "undefined" !== f)
                if (["invoke.function", "invoke.form", "oembed.action", "invoke.internalurl", "invoke.unfurl.button"].includes(f)) {
                    if ("undefined" !== p.name) {
                        var b = p.name;
                        if (["invoke.internalurl", "invoke.unfurl.button"].includes(f) && (b = ""), void 0 !== v) {
                            if ($("[ephimeralpopup]").length > 0 ? v.hasEfimeralPopup = !0 : v.hasEfimeralPopup = !1, $WC.$Win.destroy("custommsg"), v.btncallback = function() {
                                    "function" == typeof s && s(b, i, n, e.getAttribute("btnindex"))
                                }, C.input && "user_webhook_token" === C.input.type && ($WC.$Win.destroy("custommsg"), d.message_source.store_appname ? v.component_name = d.message_source.store_appname : v.component_name = d.message_source.name), void 0 !== WmsMainUI)
                                if (v.closeCallback = function() {
                                        document.getElementById("zcwindows") && (document.getElementById("zcwindows").innerHTML = null)
                                    }, null === document.getElementById("zcwindows"))(S = $WC.Util.createElement("div", "zcwindows", "zcoverlay")).style.zIndex = WebMessanger.setzindex, document.body.appendChild(S);
                            $WC.Widgets.construct(v)
                        } else "function" == typeof s && s(b, i, n, e.getAttribute("btnindex"), p.location)
                    }
                } else if ("open.url" === f || "preview.url" === f) {
                if ("undefined" !== p.web) {
                    var y, _ = p.web;
                    if ("preview.url" === f) {
                        var W = {
                            url: _
                        };
                        p.set_frameorigin && (W.set_frameorigin = !0), y = function() {
                            $WC.IFrame.create({
                                id: "button_preview_iframe",
                                header: r.label,
                                url: $WC.CMsgUtil.getFormattedWebUrl(W),
                                isMinimise: e.hasAttribute("showMinimiseButton")
                            })
                        }
                    } else y = $WC.Matcher.check("formpermalink", _) ? function() {
                        void 0 !== Message ? Message.handleFormViewLinkClick(t, _) : window.open(_, "_blank")
                    } : function() {
                        window.open(_, "_blank")
                    };
                    if (void 0 !== v) {
                        var S;
                        if (v.btncallback = y, void 0 !== WmsMainUI)
                            if (v.closeCallback = function() {
                                    document.getElementById("zcwindows") && (document.getElementById("zcwindows").innerHTML = null)
                                }, null === document.getElementById("zcwindows"))(S = $WC.Util.createElement("div", "zcwindows", "zcoverlay")).style.zIndex = WebMessanger.setzindex, document.body.appendChild(S);
                        $WC.Widgets.construct(v)
                    } else {
                        var w = !!$WC.Config.get("cliqserver") && new URL($WC.Config.get("cliqserver")).host === new URL(_).host ? _.split(new URL(_).host)[1] : "";
                        !$WC.Util.isEmpty(w) && window.ZCPermalink && ZCPermalink.handle(w.split("/"), !0) || y()
                    }
                }
            } else if ("system.api" === f) {
                var M = p.api;
                if (void 0 !== M)
                    if (this.isClientTriggerSystemApi(M.split("/")[0]) && "function" == typeof $WC.Config.get("SystemApiHandler")) $WC.$Win.destroy("custommsg"), $WC.$Win.destroy("attmsg"), $WC.Config.get("SystemApiHandler")(M, {
                        chid: i,
                        sender: l,
                        msguid: c
                    });
                    else {
                        if (M && M.split("/").length > 0)
                            if ("set_reminder" === M.split("/")[0]) {
                                Clickoutside.handleClickOnChild(t);
                                var I = p ? p.params : void 0;
                                return void MessageContextParser.handle.openRemWin($(e), M, I)
                            }
                        this.triggerSystemAction(M, u, i, c, n, a, {
                            buttonText: t.target.getAttribute("value") || t.target.text
                        })
                    }
            }
        }
    },
    triggerSystemAction: function(e, t, s, i, n, a, o) {
        var r = "api=" + e + "&chid=" + s + (void 0 !== i ? "&msguid=" + i.replace("%20", "_") : ""),
            l = {
                index: t,
                chid: s,
                msgtime: n,
                isTempResponse: a
            };
        o && (l.additionalparams = o), $WC.Config.get("ExecuteButtonResponseHandler")("handleStatusChange", "loading"), $WC.Ajax.postRequestToChat("executesystemaction.do", r, (function(e) {
            $WC.CMsgUtil.handleActionResponse(e, this.opts.callbackargs)
        }), (function(e) {
            $WC.CMsgUtil.handleActionResponse(e, this.opts.callbackargs)
        }), l, !0)
    },
    handleActionResponse: function(e, t) {
        if ($WC.Config.get("ExecuteButtonResponseHandler")("handleStatusChange", "complete"), e) {
            var s = t.chid;
            t.msgtime, t.index;
            if ("banner" === e.type) "function" == typeof $WC.Config.get("ExecuteButtonResponseHandler") && $WC.Config.get("ExecuteButtonResponseHandler")("handleSystemResponse", e, {
                chid: s
            });
            else if ("function" == typeof $WC.Config.get("ExecuteButtonResponseHandler")) {
                var i = {
                    chid: s,
                    title: t.additionalparams ? t.additionalparams.buttonText : ""
                };
                $WC.Config.get("ExecuteButtonResponseHandler")("renderResponse", e, i)
            }
        }
    },
    isClientTriggerSystemApi: function(e) {
        return ["startchat", "audiocall", "videocall", "videobroadcast", "joinchannel", "invite", "userrecentchats", "locationpermission"].indexOf(e) >= 0
    },
    getBriefMsgTitle: function(e) {
        var t = e["brief.msg"];
        return void 0 !== t.title ? (t.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(t.icon, "icon", void 0, "zcprvwicn") : "") + this.processMsg(t.title, e) : ""
    },
    getMsgObjVersion: function(e) {
        return void 0 !== e.version ? e.version : "v0"
    },
    getImageUrlFromId: function(e) {
        return $WC.Config.get("CHATCONT") ? "/" + $WC.Config.get("CHATCONT") + "/v1/images/" + e : "/v1/images/" + e
    },
    convertMsgObj: function(e) {
        switch ($WC.CMsgUtil.getMsgObjVersion(e)) {
            case "v0":
                var t = $WC.Util.cloneObject(e),
                    s = $WC.Util.cloneObject(e),
                    i = e.mtype ? e.mtype : "12";
                switch (i = "66" == e.mtype && "12" == e.origin_mtype ? "12" : i) {
                    case "12":
                        if (void 0 !== t.meta) {
                            var n = t.meta.usermessagedetails;
                            if (void 0 !== n) {
                                var a = {};
                                void 0 !== n.custom_sender_name && (a.name = n.custom_sender_name, void 0 !== n.hiddensender && (a.hiddensender = n.hiddensender)), void 0 !== n.custom_sender_imageurl ? a.img = n.custom_sender_imageurl : void 0 !== n.custom_sender_imageid && (a.img = this.getImageUrlFromId(n.custom_sender_imageid)), void 0 !== n.custom_sender_id && (a.id = n.custom_sender_id), void 0 !== t.meta.ms && (a.ms = t.meta.ms), $WC.Util.isEmptyObject(a) || (s["custom.sender"] = a);
                                var o = {};
                                void 0 !== n.msg_title && (o.title = n.msg_title), e.meta.usermessagedetails.custom_message && void 0 !== t.msg && (o.desc = t.msg), void 0 !== n.thumbnail_url ? o.thumbnail = n.thumbnail_url : void 0 !== n.thumbnail_id ? o.thumbnail = this.getImageUrlFromId(n.thumbnail_id) : void 0 !== n.thumbnail_zuid && (o.thumbnail = WmsContacts.getUserPhoto(n.thumbnail_zuid)), void 0 !== n.thumbnail_preview_url ? o.img = n.thumbnail_preview_url : void 0 !== n.thumbnail_preview_id && (o.img = this.getImageUrlFromId(n.thumbnail_preview_id)), void 0 !== n.icon_url && (o.icon = n.icon_url), void 0 !== n.themeid && (o.themeid = n.themeid), void 0 !== n.themeColor && (o.themeColor = n.themeColor), void 0 !== n.buttons && (o.buttons = n.buttons), $WC.Util.isEmptyObject(o) || (s["brief.msg"] = o)
                            }
                            void 0 !== t.meta.post_in_parent_information && (s.post_in_parent_information = t.meta.post_in_parent_information), void 0 !== t.meta.formattedmsg && (s["long.msg"] = $WC.$CUtil.cloneArray(t.meta.formattedmsg)), void 0 !== t.meta.attachments_button && (s["att.msg"] = $WC.Util.cloneObject(t.meta.attachments_button)), void 0 !== t.meta.config && (s.config = $WC.Util.cloneObject(t.meta.config)), void 0 !== t.meta.date_time_info && (s.date_time_info = $WC.$CUtil.cloneArray(t.meta.date_time_info)), void 0 !== t.meta.linkdetails && (s.info = {
                                type: "unfurling",
                                linkdetails: $WC.Util.cloneObject(t.meta.linkdetails),
                                quotedlink: t.meta.quotedlink
                            }), void 0 !== t.meta.mentions && (s.mentions = $WC.Util.cloneObject(t.meta.mentions)), void 0 !== t.meta.customemoji && (s.customemoji = t.meta.customemoji), void 0 !== t.meta.btnindexvsdetails && (s["btnindexvsdetails.msg"] = $WC.Util.cloneObject(t.meta.btnindexvsdetails)), void 0 !== t.meta.opr_replydetails && (s.isreply = !0, s.replied = {
                                info: $WC.Util.cloneObject(t.meta.opr_replydetails)
                            }, void 0 !== t.meta.reply_type && (s.reply_type = t.meta.reply_type)), void 0 !== t.meta.message_source && (s.message_source = t.meta.message_source), void 0 !== t.meta.native_widget && (s.native_widget = t.meta.native_widget), delete s.meta
                        }
                        void 0 !== t.temp_info && void 0 !== t.temp_info.suggestions && (s.botSuggestions = $WC.$CUtil.cloneArray(t.temp_info.suggestions)), void 0 !== t.temp_info && void 0 !== t.temp_info.message_input ? s.messageInput = $WC.Util.cloneObject(t.temp_info.message_input) : void 0 !== t.meta && void 0 !== t.meta.message_input && (s.messageInputReference = $WC.Util.cloneObject(t.meta.message_input));
                        break;
                    case "16":
                        s.info = $WC.Util.cloneObject(t.msg, !0), delete s.msg, s.info.type = "operations", $WC.Util.isEmpty(s.info.opruser) || $WC.Util.isEmptyObject(s.info.opruser) || (s.sender = s.info.opruser.zuid);
                        break;
                    case "20":
                        if (void 0 !== t.meta) {
                            var r = t.meta.usermessagedetails;
                            if (void 0 !== r) {
                                var l = {};
                                void 0 !== r.custom_sender_name && (l.name = r.custom_sender_name), void 0 !== r.custom_sender_imageurl ? l.img = r.custom_sender_imageurl : void 0 !== r.custom_sender_imageid && (l.img = this.getImageUrlFromId(r.custom_sender_imageid)), $WC.Util.isEmptyObject(l) || (s["custom.sender"] = l)
                            }
                            void 0 !== t.meta.mentions && (s.mentions = t.meta.mentions), void 0 !== t.meta.customemoji && (s.customemoji = t.meta.customemoji), void 0 !== t.meta.post_in_parent_information && (s.post_in_parent_information = t.meta.post_in_parent_information), void 0 !== t.meta.opr_replydetails && (s.isreply = !0, s.replied = {
                                info: $WC.Util.cloneObject(t.meta.opr_replydetails)
                            }, void 0 !== t.meta.reply_type && (s.reply_type = t.meta.reply_type), delete s.meta)
                        }
                        s.info = $WC.Util.cloneObject(t.msg, !0), delete s.msg, s.msg = s.info.comment, s.info.type = "attachments", s.info.mod = t.mod, t.wmsfilesharingtype && (s.info.wmsfilesharingtype = t.wmsfilesharingtype)
                }(e = s).version = "v1", void 0 !== e.msgid && (e.ack = e.msgid), e.id = $WC.CMsgUtil.getTimeFromMsgObj(e), delete e.msgid
        }
        return e
    }
}, $WC.CMsgUtil.DateTimeContextualAction = function() {
    var e = /(([12][0-9]|3[01]|0?[1-9])((st|nd|rd|th)\s?)?)/.source,
        t = /(\sof)?/.source,
        s = /(\s|^)/.source,
        i = /\s?/.source,
        n = /(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|(Nov|Dec)(?:ember)?)/.source,
        a = /([,.-/])?/.source,
        o = /(\s?(19[7-9]\d|20\d{2})|\d{2})?/.source,
        r = /(\s?(at\s)?)?/.source,
        l = /(\s(on\s)?)?/.source,
        d = /(((0?[1-9]|1[012])([.:][0-5]\d){0,2}(\s?[ap]m))|(0?\d|1\d|2[0-3])(:[0-5]\d){1,2})/.source,
        c = /(today|tonight|tomorrow|day after tomorrow|day after today|overmorrow|(up)?coming week|next week|following week)/.source,
        u = /(next\s)?(mon|tues|wednes|thurs|fri|satur|sun)day/.source,
        m = /((19|20)([2468][048]|[13579][26]|0[48])|2000)/.source,
        h = /[/.-]/.source,
        g = /(19|20)[0-9]{2}/.source,
        p = /(11|0?[469])/.source,
        f = /(1[02]|0?[13578])/.source,
        v = /([12][0-9]|3[01]|0?[1-9]|)/.source,
        C = /([12][0-9]|30|0?[1-9])/.source,
        b = /(1[0-9]|2[0-8]|0?[1-9])/.source,
        y = /0?2[/.-]29/.source,
        _ = /0?2[/.-]/.source,
        W = /[1-5]((st|nd|rd|th)?)\sweek/.source,
        S = /(<a.*?>.*?<\/a>)|(<em>(.|\n)*?<\/em>)|(<pre>(.|\n)*?<\/pre>)/.source,
        w = new RegExp("(" + /29[/.-]0?2/.source + h + m + "|(" + C + h + p + h + g + "|" + v + h + f + h + g + "|" + b + h + _ + g + "))", "g"),
        M = new RegExp("(" + y + h + m + "|(" + p + h + C + h + g + "|" + f + h + v + h + g + "|" + _ + b + h + g + "))", "g"),
        I = new RegExp("(" + m + h + y + "|(" + g + h + p + h + C + "|" + g + h + f + h + v + "|" + g + h + _ + b + "))", "g"),
        T = new RegExp("((" + e + "\\s\\s?" + n + ")|(" + n + "\\s" + e + "))", "ig"),
        A = new RegExp("(" + T.source + "(" + a + "\\s" + d + ")?)", "ig"),
        E = new RegExp("(" + M.source + "|" + w.source + "|" + I.source + ")", "g"),
        U = new RegExp(e + "" + t + a + "\\s?", "ig"),
        k = new RegExp("(" + n + a + "\\s?" + W + "(\\s" + g + ")?|" + W + t + "\\s" + n + "(\\s" + g + ")?)", "ig"),
        N = new RegExp("(" + U.source + n + a + "\\s?" + o + ")", "ig"),
        x = new RegExp("(" + n + "(" + a + "\\s" + e + ")" + a + o + ")", "ig"),
        O = new RegExp(S + "|(" + s + "(" + d + l + ")?(((" + N.source + "|" + k.source + "|" + x.source + "|" + E.source + "|(" + c + "(" + i + u + ")?)|" + u + "))" + r + d + "?)\\b)", "ig"),
        R = 410242494e4,
        D = -22090086e5;

    function $() {
        return (new Date).getTime()
    }

    function H(e) {
        return {
            date: e.getDate(),
            day: e.getDay(),
            month: e.getMonth(),
            year: e.getFullYear(),
            hours: e.getHours(),
            minutes: e.getMinutes(),
            object: e
        }
    }

    function L(e, t) {
        var s = H(new Date(Number(e))),
            i = H(new Date(Number(e)));
        return s.year === i.year && s.month === i.month && s.date === i.date
    }

    function P() {
        var e = $();
        return e + 18e5 - e % 18e5
    }
    return {
        markTimeInstances: function(e, t, s) {
            var i, a = t.time,
                o = [],
                r = [],
                l = e.match(O);
            if (l && (l.forEach((function(e) {
                    if (e = e.trim(), $WC.CMsgUtil.isAllowedforParsing(e)) {
                        var t = function(e, t) {
                            var s = (e = (e = e.replace(/(\s|\d)((on|at|of)|(st|nd|rd|th))\b/gi, (function(e, t) {
                                    return t + " "
                                }))).replace(/(\s)+/g, " ").trim()).match(A),
                                i = /(((1[012]|0?[1-9])([.:][0-5]\d){0,2}(\s?[ap]m))|(0?\d|1\d|2[0-3])(:[0-5]\d){1,2})/i;
                            if (s && s[0].trim() == e) {
                                var a = e.match(T),
                                    o = "";
                                if (a) {
                                    a = a[0];
                                    var r = e.match(i);
                                    r && (o = r[0])
                                }
                                e = a + " " + (new Date).getFullYear() + " " + o
                            }
                            var l = Date.parse(e);
                            if (isNaN(l)) {
                                var d, m = e.match(i),
                                    h = e.match(new RegExp(c, "i")),
                                    p = e.match(new RegExp(u, "i")),
                                    f = e.match(M);
                                (!f && e.match(w) || f && f[0].substring(0, f[0].replace(/[./-]/, "$").indexOf("$")).length < 2) && (d = e.match(w));
                                var v, C = "10",
                                    b = "00",
                                    y = new Date(t),
                                    _ = e.match(k);
                                if (h) switch (h[0].toLowerCase()) {
                                    case "tonight":
                                        C = 20, v = y.getTime();
                                        break;
                                    case "tomorrow":
                                    case "day after today":
                                        y.addDays(1), v = y.getTime();
                                        break;
                                    case "day after tomorrow":
                                    case "overmorrow":
                                        y.addDays(2), v = y.getTime();
                                        break;
                                    case "next week":
                                    case "coming week":
                                    case "upcoming week":
                                    case "following week":
                                        y.addDays(7), v = y.getTime();
                                        break;
                                    default:
                                        var W = P();
                                        L(t) && (v = W, C = (y = new Date(v)).getHours(), b = y.getMinutes())
                                }
                                if (p) {
                                    var S = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"],
                                        I = p[0].toLowerCase();
                                    I.includes("next") ? (I = I.replace("next ", ""), y.setDate(y.getDate() + (7 - y.getDay()) % 7 + S.indexOf(I))) : y.setDate(y.getDate() + ((7 - y.getDay()) % 7 + S.indexOf(I)) % 7), L(y.getTime(), Date.now()) && (C = (y = new Date(P())).getHours(), b = y.getMinutes()), v = y.getTime()
                                }
                                if (m) {
                                    var E = m[0].toLowerCase().trim(),
                                        U = /(1[012]|0?[1-9])/,
                                        N = /[:.][0-5][0-9]/;
                                    C = E.match(U) ? E.match(U)[0] : "10", b = (b = E.match(N) ? E.match(N)[0] : "00").replace(/[.:]/, ""), e.length == E.length && (v = $()), E.includes("pm") && "12" != C && (C = parseInt(C) + 12), e = e.replace(i, C + ":" + b)
                                }
                                if (d) {
                                    var x = d[0],
                                        O = (x = x.replace(/[/.-]/g, "$")).indexOf("$"),
                                        R = x.substring(0, O),
                                        D = x.substring(O + 1, x.lastIndexOf("$"));
                                    e = e.replace(/([12][0-9]|3[01]|0?[1-9])[/.-](1[012]|0?[1-9])/, D + " " + R)
                                }
                                if (_) {
                                    var H = _[0],
                                        F = H.match(g);
                                    F = F ? F[0] : y.getFullYear();
                                    var B = H.match(new RegExp(n, "ig"));
                                    B = B[0];
                                    var j = H.match(/[1-5]/g);
                                    j = j[0] - 1, v = (y = new Date("1-" + B + "-" + F)).getTime(), j > 0 && (y.addDays(1 + 7 * j), v = y.setDate(y.getDate() - y.getDay() + 1))
                                }
                                $WC.Util.isEmpty(v) ? l = Date.parse(e) : (y = new Date(v), l = new Date(y.getFullYear(), y.getMonth(), y.getDate(), C, b).getTime())
                            }
                            if (0 == new Date(l).getHours()) {
                                var z = new Date(l);
                                z.setHours("10"), l = z.getTime()
                            }
                            return l || -1
                        }(e, parseInt(a));
                        s = t, i = $(), s <= i || s > R || s < D || (o.push(e), r.push(t))
                    }
                    var s, i
                })), i = [], o.forEach((function(e) {
                    i.includes(e) || i.push(e)
                })), o = i), o.length)
                for (var d = 0; d < o.length; d++) {
                    var m = o[d],
                        h = new RegExp(m, "g"),
                        p = $WC.template.replace('<span class="eventnotifier"  id="MCPT_{{TIME}}" parsertype="date-time" parsedtime = "{{PARSEDTIME}}" cardContextualAction chid={{chid}}>{{WORD}}</span>', {
                            TIME: a + d,
                            PARSEDTIME: r[d],
                            WORD: m,
                            chid: s.chid
                        });
                    e = e.replace(h, p)
                }
            return e
        },
        isPastTime: function(e) {
            return (new Date).getTime() > e
        }
    }
}(), ($WC = $WC || {}).WindowObject = function(e) {
    this.id = e.id, this.draggable = void 0 !== e.draggable && e.draggable, this.nav = !0 === e.nav, this.sigleton = !0 === e.sigleton, this.bg = void 0 === e.bg || e.bg, this.opencallback = void 0 !== e.openfn ? e.openfn : null, this.closecallback = void 0 !== e.closefn ? e.closefn : null, this.closebeforecallback = void 0 !== e.closebeforefn ? e.closebeforefn : null, this.closeoutside = void 0 !== e.closeoutside && e.closeoutside, this.aligncenter = void 0 === e.aligncenter || e.aligncenter, this.closeonesc = void 0 === e.closeonesc || e.closeonesc
}, $WC.WindowObject.prototype = {
    create: function(e) {
        var t = this.id,
            s = this.getTemplate(),
            i = this.aligncenter ? " zcalgncntr" : "",
            n = '<span id="winclose" title="' + $WC.I18N("common.to.close") + '" class="zchat-close cclose zcmodal-close"></span>',
            a = e.additionalattrs || "";
        s = s.replace(/{WININDEX}/g, t).replace(/{WINCLASS}/g, void 0 !== e.class ? e.class + i : i).replace(/{WINHEADER}/g, void 0 !== e.header ? $WC.Matcher.replace("escapeReplacementString", e.header) : "").replace(/{WINCLOSE}/g, void 0 !== e.closehtml ? $WC.Matcher.replace("escapeReplacementString", e.closehtml) : n).replace(/{WINADDITIONALATTR}/g, a).replace(/{WINHTML}/g, $WC.Matcher.replace("escapeReplacementString", e.html)).replace(/{DRAGGABLE}/g, this.draggable ? "drag" : "");
        var o = document.getElementById("zcwindows");
        if (o) {
            o.insertAdjacentHTML("beforeend", s);
            var r = this.getelem(),
                l = this;
            return Gator(r).on("mousedown", (function(e) {
                l.handleClick(l, e)
            })), this.getMeFront(), this.focusInputField(), null != this.opencallback && this.opencallback(this.id), this.draggable && Gator(r).on("mousedown", ".drag", (function(e) {
                l.drag(e, l)
            })), $WC.$Win.current = t, this.get()
        }
    },
    focusInputField: function() {
        var e = this.getelem();
        if (e) {
            var t = e.querySelectorAll("input[type=text]");
            if (t.length) t[0].focus();
            else {
                var s = e.querySelectorAll("textarea");
                s.length && s[0].focus()
            }
        }
    },
    handleClick: function(e, t) {
        var s = {
            winnav: function() {
                e.sigleton && $WC.$Win.destroy(e.id, !0)
            },
            winclose: function() {
                $WC.$Win.destroy(e.id)
            }
        }[t.target.id];
        "function" == typeof s && s()
    },
    drag: function(e, t) {
        if (1 == e.which || "INPUT" !== e.target.tagName && "TEXTAREA" !== e.target.tagName) {
            var s = t.getelem();
            if (s) {
                var i = e.clientX - s.offsetLeft,
                    n = e.clientY - s.offsetTop;
                Gator(s).on("mousemove", (function(e) {
                    e.preventDefault();
                    var t = s.style;
                    t.left = e.clientX - i + "px", t.top = e.clientY - n + "px"
                })), Gator(s).on("mouseup", (function(e) {
                    Gator(s).off("mousemove"), Gator(s).off("mouseup"), e.preventDefault
                }))
            }
        }
    },
    close: function(e) {
        var t = this.getelem();
        t && (null != this.closebeforecallback && this.closebeforecallback(this.id), t.remove(), null == this.closecallback || e || this.closecallback(this.id))
    },
    getelem: function() {
        return document.getElementById(this.id)
    },
    get: function() {
        return !0 === $WC.Config.get("PUREJS") ? this.getelem() : window.jQuery ? jQuery('[id="' + this.id + '"]') : $('[id="' + this.id + '"]')
    },
    getMeFront: function() {
        var e = this.getelem();
        if (e) {
            var t = e.querySelectorAll("#winnav");
            if (t.length && t.remove(), this.nav && $WC.$Win.persists()) e.querySelectorAll("#winhead")[0].insertAdjacentHTML("afterbegin", '<span id="winnav" title="' + $WC.I18N("common.back") + '" class="zchat-zcheadicn mrgR10 fl_left"></span>');
            $WC.Util.removeClass(e, "zcbg_mask"), this.bg && $WC.Util.addClass(e, "zcbg_mask"), this.handleCloseOutside(), e.parentNode.appendChild(e)
        }
    },
    handleCloseOutside: function() {
        var e = this.getelem(),
            t = this;
        this.closeoutside && (e.insertAdjacentHTML("afterbegin", '<div class="zcbg_mask"></div>'), Gator(e).on("click", ".zcbg_mask", (function() {
            $WC.$Win.destroy(t.id)
        })))
    },
    getTemplate: function() {
        return ['<div id="{WININDEX}" type="popup" class="modalwindow {WINCLASS} " {WINADDITIONALATTR}><div>', '<div id="winhead" class="mheader {DRAGGABLE}">{WINHEADER}{WINCLOSE}</div>{WINHTML}</div>', "</div>"].join("")
    }
}, $WC.$Win = function() {
    var e = {},
        t = function(t, s) {
            e[t] = s
        },
        s = {
            "window-created": [],
            "window-destroyed": []
        };
    return {
        createObjectOnReopen(e) {
            this.isExist(e) || t(e, new $WC.WindowObject({
                id: e
            }))
        },
        isExist: function(t) {
            return e.hasOwnProperty(t)
        },
        persists: function() {
            var e = document.getElementById("zcwindows");
            if (e) return e.children.length > 1
        },
        get: function(t) {
            return this.isExist(t) ? e[t].get() : null
        },
        getLastVisibleChild: function(e) {
            for (var t = e.children, s = t.length - 1; s >= 0; s--)
                if (this.isElementVisible(t[s])) return t[s];
            return null
        },
        isElementVisible: function(e) {
            return "none" != window.getComputedStyle(e).display
        },
        destroy: function(t, s) {
            if (this.isExist(t)) {
                e[t].close(s), delete e[t];
                var i = document.getElementById("zcwindows") && this.getLastVisibleChild(document.getElementById("zcwindows"));
                this.current = $WC.Util.isEmpty(i) || $WC.Util.isEmptyObject(i) ? null : i.getAttribute("id")
            }
            this.triggerEvent("window-destroyed")
        },
        handleOutsideClose: function() {
            var t = this.current;
            t && this.isExist(t) && e[t].closeoutside && $WC.$Win.destroy(t)
        },
        getFront: function(t) {
            e[t].getMeFront()
        },
        closeAll: function() {
            var e = document.getElementById("zcwindows");
            if (e) {
                var t = e.children,
                    s = t.length;
                if (!t) return;
                for (var i = s - 1; i >= 0; i--) {
                    var n = t[i].id;
                    this.isExist(n) && this.isElementVisible(t[i]) && this.destroy(n)
                }
            }
        },
        handleEscape: function() {
            var t = document.getElementById("zcwindows"),
                s = t && this.getLastVisibleChild(t);
            if (s) {
                var i = s.id;
                if (this.isExist(i)) return e[i].closeonesc && this.destroy(i), !0
            }
            return !1
        },
        create: function(s) {
            var i = s.id;
            t(i, new $WC.WindowObject(s));
            var n = e[i].create(s);
            return this.triggerEvent("window-created"), n
        },
        triggerEvent: function(e) {
            if (s.hasOwnProperty(e))
                for (var t = s[e], i = function(e) {
                        setTimeout((function() {
                            e()
                        }), 0)
                    }, n = 0; n < t.length; n++) "function" == typeof t[n] && i(t[n])
        },
        on: function(e, t) {
            s.hasOwnProperty(e) && s[e].push(t)
        },
        off: function(e) {
            s.hasOwnProperty(e) && (s[e] = [])
        }
    }
}(), $WC.$Dlg = {}, $WC.$Dlg = function() {
    var e, t, s, i = {},
        n = 1,
        a = 2,
        o = 1,
        r = [1, 2, 3],
        l = !1;

    function d() {
        !1 === l && (e = {
            draggable: !0,
            bg: !0,
            class: "zcdalogbx",
            openfn: function() {},
            bodyhtml: "",
            headerhtml: "",
            version: 1,
            buttons: []
        }, t = {
            buttons: [{
                text: $WC.I18N("common.ok"),
                colour: n
            }]
        }, s = {
            buttons: [{
                text: $WC.I18N("common.ok"),
                colour: a
            }]
        }, l = !0)
    }
    var c = function(e) {
            function t(e, t) {
                switch (e) {
                    case 1:
                        return t === a ? "buttn_neg" : "buttn_pos";
                    case 2:
                        return "zcdlgbtn " + (t === a ? "zcdlgbtn-red" : t === n ? "zcdlgbtn-green" : "");
                    case 3:
                        return "zcl-btn-large mL20 " + (t || "zcl-btn--primary")
                }
            }
            for (var s = "", i = e.imagehtml ? '<div class="zcdlg_lft"><div class="zcpp_dlgltin">' + e.imagehtml + "</div></div>" : "", l = function(e) {
                    return r.includes(e.version) ? e.version : 1
                }(e), d = e.buttons.length, c = !1, m = 0; m < d; m++) c || (o = m + 1, c = !0), s += '<button button="' + (m + 1) + '" class="' + t(l, e.buttons[m].colour) + '">' + e.buttons[m].text + "</button>";
            return u(l).replace(/{IMAGE}/g, i).replace(/{MESSAGE}/g, $WC.Matcher.replace("escapeReplacementString", e.bodyhtml)).replace(/{BUTTON}/g, s)
        },
        u = function(e) {
            switch (e) {
                case 1:
                    return ['<div class="mcontent"><div class="dialogmn">{IMAGE}<div class="zcdlg_rht"><div class="zcdlgmsg">{MESSAGE}</div></div></div><div class="wctxtcent">{BUTTON}</div></div>'].join("");
                case 2:
                    return ['<div class="mcontent"><div class="mcontent_txt_con">{MESSAGE}</div><div class="mcontent_btn_con">{BUTTON}</div></div>'].join("");
                case 3:
                    return ['<div class="mcontent"><div class="mcontent_txt_con">{MESSAGE}</div><div class="mcontent_btn_con textR">{BUTTON}</div></div>'].join("")
            }
        },
        m = function(e) {
            ! function(e) {
                i[e.id] = {}, i[e.id].buttons = e.buttons
            }(e);
            var t = $WC.$Win.create({
                id: e.id,
                header: e.headerhtml,
                closehtml: '<span id="winclose" title="' + $WC.I18N("common.cancel") + '" class="zchat-close cclose zcmodal-close"></span>',
                html: c(e),
                class: e.class,
                draggable: e.draggable,
                bg: e.bg,
                openfn: e.openfn,
                closefn: function(t) {
                    delete i[t], "function" == typeof e.closefn && e.closefn()
                }
            });
            return "undefined" != typeof jQuery && t instanceof jQuery && (t = t[0]), h(t, e.id), t
        },
        h = function(e, t) {
            Gator(e).on("click", "[button]", (function(s) {
                if ($WC.$Dlg.isExist(t)) {
                    s.stopPropagation();
                    var n = parseInt(this.getAttribute("button")),
                        a = i[t].buttons[n - 1].action,
                        o = e.querySelector("[input-in-dlg]");
                    if (null != o) {
                        var r = o.parentElement;
                        o.classList.remove("zcq-inpt-error"), r.querySelector("[category='errormsg']").innerHTML = ""
                    }
                    if ("function" == typeof a) var l = a.call($WC.$Win.get(t));
                    null != o && o.classList.contains("zcq-inpt-error") || l || $WC.$Win.destroy(t)
                }
            })), Gator(e).on("keyup", "[input-in-dlg]", (function(e) {
                if ($WC.$Dlg.isExist(t)) {
                    e.stopPropagation();
                    var s = $WC.Util.isEmpty(e) ? void 0 : e.which,
                        i = this.parentElement,
                        n = i.querySelector("[category='charcount']"),
                        a = "TEXTAREA" === this.nodeName || "INPUT" === this.nodeName ? this.value : this.innerText,
                        o = n.getAttribute("limit"),
                        r = $WC.Util.isEmpty(s) || 27 != s ? o - a.length : o;
                    n.innerHTML = r, this.classList.remove("zcq-inpt-error"), i.querySelector("[category='errormsg']").innerHTML = "", r < 10 ? n.classList.add("zcq-clr-R") : n.classList.remove("zcq-clr-R"), r < 0 && ("TEXTAREA" === this.nodeName || "INPUT" === this.nodeName ? this.value = a.substring(0, o) : this.innerText = a.substring(0, o), this.placeCursorAtEnd(this), n.innerHTML = 0)
                }
            }))
        };
    return {
        GREEN_BUTTON: 1,
        RED_BUTTON: 2,
        GREY_BUTTON: 3,
        create: function(t) {
            if (d(), o = 1, !$WC.$Dlg.isExist(t.id)) {
                t = function(e) {
                    return e.class += void 0 === e.imagehtml ? " zcdgimgnone" : "", e
                }(t = $WC.Util.extend(!0, {}, e, t));
                var s = m(t),
                    i = s.querySelectorAll('[button="' + o + '"]');
                return i && i[0] && i[0].focus(), s
            }
        },
        alert: function(e) {
            d(), e = $WC.Util.extend(!0, {}, t, e), this.create(e)
        },
        confirm: function(e) {
            d(), e = $WC.Util.extend(!0, {}, s, e), this.create(e)
        },
        isExist: function(e) {
            return i.hasOwnProperty(e)
        },
        destroy: function(e) {
            $WC.$Win.destroy(e)
        },
        frameHeaderHTML: function(e) {
            var t = "",
                s = e && e.ispositive ? "mheader_ttl clr-green" : "mheader_ttl",
                i = e && e.ispositive ? "mheader_p clr-green" : "mheader_p";
            return e && e.imagehtml && (t += e.imagehtml), e && e.header && (t += '<div class="' + s + '">' + e.header + "</div>"), e && e.subheader && (t += '<div class="' + i + '">' + e.subheader + "</div>"), t
        },
        frameBodyInfoHTML: function(e) {
            var t = e && e.info ? e.info.length : 0,
                s = e && e.infoheader ? e.infoheader : $WC.I18N("dialogue.info.header"),
                i = t > 0 ? '<div class="mcontent_ttl">' + s + "</div>" : "";
            if (e && $WC.Util.isEmpty(e.infoheader) && 1 == t) i = '<div class="zcdlg_rht">' + e.info[0] + "</div>";
            else if (t > 0)
                for (var n = 0; n < t; n++) i += '<div class="mcontent_p msi-rgtarw">' + e.info[n] + "</div>";
            return i
        },
        getButtonObj: function(e, t, s) {
            return {
                text: $WC.I18N(e),
                colour: t,
                action: s
            }
        }
    }
}(), $WC.Widgets = function() {
    var e = {},
        t = !1;

    function s() {
        !1 === t && (e = {
            alert: {
                class: "zchat-alrt",
                title: $WC.I18N("info.warning")
            },
            info: {
                class: "zchat-hisseld",
                title: $WC.I18N("info.success")
            },
            confirm: {
                class: "zcf-edit3",
                title: $WC.I18N("info.confirm")
            }
        }, t = !0)
    }
    var i = function(e) {
        var t;
        if ("alert" === e.type || "info" === e.type) t = {}, void 0 !== e.btntxt && (t.text = e.btntxt), void 0 !== e.btncallback && (t.action = e.btncallback), t.colour = $WC.$Dlg.GREEN_BUTTON;
        else if ("confirm" === e.type) {
            t = [];
            var s = {},
                i = {
                    colour: "zcq-btn-large zcq-mL20 zcq-btn--secondary"
                };
            void 0 !== e.cancel_button_label ? i.text = e.cancel_button_label : i.text = $WC.I18N("common.cancel"), t.push(i), e.input && "user_webhook_token" === e.input.type ? s.text = $WC.I18N("common.authenticate") : void 0 !== e.buttontext ? s.text = e.buttontext : void 0 !== e.button_label ? s.text = e.button_label : s.text = $WC.I18N("common.submit"), void 0 !== e.btncallback && (s.action = e.btncallback), s.colour = "zcq-btn-large zcq-mL20 zcq-bg-success";
            var n = e.emotion;
            void 0 !== n && ("negative" === n ? s.colour = "zcq-btn-large zcq-mL20 zcq-bg-failed" : "neutral" === n && (s.colour = "zcq-btn-large zcq-mL20 zcq-warning-bg")), t.push(s)
        }
        return t
    };
    return {
        construct: function(t) {
            if (s(), this.isValid(t))
                if ("alert" === t.type || "info" === t.type) {
                    var n = '<div class="zcartcnt"><div><div class="{DLGLASS} wcdIB f40 mrgL10"></div><div class="wcdIB zcfarlt"><div class="zcartnm">{HEADER}</div><div class="clr0">{MSG}</div></div></div></div>',
                        a = e[t.type];
                    n = n.replace(/{DLGLASS}/g, a.class).replace(/{HEADER}/g, void 0 !== t.title ? $WC.$CUtil.processXSS(t.title) : a.title).replace(/{MSG}/g, $WC.CMsgUtil.convertLinks(t.description)), "alert" !== t.type && "info" !== t.type || ($WC.$Dlg.alert({
                        id: "widget" + t.type,
                        bodyhtml: n,
                        buttons: [i(t)],
                        closefn: "function" == typeof t.closeCallback ? t.closeCallback : ""
                    }), t.hasEfimeralPopup && this.setEphemeralPopUpAttributes("widget" + t.type))
                } else if ("confirm" === t.type) {
                a = e[t.type];
                var o = t.emotion,
                    r = t.title,
                    l = t.description,
                    d = t.input,
                    c = "zcq-bg-success",
                    u = "positive";
                void 0 !== o && (u = o, "negative" === o ? c = "zcq-bg-failed" : "neutral" === o && (c = "zcq-warning-bg"));
                var m = $WC.$Dlg.frameHeaderHTML({
                    imagehtml: '<div class="zcq-img zcq-img-no-shadow lg2 zcq-flexM zcq-mAuto zcf-edit3 ' + c + '"></div>',
                    header: void 0 !== r ? $WC.$CUtil.processXSS(r) : a.title,
                    subheader: $WC.CMsgUtil.convertLinks(l)
                });
                if ("confirm" === t.type && d && "user_webhook_token" !== t.input.type) {
                    var h = !1;
                    void 0 !== t.mandatory && t.mandatory && (h = !0), m += '<div class="zcq-posrel zcq-mB10"><textarea id="buttonconfirminput" placeholder="' + $WC.$CUtil.processXSS(t.input) + '" maxlength="300" input-in-dlg class="zcq-textarea zcq-mT20 zcq-zcartinp" mandatory="' + h + '"></textarea><span id="confirmationvaluecount" category="charcount" limit="300" class="zcq-limit-txt">300</span><span id="confirmationerrormsg" category="errormsg" class="zcq-error-txt"></span></div>'
                }
                var g = i(t);
                $WC.$Dlg.create({
                    id: "widgetconfirm",
                    version: 3,
                    draggable: !1,
                    class: "zcq-alert-dialog-2 zcqdel-dialog-box zcq-max-w600 integ-confirmation " + u,
                    headerhtml: m,
                    bodyhtml: "",
                    buttons: g
                }), t.hasEfimeralPopup && this.setEphemeralPopUpAttributes("widgetconfirm");
                var p = document.getElementById("buttonconfirminput");
                null != p && p.focus()
            }
        },
        setEphemeralPopUpAttributes: function(e) {
            $("#" + e).attr({
                integresponseelem: "",
                ephimeralpopup: ""
            })
        },
        isValid: function(e) {
            s();
            var t = !1;
            return void 0 !== e.type && (t = -1 != ["alert", "confirm", "prompt", "info", "poll", "photo"].indexOf(e.type)), t
        }
    }
}(), ($WC = $WC || {}).CustomMsg = {
    msgobj: {},
    storeMsgObj: function(e) {
        (e["brief.msg"] || e["btnindexvsdetails.msg"]) && ($WC.CustomMsg.msgobj[e.chid] = $WC.CustomMsg.msgobj[e.chid] || {}, $WC.CustomMsg.msgobj[e.chid][$WC.CMsgUtil.getTimeFromMsgObj(e)] = e)
    },
    removeMsgObj: function(e) {
        delete $WC.CustomMsg.msgobj[e]
    },
    getMsgObj: function(e, t, s) {
        var i = e.closest("[chid]") || e;
        return $WC.CustomMsg.msgobj[t || i.getAttribute("chid") || e.closest("[data-chid]").getAttribute("data-chid")][s || i.getAttribute("time") || e.closest("[data-msgtime]").getAttribute("data-msgtime")]
    },
    getTheme: function(e) {
        var t = e["brief.msg"];
        return e.native_widget && "channelwelcomewidget" === e.native_widget.type ? 10 : t ? t.themeid : ""
    },
    storeMsgCardAttObj: function(e) {
        $WC.CustomMsg.msgobj[e.chid][e.time]["att.msg"].data = e
    },
    formatEventCardTime: function(e) {
        var t = e.dateandtime.start,
            s = e.dateandtime.end,
            i = "day, dd mon yyyy",
            n = "day, dd mon yyyy";
        (new Date).getYear() == new Date(t).getYear() && (i = "day, dd mon"), (new Date).getYear() == new Date(s).getYear() && (n = "day, dd mon");
        var a = $WC.I18N("event.details.start"),
            o = $WC.I18N("event.details.to"),
            r = $WC.I18N("event.details.timezone") + " : ",
            l = {},
            d = {},
            c = {};
        l[a] = $WC.DateUtil.formatDate(t, i) + $WC.DateUtil.formatTime(t), d[o] = $WC.DateUtil.formatDate(s, n) + $WC.DateUtil.formatTime(s), c[r] = Intl.DateTimeFormat().resolvedOptions().timeZone.replace("_", " ");
        var u = [l, d, c];
        if (e.location) {
            var m = {};
            m[$WC.I18N("event.details.venue") + " : "] = e.location, u.push(m)
        }
        var h = {};
        return h.data = u, h.type = "label", h.title = $WC.I18N("event.details.title"), h
    }
}, $WC.CustomMsgUI = {
    button: {
        text: {
            theme1: 1,
            theme2: 3,
            theme3: 1,
            theme4: 2,
            theme5: 1,
            theme6: 0,
            theme7: 3,
            theme8: 1,
            theme9: 10,
            theme10: 2
        }
    },
    getCustomMessageContent: function(e) {
        var t = e["brief.msg"];
        if (!t) return "";
        var s = "",
            i = t.themeColor;
        /^[a-fA-F0-9]{6}$/.test(i) && (t.themeColor = "#" + i), void 0 === e["long.msg"] || "percentage_chart" !== e["long.msg"][0].type && "graph" !== e["long.msg"][0].type || (s = " zcq-charts-box"), $WC.CustomMsg.storeMsgObj(e);
        var n = "zcmsg_bx zcmsg_bx" + $WC.CustomMsg.getTheme(e) + s,
            a = "";
        return e["brief.msg"].themeColor && (n += " zcmsg_cstm_theme", a = "--theme-clr: " + e["brief.msg"].themeColor), ['<div class="' + n + '" chid="' + e.chid + '"  msguid="' + e.msguid + '"  time="' + $WC.CMsgUtil.getTimeFromMsgObj(e) + '"     data-sendername="' + $WC.Util.safeHTML(e.dname) + '" customcardmsg', e["brief.msg"].themeColor ? ' style="' + a + '"' : "", ">", this.getThemeTemplateObj(e).getlayout(this.getThemeParamObj(e), e), "</div>"].join("")
    },
    getThemeParamObj: function(e) {
        var t = e["brief.msg"];
        return {
            img: this.getThemeImageURL(e),
            desc: $WC.CMsgUtil.getDisplayContent(e),
            desctitle: e.msg ? $WC.CMsgUtil.processMsg(e.msg.trim(), e) : "",
            title: t.title ? $WC.CMsgUtil.processMsg(t.title, e) : "",
            titletooltip: t.title ? e.raw ? $WC.$CUtil.processXSS(t.title) : t.title : "",
            icon: t.icon,
            button: $WC.CustomMsgUI.getButtonHTML(e),
            chid: e.chid,
            time: $WC.CMsgUtil.getTimeFromMsgObj(e)
        }
    },
    getThemeImageURL: function(e) {
        var t = $WC.CustomMsg.getTheme(e),
            s = e["brief.msg"];
        return ["1", "2", "4", "7"].indexOf(t) > -1 ? s.thumbnail || s.img : s.img || s.thumbnail
    },
    getCustomMsgOverlayHTML: function(e) {
        var t = '<div class="zc_cstm_ovrly';
        return void 0 !== e["brief.msg"] && e["brief.msg"].themeColor && (t += ' zcmsg_cstm_theme" style="--theme-clr: #' + e["brief.msg"].themeColor), t += '">', $WC.CMsgUtil.isCustomMessage(e) && (t += $WC.CustomMsgTemplate.getOverlayCustomMsgHTML(e)), $WC.CMsgUtil.isCustomFormattedMsg(e) && (t += $WC.CMsgUtil.getFormattedMsgContent(e)), t + "</div>"
    },
    getThemeTemplateObj: function(e) {
        return $WC.CustomMsgTemplate.card_attachment = $WC.CustomMsgUI.getMessageCardAttachmentButton(e), $WC.CustomMsgTemplate["theme_" + $WC.CustomMsg.getTheme(e)]
    },
    getButtonHTML: function(e, t, s) {
        if (e.native_widget && e.native_widget.data && e.native_widget.data.event_details && e.native_widget.data.event_details.invitation_state) {
            if ("ended" == e.native_widget.data.event_details.invitation_state) return '<div class="zcntnbx" style="text-align: center">' + $WC.I18N("event.ended") + "</div>";
            if ("not_invited" == e.native_widget.data.event_details.invitation_state) return '<div class="zcntnbx" style="text-align: center">' + $WC.I18N("event.deleted") + "</div>";
            if ("deleted" == e.native_widget.data.event_details.invitation_state) return '<div class="zcntnbx" style="text-align: center">' + $WC.I18N("event.deleted") + "</div>"
        }
        if (e.native_widget && "channelwelcomewidget" === e.native_widget.type) return '<div class="zcntnbx" data-operation="welcomenote"><span class="welcomenote-btn" data-operation="welcomenote">' + $WC.I18N("welcomenote.send") + "</span></div>";
        var i = e["brief.msg"],
            n = !!t;
        if (!(t = t || (void 0 !== e["brief.msg"] ? i.buttons : t)) || !t.length) return "";
        var a = "",
            o = t.length;
        $WC.CustomMsg.getTheme(e);
        btncount = n ? 5 : $WC.CustomMsgUI.button.text["theme" + $WC.CustomMsg.getTheme(e)];
        for (var r = 0; r < o; r++) {
            var l = t[r],
                d = s ? "primaryindex = PRIMARY_INDEX" : "";
            if (r >= btncount) {
                a += this.constructBtnDropDown(t, e, d, btncount);
                break
            }
            a += $WC.CustomMsgTemplate.getbutton(l, e, r)
        }
        return '<div class="zcntnbx"  ' + d + ">" + a + "</div>"
    },
    getMessageCardAttachmentButton: function(e) {
        var t = "";
        if (void 0 !== WmsMainUI) return t;
        if ($WC.CMsgUtil.isMessageCardAttachment(e)) {
            var s = e["att.msg"],
                i = $WC.$CUtil.processXSS(s.label);
            t = $WC.template.replace('<div class="attachment-button flexM" title="{{label}}" chid="{{chid}}" time="{{msg_time}}" custombuttonclick_onmsg attbtn><span data-cmsgbtn="true" class="posrel"><span class="{{icon_class}} mR8"></span>{{label}}</span></div>', {
                label: i,
                chid: e.chid,
                msg_time: $WC.CMsgUtil.getTimeFromMsgObj(e),
                icon_class: "zcf-maximize"
            })
        }
        return t
    },
    constructBtnDropDown: function(e, t, s, i) {
        for (var n = e.length, a = '<div class="zcmorebtn" custom_btn_click><em custom_btn_click></em><ul>', o = i; o < n; o++) a += "<li " + s + ">" + $WC.CustomMsgTemplate.getbutton(e[o], t, o) + "</li>";
        return a + "</ul></div>"
    },
    handleMoreMessage: function(e) {
        var t = e.target.getAttribute("custom_message"),
            s = document.getElementById("cardmainmessage");
        $WC.Util.addClass(e.target, "zc_dN"), "show_more" === t ? (s.style.height = parseInt(s.getAttribute("scrollHeight")) + 30 + "px", $WC.Util.removeClass(document.querySelectorAll('[custom_message="show_less"]')[0], "zc_dN")) : (s.style.height = parseInt(s.getAttribute("clientHeight")) + "px", $WC.Util.removeClass(document.querySelectorAll('[custom_message="show_more"]')[0], "zc_dN"))
    },
    handleCustomBoxClick: function(e, t, s) {
        var i = $WC.CustomMsg.getMsgObj(e);
        if ("viewattachment" === t.target.getAttribute("documentclick")) {
            var n = i["brief.msg"];
            return !n.img && t.target.src && (n.img = t.target.src), void this.showOriginalImage(n)
        }
        if ("a" !== t.target.tagName.toLowerCase()) {
            var a = $WC.$Win.create({
                id: "custommsg",
                class: WebMessanger.isDarkModeEnabled ? "cmsgdlg zmNightMode" : "cmsgdlg",
                header: $WC.CMsgUtil.getBriefMsgTitle(i),
                html: $WC.CustomMsgUI.getCustomMsgOverlayHTML(i),
                additionalattrs: ' chid="' + i.chid + '" time="' + $WC.CMsgUtil.getTimeFromMsgObj(i) + '"',
                closefn: s
            });
            Gator(a).on("click", "[data-operation]", (function(e) {
                var t = $(e.currentTarget).attr("data-operation");
                e.stopPropagation(), "openchartpreview" === t && $WC.Charts.openChartsPreview(e)
            }))
        }
    },
    handleOverlayImage: function(e) {
        var t = $WC.CustomMsg.getMsgObj(e),
            s = t ? t["brief.msg"] : {
                img: e.getAttribute("src")
            };
        this.showOriginalImage(s)
    },
    showOriginalImage: function(e) {
        $WC.$Win.create({
            id: "custommsgimgprev",
            class: "cmsgdlg cmsgprev",
            html: $WC.CustomMsgTemplate.getImagePreviewHTML(e)
        })
    },
    getMessageCardImageHTML: function(e, t, s, i) {
        var n = '<img class="{{custom_class}} curP" message-card-img {{custom_attr}} src="{{img_src}}" img-type="{{img_type}}" onerror="$WC.CustomMsgUI.handleImageOnError(this)">';
        if ("slide" === t && (n = '<div class="zcimgcntr">' + n + "</div>"), void 0 !== s && !$WC.Util.isEmptyObject(s)) {
            var a = "";
            Object.keys(s).forEach((function(e) {
                a += $WC.$CUtil.processXSS(e) + '="' + $WC.$CUtil.processXSS(s[e]) + '" '
            })), "slide" === t && (a += ' onload="$WC.CustomMsgUI.handleImageOnLoad(this)"'), n = $WC.template.replace(n, {
                custom_attr: a
            }, "InSecureHTML")
        }
        return $WC.template.replace(n, {
            img_src: e,
            img_type: t,
            custom_class: i || "",
            custom_attr: ""
        })
    },
    handleImageOnError: function(e) {
        var t = e.getAttribute("img-type"),
            s = "";
        switch (t) {
            case "icon":
                s = "zcbroken-icon-title";
                break;
            case "thumbnail":
                s = "zcbroken-icon-lg zcbroken-icon-thumbnail";
                break;
            case "slide":
                s = "zcbroken-icon-lg zcbroken-icon-slide"
        }
        e.outerHTML = $WC.template.replace('<div class="zcbroken-icon-cntr {{cntr_cstm_class}}" img-type="{{img_type}}"><span class="{{broken_img_icon_class}} zcbroken-icon"></span></div>', {
            img_type: t,
            cntr_cstm_class: s,
            broken_img_icon_class: void 0 === WmsMainUI ? "zcf-broken-img" : "wms_brokenimg_icon"
        })
    },
    handleImageOnLoad: function(e) {
        if ("slide" === e.getAttribute("img-type")) {
            (e.naturalWidth > 200 || e.naturalHeight > 200) && e.classList.add("zcimgfit"), e.naturalWidth < 200 && e.parentElement.classList.add("zcimgbdr")
        }
    }
}, $WC.CustomMsgTemplate = {
    card_attachment: "",
    theme_0: {
        getlayout: function(e, t) {
            var s = "";
            return $WC.CMsgUtil.isCustomFormattedMsg(t) && (s = $WC.CMsgUtil.getFormattedMsgContent(t)), s += $WC.CustomMsgTemplate.card_attachment, ['<div class="zcthm0ctr">', e.title ? '<div class="zctitle" title="' + e.titletooltip + '">' + (e.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(e.icon, "icon") : "") + e.title + "</div>" : "", e.img ? $WC.CustomMsgUI.getMessageCardImageHTML(e.img, "thumbnail", {
                documentclick: "viewattachment",
                previewelem: ""
            }) : "", '<div class="btncnt">', '<div class="zcdesc">' + e.desc + "</div>", "</div>", e.button, "</div>", "<div>" + s + "</div>"].join("")
        }
    },
    theme_1: {
        getlayout: function(e) {
            return [e.desc ? '<div class="zcdesc"><div>' + e.desc + "</div></div>" : "", '<div class="btncnt">', e.img ? '<div class="zcimg">' + $WC.CustomMsgUI.getMessageCardImageHTML(e.img, "thumbnail", {
                documentclick: "viewattachment",
                previewelem: ""
            }) + "</div>" : "", e.title ? '<div class="zctitle">' + (e.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(e.icon, "icon") : "") + '<div title="' + e.titletooltip + '">' + e.title + "</div></div>" : "", e.button, "</div>", $WC.CustomMsgTemplate.card_attachment].join("")
        }
    },
    theme_2: {
        getlayout: function(e) {
            return [e.img ? $WC.CustomMsgUI.getMessageCardImageHTML(e.img, "thumbnail", {
                documentclick: "viewattachment",
                previewelem: ""
            }) : "", '<div class="btncnt">', e.title ? '<div class="zctitle" title="' + e.titletooltip + '">' + (e.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(e.icon, "icon") : "") + e.title + "</div>" : "", '<div class="zcdesc"><div>' + e.desc + "</div></div>", e.button, "</div>", $WC.CustomMsgTemplate.card_attachment].join("")
        }
    },
    theme_3: {
        getlayout: function(e) {
            return ['<div class="btncnt">', e.img ? $WC.CustomMsgUI.getMessageCardImageHTML(e.img, "thumbnail", {
                documentclick: "viewattachment",
                previewelem: ""
            }) : "", e.title ? '<div class="zctitle" title="' + e.titletooltip + '">' + (e.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(e.icon, "icon") : "") + e.title + "</div>" : "", '<div class="zcdesc"><div>' + e.desc + "</div></div>", e.button, "</div>", $WC.CustomMsgTemplate.card_attachment].join("")
        }
    },
    theme_4: {
        getlayout: function(e) {
            return ['<div class="btncnt">', e.img ? $WC.CustomMsgUI.getMessageCardImageHTML(e.img, "thumbnail", {
                documentclick: "viewattachment",
                previewelem: ""
            }) : "", e.title ? '<div class="zctitle" title="' + e.titletooltip + '">' + (e.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(e.icon, "icon") : "") + e.title + "</div>" : "", '<div class="zcdesc"><div>' + e.desc + "</div></div>", "</div>", e.button, $WC.CustomMsgTemplate.card_attachment].join("")
        }
    },
    theme_5: {
        getlayout: function(e) {
            return [e.img ? $WC.CustomMsgUI.getMessageCardImageHTML(e.img, "thumbnail", {
                documentclick: "viewattachment",
                previewelem: ""
            }) : "", e.button, '<div class="btncnt">', "<div>", e.title ? '<div class="zctitle" title="' + e.titletooltip + '">' + (e.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(e.icon, "icon") : "") + e.title + "</div>" : "", '<div class="zcdesc"><div>' + e.desc + "</div></div>", "</div>", "</div>", $WC.CustomMsgTemplate.card_attachment].join("")
        }
    },
    theme_6: {
        getlayout: function(e) {
            var t = e.title || "";
            return ['<div class="btncnt ' + (e.img ? "" : "zcnobg") + '" >', e.img ? $WC.CustomMsgUI.getMessageCardImageHTML(e.img, "thumbnail", {
                documentclick: "viewattachment",
                previewelem: ""
            }) : "", t ? '<div class="zctitle" title="' + e.titletooltip + '">' + (e.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(e.icon, "icon") : "") + t + "</div>" : "", "</div>", '<div class="zcbtmbx">', '<div class="zcdesc"><div class="ellips">' + e.desc + "</div></div>", e.button, "</div>", $WC.CustomMsgTemplate.card_attachment].join("")
        }
    },
    theme_7: {
        getlayout: function(e) {
            return [e.img ? $WC.CustomMsgUI.getMessageCardImageHTML(e.img, "thumbnail", {
                documentclick: "viewattachment",
                previewelem: ""
            }) : "", '<div class="btncnt">', e.title ? '<div class="zctitle" title="' + e.titletooltip + '">' + (e.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(e.icon, "icon") : "") + e.title + "</div>" : "", '<div class="zcdesc"><div>' + e.desc + "</div></div>", "</div>", e.button, $WC.CustomMsgTemplate.card_attachment].join("")
        }
    },
    theme_8: {
        getlayout: function(e) {
            var t = e.desc;
            return t = t.replace(/(?:\r\n|\r|\n)/g, "<br />"), [e.img ? $WC.CustomMsgUI.getMessageCardImageHTML(e.img, "thumbnail", {
                documentclick: "viewattachment",
                previewelem: ""
            }) : "", "<div>", '<div class="btncnt">', e.title ? '<div class="zctitle" title="' + e.titletooltip + '">' + (e.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(e.icon, "icon") : "") + e.title + "</div>" : "", '<div class="zcdesc"><div>' + t + "</div></div>", "</div>", e.button, "</div>", $WC.CustomMsgTemplate.card_attachment].join("")
        }
    },
    theme_9: {
        getlayout: function(e) {
            var t = document.createElement("div");
            t.innerHTML = e.button;
            var s, i = t.querySelectorAll("[btnindex]");
            return i.length && (s = i[i.length - 1], t.querySelectorAll("[btnindex]:last-child")[0].remove()), ['<div class="btncnt">', e.img ? $WC.CustomMsgUI.getMessageCardImageHTML(e.img, "thumbnail", {
                documentclick: "viewattachment",
                previewelem: ""
            }) : "", e.title ? '<div class="zctitle" title="' + e.titletooltip + '">' + (e.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(e.icon, "icon") : "") + e.title + "</div>" : "", '<div class="zcdesc"><div >' + e.desc + "</div>", "</div>", "</div>", t.innerHTML, '<div class="zcntrslut">' + (i.length ? s.outerHTML : "") + "</div>", $WC.CustomMsgTemplate.card_attachment].join("")
        }
    },
    theme_10: {
        getlayout: function(e, t) {
            var s = "";
            return $WC.CMsgUtil.isCustomFormattedMsg(t) && (s = $WC.CMsgUtil.getFormattedMsgContent(t)), ['<div class="btncnt">', e.title ? '<div class="zctitle" title="' + e.titletooltip + '">' + (e.icon ? $WC.CustomMsgUI.getMessageCardImageHTML(e.icon, "icon") : "") + e.title + "</div>" : "", '<div class="zcdesc">', e.img ? $WC.CustomMsgUI.getMessageCardImageHTML(e.img, "thumbnail", {
                documentclick: "viewattachment",
                previewelem: ""
            }) : "", "<p>" + e.desc + "</p>", "</div>", "</div>", "<div>" + s + "</div>", "<div>", e.button, "</div>", $WC.CustomMsgTemplate.card_attachment].join("")
        }
    },
    formatButton: function(e) {
        return e.label ? e : (e.text && (e.label = e.text, delete e.text), e.click && (e.action = {}, e.click["action.type"] && (e.action.type = e.click["action.type"]), e.click["action.data"] && (e.action.data = e.click["action.data"]), e.click["action.confirm"] && (e.action.confirm = e.click["action.confirm"]), delete e.click), e)
    },
    getbutton: function(e, t, s) {
        var i = t["btnindexvsdetails.msg"] ? t["btnindexvsdetails.msg"][e] : e;
        if (!(i = this.formatButton(i)).action || !i.label) return "";
        var n = $WC.$CUtil.processXSS(i.label),
            a = i.hint ? $WC.$CUtil.processXSS(i.hint) : n,
            o = "+" === i.type ? "zcok" : "-" === i.type ? "zccancel" : "";
        if (t.native_widget && t.native_widget.data && t.native_widget.data.event_details && t.native_widget.data.event_details.attendees)
            for (var r = t.native_widget.data.event_details.attendees, l = 0; l < r.length; l++) $WC.Util.isLocalUser(r[l].zuid) && ("ACCEPTED" == r[l].status && "1" == e ? n = $WC.I18N("event.accepted") : "DECLINED" == r[l].status && "2" == e && (n = $WC.I18N("event.declined")));
        var d = "",
            c = i.action.type;
        "open.url" !== c && "preview.url" !== c || (d = "zcf-popout", void 0 !== WmsMainUI && (d = "wms_popout_icon"), d = '<span class="' + d + ' mL8"></span>');
        var u = t.isMinimise ? "showMinimiseButton" : "";
        return ['<a class="zcbtn ' + o + '" title="' + a + '" chid="' + t.chid + '" time="' + $WC.CMsgUtil.getTimeFromMsgObj(t) + '" custombuttonclick_onmsg ' + u + ' index="' + s + '" btnindex="' + i.index + '" >', '<span data-cmsgbtn="true" class="cmsg-btn">' + n + d + "</span>", "</a>"].join("")
    },
    getImagePreviewHTML: function(e) {
        return ['<div class="cmsgimg">', '<img src="' + (e.img || e.thumbnail) + '" />', "</div>"].join("")
    },
    getOverlayCustomMsgHTML: function(e) {
        var t = e["brief.msg"],
            s = void 0 !== e["brief.msg"] ? t.thumbnail || t.img : void 0,
            i = void 0 !== e["brief.msg"] ? t.buttons : void 0,
            n = i && i.length ? "zccustmsg" : "",
            a = void 0 === WmsMainUI ? "undefined" == typeof MessageBuilderUI ? Users.getName(e.sender, e.nname || e.dname) : "" : $WC.Util.getContactName(e.sender, e.nname || e.dname),
            o = void 0 === WmsMainUI ? "undefined" == typeof MessageBuilderUI ? Users.getImgUrlById(e.sender) : "" : WmsContacts.getUserPhoto(e.sender);
        return ['<div class="msgbox zccard-bx ' + n + '">', '<div purpose="sender" sender="' + e.sender + '" customsender_name="' + a + '" style="display:none">', '<img src="' + o + '">', "</div>", '<div class="zccard" msgtime="' + $WC.CMsgUtil.getTimeFromMsgObj(e) + '" chid="' + e.chid + '" msguid="' + e.msguid + '">', s ? $WC.CustomMsgUI.getMessageCardImageHTML(s, "thumbnail", {
            chid: e.chid,
            time: $WC.CMsgUtil.getTimeFromMsgObj(e),
            documentclick: "viewattachment",
            previewelem: ""
        }) : "", '<div id="cardmainmessage" class="zccarddesc">' + $WC.CMsgUtil.getDisplayContent(e) + "</div>", "</div>", e.native_widget && "channelwelcomewidget" === e.native_widget.type ? "" : $WC.CustomMsgUI.getButtonHTML(e, i), "</div>"].join("")
    },
    getBotSuggestionsContent: function(e) {
        for (var t = '<div botsuggestions class="zcbotsugg flex flexW">', s = 0; s < e.length; s++) {
            var i = e[s],
                n = $WC.$CUtil.processXSS(i.text);
            t += '<div suggestionsclick_onmsg text="' + n + '" title="' + n + '">' + (i.icon ? '<img src="' + i.icon + '">' : "") + '<span class="font14 txtcent bold">' + n + "</span></div>"
        }
        return t + "</div>"
    }
}, $WC.IFrame = function() {
    var e = function(e, t, s, n, o) {
            var r = $WC.template.replace(a.global_iframe, {
                iframe_tag_id: e + "_iframe",
                iframe_loader_id: e + "_loader",
                frame_url: t,
                frame_id: e
            });
            return $WC.template.replace(r, {
                header_txt: s,
                loader: i(n),
                minimiseButton: o ? a.minimise_iframe() : ""
            }, "InSecureHTML")
        },
        t = function(e, t, i) {
            var a = document.getElementById(t + "_iframe"),
                o = e.length ? e[0] : e;
            a.addEventListener("load", (function() {
                setTimeout((function() {
                    s(t, !0)
                }), 10)
            })), a.addEventListener("error", (function() {
                setTimeout((function() {
                    var e = a.getAttribute("src");
                    n(e);
                    s(t, !1)
                }), 10)
            })), o.addEventListener("click", (function(e) {
                if (e.target.hasAttribute("purpose")) {
                    var t = e.target,
                        s = t.getAttribute("purpose"),
                        i = t.getAttribute("uid");
                    "frame_close" === s ? $WC.$Win.destroy(i) : "iframe_minimize" === s && $WC.IFrame.minimize(i)
                }
            }))
        },
        s = function(e, t) {
            var s = document.getElementById(e + "_loader");
            s.innerHTML = null, s.classList.add("zci-hide"), t && document.getElementById(e + "_iframe").classList.remove("zci-hide")
        },
        i = function(e) {
            return $WC.template.replace(a.iframe_loading, {
                loader_txt: e
            })
        },
        n = function(e) {
            var t = "",
                s = "This page content can’t be loaded here.",
                i = "To help protect the security of information you enter into this website, the publisher of this content does not allow i to be displayed in a frame.",
                n = "Open this content in a new tab",
                o = "";
            return $WC.template.replace(a.iframe_load_error, {
                image_cls: t,
                error_hdr: s,
                error_text: i,
                btn_txt: n,
                btn_icn: o,
                frame_url: e
            })
        },
        a = {
            global_iframe: '<div class="zci-wh100"><div class="zci-cont"><div class="zci-hdr"><div class="zci-hdr-txt">{{header_txt}}</div><div class="zci-fshrink">{{minimiseButton}}<div purpose="frame_close" uid={{frame_id}} class="zci-icon zchat-close"></div></div></div><div class="zci-flexG zci-posrel"><div id="{{iframe_loader_id}}" class="zci-wh100 zci-posabs">{{loader}}</div><iframe id="{{iframe_tag_id}}" class="zci-wh100 zci-hide" src={{frame_url}} style="border: none;"></iframe></div></div></div>',
            iframe_loading: '<div class="zci-loader-cont"><div class="zci-rloader zci-posrel zci-mB20" style="height: 40px; width: 40px;"></div><div class="zci-loader-txt">{{loader_txt}}</div></div>',
            iframe_load_error: '<div class="zci-loader-cont zci-empty"><div class="zci-error-img {{image_cls}}"></div><div class="zci-error-hdr">{{error_hdr}}</div><div class="zci-error-txt">{{error_text}}</div><a href="{{frame_url}}" button_type="open.url" target="_blank" class="zci-error-btn"><em class="{{btn_icn}}"></em>{{btn_txt}}</a></div>',
            within_iframe: "<div></div>",
            minimise_iframe: function() {
                return `<div data-qa="previewwinminimisebtn" id="previewWinMinimiseBtn" documentclick="minimizeWindow" data-id="button_preview_iframe" class="zci-icon zcf-minus zcl-close-icon xl mR10 minimise-btn" title="${$WC.I18N("common.minimize")}"></div>`
            }
        };
    return {
        create: function(s) {
            if (s && s.id && s.url) {
                var i = s.id,
                    n = s.url,
                    a = s.header || "IFrame",
                    o = s.loader_txt,
                    r = s.isMinimise;
                void 0 === o && (o = "undefined" != typeof $Util ? $Util.getRandomQuotes() : "Counting backwards from infinity..well that was fast.");
                var l = document.getElementById(i);
                if (null === l) {
                    var d = $WC.$Win.create({
                        id: i,
                        class: "zci-cont-holder",
                        closeoutside: !0,
                        html: e(i, n, a, o, r)
                    });
                    t(d, i, n)
                } else l.style.display = "block", $WC.$Win.getFront(i)
            }
        },
        maximize: function(e) {
            document.getElementById(e).style.display = "block", $WC.$Win.getFront(e)
        },
        minimize: function(e) {
            document.getElementById(e).style.display = "none"
        },
        getHtml: e
    }
}();
var ChatTour = {
    helpTipHtml: '<div id="wms_chattour_icon" class="{{ICON}}"></div><h4 class="wms_chattour_title">{{TITLE}}</h4><p>{{CONTENT}}</p><span data-operation="tournext">{{NAVIGATOR}}</span><div data-operation="close" class="{{CLOSE}}"></div>',
    checkAndScheduleNotifier: function(e) {
        if (WmsSettings.isTourEnabled() && !1 === WmsSettings.isOnboardSeen() && !1 === WebMessanger.isChatPaused()) {
            var t = (new Date).getTime() - e;
            clearTimeout(ChatTour.notifytimer);
            var s = 1728e6 - t;
            s < 0 && (s = 0), ChatTour.notifytimer = setTimeout((function() {
                if (!1 === WmsSettings.isOnboardSeen() && 0 === WmsMainUI.getUnreadChatsCount()) {
                    if (!0 === WebMessanger.isCliqUser()) return;
                    ChatTour.insertTourNotifier(document.querySelector('#wms_menubar > [data-menuname="chat"]'))
                }
            }), s)
        }
    },
    isTourNotificationShown: function() {
        return !!this.tournotifier
    },
    insertTourNotifier: function(e) {
        if (e) {
            var t = $WC.Util.createElement("span", null, "wms_chattour_initial");
            ChatTour.tournotifier = e.appendChild(t)
        }
    },
    removeTourNotifier: function() {
        ChatTour.tournotifier && ($WC.Util.removeElement(ChatTour.tournotifier), ChatTour.tournotifier = null)
    },
    init: function(e, t) {
        if (ChatTour.list = e, ChatTour.removeTourNotifier(), ChatTour.tipnum = 0, null === document.getElementById("wms_tourcontainer")) {
            var s = '<div id="wms_tourcontainer"><div id="wms_touroverlay" class="wms_touroverlay"></div><div id="wms_skiptour" data-operation="tourskip" class="wms_tourskip">' + $WC.I18N("tour.skip") + "</div></div>";
            t.insertAdjacentHTML("beforeend", s);
            var i = '<div id="wms_chattour" class="wms_chattour" style="z-index:' + $WC.Config.get("zindex") + '"><div id="wms_tourpointer" class="wms_tour_pointer wms_tour_pntdown"></div><div id="wms_chattour_content"></div></div>';
            document.body.insertAdjacentHTML("beforeend", i), ChatTour.bindEvents(), ChatTour.showHelpTip()
        }
    },
    bindEvents: function() {
        var e = document.getElementById("wms_tourcontainer"),
            t = document.getElementById("wms_chattour");
        Gator(t).on("click", "[data-operation]", (function() {
            var e = this.getAttribute("data-operation");
            "tournext" === e ? ChatTour.tipnum === ChatTour.list.length - 1 ? ChatTour.exit(!0, !0) : ChatTour.nextHelpTip() : "tourprev" === e ? ChatTour.prevHelpTip() : "close" === e ? ChatTour.exit(!0) : "visitcliq" === e && (window.open(_WMSCHATURL), ChatTour.exit(!0, !0))
        })), Gator(e).on("click", "[data-operation]", (function() {
            "tourskip" === this.getAttribute("data-operation") && ChatTour.exit(!0)
        }))
    },
    handleKeyMovement: function(e) {
        if (null !== document.getElementById("wms_tourcontainer")) {
            var t = window.event ? e.keyCode : e.which;
            return t === $WC.WmsConstants.KEYCODES.LEFT ? ChatTour.prevHelpTip() : t === $WC.WmsConstants.KEYCODES.ENTER || t === $WC.WmsConstants.KEYCODES.RIGHT ? ChatTour.tipnum !== ChatTour.list.length - 1 && ChatTour.nextHelpTip() : t === $WC.WmsConstants.KEYCODES.ESCAPE && ChatTour.exit(!0), !0
        }
    },
    prevHelpTip: function() {
        ChatTour.tipnum > 0 && (ChatTour.hidePreviousHighlight(), ChatTour.tipnum--, ChatTour.showHelpTip())
    },
    nextHelpTip: function() {
        ChatTour.hidePreviousHighlight(), ChatTour.tipnum < ChatTour.list.length - 1 && (ChatTour.tipnum++, ChatTour.tipnum < ChatTour.list.length && ChatTour.showHelpTip())
    },
    exit: function(e, t) {
        if ("number" == typeof ChatTour.tipnum && ChatTour.list && ChatTour.tipnum < ChatTour.list.length && ChatTour.hidePreviousHighlight(), e) {
            var s = t ? "0:" + ChatTour.list.length : ChatTour.tipnum + 1 + ":" + ChatTour.list.length;
            WmsSettings.updateTourSettings(WmsSettings.constants.ONBOARD, s)
        }
        ChatTour.removeTourNotifier();
        var i = document.getElementById("wms_tourcontainer");
        $WC.Util.removeElement(i);
        var n = document.getElementById("wms_chattour");
        $WC.Util.removeElement(n)
    },
    showHelpTip: function() {
        var e = document.getElementById("wms_chattour_content"),
            t = $WC.I18N("Next"),
            s = ChatTour.helpTipHtml,
            i = ChatTour.list[ChatTour.tipnum];
        0 === ChatTour.tipnum && i.sethtml || (s += '<span data-operation="tourprev" style="float:left">' + $WC.I18N("common.back") + "</span>"), ChatTour.tipnum === ChatTour.list.length - 1 && (t = $WC.I18N("Finish")), s = $WC.template.replace(s, {
            ICON: i.icon || "",
            TITLE: $WC.I18N(i.title || ""),
            CONTENT: $WC.I18N(i.content || ""),
            NAVIGATOR: $WC.I18N(i.navigator) || t,
            CLOSE: i.sethtml ? "" : "wms_chattour_close"
        });
        var n = document.querySelector("[" + i.elemid + "]");
        if (e.innerHTML = s, i.sethtml) {
            if (i.replacetext)
                for (var a in i.replacetext) {
                    var o = {};
                    o[a] = $WC.I18N(i.replacetext[a]), i.sethtml = $WC.template.replace(i.sethtml, o)
                }
            document.getElementById("wms_chattour_icon").insertAdjacentHTML("afterend", i.sethtml)
        }
        i.elemid && $WC.Util.addClass(n, "wms_chattour_elemhighlight"), ChatTour.positionHelpTip(n, i.align, i.position)
    },
    positionHelpTip: function(e, t, s) {
        var i = document.getElementById("wms_chattour"),
            n = document.getElementById("wms_tourpointer"),
            a = 0,
            o = 0,
            r = 0;
        if ("fixed" !== s && (i.style.width = "", i.style.transform = ""), "center" === t) $WC.Util.addClass(i, "wms_chattour_hvalign"), i.style.width = "320px", a = window.innerWidth / 2 - i.offsetWidth / 2 + 20, o = window.innerHeight / 2 - i.offsetHeight / 2, n.style.display = "none";
        else {
            var l = e.getBoundingClientRect();
            a = l.left + 10, o = window.innerHeight - l.height - i.offsetHeight - 20, r = l.width / 2 - n.offsetWidth / 2 - 10, "fixed" === s && (a = i.offsetLeft || 10, r += l.left), n.style.display = "block", n.style.transform = "translateX(" + r + "px)"
        }
        i.style.transform = "translate(" + a + "px," + o + "px)", ChatTour.list[ChatTour.tipnum + 1] && ChatTour.list[ChatTour.tipnum + 1].align === ChatTour.list[ChatTour.tipnum].align && $WC.Util.removeClass(i, "wms_chattour_hvalign")
    },
    hidePreviousHighlight: function() {
        var e = ChatTour.list[ChatTour.tipnum] && ChatTour.list[ChatTour.tipnum].elemid;
        if (e) {
            var t = document.querySelector("[" + e + "]"),
                s = document.getElementById("wms_chattour");
            e && $WC.Util.removeClass(t, "wms_chattour_elemhighlight"), s && $WC.Util.removeClass(s, "wms_tourfadeIn")
        }
    }
};
WebMessanger.servicelist = {
    ZI: "ZohoShowtime",
    ZP: "ZohoPayments",
    ZH: "ZohoHome",
    CC: "ZohoCommandCenter",
    PY: "PayRoll",
    ZG: "Zoho Bigin",
    ZK: "ZohoInk",
    OF: "ZohoOffice",
    TI: "TeamInbox",
    ZX: "ZohoShowtimeAPI",
    RA: "ZohoRemoteAccess",
    VO: "Zoho Mail",
    ZM: "Zoho Mobile",
    SL: "DataPrep",
    WE: "ZohoWebinar",
    SZ: "ZohoSites",
    CT: "ZohoCliq",
    ZS: "ZohoSupport",
    ML: "MTACENTRAL",
    BT: "ZohoBugtracker",
    WR: "ZohoWriter",
    ST: "ZohoSheet",
    NB: "Notebook",
    RE: "Remotely",
    SW: "ZohoShow",
    ZO: "Business",
    OZ: "ZohoChat",
    PD: "ZOHOPAD",
    FO: "ZohoForms",
    ZE: "ZohoExpense",
    CP: "CRMPlus",
    IV: "ZohoInventory",
    WH: "Startwith",
    MC: "ZohoMCreator",
    ZB: "ZohoBooks",
    ZV: "ZohoInvoice",
    SB: "ZohoSubscriptions",
    CI: "ZohoCode",
    AL: "alarmsone",
    ZA: "ZohoRecruit",
    EX: "Zoho Docs",
    TD: "TeamDrive",
    PZ: "ZIAPlatform",
    AU: "Temp Staffing",
    BP: "Orchestly",
    CO: "ZohoContacts",
    CR: "ZohoCRM",
    CE: "ZohoCreator",
    PR: "ZohoProjects",
    WK: "ZohoWiki",
    CA: "ZohoCampaigns",
    MI: "MICS",
    VA: "ZohoVault",
    PB: "PhoneBridge",
    FS: "ZohoFSM",
    PT: "ZohoPilot",
    MP: "ZohoProjectsMarketPlace",
    SC: "Screenplay",
    PE: "Peopleplus",
    GC: "ZohoGC",
    PI: "ZIAPipelines",
    RS: "Solopreneur",
    IM: "ZohoIM",
    RY: "ZohoRepository",
    SD: "Service Desk Plus",
    MT: "ZohoMeeting",
    TL: "Trainercentral",
    WB: "Whiteboard",
    MU: "Murphy",
    IG: "Insights",
    MD: "MDMOnDemand",
    LE: "ZohoLens",
    FM: "ZohoDiscussions",
    AC: "AaaServer",
    CL: "ZohoCalendar",
    RM: "Remote Agent",
    SG: "ZohoSign",
    TC: "Tele Adapter - CRM",
    TS: "Tele Adapter - Support",
    SI: "Site 24 x 7",
    SR: "Zoho Store",
    ZC: "ZohoGadgets",
    IS: "Zoho Issue Tracker",
    HR: "zohopeople",
    VI: "ZohoVideo",
    ZF: "ZohoFlow",
    SE: "ZohoSearch",
    JS: "Jabber Server",
    CM: "Contacts Manager",
    MB: "Zoho Mobile Sync",
    SV: "ZohoSurvey",
    MO: "zohomotivator",
    AT: "ZohoAssist",
    ZQ: "QUOTES",
    ES: "ZohoReports",
    PG: "ZohoPlugin",
    SP: "ZohoSprints",
    BS: "zohobackstage",
    BI: "ZohoBills",
    IO: "ZohoIOT",
    ZD: "ZohoDirectory",
    ZN: "ZohoDirectory",
    PM: "PATCHMANAGER",
    BL: "BLOGS",
    RC: "RECEIPTS",
    XS: "Zoho Showtime",
    SH: "ZohoShowtime-local",
    ZT: "ZohoTax",
    AD: "DirectoryAdmin",
    CH: "CHECKOUT",
    VE: "ZohoVoice",
    MH: "ZohoMarketingHub",
    ZW: "ZohoWorkerly",
    IN: "ZohoPulse",
    DC: "DesktopCentralCloud",
    DE: "DesktopCentralMSPCloud",
    VH: "ZohoChatVijay",
    CS: "CRM SalesInbox",
    LC: "Logs360Cloud",
    CY: "ZohoCatalyst",
    ZL: "ZohoTables",
    CZ: "contracts",
    PC: "ZohoCreatorPlus",
    RP: "RemoteAccessPlusCloud",
    OA: "OfficeAPI",
    LZ: "ZohoLearn",
    SU: "shortenurl",
    NS: "ZohoBetaLens",
    TZ: "Slate",
    CU: "Cirrus",
    AS: "Activity Collation Server",
    ZR: "ZohoSocial",
    WP: "Workplace",
    WA: "WebAnalytics",
    WS: "WebStats",
    LD: "Zoho SalesIQ",
    SF: "ZohoShifts",
    HS: "HackSaw"
};
var lfromstatic = !0;

function WmsContactImpl() {}

function Collaboration() {}

function WmsChatUIImpl() {}

function ZohoFeedImpl() {}

function CustomChat() {}

function ZTI() {}

function WMSTP() {}

function WmsUIImpl() {}

function PubSubImpl() {}

function Presence() {}

function ChatletImpl() {}
WmsContactImpl.handlePresence = function(n, t, o, e, a) {}, WmsContactImpl.handleAddressBook = function() {}, WmsContactImpl.handleInvitations = function(n) {}, WmsContactImpl.handleInvite = function(n, t, o) {}, WmsContactImpl.notifyInvite = function(n, t, o) {}, WmsContactImpl.handleAccept = function(n, t, o) {}, WmsContactImpl.notifyAccept = function(n, t, o) {}, WmsContactImpl.handleReject = function(n, t, o) {}, WmsContactImpl.notifyRemove = function(n, t, o) {}, WmsContactImpl.handleDelete = function(n, t, o) {}, WmsContactImpl.handleContactUpdated = function() {}, WmsContactImpl.handleStatusMessage = function(n, t, o, e) {}, WmsContactImpl.handeAllStatusMessages = function() {}, WmsContactImpl.handleHideContactsUI = function() {}, WmsContactImpl.handleShowContactsUI = function() {}, WmsContactImpl.handleGetContacts = function() {}, WmsContactImpl.handleMPReject = function(n, t, o) {}, WmsContactImpl.handleMPAccept = function(n, t, o) {}, WmsContactImpl.handleMPDelete = function(n, t, o) {}, WmsContactImpl.handleMPAdd = function(n, t, o) {}, WmsContactImpl.handleMPInvite = function(n, t, o) {}, WmsContactImpl.handleLogin = function(n, t, o, e) {}, WmsContactImpl.handleLogout = function(n, t, o, e, a) {}, WmsContactImpl.handleGetAccounts = function(n) {}, WmsContactImpl.handleBulkPresence = function(n, t) {}, WmsContactImpl.isActivityStatusOverrideDisabled = function(n) {}, Collaboration.handleUserList = function(n, t) {}, Collaboration.handleMessage = function(n, t, o, e, a) {}, Collaboration.handlePresence = function(n, t, o, e, a) {}, Collaboration.join = function(n) {
    WebMessanger.joinCollab(n)
}, Collaboration.quit = function(n) {
    WebMessanger.quit(n)
}, Collaboration.serverup = function() {}, Collaboration.serverdown = function() {}, Collaboration.connectionup = function(n) {}, Collaboration.handleZohoMessage = function(n, t, o, e, a, l, i, s, u, c, m, d) {
    return !1
}, Collaboration.handleCustomMessage = function(n) {}, Collaboration.handleCrossProductMessage = function(n, t) {}, Collaboration.onConnect = function() {}, Collaboration.openURL = function(n, t, o, e) {
    return !0
}, Collaboration.handleCollabAdd = function(n, t, o, e, a) {}, Collaboration.handleCollabDelete = function(n, t, o, e, a) {}, Collaboration.handleUserAdd = function(n, t) {}, Collaboration.handleUserDeleted = function(n, t) {}, Collaboration.handleIsOnline = function(n) {}, Collaboration.handleLogout = function(n) {}, Collaboration.goOffline = function() {}, Collaboration.wmsOffline = function() {}, Collaboration.handleChatNotifyMessage = function(n, t, o) {}, Collaboration.getPageTitle = function() {
    return !1
}, Collaboration.handleWmsDisable = function(n) {}, Collaboration.handleComposeMail = function(n, t) {
    return !1
}, Collaboration.handleServiceMessage = function(n) {}, Collaboration.handleLanguageChange = function(n) {}, Collaboration.handleAuthFailure = function() {}, Collaboration.handleWebRTCMessage = function(n) {}, WmsChatUIImpl.handleUserIdle = function(n, t) {}, WmsChatUIImpl.handleUserEnteredText = function(n, t) {}, WmsChatUIImpl.handleUserTyping = function(n, t) {}, WmsChatUIImpl.handleNewChat = function(n) {}, WmsChatUIImpl.handleChatMessage = function(n) {}, WmsChatUIImpl.handleAttachmentMessage = function(n) {}, WmsChatUIImpl.isActive = function(n) {
    return !1
}, WmsChatUIImpl.handleTranscript = function(n, t) {}, WmsChatUIImpl.handleRTCEventMsg = function(n) {}, ZohoFeedImpl.handleFeedHistory = function(n) {}, ZohoFeedImpl.handleFeedHistoryCount = function(n) {}, ZohoFeedImpl.handleUnreadFeeds = function(n) {}, ZohoFeedImpl.handleFeedsInRange = function(n) {}, ZohoFeedImpl.handleFeedDelete = function(n) {}, ZohoFeedImpl.handleFeedHistoryUI = function() {
    return !1
}, ZohoFeedImpl.handleUnreadFeedUI = function() {
    return !1
}, ZohoFeedImpl.handleLiveFeedsUI = function(n) {
    return !1
}, CustomChat.handleUserList = function(n, t) {}, CustomChat.handleMessage = function(n) {}, CustomChat.handlePresence = function(n, t, o, e, a) {}, CustomChat.handleUserAdded = function(n, t, o) {}, CustomChat.handleUserDeleted = function(n, t, o) {}, CustomChat.handleTranscript = function(n, t) {}, CustomChat.join = function(n) {
    WebMessanger.join(n)
}, CustomChat.transcript = function(n, t) {}, CustomChat.quit = function(n) {
    WebMessanger.quit(n)
}, CustomChat.handleAttachmentMessage = function(n, t) {}, CustomChat.handleTitleUpdated = function(n, t) {}, CustomChat.isActive = function(n, t) {
    return !1
}, CustomChat.handleCloseWin = function(n) {}, ZTI.handleFailure = function(n, t) {}, ZTI.handleCrossProductMessage = function(n) {}, WMSTP.isVideoEnabled = function() {
    return !1
}, WMSTP.isAudioEnabled = function() {
    return !1
}, WMSTP.isScreenShareEnabled = function() {
    return !1
}, WMSTP.handleNewVideo = function(n, t) {}, WMSTP.handleNewAudio = function(n, t) {}, WMSTP.handleAVMessage = function(n) {}, WmsUIImpl.handleFeedHistory = function() {}, WmsUIImpl.handleUnreadFeeds = function() {}, WmsUIImpl.handleDocumentIdle = function() {}, WmsUIImpl.UIReady = function() {}, WmsUIImpl.handleUIShown = function() {}, WmsUIImpl.handleUIHidden = function() {}, WmsUIImpl.handleChatWindowClose = function(n, t, o) {}, WmsUIImpl.preventChatWindowOpen = function(n, t) {}, WmsUIImpl.handleNewMessage = function(n, t, o, e) {}, WmsUIImpl.handleAnnouncement = function(n, t) {
    return !1
}, WmsUIImpl.getHeaderHTML = function(n, t, o, e, a, l) {}, WmsUIImpl.getStatusHTML = function(n, t, o, e, a) {}, WmsUIImpl.getChatWindowContainer = function(n, t, o, e, a, l) {}, WmsUIImpl.getChatWindowOptions = function(n, t, o, e, a, l) {}, WmsUIImpl.getChatBarOptions = function() {}, WmsUIImpl.handleMediaCall = function(n, t) {}, WmsUIImpl.onCallEnd = function() {}, WmsUIImpl.onMessageSent = function(n, t, o) {}, WmsUIImpl.customContactsConfig = function() {}, WmsUIImpl.getTranscript = function(n, t, o) {}, WmsUIImpl.handleKeyMovement = function(n, t) {}, WmsUIImpl.handleKeyUp = function(n, t) {}, WmsUIImpl.handleKeyDown = function(n, t) {}, WmsUIImpl.openChatWindowDropUp = function(n, t, o) {
    WMSUI.openChatWindowDropUp(n, t, o)
}, WmsUIImpl.closeChatWindowDropUp = function(n) {
    WMSUI.closeChatWindowDropUp(n)
}, WmsUIImpl.onChatWindowDropUpClick = function(n, t) {}, WmsUIImpl.restoreChat = function(n) {}, WmsUIImpl.uploadFile = function(n, t, o) {}, WmsUIImpl.showDialog = function(n, t) {
    WmsDialog.showModal(n, t)
}, WmsUIImpl.disableComposerOptions = function(n, t) {
    WMSUI.disableComposerOptions(n, t)
}, WmsUIImpl.enableComposerOptions = function(n) {
    WMSUI.enableComposerOptions(n)
}, WmsUIImpl.closeChatWindow = function(n, t) {
    n ? WMSUI.closeChatWindow(n) : t && WMSUI.closeEntityChatWindow(t)
}, WmsUIImpl.updateCountInContactsTab = function(n) {
    WmsMainUI.updateChatInvitationCount(n)
}, WmsUIImpl.updateMessageInComposer = function(n, t) {
    WMSUI.updateMessageInComposer(n, t)
}, WmsUIImpl.getUserPhoto = function(n, t) {}, WmsUIImpl.showFileUploadProgress = function(n, t) {
    WindowHandler.showProgress(n, t)
}, WmsUIImpl.clearFileUploadProgress = function(n) {
    WindowHandler.clearProgress(n)
}, WmsUIImpl.getMessageActions = function(n, t, o) {}, WmsUIImpl.destroyChatWindow = function(n) {
    var t = WindowHandler.getWinObjById(n);
    null !== t && (Factory.destroyDialog(t.winIndex, !0), t.removeWindowState())
}, WmsUIImpl.getChatWindowStatusText = function(n) {}, WmsUIImpl.disableActions = function(n) {
    var t = WindowHandler.getWinObjById(n);
    t && t.disableActions()
}, WmsUIImpl.updateChatWindowStatusText = function(n) {
    var t = WindowHandler.getWinObjById(n);
    t && t.updateUserStatus()
}, WmsUIImpl.updateChatTitle = function(n, t) {
    WindowHandler.updateChatTitle(n, t)
}, WmsUIImpl.updateStatusInCustomContactMenu = function(n, t) {
    WmsMainUI.updateStatusInCustomContactMenu(n, t)
}, WmsUIImpl.onComposerFocus = function(n) {}, WmsUIImpl.showFilesizeExceedAlert = function(n) {}, WmsUIImpl.handleMsgForMeetingChat = function(n, t) {}, WmsUIImpl.handleTurnOffChat = function() {}, WmsUIImpl.getScreenCapturerForAVCall = function() {}, WmsUIImpl.isDesktopApp = function() {}, WmsUIImpl.handleTurnOnChat = function() {}, WmsUIImpl.getCustomMenuListContainer = function() {}, WmsUIImpl.loadCliqIframeAndSwitchFocus = function() {
    return new Promise((n, t) => {
        t("METHOD_NOT_IMPLEMENTED")
    })
}, PubSubImpl.onConnect = function() {}, PubSubImpl.handleSubscribe = function(n) {}, PubSubImpl.handleUnSubscribe = function(n) {}, PubSubImpl.handleError = function(n, t, o) {}, PubSubImpl.handleUserList = function(n, t) {}, PubSubImpl.handleUserIn = function(n, t) {}, PubSubImpl.handleUserOut = function(n, t) {}, PubSubImpl.handleMessage = function(n, t) {}, Presence.handleUserStatus = function(n, t) {}, Presence.handleForceLogout = function(n) {}, Presence.handleMessage = function(n) {}, Presence.handleUserAdd = function(n) {}, Presence.handleUserDelete = function(n) {}, Presence.handleUserList = function(n, t) {}, Presence.handlePresence = function(n, t, o, e, a) {}, Presence.handleUserAdded = function(n, t) {}, Presence.handleUserDeleted = function(n, t) {}, ChatletImpl.handleURLInvocation = function(n, t) {
    return !1
}, ChatletImpl.handleUserList = function(n, t, o) {};
WebMessanger.fp_hash = {
    "annotator.js": "c0fa7676_annotator.js",
    "json2.min.js": "8b9999fd_json2.min.js",
    "pex.js": "Jun_01_2024_8452405_pex.js",
    "psconnect.js": "f8965ea4_psconnect.js",
    "pubsubapi.js": "52db4502_pubsubapi.js",
    "resource/ar.js": "resource/a5a0941d_ar.js",
    "resource/ca.js": "resource/aabbde52_ca.js",
    "resource/cs.js": "resource/1688d704_cs.js",
    "resource/da.js": "resource/8387b498_da.js",
    "resource/de.js": "resource/4b5766db_de.js",
    "resource/el.js": "resource/d6541bcf_el.js",
    "resource/en.js": "resource/afe03055_en.js",
    "resource/es.js": "resource/b95a7dcb_es.js",
    "resource/et.js": "resource/18d6ae7f_et.js",
    "resource/fi.js": "resource/0bd2b5dc_fi.js",
    "resource/fr.js": "resource/b956020a_fr.js",
    "resource/hr.js": "resource/3a56277f_hr.js",
    "resource/hu.js": "resource/f3ed929b_hu.js",
    "resource/it.js": "resource/a7a036bd_it.js",
    "resource/ja.js": "resource/2ccaaac9_ja.js",
    "resource/ko.js": "resource/4b9af764_ko.js",
    "resource/lt.js": "resource/cf100372_lt.js",
    "resource/nb.js": "resource/88d61953_nb.js",
    "resource/nl.js": "resource/75637899_nl.js",
    "resource/pl.js": "resource/82592868_pl.js",
    "resource/pt.js": "resource/ecdf386f_pt.js",
    "resource/ro.js": "resource/764460bc_ro.js",
    "resource/ru.js": "resource/cd8d3998_ru.js",
    "resource/sk.js": "resource/086787b6_sk.js",
    "resource/sv.js": "resource/c99430a5_sv.js",
    "resource/ta.js": "resource/38e60313_ta.js",
    "resource/th.js": "resource/448aa5f9_th.js",
    "resource/tr.js": "resource/16c3fae4_tr.js",
    "resource/uk.js": "resource/e91b8198_uk.js",
    "resource/vi.js": "resource/4fcba56d_vi.js",
    "resource/zh.js": "resource/77c4afab_zh.js",
    "resource/zh_tw.js": "resource/1f30436c_zh_tw.js",
    "wmsbar.js": "Jun_01_2024_8452405_wmsbar.js",
    "wmsbarimpl.js": "fa4f569d_wmsbarimpl.js",
    "wmsbridge.js": "cf45b358_wmsbridge.js",
    "wmsliteapi.js": "Jun_01_2024_8452405_wmsliteapi.js",
    "zohomaps.js": "8a9d5d34_zohomaps.js"
}